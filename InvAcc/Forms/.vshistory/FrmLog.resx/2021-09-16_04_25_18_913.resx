<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="netResize1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>162, 18</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>168</value>
  </metadata>
  <data name="textBoxDescription.Text" xml:space="preserve">
    <value>مميزات النظام :
• إدخال بيانات المنشأة .
• إدارة المخزون بشكل تفصيلي وبدقة عالية .
• ادارة مجموعات الأصناف .
• إدخال بيانات الأصناف ووحداتها بالإضافة الى تكاليفها.
• منع استخدام اصناف محددة في عمليات البيع والشراء والمرتجعات .
• حركة أصناف مورد ( او اكثر من مورد ).
• سندات صرف بضاعة وسندات البضاعة المرتجعة .
• اعداد تسوية للبضاعة (المخزون) .
• استعلام عن حركة الأصناف خلال فترة محددة وتحديد مقدار الربح الفعلي للصنف حسب كل فاتورة.
• إدارة بيانات الموردين / العملاء .
• إدخال فواتير الموردين / العملاء .
• إدخال مرتجعات فواتير الموردين / العملاء .
• استعلام عن حركة المشتريات والمرتجعات في الفواتير.
• استعلام عن حركة المبيعات والمرتجعات في الفواتير .
• تقرير بالمشتريات والمبيعات النقدية والآجلة .
• استعلام عن الموردين وكشوفات حساباتهم .
• استعلام عن العملاء وكشوفات حسابهم .
• عروض الأسعار للعملاء والموردين .
• طلبات الشراء .
• عمليات الباركود (قراءة - طباعة - اعدادات طباعة الباركود).
• تصنيف الحسابات  .
• دليل محاسبي متكامل ( الشجرة المحاسبية)  .
• سندات القبض والصرف وسندات اليومية.
• اعداد القيود المحاسبية بكل سهولة.
• اعداد كشوفات الحسابات .
• أرصدة العملاء والموردين .
• الأستاذ العام واليومية العامة.
• اعداد حسابات المتاجرة والأرباح والخسائر .
• اعداد ميزان مراجعة بالحركة والأرصدة .
• إعداد الميزانية العمومية .
• يقدم جميع أنواع التقارير الختامية.
• تصدير التقارير إلى ملفات إكسيل .
• ادارة المستخدمين للنظام و اضافة اكثر من مستخدم مع التحكم في الصلاحيات الخاصة لكل مستخدم وتحديد كلمة مرور خاصة به.
• امكانية عمل نسخة احتياطية من بيانات العمل في اي مجلد وبشكل دوري وتلقائي .
• يدعم اللغتين العربية و الإنجليزية .
• يدعم التقويم الميلادي و الهجري.
• واجهة سهلة يمكن التحكم فيها من ناحية الألوان ومن ناحية الأستايلات .
• تحديثات دورية للبرنامج على موقع المؤسسة .
• تخزين بياناتك قي قاعدة بيانات SQL SERVER SERVER لتحميل جميع بيانات العمل دون التأثير على جودة العمل .</value>
  </data>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>7, 18</value>
  </metadata>
</root>