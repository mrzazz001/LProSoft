using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using ProShared.Stock_Data;
using ProShared.GeneralM;
using InvAcc.Controls;
using System.Data.Objects.DataClasses;
using DevExpress.XtraDataLayout;

namespace InvAcc.Forms.Eqr_Version.New
{
    public partial class XFrmEqars : BaseForm
    {
       
        public XFrmEqars()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            dbInstance = new Stock_DataDataContext();
            t_EqarsDatasBindingSource.DataSource = db.T_EqarsDatas;
            // This line of code is generated by Data Source Configuration Wizard
            t_OwnersBindingSource.DataSource = db.T_Owners;
            // This line of code is generated by Data Source Configuration Wizard
            t_AccDefsBindingSource.DataSource = db.T_AccDefs;
            // This line of code is generated by Data Source Configuration Wizard
            t_EqarTypsBindingSource.DataSource = db.T_EqarTyps;
            // This line of code is generated by Data Source Configuration Wizard
            t_CitiesBindingSource.DataSource = db.T_Cities;
            // This line of code is generated by Data Source Configuration Wizard
            t_NationalitiesBindingSource.DataSource = db.T_Nationalities;
            // This line of code is generated by Data Source Configuration Wizard
            t_EqarNaturalsBindingSource.DataSource = db.T_EqarNaturals;
            // This line of code is generated by Data Source Configuration Wizard
            t_AinsDatasBindingSource.DataSource = db.T_AinsDatas;
            // This line of code is generated by Data Source Configuration Wizard
            t_AinTypsBindingSource.DataSource = db.T_AinTyps;
            // This line of code is generated by Data Source Configuration Wizard
            t_AinNaturalsBindingSource.DataSource =db.T_AinNaturals;
        }
        public T_User Permmission
        {
            get
            {
                return permission;
            }
            set
            {
                if (value != null && value.UsrNo != string.Empty)
                {
                    permission = value;
                    if (!VarGeneral.TString.ChkStatShow(value.Eqar_FilStr, 17))
                    {
                        IfAdd = false;
                    }
                    else
                    {
                        IfAdd = true;
                    }
                    if (!VarGeneral.TString.ChkStatShow(value.Eqar_FilStr, 18))
                    {
                        CanEdit = false;
                    }
                    else
                    {
                        CanEdit = true;
                    }
                    if (!VarGeneral.TString.ChkStatShow(value.Eqar_FilStr, 19))
                    {
                        IfDelete = false;
                    }
                    else
                    {
                        IfDelete = true;
                    }
                }
            }
        }

        private void XFrmEqars_Load(object sender, EventArgs e)
        {
            if (t_EqarsDatasBindingSource.Count == 0)
                t_EqarsDatasBindingSource.AddNew();
            cs.Properties.Items.Add("فارغة");
            cs.Properties.Items.Add("مؤجره");
            cs.Properties.Items.Add("مباعه");
            cs.DataBindings.Add("SelectedIndex", t_AinsDatasBindingSource, "AinStatus");
            Permmission = dbc.Get_PermissionID(VarGeneral.UserID);
            if (columns_Names_visible.Count == 0)
            {
                columns_Names_visible.Add("EqarNo", new ColumnDictinary("الرقم ", " No", ifDefault: true, string.Empty));
                columns_Names_visible.Add("NameA", new ColumnDictinary("الاسم عربي", "Arabic Name", ifDefault: true, string.Empty));
                columns_Names_visible.Add("NameE", new ColumnDictinary("الاسم الانجليزي", "English Name", ifDefault: true, string.Empty));
                columns_Names_visible.Add("ContractValue", new ColumnDictinary("قيمة العقار", "Property value", ifDefault: true, string.Empty));
                columns_Names_visible.Add("ContractRentValue", new ColumnDictinary("إيجار العقار", "Rent the property", ifDefault: false, string.Empty));
                columns_Names_visible.Add("FloorsCount", new ColumnDictinary("عدد الطوابق", "Floors Count", ifDefault: false, string.Empty));
                columns_Names_visible.Add("EyesCount", new ColumnDictinary("عدد العيون", "Eyes Count", ifDefault: false, string.Empty));
                columns_Names_visible.Add("Space", new ColumnDictinary("مساحة العقار", "Space", ifDefault: false, string.Empty));
            }
            else
            {
              
            }


        }
        
        private T_AccDef _AccDefBind = new T_AccDef();
        private void t_EqarsDatasBindingSource_AddingNew(object sender, AddingNewEventArgs e)
        {
            T_EqarsData et = new T_EqarsData
                ();
            et.EqarID = db.MaxEqarDataNo;
            et.EqarNo = et.EqarID;
            try
            {
                if (!string.IsNullOrEmpty(VarGeneral.Settings_Sys.EqarAcc))
                {
                    int Value = 0;
                    List<T_AccDef> q = (from t in db.T_AccDefs
                                        where t.ParAcc == VarGeneral.Settings_Sys.EqarAcc
                                        orderby t.AccDef_ID
                                        select t).ToList();
                    if (q.Count == 0)
                    {
                        AccNoTextEdit.Text = VarGeneral.Settings_Sys.EqarAcc + "001";
                    }
                    else
                    {
                        _AccDefBind = q[q.Count - 1];
                        string _Zero = string.Empty;
                        for (int iiCnt = 0; iiCnt < _AccDefBind.AccDef_No.Substring(_AccDefBind.ParAcc.Length).Length && _AccDefBind.AccDef_No.Substring(_AccDefBind.ParAcc.Length).Substring(iiCnt, 1) == "0"; iiCnt++)
                        {
                            _Zero += _AccDefBind.AccDef_No.Substring(_AccDefBind.ParAcc.Length).Substring(iiCnt, 1);
                        }
                        Value = int.Parse(_AccDefBind.AccDef_No.Substring(_AccDefBind.ParAcc.Length)) + 1;
                        if (!string.IsNullOrEmpty(_Zero))
                        {
                            AccNoTextEdit.Text = _AccDefBind.ParAcc + _Zero + Value;
                        }
                        else
                        {
                            AccNoTextEdit.Text = _AccDefBind.ParAcc + Value;
                        }
                    }
                }
            }
            catch
            {

            }
            et.Space =" 0";
            et.EyesCount = 0;
            et.FloorsCount = 0;
            e.NewObject = et;
            dataLayoutControl1.Refresh();

            NameATextEdit.Focus();
            
        }

        private void OwnerNoTextEdit_ProcessNewValue(object sender, DevExpress.XtraEditors.Controls.ProcessNewValueEventArgs e)
        {
        }

        private void NationaltyTextEdit_ProcessNewValue(object sender, DevExpress.XtraEditors.Controls.ProcessNewValueEventArgs e)
        {
            if (e.DisplayValue != "")
            {

                if (MessageBox.Show("القيمة المدخلة ليست موجودة في النظام هل تريد اخالها", "ادخال سجل جديد", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    XFrmNation frm = new XFrmNation();
                    frm.StartPosition = FormStartPosition.CenterScreen;
                    frm.ShowDialog();
                    db.Refresh(System.Data.Linq.RefreshMode.OverwriteCurrentValues,db.T_Nationalities);
                    t_NationalitiesBindingSource.DataSource = db.T_Nationalities.ToList();
                    t_NationalitiesBindingSource.MoveLast();

                }
            }

        }

        private void EqarNatureNoTextEdit_ProcessNewValue(object sender, DevExpress.XtraEditors.Controls.ProcessNewValueEventArgs e)
        {
            if (e.DisplayValue != "")
            {

                if (MessageBox.Show("القيمة المدخلة ليست موجودة في النظام هل تريد اخالها", "ادخال سجل جديد", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    XFrmNation frm = new XFrmNation();
                    frm.StartPosition = FormStartPosition.CenterScreen;
                    frm.ShowDialog();
                    db.Refresh(System.Data.Linq.RefreshMode.OverwriteCurrentValues,db.T_EqarNaturals);
                    t_EqarNaturalsBindingSource.DataSource = db.T_EqarNaturals.ToList();
                    t_EqarNaturalsBindingSource.MoveLast();

                }
            }
        }

        private void EqarTypNoTextEdit_ProcessNewValue(object sender, DevExpress.XtraEditors.Controls.ProcessNewValueEventArgs e)
        {
            if (e.DisplayValue != "")
            {

                if (MessageBox.Show("القيمة المدخلة ليست موجودة في النظام هل تريد اخالها", "ادخال سجل جديد", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    XFrmEqarTyp frm = new XFrmEqarTyp();
                    frm.StartPosition = FormStartPosition.CenterScreen;
                    frm.ShowDialog();
                    db.Refresh(System.Data.Linq.RefreshMode.OverwriteCurrentValues,db.T_EqarTyps);
                    t_EqarTypsBindingSource.DataSource = db.T_EqarTyps.ToList();
                    t_EqarTypsBindingSource.MoveLast();
                }
            }
        }

        private void CityNoTextEdit_ProcessNewValue(object sender, DevExpress.XtraEditors.Controls.ProcessNewValueEventArgs e)
        {
            if (e.DisplayValue != "")
            {

                if (MessageBox.Show("القيمة المدخلة ليست موجودة في النظام هل تريد اخالها", "ادخال سجل جديد", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    XFrmCity frm = new XFrmCity();
                    frm.StartPosition = FormStartPosition.CenterScreen;
                    frm.ShowDialog();
                    db.Refresh(System.Data.Linq.RefreshMode.OverwriteCurrentValues,db.T_Cities);
                    t_CitiesBindingSource.DataSource = db.T_Cities.ToList();
                   
                    t_CitiesBindingSource.MoveLast();

                }
            }
        }

        private void ubar1_Button_Save_Click(object sender, Controls.BarEvArg e)
        {
            e.db = db;
         
            e.dbc = dbc;
          
        }
        ComboBoxEdit cs = new ComboBoxEdit();
        private void gridControl1_Click(object sender, EventArgs e)
        {
            if (tAinsDatasBindingSource2.Count == 0)
                tAinsDatasBindingSource2.AddNew();
        }

        private void OwnerNoGridLookUpEdit_ProcessNewValue(object sender, DevExpress.XtraEditors.Controls.ProcessNewValueEventArgs e)
        {

            if (e.DisplayValue != "")
            {

                if (MessageBox.Show("القيمة المدخلة ليست موجودة في النظام هل تريد اخالها", "ادخال سجل جديد", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    XFrmOwners frm = new XFrmOwners();
                    frm.StartPosition = FormStartPosition.CenterScreen;
                    frm.ShowDialog();
                    db.Refresh(System.Data.Linq.RefreshMode.OverwriteCurrentValues,db.T_Owners);
                    t_OwnersBindingSource.DataSource = db.T_Owners.ToList();
                    OwnerNoLookUpEdit.ItemIndex = t_OwnersBindingSource.Count-1;


                }
            }
        }

        private void SQDateTextEdit_FormatEditValue(object sender, DevExpress.XtraEditors.Controls.ConvertEditValueEventArgs e)
        {
         
        }

        private void SQDateTextEdit_EditValueChanged(object sender, EventArgs e)
        {
            SQDateTextEdit.EditValueChanged -= SQDateTextEdit_EditValueChanged;
            DateTimeConverter cr = new DateTimeConverter();
            if (SQDateTextEdit.EditValue != null)
            {
                if (SQDateTextEdit.EditValue.ToString() == "")
                    SQDateTextEdit.EditValue = DateTime.Today.ToShortDateString();

                ;
                SQDateTextEdit.EditValue = ((DateTime)cr.ConvertFromString(SQDateTextEdit.EditValue.ToString())).ToString("MM/dd/yyyy");
            }
                SQDateTextEdit.EditValueChanged += SQDateTextEdit_EditValueChanged;
        }

        private void tAinsDatasBindingSource1_AddingNew(object sender, AddingNewEventArgs e)
        {
            T_AinsData t = new T_AinsData();
            t.AinID = db.MaxAinDataNo;
            t.AinNo = t.AinID.ToString();
            t.EqarID = int.Parse(EqarNoTextEdit.EditValue.ToString());
            e.NewObject = t;
        }
      
        private void ubar1_Button_Close_Click(object sender, Controls.BarEvArg e)
        {
   
        
            Close();
        }

        private void ubar1_Button_Search_Click(object sender, Controls.BarEvArg e)
        {
            FrmSearch frm = new FrmSearch();
            frm.Tag = LangArEn;
            ICollection<KeyValuePair<string, ColumnDictinary>> animalsAsCollection = columns_Names_visible;
            foreach (KeyValuePair<string, ColumnDictinary> kvp in animalsAsCollection)
            {
                frm.columns_Names_visible.Add(kvp.Key, new FrmSearch.SColumnDictinary(kvp.Value.AText, kvp.Value.EText, kvp.Value.IfDefault, string.Empty));
            }
            VarGeneral.SFrmTyp = "T_EqarsData";
            frm.TopMost = true;
            frm.ShowDialog();
            if (frm.SerachNo != string.Empty)
            {
                var q = (from i in db.T_EqarsDatas where i.EqarNo == int.Parse(frm.Serach_No) select i).FirstOrDefault();
                int index = db.T_EqarsDatas.ToBindingList<T_EqarsData>().IndexOf(q);
                if (index != -1)
                {

                    ubar1.Binding.Position = index;
                }
            }

        }

        private void ubar1_Button_Delete_Click(object sender, BarEvArg e)
        {
            e.db = db;
        }

        private void XFrmEqars_PreviewKeyDown(object sender, PreviewKeyDownEventArgs e)
        {

        }
     
      

        private void XFrmEqars_MouseDown(object sender, MouseEventArgs e)
        {
          

        }
    }
}