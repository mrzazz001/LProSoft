using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using ProShared.GeneralM;
using ProShared.Stock_Data;
using InvAcc.Controls;

namespace InvAcc.Forms.Eqr_Version.New
{
    public partial class XFrmAinNatural : BaseForm
    {
        public XFrmAinNatural()
        {
            InitializeComponent();
            dbInstance = new Stock_DataDataContext();
            // This line of code is generated by Data Source Configuration Wizard
            t_AinNaturalsBindingSource.DataSource = db.T_AinNaturals;
        }

        private void XFrmAinNatural_Load(object sender, EventArgs e)
        {
            Permmission = dbc.Get_PermissionID(VarGeneral.UserID);
            if (columns_Names_visible.Count == 0)
            {
                columns_Names_visible.Add("AinNatural_No", new ColumnDictinary("الرقـــــم", "No", ifDefault: true, ""));
                columns_Names_visible.Add("NameA", new ColumnDictinary("الاسم عربي", "Arabic Name", ifDefault: true, ""));
                columns_Names_visible.Add("NameE", new ColumnDictinary("الاسم الانجليزي", "English Name", ifDefault: true, ""));
            }
            else
            {
              
            }
        }
        public T_User Permmission
        {
            get
            {
                return permission;
            }
            set
            {
                if (value != null && value.UsrNo != "")
                {
                    permission = value;
                    if (!VarGeneral.TString.ChkStatShow(value.Emp_FilStr, 37))
                    {
                        IfAdd = false;
                    }
                    else
                    {
                        IfAdd = true;
                    }
                    if (!VarGeneral.TString.ChkStatShow(value.Emp_FilStr, 38))
                    {
                        CanEdit = false;
                    }
                    else
                    {
                        CanEdit = true;
                    }
                    if (!VarGeneral.TString.ChkStatShow(value.Emp_FilStr, 39))
                    {
                        IfDelete = false;
                    }
                    else
                    {
                        IfDelete = true;
                    }
                }
            }
        }

        private void NoteLookUpEdit_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void ubar1_Button_Delete_Click(object sender, Controls.BarEvArg e)
        {
            e.db = db;
        }

        private void ubar1_Button_Save_Click(object sender, Controls.BarEvArg e)
        {
            e.db = db;
        }

        private void ubar1_Button_Close_Click(object sender, Controls.BarEvArg e)
        {
            e.db = db;
        }

        private void ubar1_Button_Search_Click(object sender, Controls.BarEvArg e)
        {
            FrmSearch frm = new FrmSearch();
            frm.Tag = LangArEn;
            ICollection<KeyValuePair<string, ColumnDictinary>> animalsAsCollection = columns_Names_visible;
            foreach (KeyValuePair<string, ColumnDictinary> kvp in animalsAsCollection)
            {
                frm.columns_Names_visible.Add(kvp.Key, new FrmSearch.SColumnDictinary(kvp.Value.AText, kvp.Value.EText, kvp.Value.IfDefault, ""));
            }
            VarGeneral.SFrmTyp = "T_AinNatural";
            frm.TopMost = true;
            frm.ShowDialog();
            if (frm.SerachNo != "")
            {
                var q = (from i in db.T_AinNaturals where i.AinNatural_No == int.Parse(frm.Serach_No) select i).FirstOrDefault();
                int index = db.T_AinNaturals.ToBindingList<T_AinNatural>().IndexOf(q);
                if (index != -1)
                {

                    ubar1.Binding.Position = index;
                }
            }
        }

        private void t_AinNaturalsBindingSource_AddingNew(object sender, AddingNewEventArgs e)
        {
            T_AinNatural et = new T_AinNatural();
            et.AinNatural_ID = Guid.NewGuid().ToString();
            et.AinNatural_No = db.MaxAinNaturalNo;
            e.NewObject = et;
            NameATextEdit.Focus();
        }
    }
}