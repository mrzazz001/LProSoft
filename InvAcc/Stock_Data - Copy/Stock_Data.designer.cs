#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InvAcc.Stock_Data
{

	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	using SSSDateTime.Date;
	using System.Globalization;
	using InvAcc.GeneralM;
	using System.Data.SqlClient;
    using System.Threading.Tasks;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "PROSOFT_default_1")]
	public class Stock_DataDataContext : DataContext
	{

		public tb_version stockdbversion()
		{
			tb_version tt = new tb_version();
			IQueryable<tb_version> Quary =
				from er in this.tb_versions
				select er;
			try
			{
				if (Quary.Count<tb_version>() > 0)
				{

					tt = Quary.First<tb_version>();
				}
			}
			catch
			{
			}
			return tt;
		}

		private HijriGreg.HijriGregDates n = new HijriGreg.HijriGregDates();
		private T_AttendOperat Data_this_AttendOp;
		private List<string> pkeys = new List<string>();
		private T_SalDiscount data_this_Discount;
		private T_Emp data_this_Emp;
		private T_Add data_this_Add;
		private T_Premium data_this_Pre;
		private T_Advance data_this_Adv;
		private T_Reward data_this_Reward;
		private T_CallPhone data_this_CallPhone;
		private T_Commentary data_this_Commentary;
		private static MappingSource mappingSource;
		public FReport StockFreport(string no)
		{
			FReport tt = null;
			try
			{
				tt = new FReport();
				IQueryable<FReport> Quary =
					from er in this.FReports
					where er.Report_Name == no
					select er;
				if (Quary.Count<FReport>() == 0)
				{
					try
					{
						string script = (InvAcc.Properties.Resources.fscript.ToString());
						ExecuteCommand(script.Replace("GO" + Environment.NewLine, ""), new object[0]);

						SubmitChanges(ConflictMode.ContinueOnConflict);
						Quary =
					   from er in this.FReports
					   where er.Report_Name == no
					   select er;
						if (Quary.Count<FReport>() > 0)
						{
							tt = Quary.First<FReport>();
						}
					}
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
					catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
					{

					}


				}
				if (Quary.Count<FReport>() > 0)
				{
					tt = Quary.First<FReport>();
				}
			}
			catch
			{
				try
				{
					string script = (InvAcc.Properties.Resources.fscript.ToString());
					ExecuteCommand(script.Replace("GO" + Environment.NewLine, ""), new object[0]);

					SubmitChanges(ConflictMode.ContinueOnConflict);
					IQueryable<FReport> Quary =
					from er in this.FReports
					where er.Report_Name == no
					select er;
					if (Quary.Count<FReport>() > 0)
					{
						tt = Quary.First<FReport>();
					}
				}
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
				catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
				{

				}

			}
			return tt;
		}


		public int MaxFReports
		{
			get
			{
				int num = 1;
				try
				{
					num = this.FReports.Max<FReport, int>((FReport lgl) => Convert.ToInt32(lgl.ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}


		public Table<cod> cods
		{
			get
			{
				return base.GetTable<cod>();
			}
		}
		public T_Add DataThis
		{
			get
			{
				return this.data_this_Add;
			}
			set
			{
				this.data_this_Add = value;
			}
		}
		public T_Advance DataThis_Adv
		{
			get
			{
				return this.data_this_Adv;
			}
			set
			{
				this.data_this_Adv = value;
			}
		}
		public T_AttendOperat Datathis_AttendOp
		{
			get
			{
				return this.Data_this_AttendOp;
			}
			set
			{
				this.Data_this_AttendOp = value;
			}
		}
		public T_CallPhone DataThis_CallPhone
		{
			get
			{
				return this.data_this_CallPhone;
			}
			set
			{
				this.data_this_CallPhone = value;
			}
		}
		public T_Commentary DataThis_Commentary
		{
			get
			{
				return this.data_this_Commentary;
			}
			set
			{
				this.data_this_Commentary = value;
			}
		}
		public T_SalDiscount DataThis_Discount
		{
			get
			{
				return this.data_this_Discount;
			}
			set
			{
				this.data_this_Discount = value;
			}
		}
		public T_Emp DataThis_Emp
		{
			get
			{
				return this.data_this_Emp;
			}
			set
			{
				this.data_this_Emp = value;
			}
		}
		public T_Reward DataThis_Reward
		{
			get
			{
				return this.data_this_Reward;
			}
			set
			{
				this.data_this_Reward = value;
			}
		}
		public T_Premium DataThisPre
		{
			get
			{
				return this.data_this_Pre;
			}
			set
			{
				this.data_this_Pre = value;
			}
		}
		public string getdate
		{
			set
			{
				try
				{
					if (!this.n.IsHijri(base.ExecuteQuery<string>("select dbo.get_date()", new object[0]).FirstOrDefault<string>()))
					{
						VarGeneral.Gdate = this.n.FormatGreg(base.ExecuteQuery<string>("select dbo.get_date()", new object[0]).FirstOrDefault<string>(), "yyyy/MM/dd");
					}
					else
					{
						VarGeneral.Gdate = this.n.HijriToGreg(base.ExecuteQuery<string>("select dbo.get_date()", new object[0]).FirstOrDefault<string>(), "yyyy/MM/dd");
					}
				}
				catch
				{
					VarGeneral.Gdate = base.ExecuteQuery<string>("select dbo.get_date()", new object[0]).FirstOrDefault<string>();
				}
				try
				{
					int GdateY = int.Parse(VarGeneral.Gdate.Substring(0, 4));
					int GdateM = int.Parse(VarGeneral.Gdate.Substring(5, 2));
					int GdateD = int.Parse(VarGeneral.Gdate.Substring(8, 2));
					DateTime TmpdateTime = new DateTime(GdateY, GdateM, GdateD);
					int? hDat = VarGeneral.Settings_Sys.HDat;
					TmpdateTime = TmpdateTime.AddDays((double)hDat.Value);
					HijriGreg.HijriGregDates hijriGregDate = this.n;
					object[] year = new object[] { TmpdateTime.Year, "/", TmpdateTime.Month, "/", TmpdateTime.Day };
					VarGeneral.Hdate = hijriGregDate.GregToHijri(string.Concat(year), "yyyy/MM/dd");
				}
				catch
				{
					VarGeneral.Hdate = this.n.GregToHijri(base.ExecuteQuery<string>("select dbo.get_date()", new object[0]).FirstOrDefault<string>(), "yyyy/MM/dd");
				}
			}
		}
		public int MaxAccCatNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_AccCats.Max<T_AccCat, int>((T_AccCat lgl) => Convert.ToInt32(lgl.AccCat_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}

		public int MAXTMESAGES
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_MTemplates.Max<T_MTemplate, int>((T_MTemplate lgl) => Convert.ToInt32(lgl.ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxAccDefNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_AccDefs.Max<T_AccDef, int>((T_AccDef lgl) => Convert.ToInt32(lgl.AccDef_ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxADDNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Adds.Max<T_Add, int>((T_Add lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxAdvanceNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Advances.Max<T_Advance, int>((T_Advance lgl) => Convert.ToInt32(lgl.Advances_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxAinDataNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_AinsDatas.Max<T_AinsData, int>((T_AinsData lgl) => Convert.ToInt32(lgl.AinNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxAinNaturalNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_AinNaturals.Max<T_AinNatural, int>((T_AinNatural lgl) => Convert.ToInt32(lgl.AinNatural_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxAinTypNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_AinTyps.Max<T_AinTyp, int>((T_AinTyp lgl) => Convert.ToInt32(lgl.AinTyp_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxAlarmTenantNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_AlarmTenants.Max<T_AlarmTenant, int>((T_AlarmTenant lgl) => Convert.ToInt32(lgl.AlarmTenantNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxAuthorizationtNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Authorizations.Max<T_Authorization, int>((T_Authorization lgl) => Convert.ToInt32(lgl.Authorization_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxBankNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Banks.Max<T_Bank, int>((T_Bank lgl) => Convert.ToInt32(lgl.Bank_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxBirthPlaceNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_BirthPlaces.Max<T_BirthPlace, int>((T_BirthPlace lgl) => Convert.ToInt32(lgl.BirthPlaceNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxBlackListNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_BlackLists.Max<T_BlackList, int>((T_BlackList lgl) => Convert.ToInt32(lgl.CustNum)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxBossNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Bosses.Max<T_Boss, int>((T_Boss lgl) => Convert.ToInt32(lgl.Boss_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxCallPhoneNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_CallPhones.Max<T_CallPhone, int>((T_CallPhone lgl) => Convert.ToInt32(lgl.Phone_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxCarsNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Cars.Max<T_Car, int>((T_Car lgl) => Convert.ToInt32(lgl.Car_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxCarNamesNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_CarNames.Max<T_CarName, int>((T_CarName lgl) => Convert.ToInt32(lgl.Car_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxColors
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Colors.Max<T_Color, int>((T_Color lgl) => Convert.ToInt32(lgl.ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxCarTypNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_CarTyps.Max<T_CarTyp, int>((T_CarTyp lgl) => Convert.ToInt32(lgl.CarTyp_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxCatNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_CATEGORies.Max<T_CATEGORY, int>((T_CATEGORY lgl) => Convert.ToInt32(lgl.CAT_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxCityNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Cities.Max<T_City, int>((T_City lgl) => Convert.ToInt32(lgl.City_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxCommentaryNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Commentaries.Max<T_Commentary, int>((T_Commentary lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxContractNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Contracts.Max<T_Contract, int>((T_Contract lgl) => Convert.ToInt32(lgl.Contract_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxCstNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_CstTbls.Max<T_CstTbl, int>((T_CstTbl lgl) => Convert.ToInt32(lgl.Cst_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxcurencyNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Curencies.Max<T_Curency, int>((T_Curency lgl) => Convert.ToInt32(lgl.Curency_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxDeptNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Depts.Max<T_Dept, int>((T_Dept lgl) => Convert.ToInt32(lgl.Dept_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxDrivNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Chauffeurs.Max<T_Chauffeur, int>((T_Chauffeur lgl) => Convert.ToInt32(lgl.chauffeur_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxEmpsNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Emps.Max<T_Emp, int>((T_Emp lgl) => Convert.ToInt32(lgl.Emp_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxEndServiceNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_EndServices.Max<T_EndService, int>((T_EndService lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxEqarDataNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_EqarsDatas.Max<T_EqarsData, int>((T_EqarsData lgl) => Convert.ToInt32(lgl.EqarNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxEqarNaturalNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_EqarNaturals.Max<T_EqarNatural, int>((T_EqarNatural lgl) => Convert.ToInt32(lgl.EqarNatural_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxEqarSaleNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_EqarSales.Max<T_EqarSale, int>((T_EqarSale lgl) => Convert.ToInt32(lgl.EqarSaleNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxEqarsDataNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_EqarsDatas.Max<T_EqarsData, int>((T_EqarsData lgl) => Convert.ToInt32(lgl.EqarNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxEqarTypNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_EqarTyps.Max<T_EqarTyp, int>((T_EqarTyp lgl) => Convert.ToInt32(lgl.EqarTyp_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxFamilyNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Families.Max<T_Family, int>((T_Family lgl) => Convert.ToInt32(lgl.Person_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxGDDETNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_INVDETs.Max<T_INVDET, int>((T_INVDET lgl) => Convert.ToInt32(lgl.InvNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxGDHEADsNo
		{
			get
			{
				int num = 1;
				try
				{
					num = (
						from q in this.T_GDHEADs
						where q.gdTyp == (int?)VarGeneral.InvTyp && !q.gdLok
						select q).Max<T_GDHEAD, int>((T_GDHEAD lgl) => Convert.ToInt32(lgl.gdNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxGuarantorNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Guarantors.Max<T_Guarantor, int>((T_Guarantor lgl) => Convert.ToInt32(lgl.Guarantor_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxIDTypeNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_IDTypes.Max<T_IDType, int>((T_IDType lgl) => Convert.ToInt32(lgl.IDType_ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxInsuranceNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Insurances.Max<T_Insurance, int>((T_Insurance lgl) => Convert.ToInt32(lgl.Insurance_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxinvDetNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_INVDETs.Max<T_INVDET, int>((T_INVDET lgl) => Convert.ToInt32(lgl.InvNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxInvDetNoteNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_InvDetNotes.Max<T_InvDetNote, int>((T_InvDetNote lgl) => Convert.ToInt32(lgl.InvDetNote_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxInvheadNo
		{
			get
			{
				int num = 1;
				try
				{
					num = (
						from q in this.T_INVHEDs
						where q.InvTyp.Value == VarGeneral.InvTyp  
						select q).Max<T_INVHED, int>((T_INVHED lgl) => Convert.ToInt32(lgl.InvNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxInvheadNoSequence
		{
			get
			{
				VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 9);
				int num = 1;
				try
				{
					num = (
						from q in this.T_INVHEDs
						where q.InvTyp.Value == VarGeneral.InvTyp && q.IfDel == (int?)0 && (q.SalsManNo == VarGeneral.UserNumber)
						select q).Max<T_INVHED, int>((T_INVHED lgl) => Convert.ToInt32((object)lgl.InvId)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxINVSETTING
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_INVSETTINGs.Max<T_INVSETTING, int>((T_INVSETTING lgl) => Convert.ToInt32(lgl.InvID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxPrinterSettings
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Printers.Max<T_Printer, int>((T_Printer lgl) => Convert.ToInt32(lgl.InvID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}

		public int MaxItemNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Items.Max<T_Item, int>((T_Item lgl) => Convert.ToInt32(lgl.Itm_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxJobNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Jobs.Max<T_Job, int>((T_Job lgl) => Convert.ToInt32(lgl.Job_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxLiquidationTypNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_LiquidationTyps.Max<T_LiquidationTyp, int>((T_LiquidationTyp lgl) => Convert.ToInt32(lgl.LiquidationT_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxLocNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Locs.Max<T_Loc, int>((T_Loc lgl) => Convert.ToInt32(lgl.Loc_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxMndobNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Mndobs.Max<T_Mndob, int>((T_Mndob lgl) => Convert.ToInt32(lgl.Mnd_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxNationNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Nationalities.Max<T_Nationality, int>((T_Nationality lgl) => Convert.ToInt32(lgl.Nation_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxNoGdHeadNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_GDHEADs.Max<T_GDHEAD, int>((T_GDHEAD lgl) => Convert.ToInt32((object)lgl.gdID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxOfferNo
		{
			get
			{
				int num = 1;
				try
				{
					num = (
						from q in this.T_Offers
						where q.OfferHeadTyp.Value == VarGeneral.InvTyp
						select q).Max<T_Offer, int>((T_Offer lgl) => Convert.ToInt32(lgl.OfferHeadNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxOpSalaryEmpNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_SalaryOps.Max<T_SalaryOp, int>((T_SalaryOp lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxOUpdateDocEmpNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_UpdateDocs.Max<T_UpdateDoc, int>((T_UpdateDoc lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxOwnerNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Owners.Max<T_Owner, int>((T_Owner lgl) => Convert.ToInt32(lgl.Owner_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxPatientCoutNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_PatientCouts.Max<T_PatientCout, int>((T_PatientCout lgl) => Convert.ToInt32(lgl.ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxPerNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_pers.Max<T_per, int>((T_per lgl) => Convert.ToInt32(lgl.perno)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxPRojectNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Projects.Max<T_Project, int>((T_Project lgl) => Convert.ToInt32(lgl.Project_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxReligionNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Religions.Max<T_Religion, int>((T_Religion lgl) => Convert.ToInt32(lgl.Religion_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxReservNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Reservs.Max<T_Reserv, int>((T_Reserv lgl) => Convert.ToInt32(lgl.ResrvNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxRewardNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Rewards.Max<T_Reward, int>((T_Reward lgl) => Convert.ToInt32(lgl.Reward_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxRomTrnNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_romtrns.Max<T_romtrn, int>((T_romtrn lgl) => Convert.ToInt32(lgl.ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxRoomNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Roms.Max<T_Rom, int>((T_Rom lgl) => Convert.ToInt32(lgl.romno)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxRoomTrnNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_romtrns.Max<T_romtrn, int>((T_romtrn lgl) => Convert.ToInt32(lgl.ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxSalDiscountNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_SalDiscounts.Max<T_SalDiscount, int>((T_SalDiscount lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxSecretariatNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Secretariats.Max<T_Secretariat, int>((T_Secretariat lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxSecretariatsTypNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_SecretariatsTyps.Max<T_SecretariatsTyp, int>((T_SecretariatsTyp lgl) => Convert.ToInt32(lgl.SecretariatTyp_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxSectionNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Sections.Max<T_Section, int>((T_Section lgl) => Convert.ToInt32(lgl.Section_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxServTypeNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_sertyps.Max<T_sertyp, int>((T_sertyp lgl) => Convert.ToInt32(lgl.Serv_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxSndNo
		{
			get
			{
				int num = 1;
				try
				{
					num = (
						from q in this.T_Snds
						where q.typ.Value == VarGeneral.SndTyp
						select q).Max<T_Snd, int>((T_Snd lgl) => Convert.ToInt32(lgl.fNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxStoreNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Stores.Max<T_Store, int>((T_Store lgl) => Convert.ToInt32(lgl.Stor_ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxTelNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_tels.Max<T_tel, int>((T_tel lgl) => Convert.ToInt32(lgl.ID)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxTenantContractDataNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_TenantContracts.Max<T_TenantContract, int>((T_TenantContract lgl) => Convert.ToInt32(lgl.ContractNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxTenantDataNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Tenants.Max<T_Tenant, int>((T_Tenant lgl) => Convert.ToInt32(lgl.tenantNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxTicketNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Tickets.Max<T_Ticket, int>((T_Ticket lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxTranNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_trans.Max<T_tran, int>((T_tran lgl) => Convert.ToInt32((object)lgl.fat)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxTransEmpNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_TransEmployees.Max<T_TransEmployee, int>((T_TransEmployee lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxTreatmentNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_treatments.Max<T_treatment, int>((T_treatment lgl) => Convert.ToInt32(lgl.treatment_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxUnitNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Units.Max<T_Unit, int>((T_Unit lgl) => Convert.ToInt32(lgl.Unit_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxVacationNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Vacations.Max<T_Vacation, int>((T_Vacation lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
					num = 1;
				}
				return num;
			}
		}
		public int MaxVacTypNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_VacTyps.Max<T_VacTyp, int>((T_VacTyp lgl) => Convert.ToInt32(lgl.VacT_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxVisaGoBackNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_VisaGoBacks.Max<T_VisaGoBack, int>((T_VisaGoBack lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxVisaIntroductionNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_VisaIntroductions.Max<T_VisaIntroduction, int>((T_VisaIntroduction lgl) => Convert.ToInt32(lgl.warnNo)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public int MaxWaiterNo
		{
			get
			{
				int num = 1;
				try
				{
					num = this.T_Waiters.Max<T_Waiter, int>((T_Waiter lgl) => Convert.ToInt32(lgl.waiter_No)) + 1;
				}
				catch
				{
				}
				return num;
			}
		}
		public List<string> PKeys
		{
			get
			{
				return this.pkeys;
			}
			set
			{
				this.pkeys = value;
			}
		}
		
			public Table<tb_version> tb_versions
		{
			get
			{
				return base.GetTable<tb_version>();
			}
		}
		public Table<T_AccCat> T_AccCats
		{
			get
			{
				return base.GetTable<T_AccCat>();
			}
		}
		public Table<FReport> FReports
		{
			get
			{
				return base.GetTable<FReport>();
			}
		}
		public Table<T_Pine> T_Pines
		{
			get
			{
				return base.GetTable<T_Pine>();
			}
		}
		public Table<T_CarCheckPIC> T_CarCheckPICs
		{
			get
			{
				return base.GetTable<T_CarCheckPIC>();
			}
		}
		public Table<T_AccDef> T_AccDefs
		{
			get
			{
				return base.GetTable<T_AccDef>();
			}
		}
		public Table<T_MTemplate> T_MTemplates
		{
			get
			{
				return base.GetTable<T_MTemplate>();
			}
		}
		public Table<T_Add> T_Adds
		{
			get
			{
				return base.GetTable<T_Add>();
			}
		}
		public Table<T_AddTyp> T_AddTyps
		{
			get
			{
				return base.GetTable<T_AddTyp>();
			}
		}
		public Table<T_Advance> T_Advances
		{
			get
			{
				return base.GetTable<T_Advance>();
			}
		}
		public Table<T_AinNatural> T_AinNaturals
		{
			get
			{
				return base.GetTable<T_AinNatural>();
			}
		}
		public Table<T_AinsData> T_AinsDatas
		{
			get
			{
				return base.GetTable<T_AinsData>();
			}
		}
		public Table<T_AinTyp> T_AinTyps
		{
			get
			{
				return base.GetTable<T_AinTyp>();
			}
		}
		public Table<T_AlarmTenant> T_AlarmTenants
		{
			get
			{
				return base.GetTable<T_AlarmTenant>();
			}
		}
		public Table<T_AttendOperat> T_AttendOperats
		{
			get
			{
				return base.GetTable<T_AttendOperat>();
			}
		}
		public Table<T_Attend> T_Attends
		{
			get
			{
				return base.GetTable<T_Attend>();
			}
		}
		public Table<T_Authorization> T_Authorizations
		{
			get
			{
				return base.GetTable<T_Authorization>();
			}
		}
		public Table<T_BankPeaper> T_BankPeapers
		{
			get
			{
				return base.GetTable<T_BankPeaper>();
			}
		}
		public Table<T_Bank> T_Banks
		{
			get
			{
				return base.GetTable<T_Bank>();
			}
		}
		public Table<T_BirthPlace> T_BirthPlaces
		{
			get
			{
				return base.GetTable<T_BirthPlace>();
			}
		}
		public Table<T_BlackList> T_BlackLists
		{
			get
			{
				return base.GetTable<T_BlackList>();
			}
		}
		public Table<T_BloodTyp> T_BloodTyps
		{
			get
			{
				return base.GetTable<T_BloodTyp>();
			}
		}
		public Table<T_Boss> T_Bosses
		{
			get
			{
				return base.GetTable<T_Boss>();
			}
		}
		public Table<T_CallPhone> T_CallPhones
		{
			get
			{
				return base.GetTable<T_CallPhone>();
			}
		}
		public Table<T_Color> T_Colors

		{
			get
			{
				return base.GetTable<T_Color>();
			}
		}
		public Table<T_CarName> T_CarNames
		{
			get
			{
				return base.GetTable<T_CarName>();
			}
		}

		public Table<T_Car> T_Cars
		{
			get
			{
				return base.GetTable<T_Car>();
			}
		}
		public Table<T_CarTyp> T_CarTyps
		{
			get
			{
				return base.GetTable<T_CarTyp>();
			}
		}
		public Table<T_CATEGORY> T_CATEGORies
		{
			get
			{
				return base.GetTable<T_CATEGORY>();
			}
		}
		public Table<T_Chauffeur> T_Chauffeurs
		{
			get
			{
				return base.GetTable<T_Chauffeur>();
			}
		}
		public Table<T_City> T_Cities
		{
			get
			{
				return base.GetTable<T_City>();
			}
		}
		public Table<T_Commentary> T_Commentaries
		{
			get
			{
				return base.GetTable<T_Commentary>();
			}
		}
		public Table<T_Company> T_Companies
		{
			get
			{
				return base.GetTable<T_Company>();
			}
		}
		public Table<T_Contract> T_Contracts
		{
			get
			{
				return base.GetTable<T_Contract>();
			}
		}
		public Table<T_CstTbl> T_CstTbls
		{
			get
			{
				return base.GetTable<T_CstTbl>();
			}
		}
		public Table<T_Curency> T_Curencies
		{
			get
			{
				return base.GetTable<T_Curency>();
			}
		}
		public Table<T_DayOfWeek> T_DayOfWeeks
		{
			get
			{
				return base.GetTable<T_DayOfWeek>();
			}
		}
		public Table<T_DaysOfMonth> T_DaysOfMonths
		{
			get
			{
				return base.GetTable<T_DaysOfMonth>();
			}
		}
		public Table<T_Dept> T_Depts
		{
			get
			{
				return base.GetTable<T_Dept>();
			}
		}
		public Table<T_EditItemPrice> T_EditItemPrices
		{
			get
			{
				return base.GetTable<T_EditItemPrice>();
			}
		}
		public Table<T_EmpCard> T_EmpCards
		{
			get
			{
				return base.GetTable<T_EmpCard>();
			}
		}
		public Table<T_Emp> T_Emps
		{
			get
			{
				return base.GetTable<T_Emp>();
			}
		}
		public Table<T_EndService> T_EndServices
		{
			get
			{
				return base.GetTable<T_EndService>();
			}
		}
		public Table<T_EqarContract> T_EqarContracts
		{
			get
			{
				return base.GetTable<T_EqarContract>();
			}
		}
		public Table<T_EqarNatural> T_EqarNaturals
		{
			get
			{
				return base.GetTable<T_EqarNatural>();
			}
		}
		public Table<T_EqarSale> T_EqarSales
		{
			get
			{
				return base.GetTable<T_EqarSale>();
			}
		}
		public Table<T_EqarsData> T_EqarsDatas
		{
			get
			{
				return base.GetTable<T_EqarsData>();
			}
		}
		public Table<T_EqarTyp> T_EqarTyps
		{
			get
			{
				return base.GetTable<T_EqarTyp>();
			}
		}
		public Table<T_Family> T_Families
		{
			get
			{
				return base.GetTable<T_Family>();
			}
		}
		public Table<T_GdAuto> T_GdAutos
		{
			get
			{
				return base.GetTable<T_GdAuto>();
			}
		}
		public Table<T_GDDET> T_GDDETs
		{
			get
			{
				return base.GetTable<T_GDDET>();
			}
		}
		public Table<T_GDHEAD> T_GDHEADs
		{
			get
			{
				return base.GetTable<T_GDHEAD>();
			}
		}
		public Table<T_Guarantor> T_Guarantors
		{
			get
			{
				return base.GetTable<T_Guarantor>();
			}
		}
		public Table<T_IDType> T_IDTypes
		{
			get
			{
				return base.GetTable<T_IDType>();
			}
		}
		public Table<T_Info> T_Infos
		{
			get
			{
				return base.GetTable<T_Info>();
			}
		}
		public Table<T_InfoTb> T_InfoTbs
		{
			get
			{
				return base.GetTable<T_InfoTb>();
			}
		}
		public Table<T_Insurance> T_Insurances
		{
			get
			{
				return base.GetTable<T_Insurance>();
			}
		}
		public Table<T_INVDET_Repair> T_INVDET_Repairs
		{
			get
			{
				return base.GetTable<T_INVDET_Repair>();
			}
		}
		public Table<T_InvDetNote> T_InvDetNotes
		{
			get
			{
				return base.GetTable<T_InvDetNote>();
			}
		}
		public Table<T_INVDET> T_INVDETs
		{
			get
			{
				return base.GetTable<T_INVDET>();
			}
		}
		public Table<T_INVHED> T_INVHEDs
		{
			get
			{
				return base.GetTable<T_INVHED>();
			}
		}
		public Table<T_INVSETTING> T_INVSETTINGs
		{
			get

			{


				return base.GetTable<T_INVSETTING>();
			}
		}
		public Table<T_Printer> T_Printers
		{
			get

			{


				return base.GetTable<T_Printer>();
			}
		}
		public Table<T_ItemDet> T_ItemDets
		{
			get
			{
				return base.GetTable<T_ItemDet>();
			}
		}
		public Table<T_Item> T_Items
		{
			get
			{
				return base.GetTable<T_Item>();
			}
		}
		public Table<T_ItemSerial> T_ItemSerials
		{
			get
			{
				return base.GetTable<T_ItemSerial>();
			}
		}
		public Table<T_Job> T_Jobs
		{
			get
			{
				return base.GetTable<T_Job>();
			}
		}
		public Table<T_LiquidationTyp> T_LiquidationTyps
		{
			get
			{
				return base.GetTable<T_LiquidationTyp>();
			}
		}
		public Table<T_Loc> T_Locs
		{
			get
			{
				return base.GetTable<T_Loc>();
			}
		}
		public Table<T_mInvPrint> T_mInvPrints
		{
			get
			{
				return base.GetTable<T_mInvPrint>();
			}
		}
		public Table<T_Mndob> T_Mndobs
		{
			get
			{
				return base.GetTable<T_Mndob>();
			}
		}
		public Table<T_MStatus> T_MStatus
		{
			get
			{
				return base.GetTable<T_MStatus>();
			}
		}
		public Table<T_Nationality> T_Nationalities
		{
			get
			{
				return base.GetTable<T_Nationality>();
			}
		}
		public Table<T_OfferDet> T_OfferDets
		{
			get
			{
				return base.GetTable<T_OfferDet>();
			}
		}
		public Table<T_OfferQFree> T_OfferQFrees
		{
			get
			{
				return base.GetTable<T_OfferQFree>();
			}
		}
		public Table<T_Offer> T_Offers
		{
			get
			{
				return base.GetTable<T_Offer>();
			}
		}
		public Table<T_OpMethod> T_OpMethods
		{
			get
			{
				return base.GetTable<T_OpMethod>();
			}
		}
		public Table<T_Owner> T_Owners
		{
			get
			{
				return base.GetTable<T_Owner>();
			}
		}
		public Table<T_PatientCout> T_PatientCouts
		{
			get
			{
				return base.GetTable<T_PatientCout>();
			}
		}
		public Table<T_per1> T_per1s
		{
			get
			{
				return base.GetTable<T_per1>();
			}
		}
		public Table<T_per> T_pers
		{
			get
			{
				return base.GetTable<T_per>();
			}
		}
		public Table<T_Premium> T_Premiums
		{
			get
			{
				return base.GetTable<T_Premium>();
			}
		}
		public Table<T_Project> T_Projects
		{
			get
			{
				return base.GetTable<T_Project>();
			}
		}
		public Table<T_QTYEXP> T_QTYEXPs
		{
			get
			{
				return base.GetTable<T_QTYEXP>();
			}
		}
		public Table<T_Religion> T_Religions
		{
			get
			{
				return base.GetTable<T_Religion>();
			}
		}
		public Table<T_Reserv> T_Reservs
		{
			get
			{
				return base.GetTable<T_Reserv>();
			}
		}
		public Table<T_Reward> T_Rewards
		{
			get
			{
				return base.GetTable<T_Reward>();
			}
		}
		public Table<T_RomChart> T_RomCharts
		{
			get
			{
				return base.GetTable<T_RomChart>();
			}
		}
		public Table<T_Rom> T_Roms
		{
			get
			{
				return base.GetTable<T_Rom>();
			}
		}
		public Table<T_romtrn> T_romtrns
		{
			get
			{
				return base.GetTable<T_romtrn>();
			}
		}
		public Table<T_Room> T_Rooms
		{
			get
			{
				return base.GetTable<T_Room>();
			}
		}
		public Table<T_Salary> T_Salaries
		{
			get
			{
				return base.GetTable<T_Salary>();
			}
		}
		public Table<T_SalaryOp> T_SalaryOps
		{
			get
			{
				return base.GetTable<T_SalaryOp>();
			}
		}
		public Table<T_SalDiscount> T_SalDiscounts
		{
			get
			{
				return base.GetTable<T_SalDiscount>();
			}
		}
		public Table<T_Sal> T_Sals
		{
			get
			{
				return base.GetTable<T_Sal>();
			}
		}
		public Table<T_SalStatus> T_SalStatus
		{
			get
			{
				return base.GetTable<T_SalStatus>();
			}
		}
		public Table<T_Secretariat> T_Secretariats
		{
			get
			{
				return base.GetTable<T_Secretariat>();
			}
		}
		public Table<T_SecretariatsTyp> T_SecretariatsTyps
		{
			get
			{
				return base.GetTable<T_SecretariatsTyp>();
			}
		}
		public Table<T_Section> T_Sections
		{
			get
			{
				return base.GetTable<T_Section>();
			}
		}
		public Table<T_sertyp> T_sertyps
		{
			get
			{
				return base.GetTable<T_sertyp>();
			}
		}
		public Table<T_Sex> T_Sexes
		{
			get
			{
				return base.GetTable<T_Sex>();
			}
		}
		public Table<T_SINVDET> T_SINVDETs
		{
			get
			{
				return base.GetTable<T_SINVDET>();
			}
		}
		public Table<T_Snd> T_Snds
		{
			get
			{
				return base.GetTable<T_Snd>();
			}
		}
		public Table<T_STKSQTY> T_STKSQTies
		{
			get
			{
				return base.GetTable<T_STKSQTY>();
			}
		}
		public Table<T_StoreMnd> T_StoreMnds
		{
			get
			{
				return base.GetTable<T_StoreMnd>();
			}
		}
		public Table<T_Store> T_Stores
		{
			get
			{
				return base.GetTable<T_Store>();
			}
		}
		public Table<T_StsRea> T_StsReas
		{
			get
			{
				return base.GetTable<T_StsRea>();
			}
		}
		public Table<T_SubTyp> T_SubTyps
		{
			get
			{
				return base.GetTable<T_SubTyp>();
			}
		}
		public Table<T_SYSSETTING> T_SYSSETTINGs
		{
			get
			{
				return base.GetTable<T_SYSSETTING>();
			}
		}
		public Table<T_TbSalary> T_TbSalaries
		{
			get
			{
				return base.GetTable<T_TbSalary>();
			}
		}
		public Table<T_telmn> T_telmns
		{
			get
			{
				return base.GetTable<T_telmn>();
			}
		}
		public Table<T_tel> T_tels
		{
			get
			{
				return base.GetTable<T_tel>();
			}
		}
		public Table<T_TenantContract> T_TenantContracts
		{
			get
			{
				return base.GetTable<T_TenantContract>();
			}
		}
		public Table<T_TenantPayment> T_TenantPayments
		{
			get
			{
				return base.GetTable<T_TenantPayment>();
			}
		}
		public Table<T_Tenant> T_Tenants
		{
			get
			{
				return base.GetTable<T_Tenant>();
			}
		}
		public Table<T_TicetTyp> T_TicetTyps
		{
			get
			{
				return base.GetTable<T_TicetTyp>();
			}
		}
		public Table<T_Ticket> T_Tickets
		{
			get
			{
				return base.GetTable<T_Ticket>();
			}
		}
		public Table<T_tran> T_trans
		{
			get
			{
				return base.GetTable<T_tran>();
			}
		}
		public Table<T_TransEmployee> T_TransEmployees
		{
			get
			{
				return base.GetTable<T_TransEmployee>();
			}
		}
		public Table<T_treatment> T_treatments
		{
			get
			{
				return base.GetTable<T_treatment>();
			}
		}
		public Table<T_Unit> T_Units
		{
			get
			{
				return base.GetTable<T_Unit>();
			}
		}
		public Table<T_UpdateDoc> T_UpdateDocs
		{
			get
			{
				return base.GetTable<T_UpdateDoc>();
			}
		}
		public Table<T_Vacation> T_Vacations
		{
			get
			{
				return base.GetTable<T_Vacation>();
			}
		}
		public Table<T_VacTyp> T_VacTyps
		{
			get
			{
				return base.GetTable<T_VacTyp>();
			}
		}
		public Table<T_VisaGoBack> T_VisaGoBacks
		{
			get
			{
				return base.GetTable<T_VisaGoBack>();
			}
		}
		public Table<T_VisaIntroduction> T_VisaIntroductions
		{
			get
			{
				return base.GetTable<T_VisaIntroduction>();
			}
		}
		public Table<T_Waiter> T_Waiters
		{
			get
			{
				return base.GetTable<T_Waiter>();
			}
		}
		public Table<TmpTbl> TmpTbls
		{
			get
			{
				return base.GetTable<TmpTbl>();
			}
		}
		static Stock_DataDataContext()
		{
			Stock_DataDataContext.mappingSource = new AttributeMappingSource();
		}
		public Stock_DataDataContext() : base(VarGeneral.BranchCS, Stock_DataDataContext.mappingSource)
		{

			//if (sp == 1) ObjectTrackingEnabled = false;
		}
		public static int sp = 0;
		public Stock_DataDataContext(string connection) : base(connection, Stock_DataDataContext.mappingSource)
		{

		}
		public Stock_DataDataContext(IDbConnection connection) : base(connection, Stock_DataDataContext.mappingSource)
		{
		}
		public Stock_DataDataContext(string connection, MappingSource mappingSource) : base(connection, mappingSource)
		{
		}
		public Stock_DataDataContext(IDbConnection connection, MappingSource mappingSource) : base(connection, mappingSource)
		{
		}
		public T_Add AddEmp(int ID)
		{
			T_Add tt = new T_Add();
			IQueryable<T_Add> Quary =
				from er in this.T_Adds
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_Add>() > 0)
			{
				tt = Quary.First<T_Add>();
			}
			return tt;
		}
		public T_Advance AdvanceEmp(int ID)
		{
			T_Advance tt = new T_Advance();
			IQueryable<T_Advance> Quary =
				from er in this.T_Advances
				where er.Advances_No == ID
				select er;
			if (Quary.Count<T_Advance>() > 0)
			{
				tt = Quary.First<T_Advance>();
			}
			return tt;
		}
		public T_AinsData AinDataEmpID(int ID)
		{
			T_AinsData tt = new T_AinsData();
			IQueryable<T_AinsData> Quary =
				from er in this.T_AinsDatas
				where er.AinID == ID
				select er;
			if (Quary.Count<T_AinsData>() > 0)
			{
				tt = Quary.First<T_AinsData>();
			}
			return tt;
		}
		public T_AinNatural AinNaturalEmp(int ID)
		{
			T_AinNatural tt = new T_AinNatural();
			IQueryable<T_AinNatural> Quary =
				from er in this.T_AinNaturals
				where er.AinNatural_No == ID
				select er;
			if (Quary.Count<T_AinNatural>() > 0)
			{
				tt = Quary.First<T_AinNatural>();
			}
			return tt;
		}
		public T_AinsData AinsDataDataEmp(int ID)
		{
			T_AinsData tt = new T_AinsData();
			IQueryable<T_AinsData> Quary =
				from er in this.T_AinsDatas
				where er.AinID == ID
				select er;
			if (Quary.Count<T_AinsData>() > 0)
			{
				tt = Quary.First<T_AinsData>();
			}
			return tt;
		}
		public T_AinsData AinsDataDataNo(string No_)
		{
			T_AinsData tt = new T_AinsData();
			IQueryable<T_AinsData> Quary =
				from er in this.T_AinsDatas
				where er.AinNo == No_
				select er;
			if (Quary.Count<T_AinsData>() > 0)
			{
				tt = Quary.First<T_AinsData>();
			}
			return tt;
		}
		public T_AinsData AinsDataDataNo(string No_, int EqrID)
		{
			T_AinsData tt = new T_AinsData();
			IQueryable<T_AinsData> Quary =
				from er in this.T_AinsDatas
				where er.AinNo == No_
				where er.EqarID == EqrID
				select er;
			if (Quary.Count<T_AinsData>() > 0)
			{
				tt = Quary.First<T_AinsData>();
			}
			return tt;
		}
		public T_AinTyp AinTypEmp(int ID)
		{
			T_AinTyp tt = new T_AinTyp();
			IQueryable<T_AinTyp> Quary =
				from er in this.T_AinTyps
				where er.AinTyp_No == ID
				select er;
			if (Quary.Count<T_AinTyp>() > 0)
			{
				tt = Quary.First<T_AinTyp>();
			}
			return tt;
		}
		public T_Authorization AuthorizationEmp(int ID)
		{
			T_Authorization tt = new T_Authorization();
			IQueryable<T_Authorization> Quary =
				from er in this.T_Authorizations
				where er.Authorization_No == ID
				select er;
			if (Quary.Count<T_Authorization>() > 0)
			{
				tt = Quary.First<T_Authorization>();
			}
			return tt;
		}
		public List<T_Salary> AutoDeleteSalary(string vDate)
		{
			List<T_Salary> return2 = new List<T_Salary>();
			List<T_Salary> source = (
				from br in this.T_Salaries
				where br.SalaryStatus == (bool?)false && br.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && br.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				select br).ToList<T_Salary>();
			if (source.Count<T_Salary>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source;
			}
			return return2;
		}
		public T_Bank BankEmp(int ID)
		{
			T_Bank tt = new T_Bank();
			IQueryable<T_Bank> Quary =
				from er in this.T_Banks
				where er.Bank_No == ID
				select er;
			if (Quary.Count<T_Bank>() > 0)
			{
				tt = Quary.First<T_Bank>();
			}
			return tt;
		}
		public T_BirthPlace BirthPlaceEmp(int ID)
		{
			T_BirthPlace tt = new T_BirthPlace();
			IQueryable<T_BirthPlace> Quary =
				from er in this.T_BirthPlaces
				where er.BirthPlaceNo == ID
				select er;
			if (Quary.Count<T_BirthPlace>() > 0)
			{
				tt = Quary.First<T_BirthPlace>();
			}
			return tt;
		}
		public T_Boss BossEmp(int ID)
		{
			T_Boss tt = new T_Boss();
			IQueryable<T_Boss> Quary =
				from er in this.T_Bosses
				where er.Boss_No == ID
				select er;
			if (Quary.Count<T_Boss>() > 0)
			{
				tt = Quary.First<T_Boss>();
			}
			return tt;
		}
		public T_CallPhone CallPhoneEmp(int ID)
		{
			T_CallPhone tt = new T_CallPhone();
			IQueryable<T_CallPhone> Quary =
				from er in this.T_CallPhones
				where er.Phone_No == ID
				select er;
			if (Quary.Count<T_CallPhone>() > 0)
			{
				tt = Quary.First<T_CallPhone>();
			}
			return tt;
		}
		public T_Car CarsEmp(int ID)
		{
			T_Car tt = new T_Car();
			IQueryable<T_Car> Quary =
				from er in this.T_Cars
				where er.Car_No == ID
				select er;
			if (Quary.Count<T_Car>() > 0)
			{
				tt = Quary.First<T_Car>();
			}
			return tt;
		}
		public T_Color ColorSId(int ID)
		{
			T_Color tt = new T_Color();
			IQueryable<T_Color> Quary =
				from er in this.T_Colors
				where er.ID == ID
				select er;
			if (Quary.Count<T_Color>() > 0)
			{
				tt = Quary.First<T_Color>();
			}
			return tt;
		}
		public T_CarTyp CarTypEmp(int ID)
		{
			T_CarTyp tt = new T_CarTyp();
			IQueryable<T_CarTyp> Quary =
				from er in this.T_CarTyps
				where er.CarTyp_No == ID
				select er;
			if (Quary.Count<T_CarTyp>() > 0)
			{
				tt = Quary.First<T_CarTyp>();
			}
			return tt;
		}
		public void CheckAttendState(string StarDte)
		{
			List<T_Emp> listEmps = this.FillEmps_2("").ToList<T_Emp>();
			for (int i = 0; i < listEmps.Count<T_Emp>(); i++)
			{
				DateTime date = Convert.ToDateTime(StarDte).Date;
				DateTime dateTime = Convert.ToDateTime(listEmps[i].DateAppointment);
				int CountDay = (int)(date - dateTime.Date).TotalDays;
				string empID = listEmps[i].Emp_ID;
				dateTime = Convert.ToDateTime(StarDte);
				dateTime = dateTime.AddDays(-1);
				this.CheckPreviousDays(empID, dateTime.ToString("yyyy/MM/dd"), listEmps[i], CountDay);
			}
		}
		public bool CheckEmp_Add(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Adds
				where (er.EmpID == ID) && er.IFState == (bool?)true
				select er).ToList<T_Add>().Count<T_Add>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_Addvance(string ID)
		{
			bool flag;
			List<T_Advance> list = (
				from er in this.T_Advances
				where er.EmpID == ID
				select er).ToList<T_Advance>();
			int num = 0;
			while (true)
			{
				if (num < list.Count)
				{
					List<T_Premium> q = (
						from t in this.T_Premiums
						where t.Advances_No == (int?)list[num].Advances_No
						select t).ToList<T_Premium>();
					int ii = 0;
					while (ii < q.Count)
					{
						bool? fState = q[ii].IFState;
						if ((!fState.GetValueOrDefault() ? 0 : (fState.HasValue == true ? 1 : 0)) == 0)
						{
							ii++;
						}
						else
						{
							flag = true;
							return flag;
						}
					}
					num++;
				}
				else
				{
					flag = false;
					break;
				}
			}
			return flag;
		}
		public bool CheckEmp_Attend(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Attends
				where er.EmpID == ID
				select er).ToList<T_Attend>().Count<T_Attend>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_AttendOpetation(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_AttendOperats
				where er.EmpID == ID
				select er).ToList<T_AttendOperat>().Count<T_AttendOperat>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_Authorization(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Authorizations
				where (er.EmpID == ID) && er.IFState == (bool?)true
				select er).ToList<T_Authorization>().Count<T_Authorization>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_Discount(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_SalDiscounts
				where (er.EmpID == ID) && er.IFState == (bool?)true
				select er).ToList<T_SalDiscount>().Count<T_SalDiscount>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_Family(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Families
				where er.EmpID == ID
				select er).ToList<T_Family>().Count<T_Family>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_Premium(int ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Premiums
				where er.Advances_No == (int?)ID
				select er).ToList<T_Premium>().Count<T_Premium>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_Reward(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Rewards
				where (er.EmpID == ID) && er.IFState == (bool?)true
				select er).ToList<T_Reward>().Count<T_Reward>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_Salary(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Salaries
				where er.EmpID == ID
				select er).ToList<T_Salary>().Count<T_Salary>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_Ticket(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Tickets
				where (er.EmpID == ID) && er.IFState == (bool?)true
				select er).ToList<T_Ticket>().Count<T_Ticket>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmp_vacation(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_Vacations
				where (er.EmpID == ID) && er.IFState == (bool?)true
				select er).Count<T_Vacation>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckEmpVac(string vEmID, string vDate)
		{
			bool flag;
			string[] strArrays = new string[] { "Select * FROM T_Vacation Where EmpID = '", vEmID, "' AND T_Vacation.AdminLock = 1 AND T_Vacation.StartDate <= '", vDate, "' AND T_Vacation.EndDate >= '", vDate, "'" };
			flag = (base.ExecuteQuery<T_Vacation>(string.Concat(strArrays), new object[0]).ToList<T_Vacation>().ToList<T_Vacation>().Count <= 0 ? false : true);
			return flag;
		}
		public bool CheckIsPurchasInvoic(string ID, int inv_HeadID)
		{
			bool flag;
			flag = ((
				from er in this.T_INVDETs
				where er.ItmNo == ID
				where er.T_INVHED.IfDel == (int?)0
				where er.T_INVHED.InvTyp == (int?)2 || er.T_INVHED.InvTyp == (int?)14 || er.T_INVHED.InvTyp == (int?)1 || er.T_INVHED.InvTyp == (int?)3
				where er.T_INVHED.InvHed_ID != inv_HeadID
				select er).ToList<T_INVDET>().Count<T_INVDET>() <= 0 ? false : true);
			return flag;
		}
		public bool CheckIsSalesIvoice(string ID)
		{
			bool flag;
			flag = ((
				from er in this.T_INVDETs
				where er.ItmNo == ID
				where er.T_INVHED.IfDel == (int?)0
				where er.T_INVHED.InvTyp == (int?)1
				select er).ToList<T_INVDET>().Count<T_INVDET>() <= 0 ? false : true);
			return flag;
		}
		public void CheckPreviousDays(string vEmpID, string vDate, T_Emp value, int CountDay)
		{
			int Day_ = 0;
			string Date1;
			if (value != null)
			{
				for (int index = 0; index < CountDay; ++index)
				{
					Date1 = Convert.ToDateTime(value.DateAppointment).AddDays((double)index).ToString("yyyy/MM/dd");
					if (this.n.IsHijri(Date1))
						Date1 = this.n.FormatHijri(Convert.ToDateTime(Date1).AddDays((double)VarGeneral.Settings_Sys.HDat.Value).ToString("yyyy/MM/dd"), "yyyy/MM/dd");
					else if (this.n.IsGreg(Date1))
						Date1 = this.n.FormatGreg(Date1, "yyyy/MM/dd");
					else
						continue;
					Day_ = this.n.GetDayNo(Date1) + 1;
					if (this.T_AttendOperats.Where<T_AttendOperat>((Expression<Func<T_AttendOperat, bool>>)(t => t.EmpID == vEmpID && t.Date == Date1)).ToList<T_AttendOperat>().Count == 0)
					{
						if (!this.CheckEmpVac(vEmpID, Date1))
						{
							if (new List<T_Attend>((IEnumerable<T_Attend>)this.T_Attends.Where<T_Attend>((Expression<Func<T_Attend, bool>>)(item => item.EmpID == vEmpID && item.Day_No == (int?)Day_ && item.Periods == (int?)0)).ToList<T_Attend>()).Count > 0)
								this.GetData(vEmpID, Date1, Day_, 0);
							else
								this.GetData(vEmpID, Date1, Day_, 2);
						}
						else
							this.GetData(vEmpID, Date1, Day_, 1);
						this.T_AttendOperats.InsertOnSubmit(this.Data_this_AttendOp);
						this.SubmitChanges();
					}
				}
			}
			else
			{
				for (int index = 1; index < int.Parse(vDate.Substring(8, 2)); ++index)
				{
					Date1 = Convert.ToDateTime(vDate.Substring(0, 8) + (object)index).ToString("yyyy/MM/dd");
					if (this.n.IsHijri(Date1))
						Date1 = this.n.FormatHijri(Convert.ToDateTime(Date1).AddDays((double)VarGeneral.Settings_Sys.HDat.Value).ToString("yyyy/MM/dd"), "yyyy/MM/dd");
					else if (this.n.IsGreg(Date1))
						Date1 = this.n.FormatGreg(Date1, "yyyy/MM/dd");
					else
						continue;
					Day_ = this.n.GetDayNo(Date1) + 1;
					T_Emp tEmp = this.EmpsEmp(vEmpID);
					if (this.T_AttendOperats.Where<T_AttendOperat>((Expression<Func<T_AttendOperat, bool>>)(t => t.EmpID == vEmpID && t.Date == Date1)).ToList<T_AttendOperat>().Count == 0)
					{
						if (VarGeneral.CheckDate(tEmp.DateAppointment))
						{
							string str1 = this.n.IsHijri(tEmp.DateAppointment) ? tEmp.DateAppointment : this.n.GregToHijri(tEmp.DateAppointment);
							string str2 = this.n.IsGreg(tEmp.DateAppointment) ? tEmp.DateAppointment : this.n.HijriToGreg(tEmp.DateAppointment);
							if (this.n.IsGreg(Date1))
							{
								if (Convert.ToDateTime(Date1) >= Convert.ToDateTime(str2))
								{
									if (!this.CheckEmpVac(vEmpID, Date1))
									{
										if (new List<T_Attend>((IEnumerable<T_Attend>)this.T_Attends.Where<T_Attend>((Expression<Func<T_Attend, bool>>)(item => item.EmpID == vEmpID && item.Day_No == (int?)Day_ && item.Periods == (int?)0)).ToList<T_Attend>()).Count > 0)
											this.GetData(vEmpID, Date1, Day_, 0);
										else
											this.GetData(vEmpID, Date1, Day_, 2);
									}
									else
										this.GetData(vEmpID, Date1, Day_, 1);
									this.T_AttendOperats.InsertOnSubmit(this.Data_this_AttendOp);
									this.SubmitChanges();
								}
							}
							else if (Convert.ToDateTime(Date1) >= Convert.ToDateTime(str1))
							{
								if (!this.CheckEmpVac(vEmpID, Date1))
								{
									if (new List<T_Attend>((IEnumerable<T_Attend>)this.T_Attends.Where<T_Attend>((Expression<Func<T_Attend, bool>>)(item => item.EmpID == vEmpID && item.Day_No == (int?)Day_ && item.Periods == (int?)0)).ToList<T_Attend>()).Count > 0)
										this.GetData(vEmpID, Date1, Day_, 0);
									else
										this.GetData(vEmpID, Date1, Day_, 2);
								}
								else
									this.GetData(vEmpID, Date1, Day_, 1);
								this.T_AttendOperats.InsertOnSubmit(this.Data_this_AttendOp);
								this.SubmitChanges();
							}
						}
					}
				}
			}
		}
		public T_City CityEmp(int ID)
		{
			T_City tt = new T_City();
			IQueryable<T_City> Quary =
				from er in this.T_Cities
				where er.City_No == ID
				select er;
			if (Quary.Count<T_City>() > 0)
			{
				tt = Quary.First<T_City>();
			}
			return tt;
		}
		public T_GDHEAD Ck_StockGaidInv(string no)
		{
			T_GDHEAD tt = new T_GDHEAD();
			IQueryable<T_GDHEAD> Quary =
				from er in this.T_GDHEADs
				where er.BName == no
				where er.gdTyp == (int?)12
				where !er.gdLok
				select er;
			if (Quary.Count<T_GDHEAD>() > 0)
			{
				tt = Quary.First<T_GDHEAD>();
			}
			return tt;
		}
		public T_Commentary CommentaryEmp(int ID)
		{
			T_Commentary tt = new T_Commentary();
			IQueryable<T_Commentary> Quary =
				from er in this.T_Commentaries
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_Commentary>() > 0)
			{
				tt = Quary.First<T_Commentary>();
			}
			return tt;
		}
		public T_Contract ContractEmp(int ID)
		{
			T_Contract tt = new T_Contract();
			IQueryable<T_Contract> Quary =
				from er in this.T_Contracts
				where er.Contract_No == ID
				select er;
			if (Quary.Count<T_Contract>() > 0)
			{
				tt = Quary.First<T_Contract>();
			}
			return tt;
		}
		public T_Dept DeptEmp(int ID)
		{
			T_Dept tt = new T_Dept();
			IQueryable<T_Dept> Quary =
				from er in this.T_Depts
				where er.Dept_No == ID
				select er;
			if (Quary.Count<T_Dept>() > 0)
			{
				tt = Quary.First<T_Dept>();
			}
			return tt;
		}
		public string DestructionAccCreditPerc(string accNo)
		{
			string str;
			T_GDDET tt = new T_GDDET();
			List<T_GDDET> q = (
				from t in this.T_GDDETs
				where t.AccNo == accNo
				where t.T_GDHEAD.salMonth == "DestructionGD"
				where t.gdValue < (double?)0
				select t).ToList<T_GDDET>();
			str = (q.Count <= 0 ? "0" : q.First<T_GDDET>().AccName);
			return str;
		}
		public double DestructionAccDebit(string accNo)
		{
			double num;
			T_GDDET tt = new T_GDDET();
			List<T_GDDET> q = (
				from t in this.T_GDDETs
				where t.AccNo == accNo
				where t.T_GDHEAD.salMonth == "DestructionGD"
				where t.gdValue > (double?)0
				select t).ToList<T_GDDET>();
			num = (q.Count <= 0 ? 0 : q.First<T_GDDET>().gdValue.Value);
			return num;
		}
		public double DestructionPercentage(string accNo)
		{
			double num;
			try
			{
				T_GDDET tt = new T_GDDET();
				List<T_GDDET> q = (
					from t in this.T_GDDETs
					where t.AccNoDestruction == accNo
					where t.T_GDHEAD.salMonth == "DestructionGD"
					select t).ToList<T_GDDET>();
				num = (q.Count <= 0 ? 0 : Math.Abs(double.Parse(q.First<T_GDDET>().recptNo.Trim())));
			}
			catch
			{
				num = 0;
			}
			return num;
		}
		public string DestructionProof(string accNo)
		{
			string str;
			try
			{
				T_GDDET tt = new T_GDDET();
				List<T_GDDET> q = (
					from t in this.T_GDDETs
					where t.AccNoDestruction == accNo
					where t.T_GDHEAD.salMonth == "DestructionGD"
					where t.gdValue > (double?)0
					where t.T_AccDef.AccCat == (int?)8
					select t).ToList<T_GDDET>();
				str = (q.Count <= 0 ? "" : q.First<T_GDDET>().AccNo);
			}
			catch
			{
				str = "";
			}
			return str;
		}
		public string DestructionRelay(string accNo)
		{
			string str;
			try
			{
				T_GDDET tt = new T_GDDET();
				List<T_GDDET> q = (
					from t in this.T_GDDETs
					where t.AccNoDestruction == accNo
					where t.T_GDHEAD.salMonth == "DestructionGD"
					where t.gdValue < (double?)0
					where t.T_AccDef.AccCat == (int?)2 || t.T_AccDef.AccCat == (int?)3
					select t).ToList<T_GDDET>();
				str = (q.Count <= 0 ? "" : q.First<T_GDDET>().AccNo);
			}
			catch
			{
				str = "";
			}
			return str;
		}
		public double DestructionValue(string accNo)
		{
			double num;
			try
			{
				T_GDDET tt = new T_GDDET();
				List<T_GDDET> q = (
					from t in this.T_GDDETs
					where t.AccNoDestruction == accNo
					where t.T_GDHEAD.salMonth == "DestructionGD"
					select t).ToList<T_GDDET>();
				if (q.Count <= 0)
				{
					num = 0;
				}
				else
				{
					double? nullable = q.First<T_GDDET>().gdValue;
					num = Math.Abs(nullable.Value);
				}
			}
			catch
			{
				num = 0;
			}
			return num;
		}
		public T_DaysOfMonth EmpFirstDayofMonth(string vDate)
		{
			T_DaysOfMonth tt = new T_DaysOfMonth();
			List<T_DaysOfMonth> Quary = (
				from t in this.T_DaysOfMonths
				where t.Year == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.Month == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				select t).ToList<T_DaysOfMonth>();
			if (Quary.Count<T_DaysOfMonth>() > 0)
			{
				tt = Quary.First<T_DaysOfMonth>();
			}
			return tt;
		}
		public T_Attend EmpsAttends(int ID)
		{
			T_Attend tt = new T_Attend();
			IQueryable<T_Attend> Quary =
				from er in this.T_Attends
				where er.Day_No == (int?)ID
				select er;
			if (Quary.Count<T_Attend>() > 0)
			{
				tt = Quary.First<T_Attend>();
			}
			return tt;
		}
		public T_Emp EmpsEmp(string ID)
		{
			T_Emp tt = new T_Emp();
			IQueryable<T_Emp> Quary =
				from er in this.T_Emps
				orderby er.Emp_No
				where (er.Emp_ID == ID) && er.EmpState == (bool?)true
				select er;
			if (Quary.Count<T_Emp>() > 0)
			{
				tt = Quary.First<T_Emp>();
			}
			return tt;
		}
		public List<T_Emp> EmpsEmpClc()
		{
			List<T_Emp> tt = new List<T_Emp>();
			List<T_Emp> Quary = (
				from er in this.T_Emps
				orderby er.Emp_No
				where er.StatusSal == (int?)1 && er.EmpState == (bool?)true
				select er).ToList<T_Emp>();
			if (Quary.Count<T_Emp>() > 0)
			{
				tt = Quary.ToList<T_Emp>();
			}
			return tt;
		}
		public T_Emp EmpsEmpNo(string empNo)
		{
			T_Emp tt = new T_Emp();
			IQueryable<T_Emp> Quary =
				from er in this.T_Emps
				orderby er.Emp_No
				where (er.Emp_No == empNo) && er.EmpState == (bool?)true
				select er;
			if (Quary.Count<T_Emp>() > 0)
			{
				tt = Quary.First<T_Emp>();
			}
			return tt;
		}
		public T_EndService EmpsEndService(int ID)
		{
			T_EndService tt = new T_EndService();
			IQueryable<T_EndService> Quary =
				from er in this.T_EndServices
				orderby er.warnNo
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_EndService>() > 0)
			{
				tt = Quary.First<T_EndService>();
			}
			return tt;
		}
		public T_Emp EmpsOffEmp(string ID)
		{
			T_Emp tt = new T_Emp();
			IQueryable<T_Emp> Quary =
				from er in this.T_Emps
				orderby er.Emp_No
				where (er.Emp_No == ID) && er.EmpState == (bool?)false
				select er;
			if (Quary.Count<T_Emp>() > 0)
			{
				tt = Quary.First<T_Emp>();
			}
			return tt;
		}
		public T_Emp EmpsOffEmp2(string ID)
		{
			T_Emp tt = new T_Emp();
			IQueryable<T_Emp> Quary =
				from er in this.T_Emps
				orderby er.Emp_No
				where (er.Emp_ID == ID) && er.EmpState == (bool?)false
				select er;
			if (Quary.Count<T_Emp>() > 0)
			{
				tt = Quary.First<T_Emp>();
			}
			return tt;
		}
		public T_Salary EmpsSalary(string ID)
		{
			T_Salary tt = new T_Salary();
			List<T_Salary> Quary = (
				from er in this.T_Salaries
				where er.SalaryID == ID
				select er).ToList<T_Salary>();
			if (Quary.Count<T_Salary>() > 0)
			{
				tt = Quary.First<T_Salary>();
			}
			return tt;
		}
		public void EmptyRom(int _Rm)
		{
			T_Rom q = this.StockRoom(_Rm);
			q.ch = new int?(0);
			q.state = new int?(2);
			q.perno = null;
			q.gropno = new int?(0);
			q.price = new double?(0);
			q.hed = new int?(0);
			q.tax = new int?(0);
			q.ser = new int?(0);
			q.dt = "";
			q.tm = "";
			base.Log = VarGeneral.DebugLog;
			this.SubmitChanges(ConflictMode.ContinueOnConflict);
		}
		public T_EqarNatural EqarNaturalEmp(int ID)
		{
			T_EqarNatural tt = new T_EqarNatural();
			IQueryable<T_EqarNatural> Quary =
				from er in this.T_EqarNaturals
				where er.EqarNatural_No == ID
				select er;
			if (Quary.Count<T_EqarNatural>() > 0)
			{
				tt = Quary.First<T_EqarNatural>();
			}
			return tt;
		}
		public T_EqarSale EqarSaleEmp(string ID)
		{
			T_EqarSale tt = new T_EqarSale();
			IQueryable<T_EqarSale> Quary =
				from er in this.T_EqarSales
				where er.EqarSaleNo == ID
				select er;
			if (Quary.Count<T_EqarSale>() > 0)
			{
				tt = Quary.First<T_EqarSale>();
			}
			return tt;
		}
		public T_EqarsData EqarsDataEmp(int ID)
		{
			T_EqarsData tt = new T_EqarsData();
			IQueryable<T_EqarsData> Quary =
				from er in this.T_EqarsDatas
				where er.EqarNo == ID
				select er;
			if (Quary.Count<T_EqarsData>() > 0)
			{
				tt = Quary.First<T_EqarsData>();
			}
			return tt;
		}
		public T_EqarsData EqarsDataEmpID(int ID)
		{
			T_EqarsData tt = new T_EqarsData();
			IQueryable<T_EqarsData> Quary =
				from er in this.T_EqarsDatas
				where er.EqarID == ID
				select er;
			if (Quary.Count<T_EqarsData>() > 0)
			{
				tt = Quary.First<T_EqarsData>();
			}
			return tt;
		}
		public T_EqarTyp EqarTypEmp(int ID)
		{
			T_EqarTyp tt = new T_EqarTyp();
			IQueryable<T_EqarTyp> Quary =
				from er in this.T_EqarTyps
				where er.EqarTyp_No == ID
				select er;
			if (Quary.Count<T_EqarTyp>() > 0)
			{
				tt = Quary.First<T_EqarTyp>();
			}
			return tt;
		}
		public IQueryable<T_AccCat> FillAccCat_2(string key)
		{
			IQueryable<T_AccCat> tAccCats;
			tAccCats = (!(key == "") ?
				from br in this.T_AccCats
				where br.AccCat_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.AccCat_No
				select br :
				from br in this.T_AccCats
				orderby br.AccCat_No
				select br);
			return tAccCats;
		}
		public IQueryable<T_AccDef> FillAccDef_2(string key)
		{
			if (key == "")
			{
			}
			IQueryable<T_AccDef> tAccDefs =
				from br in this.T_AccDefs
				where br.AccDef_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key) || br.City.Contains(key) || br.Balance.ToString().StartsWith(key) || br.City.Contains(key)
				orderby br.AccDef_No
				select br;
			return tAccDefs;
		}
		public IQueryable<T_AccDef> FillAccDef_2(string key, int lev, int accCat)
		{
			IQueryable<T_AccDef> tAccDefs;
			tAccDefs = (!(key == "") ?
				from br in this.T_AccDefs
				where br.Lev == (int?)lev && br.AccCat == (int?)accCat
				where br.AccDef_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key) || br.Credit.ToString().StartsWith(key) || br.Debit.ToString().StartsWith(key) || br.City.Contains(key) || br.Adders.ToString().Contains(key) || br.Balance.Value.ToString().StartsWith(key)
				orderby br.AccDef_No
				select br :
				from br in this.T_AccDefs
				where br.Lev == (int?)lev && br.AccCat == (int?)accCat
				orderby br.AccDef_No
				select br);
			return tAccDefs;
		}
		public IQueryable<T_AccDef> FillAccDefwithLev_2(int accCat_, int lv)
		{
			IQueryable<T_AccDef> q =
				from br in this.T_AccDefs
				orderby br.AccDef_No
				where br.AccCat == (int?)accCat_
				where br.Lev == (int?)lv
				select br;
			return q;
		}
		public IQueryable<T_Add> FillADD_2(string key)
		{
			IQueryable<T_Add> tAdds;
			tAdds = (!(key == "") ?
				from br in this.T_Adds
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key) || br.warnDate.StartsWith(key) || br.SalDate.StartsWith(key)
				orderby br.warnNo
				select br :
				from br in this.T_Adds
				orderby br.warnNo
				select br);
			return tAdds;
		}
		public IQueryable<T_Advance> FillAdvances_2(string key)
		{
			IQueryable<T_Advance> tAdvances;
			tAdvances = (!(key == "") ?
				from br in this.T_Advances
				where br.Advances_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.ResolutionDate.StartsWith(key) || br.ValueAdvances.Value.ToString().StartsWith(key) || br.TotalPremiums.Value.ToString().StartsWith(key)
				orderby br.Advances_No
				select br :
				from br in this.T_Advances
				orderby br.Advances_No
				select br);
			return tAdvances;
		}
		public IQueryable<T_AinsData> FillAinData_2(string key)
		{
			IQueryable<T_AinsData> tAinsDatas;
			tAinsDatas = (!(key == "") ?
				from br in this.T_AinsDatas
				where br.AinNo.ToString().StartsWith(key) || br.EyeDetail.Contains(key) || br.EyeValue.Value.ToString().StartsWith(key)
				orderby br.AinNo
				select br :
				from br in this.T_AinsDatas
				orderby br.AinNo
				select br);
			return tAinsDatas;
		}
		public IQueryable<T_AinNatural> FillAinNatural_2(string key)
		{
			IQueryable<T_AinNatural> tAinNaturals;
			tAinNaturals = (!(key == "") ?
				from br in this.T_AinNaturals
				where br.AinNatural_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.AinNatural_No
				select br :
				from br in this.T_AinNaturals
				orderby br.AinNatural_No
				select br);
			return tAinNaturals;
		}
		public IQueryable<T_AinTyp> FillAinTyp_2(string key)
		{
			IQueryable<T_AinTyp> tAinTyps;
			tAinTyps = (!(key == "") ?
				from br in this.T_AinTyps
				where br.AinTyp_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.AinTyp_No
				select br :
				from br in this.T_AinTyps
				orderby br.AinTyp_No
				select br);
			return tAinTyps;
		}
		public IQueryable<T_AlarmTenant> FillAlarmTenant_2(string key)
		{
			IQueryable<T_AlarmTenant> tAlarmTenants;
			tAlarmTenants = (!(key == "") ?
				from br in this.T_AlarmTenants
				where br.AlarmTenantNo.ToString().StartsWith(key) || br.AlarmSubject.Contains(key) || br.AlarmDetail.Contains(key) || br.AlarmAdmin.Contains(key)
				orderby br.AlarmTenantNo
				select br :
				from br in this.T_AlarmTenants
				orderby br.AlarmTenantNo
				select br);
			return tAlarmTenants;
		}
		public IQueryable<T_Authorization> FillAuthorization_2(string key)
		{
			IQueryable<T_Authorization> tAuthorizations;
			tAuthorizations = (!(key == "") ?
				from br in this.T_Authorizations
				where br.Authorization_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.Date.StartsWith(key) || br.BackTime.StartsWith(key) || br.ExitTime.StartsWith(key)
				orderby br.Authorization_No
				select br :
				from br in this.T_Authorizations
				orderby br.Authorization_No
				select br);
			return tAuthorizations;
		}
		public IQueryable<T_Bank> FillBank_2(string key)
		{
			IQueryable<T_Bank> tBanks;
			tBanks = (!(key == "") ?
				from br in this.T_Banks
				where br.Bank_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.Cod.StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Bank_No
				select br :
				from br in this.T_Banks
				orderby br.Bank_No
				select br);
			return tBanks;
		}
		public IQueryable<T_BankPeaper> FillBankPeaper_2(int vtype, string key, int Sts)
		{
			IQueryable<T_BankPeaper> tBankPeapers;
			tBankPeapers = (!(key == "") ?
				from er in this.T_BankPeapers
				where er.IfDel == (int?)0
				where (Sts == 3 ? true : er.PayState.Value == Sts)
				where er.ID.ToString().StartsWith(key) || er.PageNo.Contains(key) || er.PageDate.Contains(key) || er.PageDatePay.Contains(key) || er.BankAcc.ToString().StartsWith(key) || er.BranchAcc.ToString().StartsWith(key)
				orderby er.ID
				select er :
				from er in this.T_BankPeapers
				where er.IfDel == (int?)0
				where er.gdTyp == (int?)vtype
				where (Sts == 3 ? true : er.PayState.Value == Sts)
				orderby er.ID
				select er);
			return tBankPeapers;
		}
		public IQueryable<T_BirthPlace> FillBirthPlace_2(string key)
		{
			IQueryable<T_BirthPlace> tBirthPlaces;
			tBirthPlaces = (!(key == "") ?
				from br in this.T_BirthPlaces
				where br.BirthPlaceNo.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.StartsWith(key)
				orderby br.BirthPlaceNo
				select br :
				from br in this.T_BirthPlaces
				orderby br.BirthPlaceNo
				select br);
			return tBirthPlaces;
		}
		public IQueryable<T_BlackList> FillBlackList_2(string key)
		{
			IQueryable<T_BlackList> tBlackLists;
			tBlackLists = (!(key == "") ?
				from br in this.T_BlackLists
				where br.CustNum.ToString().StartsWith(key) || br.CustNam.Contains(key) || br.IdNo.StartsWith(key)
				orderby br.ID
				select br :
				from br in this.T_BlackLists
				orderby br.ID
				select br);
			return tBlackLists;
		}
		public IQueryable<T_Boss> FillBoss_2(string key)
		{
			IQueryable<T_Boss> tBosses;
			tBosses = (!(key == "") ?
				from br in this.T_Bosses
				where br.Boss_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.StartsWith(key)
				orderby br.Boss_No
				select br :
				from br in this.T_Bosses
				orderby br.Boss_No
				select br);
			return tBosses;
		}
		public IQueryable<T_CallPhone> FillCallPhone_2(string key)
		{
			IQueryable<T_CallPhone> tCallPhones;
			tCallPhones = (!(key == "") ?
				from br in this.T_CallPhones
				where br.Phone_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.PhoneDate.StartsWith(key) || br.SalDate.StartsWith(key)
				orderby br.Phone_No
				select br :
				from br in this.T_CallPhones
				orderby br.Phone_No
				select br);
			return tCallPhones;
		}
		public IQueryable<T_Car> FillCars_2(string key)
		{
			IQueryable<T_Car> tCars;
			tCars = (!(key == "") ?
				from br in this.T_Cars
				where br.Car_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.Model.StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key) || br.Color.Contains(key) || br.PlateNo.StartsWith(key)
				orderby br.Car_No
				select br :
				from br in this.T_Cars
				orderby br.Car_No
				select br);
			return tCars;
		}
		public IQueryable<T_CarTyp> FillCarTyp_2(string key)
		{
			IQueryable<T_CarTyp> tCarTyps;
			tCarTyps = (!(key == "") ?
				from br in this.T_CarTyps
				where br.CarTyp_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.CarTyp_No
				select br :
				from br in this.T_CarTyps
				orderby br.CarTyp_No
				select br);
			return tCarTyps;
		}
		public IQueryable<T_CATEGORY> FillCat_2(string key)
		{
			IQueryable<T_CATEGORY> tCATEGORies;
			tCATEGORies = (!(key == "") ?
				from br in this.T_CATEGORies
				where br.CAT_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.CAT_No
				select br :
				from br in this.T_CATEGORies
				orderby br.CAT_No
				select br);
			return tCATEGORies;
		}
		public IQueryable<T_City> FillCity_2(string key)
		{
			IQueryable<T_City> tCities;
			tCities = (!(key == "") ?
				from br in this.T_Cities
				where br.City_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.City_No
				select br :
				from br in this.T_Cities
				orderby br.City_No
				select br);
			return tCities;
		}
		public IQueryable<T_Commentary> FillCommentary_2(string key)
		{
			IQueryable<T_Commentary> tCommentaries;
			tCommentaries = (!(key == "") ?
				from br in this.T_Commentaries
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key) || br.warnDate.StartsWith(key) || br.SalDate.StartsWith(key)
				orderby br.warnNo
				select br :
				from br in this.T_Commentaries
				orderby br.warnNo
				select br);
			return tCommentaries;
		}
		public IQueryable<T_Contract> FillContract_2(string key)
		{
			IQueryable<T_Contract> tContracts;
			tContracts = (!(key == "") ?
				from br in this.T_Contracts
				where br.Contract_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Contract_No
				select br :
				from br in this.T_Contracts
				orderby br.Contract_No
				select br);
			return tContracts;
		}
		public IQueryable<T_CstTbl> FillCst_2(string key)
		{
			IQueryable<T_CstTbl> tCstTbls;
			tCstTbls = (!(key == "") ?
				from br in this.T_CstTbls
				where br.Cst_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.Cst_No
				select br :
				from br in this.T_CstTbls
				orderby br.Cst_No
				select br);
			return tCstTbls;
		}
		public IQueryable<T_Curency> Fillcurency_2(string key)
		{
			IQueryable<T_Curency> tCurencies;
			tCurencies = (!(key == "") ?
				from br in this.T_Curencies
				where br.Curency_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key) || br.Rate.ToString().StartsWith(key) || br.Symbol.Contains(key)
				orderby br.Curency_No
				select br :
				from br in this.T_Curencies
				orderby br.Curency_No
				select br);
			return tCurencies;
		}
		public IQueryable<T_Dept> FillDept_2(string key)
		{
			IQueryable<T_Dept> tDepts;
			tDepts = (!(key == "") ?
				from br in this.T_Depts
				where br.Dept_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Dept_No
				select br :
				from br in this.T_Depts
				orderby br.Dept_No
				select br);
			return tDepts;
		}
		public IQueryable<T_Chauffeur> FillDriv_2(string key)
		{
			IQueryable<T_Chauffeur> tChauffeurs;
			tChauffeurs = (!(key == "") ?
				from br in this.T_Chauffeurs
				where br.chauffeur_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.chauffeur_No
				select br :
				from br in this.T_Chauffeurs
				orderby br.chauffeur_No
				select br);
			return tChauffeurs;
		}
		public IQueryable<T_Emp> FillEmps_2(string key)
		{
			IQueryable<T_Emp> tEmps;
			tEmps = (!(key == "") ?
				from br in this.T_Emps
				where br.EmpState == (bool?)true && br.Emp_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Emp_No
				select br :
				from br in this.T_Emps
				where br.EmpState == (bool?)true
				orderby br.Emp_No
				select br);
			return tEmps;
		}
		public IQueryable<T_Emp> FillEmps_3(int vBr)
		{
			IQueryable<T_Emp> tEmps =
				from br in this.T_Emps
				where br.EmpState == (bool?)true
				orderby br.Emp_No
				select br;
			return tEmps;
		}
		public IQueryable<T_Emp> FillEmpsOff_2(string key)
		{
			IQueryable<T_Emp> tEmps;
			tEmps = (!(key == "") ?
				from br in this.T_Emps
				where br.EmpState == (bool?)false && br.Emp_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Emp_No
				select br :
				from br in this.T_Emps
				where br.EmpState == (bool?)false
				orderby br.Emp_No
				select br);
			return tEmps;
		}
		public IQueryable<T_EndService> FillEndService_2(string key)
		{
			IQueryable<T_EndService> tEndServices =
				from br in this.T_EndServices
				orderby br.warnNo
				select br;
			return tEndServices;
		}
		public IQueryable<T_EqarsData> FillEqarData_2(string key)
		{
			IQueryable<T_EqarsData> tEqarsDatas;
			tEqarsDatas = (!(key == "") ?
				from br in this.T_EqarsDatas
				where br.EqarNo.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.EqarNo
				select br :
				from br in this.T_EqarsDatas
				orderby br.EqarNo
				select br);
			return tEqarsDatas;
		}
		public IQueryable<T_EqarNatural> FillEqarNatural_2(string key)
		{
			IQueryable<T_EqarNatural> tEqarNaturals;
			tEqarNaturals = (!(key == "") ?
				from br in this.T_EqarNaturals
				where br.EqarNatural_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.EqarNatural_No
				select br :
				from br in this.T_EqarNaturals
				orderby br.EqarNatural_No
				select br);
			return tEqarNaturals;
		}
		public IQueryable<T_EqarSale> FillEqarSale_2(string key)
		{
			IQueryable<T_EqarSale> tEqarSales;
			tEqarSales = (!(key == "") ?
				from br in this.T_EqarSales
				where br.EqarSaleNo.ToString().StartsWith(key) || br.T_EqarsData.NameA.Contains(key) || br.T_EqarsData.EqarNo.ToString().StartsWith(key) || br.T_EqarsData.NameE.Contains(key) || br.T_AinsData.AinNo.StartsWith(key) || br.Note.Contains(key)
				orderby br.EqarSaleNo
				select br :
				from br in this.T_EqarSales
				orderby br.EqarSaleNo
				select br);
			return tEqarSales;
		}
		public IQueryable<T_EqarsData> FillEqarsData_2(string key)
		{
			IQueryable<T_EqarsData> tEqarsDatas;
			tEqarsDatas = (!(key == "") ?
				from br in this.T_EqarsDatas
				where br.EqarNo.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.EqarNo
				select br :
				from br in this.T_EqarsDatas
				orderby br.EqarNo
				select br);
			return tEqarsDatas;
		}
		public IQueryable<T_EqarTyp> FillEqarTyp_2(string key)
		{
			IQueryable<T_EqarTyp> tEqarTyps;
			tEqarTyps = (!(key == "") ?
				from br in this.T_EqarTyps
				where br.EqarTyp_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.EqarTyp_No
				select br :
				from br in this.T_EqarTyps
				orderby br.EqarTyp_No
				select br);
			return tEqarTyps;
		}
		public IQueryable<T_GDDET> FillGDDET_2(int invType, string key, int ID)
		{
			IQueryable<T_GDDET> tGDDETs;
			tGDDETs = (!(key == "") ?
				from br in this.T_GDDETs
				where br.T_GDHEAD.gdTyp == (int?)invType
				where br.gdID == (int?)ID
				orderby br.gdNo
				select br :
				from br in this.T_GDDETs
				where br.T_GDHEAD.gdTyp == (int?)invType
				where br.gdID == (int?)ID
				orderby br.gdNo
				select br);
			return tGDDETs;
		}
		public IQueryable<T_GDHEAD> FillGDHEAD_2(int invType, string key)
		{
			IQueryable<T_GDHEAD> tGDHEADs;
			tGDHEADs = (!(key == "") ?
				from br in this.T_GDHEADs
				where br.gdNo.ToString().StartsWith(key) || br.gdHDate.Contains(key) || br.gdGDate.Contains(key) || br.gdUserNam.Contains(key) || br.gdMem.Contains(key)
				where !br.gdLok
				orderby br.gdNo
				select br :
				from br in this.T_GDHEADs
				where br.gdTyp == (int?)invType
				where !br.gdLok
				orderby br.gdNo
				select br);
			return tGDHEADs;
		}
		public IQueryable<T_GDHEAD> FillGDHEAD_3(int invType, string key)
		{
			IQueryable<T_GDHEAD> tGDHEADs;
			tGDHEADs = (!(key == "") ?
				from br in this.T_GDHEADs
				where br.gdNo.ToString().StartsWith(key) || br.gdHDate.Contains(key) || br.gdGDate.Contains(key) || br.gdUserNam.Contains(key) || br.gdMem.Contains(key)
				where !br.gdLok
				where br.salMonth != "OpenGD"
				orderby br.gdNo
				select br :
				from br in this.T_GDHEADs
				where br.gdTyp == (int?)invType
				where !br.gdLok
				where br.salMonth != "OpenGD"
				orderby br.gdNo
				select br);
			return tGDHEADs;
		}
		public IQueryable<T_GDHEAD> FillGDHEADEmpRelay_3(int invType, string key)
		{
			IQueryable<T_GDHEAD> tGDHEADs;
			tGDHEADs = (!(key == "") ?
				from br in this.T_GDHEADs
				where br.gdNo.ToString().StartsWith(key) || br.gdHDate.Contains(key) || br.gdGDate.Contains(key) || br.gdUserNam.Contains(key) || br.gdMem.Contains(key)
				where !br.gdLok
				where br.ChekNo == VarGeneral.EmpGaidTyp
				orderby br.gdNo
				select br :
				from br in this.T_GDHEADs
				where br.gdTyp == (int?)invType
				where !br.gdLok
				where br.ChekNo == VarGeneral.EmpGaidTyp
				orderby br.gdNo
				select br);
			return tGDHEADs;
		}
		public IQueryable<T_GDHEAD> FillGDHEADToLeave_2(int invType, string key)
		{
			IQueryable<T_GDHEAD> tGDHEADs;
			tGDHEADs = (!(key == "") ?
				from br in this.T_GDHEADs
				where br.gdNo.ToString().StartsWith(key) || br.gdHDate.Contains(key) || br.gdGDate.Contains(key) || br.gdUserNam.Contains(key) || br.gdMem.Contains(key)
				where !br.gdLok
				where br.ChekNo == "GuestLeave"
				orderby br.gdNo
				select br :
				from br in this.T_GDHEADs
				where br.gdTyp == (int?)invType
				where !br.gdLok
				where br.ChekNo == "GuestLeave"
				orderby br.gdNo
				select br);
			return tGDHEADs;
		}
		public IQueryable<T_Guarantor> FillGuarantor_2(string key)
		{
			IQueryable<T_Guarantor> tGuarantors;
			tGuarantors = (!(key == "") ?
				from br in this.T_Guarantors
				where br.Guarantor_No.ToString().StartsWith(key) || br.Address.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key) || br.CodPc.StartsWith(key) || br.Mobil.StartsWith(key) || br.Tel.StartsWith(key)
				orderby br.Guarantor_No
				select br :
				from br in this.T_Guarantors
				orderby br.Guarantor_No
				select br);
			return tGuarantors;
		}
		public IQueryable<T_IDType> FillIDType_2(string key)
		{
			IQueryable<T_IDType> tIDTypes;
			tIDTypes = (!(key == "") ?
				from br in this.T_IDTypes
				where br.IDType_ID.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.IDType_ID
				select br :
				from br in this.T_IDTypes
				orderby br.IDType_ID
				select br);
			return tIDTypes;
		}
		public IQueryable<T_Insurance> FillInsurance_2(string key)
		{
			IQueryable<T_Insurance> tInsurances;
			tInsurances = (!(key == "") ?
				from br in this.T_Insurances
				where br.Insurance_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Insurance_No
				select br :
				from br in this.T_Insurances
				orderby br.Insurance_No
				select br);
			return tInsurances;
		}
		public IQueryable<T_INVDET> FillInvDet_2(int invType, string key, int ID)
		{
			IQueryable<T_INVDET> tINVDETs;
			tINVDETs = (!(key == "") ?
				from br in this.T_INVDETs
				where br.T_INVHED.InvTyp == (int?)invType
				where br.InvId == (int?)ID
				orderby br.InvNo
				select br :
				from br in this.T_INVDETs
				where br.T_INVHED.InvTyp == (int?)invType
				where br.InvId == (int?)ID
				orderby br.InvNo
				select br);
			return tINVDETs;
		}
		public IQueryable<T_InvDetNote> FillInvDetNote_2(string key)
		{
			IQueryable<T_InvDetNote> tInvDetNotes;
			tInvDetNotes = (!(key == "") ?
				from br in this.T_InvDetNotes
				where br.InvDetNote_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.InvDetNote_No
				select br :
				from br in this.T_InvDetNotes
				orderby br.InvDetNote_No
				select br);
			return tInvDetNotes;
		}
		public IQueryable<T_INVHED> FillInvHead_2(int invType, string key)
		{
			IQueryable<T_INVHED> tINVHEDs;
			if (!(key == ""))
			{
				tINVHEDs =
					from br in this.T_INVHEDs
					where br.InvNo.ToString().StartsWith(key) || br.HDat.Contains(key) || br.GDat.Contains(key) || br.CusVenNm.Contains(key) || br.CusVenTel.StartsWith(key) || br.CusVenAdd.Contains(key)
					orderby br.InvHed_ID
					where br.IfDel == (int?)0
					where br.InvTyp == (int?)invType
					select br;
			}
			else
			{
				tINVHEDs =
					from br in this.T_INVHEDs
					where br.InvTyp == (int?)invType
					where br.IfDel == (int?)0
					orderby br.InvHed_ID
					select br;
			}
			return tINVHEDs;
		}
		public IQueryable<T_INVHED> FillInvHead_2(int invType, string key, bool sts, int _lang)
		{
			int i;
			IQueryable<T_INVHED> tINVHEDs;
			int? type;
			object obj;
			object obj1;
			if (!(key == ""))
			{
				IQueryable<T_INVHED> Query =
					from br in this.T_INVHEDs
					where br.InvNo.ToString().StartsWith(key) || br.HDat.Contains(key) || br.GDat.Contains(key) || br.CusVenNm.Contains(key) || br.CusVenTel.StartsWith(key) || br.CusVenAdd.Contains(key) || (_lang == 0 ? br.T_Room.T_Waiter.Arb_Des.Contains(key) : br.T_Room.T_Waiter.Arb_Des.Contains(key)) || br.RoomNo.Value.ToString().StartsWith(key)
					orderby br.InvHed_ID
					where br.IfDel == (int?)0
					where br.AdminLock.Value == sts
					where br.InvTyp == (int?)21
					select br;
				for (i = 0; i < Query.ToList<T_INVHED>().Count; i++)
				{
					Query.ToList<T_INVHED>()[i].ArbTaf = (_lang == 0 ? Query.ToList<T_INVHED>()[i].T_Room.T_Waiter.Arb_Des : Query.ToList<T_INVHED>()[i].T_Room.T_Waiter.Eng_Des);
					T_INVHED item = Query.ToList<T_INVHED>()[i];
					object romeNo = Query.ToList<T_INVHED>()[i].T_Room.RomeNo;
					type = Query.ToList<T_INVHED>()[i].T_Room.Type;
					if ((type.GetValueOrDefault() != 1 ? false : type.HasValue))
					{
						obj = (_lang == 0 ? "طاولات العوائل" : "Families Tables");
					}
					else
					{
						type = Query.ToList<T_INVHED>()[i].T_Room.Type;
						if ((type.GetValueOrDefault() != 2 ? false : type.HasValue))
						{
							obj = (_lang == 0 ? "طاولات الشباب" : "Boys Tables");
						}
						else
						{
							type = Query.ToList<T_INVHED>()[i].T_Room.Type;
							if ((type.GetValueOrDefault() != 3 ? false : type.HasValue))
							{
								obj = (_lang == 0 ? "طاولات خارجية" : "Extrnal Tables");
							}
							else
							{
								obj = (_lang == 0 ? "طاولات أخرى" : "Other Tables");
							}
						}
					}
					item.EngTaf = string.Concat(romeNo, " || ", obj);
				}
				tINVHEDs = Query;
			}
			else
			{
				IOrderedQueryable<T_INVHED> QueryPlus =
					from br in this.T_INVHEDs
					where br.InvTyp == (int?)21
					where br.IfDel == (int?)0
					where br.AdminLock.Value == sts
					where br.RoomNo.HasValue
					where br.T_Room.waiterNo.HasValue
					orderby br.InvHed_ID
					select br;
				for (i = 0; i < QueryPlus.ToList<T_INVHED>().Count; i++)
				{
					QueryPlus.ToList<T_INVHED>()[i].ArbTaf = (_lang == 0 ? QueryPlus.ToList<T_INVHED>()[i].T_Room.T_Waiter.Arb_Des : QueryPlus.ToList<T_INVHED>()[i].T_Room.T_Waiter.Eng_Des);
					T_INVHED tINVHED = QueryPlus.ToList<T_INVHED>()[i];
					object romeNo1 = QueryPlus.ToList<T_INVHED>()[i].T_Room.RomeNo;
					type = QueryPlus.ToList<T_INVHED>()[i].T_Room.Type;
					if ((type.GetValueOrDefault() != 1 ? false : type.HasValue))
					{
						obj1 = (_lang == 0 ? "طاولات العوائل" : "Families Tables");
					}
					else
					{
						type = QueryPlus.ToList<T_INVHED>()[i].T_Room.Type;
						if ((type.GetValueOrDefault() != 2 ? false : type.HasValue))
						{
							obj1 = (_lang == 0 ? "طاولات الشباب" : "Boys Tables");
						}
						else
						{
							type = QueryPlus.ToList<T_INVHED>()[i].T_Room.Type;
							if ((type.GetValueOrDefault() != 3 ? false : type.HasValue))
							{
								obj1 = (_lang == 0 ? "طاولات خارجية" : "Extrnal Tables");
							}
							else
							{
								obj1 = (_lang == 0 ? "طاولات أخرى" : "Other Tables");
							}
						}
					}
					tINVHED.EngTaf = string.Concat(romeNo1, " || ", obj1);
				}
				tINVHEDs = QueryPlus;
			}
			return tINVHEDs;
		}
		public IQueryable<T_INVHED> FillInvHead_3()
		{
			IQueryable<T_INVHED> tINVHEDs =
				from br in this.T_INVHEDs
				where br.IfDel == (int?)0
				orderby br.InvHed_ID
				select br;
			return tINVHEDs;
		}
		public IQueryable<T_Offer> FillInvOffer_2(int invtype, string key)
		{
			IQueryable<T_Offer> tOffers;
			tOffers = (!(key == "") ?
				from br in this.T_Offers
				where br.OfferHeadNo.ToString().StartsWith(key) || br.StartDat.Contains(key) || br.EndDat.Contains(key) || br.OfferHeadName.Contains(key) || br.OfferRemark.Contains(key)
				orderby br.OfferHeadID
				where br.OfferHeadTyp == (int?)invtype
				select br :
				from br in this.T_Offers
				orderby br.OfferHeadID
				where br.OfferHeadTyp == (int?)invtype
				select br);
			return tOffers;
		}
		public IQueryable<T_Item> FillItem_2(string key)
		{
			IQueryable<T_Item> tItems;
			tItems = (!(key == "") ?
				from br in this.T_Items
				where br.Itm_No.StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.Itm_No
				select br :
				from br in this.T_Items
				orderby br.Itm_No
				select br);
			return tItems;
		}
		public IQueryable<T_Item> FillItemBarCode_2(string key)
		{
			IQueryable<T_Item> tItems =
				from br in this.T_Items
				orderby br.Itm_No
				where (br.BarCod1 == key) || (br.BarCod2 == key) || (br.BarCod3 == key) || (br.BarCod4 == key) || (br.BarCod5 == key)
				select br;
			return tItems;
		}
		public IQueryable<T_Item> FillItemBarCodeAcc_2(string key, int acc)
		{
			IQueryable<T_Item> tItems =
				from br in this.T_Items
				orderby br.Itm_No
				where (br.BarCod1 == key) || (br.BarCod2 == key) || (br.BarCod3 == key) || (br.BarCod4 == key) || (br.BarCod5 == key)
				where br.DefultVendor == (int?)acc
				select br;
			return tItems;
		}
		public IQueryable<T_ItemSerial> FillItemSerial_2(string key)
		{
			IQueryable<T_ItemSerial> tItemSerials;
			tItemSerials = (!(key == "") ?
				from br in this.T_ItemSerials
				where br.SerialKey.ToString().StartsWith(key) || br.ItmNo.Contains(key)
				orderby br.id
				select br :
				from br in this.T_ItemSerials
				orderby br.id
				select br);
			return tItemSerials;
		}
		public IQueryable<T_Job> FillJob_2(string key)
		{
			IQueryable<T_Job> tJobs;
			tJobs = (!(key == "") ?
				from br in this.T_Jobs
				where br.Job_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Job_No
				select br :
				from br in this.T_Jobs
				orderby br.Job_No
				select br);
			return tJobs;
		}
		public IQueryable<T_LiquidationTyp> FillLiquidation_2(string key)
		{
			IQueryable<T_LiquidationTyp> tLiquidationTyps;
			tLiquidationTyps = (!(key == "") ?
				from br in this.T_LiquidationTyps
				where br.LiquidationT_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.LiquidationT_No
				select br :
				from br in this.T_LiquidationTyps
				orderby br.LiquidationT_No
				select br);
			return tLiquidationTyps;
		}
		public IQueryable<T_Loc> FillLoc_2(string key)
		{
			IQueryable<T_Loc> tLocs;
			tLocs = (!(key == "") ?
				from br in this.T_Locs
				where br.Loc_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.Loc_No
				select br :
				from br in this.T_Locs
				orderby br.Loc_No
				select br);
			return tLocs;
		}
		public IQueryable<T_Mndob> FillMndob_2(string key)
		{
			IQueryable<T_Mndob> tMndobs;
			tMndobs = (!(key == "") ?
				from br in this.T_Mndobs
				where br.Mnd_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.Mnd_No
				select br :
				from br in this.T_Mndobs
				orderby br.Mnd_No
				select br);
			return tMndobs;
		}
		public IQueryable<T_Nationality> FillNation_2(string key)
		{
			IQueryable<T_Nationality> tNationalities;
			tNationalities = (!(key == "") ?
				from br in this.T_Nationalities
				where br.Nation_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Nation_No
				select br :
				from br in this.T_Nationalities
				orderby br.Nation_No
				select br);
			return tNationalities;
		}
		public IQueryable<T_SalaryOp> FillOpSalaryEmployee_2(string key)
		{
			IQueryable<T_SalaryOp> tSalaryOps;
			tSalaryOps = (!(key == "") ?
				from br in this.T_SalaryOps
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key)
				orderby br.warnNo
				select br :
				from br in this.T_SalaryOps
				orderby br.warnNo
				select br);
			return tSalaryOps;
		}
		public IQueryable<T_Owner> FillOwner_2(string key)
		{
			IQueryable<T_Owner> tOwners;
			tOwners = (!(key == "") ?
				from br in this.T_Owners
				where br.Owner_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Owner_No
				select br :
				from br in this.T_Owners
				orderby br.Owner_No
				select br);
			return tOwners;
		}
		public IQueryable<T_PatientCout> FillPatientCout_2(string key)
		{
			IQueryable<T_PatientCout> tPatientCouts;
			tPatientCouts = (!(key == "") ?
				from br in this.T_PatientCouts
				where br.ItmNo.ToString().StartsWith(key) || br.T_Item.Arb_Des.Contains(key) || br.T_Item.Eng_Des.Contains(key)
				orderby br.ItmNo
				select br :
				from br in this.T_PatientCouts
				orderby br.ItmNo
				select br);
			return tPatientCouts;
		}
		public IQueryable<T_per> FillPer_2(string key)
		{
			IQueryable<T_per> tPers;
			tPers = (!(key == "") ?
				from br in this.T_pers
				where br.perno.ToString().StartsWith(key) || br.nm.Contains(key)
				where br.ch == (int?)2
				orderby br.perno
				select br :
				from br in this.T_pers
				where br.ch == (int?)2
				orderby br.perno
				select br);
			return tPers;
		}
		public IQueryable<T_Project> FillPRoject_2(string key)
		{
			IQueryable<T_Project> tProjects;
			tProjects = (!(key == "") ?
				from br in this.T_Projects
				where br.Project_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Project_No
				select br :
				from br in this.T_Projects
				orderby br.Project_No
				select br);
			return tProjects;
		}
		public IQueryable<T_Religion> FillReligion_2(string key)
		{
			IQueryable<T_Religion> tReligions;
			tReligions = (!(key == "") ?
				from br in this.T_Religions
				where br.Religion_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Religion_No
				select br :
				from br in this.T_Religions
				orderby br.Religion_No
				select br);
			return tReligions;
		}
		public IQueryable<T_Reserv> FillReserv_2(string key)
		{
			IQueryable<T_Reserv> tReservs;
			tReservs = (!(key == "") ?
				from br in this.T_Reservs
				where br.ResrvNo.ToString().StartsWith(key) || br.PerNm.Contains(key) || br.Rom.ToString().StartsWith(key)
				orderby br.ResrvNo
				select br :
				from br in this.T_Reservs
				orderby br.ResrvNo
				select br);
			return tReservs;
		}
		public IQueryable<T_Reward> FillReward_2(string key)
		{
			IQueryable<T_Reward> tRewards;
			tRewards = (!(key == "") ?
				from br in this.T_Rewards
				where br.Reward_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.RewardDate.StartsWith(key) || br.SalDate.StartsWith(key)
				orderby br.Reward_No
				select br :
				from br in this.T_Rewards
				orderby br.Reward_No
				select br);
			return tRewards;
		}
		public IQueryable<T_Rom> FillRoom_2(string key)
		{
			IQueryable<T_Rom> tRoms;
			tRoms = (!(key == "") ?
				from br in this.T_Roms
				where br.romno.ToString().StartsWith(key) || br.flore.ToString().StartsWith(key) || br.wcno.ToString().StartsWith(key) || br.pri0.ToString().StartsWith(key) || br.pri1.ToString().StartsWith(key) || br.priM0.ToString().StartsWith(key) || br.priM1.ToString().StartsWith(key) || br.bedno.ToString().StartsWith(key) || br.ShortDsc.Contains(key)
				orderby br.romno
				select br :
				from br in this.T_Roms
				orderby br.romno
				select br);
			return tRoms;
		}
		public List<T_Rom> FillRoomWCondition()
		{
			List<T_Rom> list = (
				from t in this.T_Roms
				where t.state.Value != 1
				select t).ToList<T_Rom>();
			return list;
		}
		public IQueryable<T_SalDiscount> FillSalDiscount_2(string key)
		{
			IQueryable<T_SalDiscount> tSalDiscounts;
			tSalDiscounts = (!(key == "") ?
				from br in this.T_SalDiscounts
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key) || br.warnDate.StartsWith(key) || br.SalDate.StartsWith(key)
				orderby br.warnNo
				select br :
				from br in this.T_SalDiscounts
				orderby br.warnNo
				select br);
			return tSalDiscounts;
		}
		public IQueryable<T_Secretariat> FillSecretariat_2(string key)
		{
			IQueryable<T_Secretariat> tSecretariats;
			tSecretariats = (!(key == "") ?
				from br in this.T_Secretariats
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key) || br.StartDate.Contains(key) || br.EndDate.Contains(key)
				orderby br.warnNo
				select br :
				from br in this.T_Secretariats
				orderby br.warnNo
				select br);
			return tSecretariats;
		}
		public IQueryable<T_SecretariatsTyp> FillSecretariatsTyp_2(string key)
		{
			IQueryable<T_SecretariatsTyp> tSecretariatsTyps;
			tSecretariatsTyps = (!(key == "") ?
				from br in this.T_SecretariatsTyps
				where br.SecretariatTyp_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.SecretariatTyp_No
				select br :
				from br in this.T_SecretariatsTyps
				orderby br.SecretariatTyp_No
				select br);
			return tSecretariatsTyps;
		}
		public IQueryable<T_Section> FillSection_2(string key)
		{
			IQueryable<T_Section> tSections;
			tSections = (!(key == "") ?
				from br in this.T_Sections
				where br.Section_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.Section_No
				select br :
				from br in this.T_Sections
				orderby br.Section_No
				select br);
			return tSections;
		}
		public IQueryable<T_sertyp> FillServTyp_2(string key)
		{
			IQueryable<T_sertyp> tSertyps;
			tSertyps = (!(key == "") ?
				from br in this.T_sertyps
				where br.Serv_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.Serv_No
				where br.Serv_No != "0"
				select br :
				from br in this.T_sertyps
				orderby br.Serv_No
				where br.Serv_No != "0"
				select br);
			return tSertyps;
		}
		public IQueryable<T_Snd> FillSnd_2(int sndTyp, string key)
		{
			IQueryable<T_Snd> tSnds;
			if (!(key == ""))
			{
				tSnds =
					from br in this.T_Snds
					where br.fNo.ToString().StartsWith(key) || br.dt.Contains(key) || br.T_per.T_AccDef.Arb_Des.Contains(key) || br.T_per.T_AccDef.Eng_Des.Contains(key) || br.romno.ToString().StartsWith(key) || br.perno.ToString().Contains(key)
					orderby br.fNo
					where br.typ == (int?)sndTyp
					select br;
			}
			else
			{
				tSnds =
					from br in this.T_Snds
					where br.typ == (int?)sndTyp
					orderby br.fNo
					select br;
			}
			return tSnds;
		}
		public IQueryable<T_Store> FillStore_2(string key)
		{
			IQueryable<T_Store> tStores;
			tStores = (!(key == "") ?
				from br in this.T_Stores
				where br.Stor_ID.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key) || br.Tel.ToString().StartsWith(key) || br.Fax.ToString().StartsWith(key) || br.City.Contains(key) || br.Address.ToString().Contains(key)
				orderby br.Stor_ID
				select br :
				from br in this.T_Stores
				orderby br.Stor_ID
				select br);
			return tStores;
		}
		public IQueryable<T_Room> FillTable_2(int vType)
		{
			IQueryable<T_Room> tRooms =
				from br in this.T_Rooms
				where br.Type == (int?)vType
				orderby br.RomeNo
				select br;
			return tRooms;
		}
		public List<T_Room> FillTable_2Bussy(int vType)
		{
			List<T_Room> q = new List<T_Room>();
			try
			{
				object[] objArray = new object[] { "select T_Rooms.* from T_Rooms where T_Rooms.Type = ", vType, " and  T_Rooms.RomeStatus = 1 and T_Rooms.Stop = 0 and T_Rooms.reserved = 0 and T_Rooms.ID IN (select T_INVHED.RoomNo from T_INVHED where T_INVHED.InvTyp = ", VarGeneral.InvTyp, " and RoomNo IS NOT NULL)  order by T_Rooms.RomeNo " };
				q = base.ExecuteQuery<T_Room>(string.Concat(objArray), new object[0]).ToList<T_Room>();
			}
			catch
			{
				q = new List<T_Room>();
			}
			return q;
		}
		public IQueryable<T_Room> FillTableSts_2(int vType)
		{
			IQueryable<T_Room> tRooms =
				from br in this.T_Rooms
				where br.Type == (int?)vType
				where !br.RomeStatus.Value
				where !br.Stop.Value
				where !br.reserved.Value
				orderby br.RomeNo
				select br;
			return tRooms;
		}
		public IQueryable<T_tel> FillTel_2(string key)
		{
			IQueryable<T_tel> tTels;
			tTels = (!(key == "") ?
				from br in this.T_tels
				where br.ID.ToString().StartsWith(key) || br.perno.Value.ToString().StartsWith(key) || br.romno.Value.ToString().StartsWith(key)
				orderby br.ID
				select br :
				from br in this.T_tels
				where br.T_per.ch == (int?)2
				orderby br.ID
				select br);
			return tTels;
		}
		public IQueryable<T_tel> FillTelToLeave_2(string key)
		{
			IQueryable<T_tel> tTels;
			tTels = (!(key == "") ?
				from br in this.T_tels
				where br.T_per.ch == (int?)3
				where br.ID.ToString().StartsWith(key) || br.perno.Value.ToString().StartsWith(key) || br.romno.Value.ToString().StartsWith(key)
				orderby br.ID
				select br :
				from br in this.T_tels
				where br.T_per.ch == (int?)3
				orderby br.ID
				select br);
			return tTels;
		}
		public IQueryable<T_TenantContract> FillTenantContractData_2(string key)
		{
			IQueryable<T_TenantContract> tTenantContracts;
			tTenantContracts = (!(key == "") ?
				from br in this.T_TenantContracts
				where br.ContractNo.ToString().StartsWith(key)
				orderby br.ContractNo
				select br :
				from br in this.T_TenantContracts
				orderby br.ContractNo
				select br);
			return tTenantContracts;
		}
		public IQueryable<T_Tenant> FillTenantData_2(string key)
		{
			IQueryable<T_Tenant> tTenants;
			tTenants = (!(key == "") ?
				from br in this.T_Tenants
				where br.tenantNo.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.tenantNo
				select br :
				from br in this.T_Tenants
				orderby br.tenantNo
				select br);
			return tTenants;
		}
		public IQueryable<T_TenantPayment> FillTenantPaymentData_2(string key)
		{
			IQueryable<T_TenantPayment> tTenantPayments;
			tTenantPayments = (!(key == "") ?
				from br in this.T_TenantPayments
				where br.PaymentNo.ToString().StartsWith(key)
				orderby br.PaymentNo
				select br :
				from br in this.T_TenantPayments
				orderby br.PaymentNo
				select br);
			return tTenantPayments;
		}
		public IQueryable<T_Ticket> FillTicket_2(string key)
		{
			IQueryable<T_Ticket> tTickets;
			tTickets = (!(key == "") ?
				from br in this.T_Tickets
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key) || br.warnDate.StartsWith(key) || br.TicketCount.Value.ToString().StartsWith(key) || br.TicketValue.Value.ToString().StartsWith(key) || br.AllTicketValue.Value.ToString().StartsWith(key) || br.GoLine.Contains(key)
				orderby br.warnNo
				select br :
				from br in this.T_Tickets
				orderby br.warnNo
				select br);
			return tTickets;
		}
		public IQueryable<TmpTbl> FillTmpTbl_2()
		{
			IQueryable<TmpTbl> tmpTbls =
				from br in this.TmpTbls
				orderby br.AccNo
				select br;
			return tmpTbls;
		}
		public IQueryable<T_tran> Filltran_2(string key)
		{
			IQueryable<T_tran> tTrans;
			tTrans = (!(key == "") ?
				from br in this.T_trans
				where br.T_per.ch == (int?)2
				where br.fat.ToString().StartsWith(key) || br.T_per.nm.Contains(key)
				orderby br.ID
				select br :
				from br in this.T_trans
				where br.T_per.ch == (int?)2
				orderby br.ID
				select br);
			return tTrans;
		}
		public IQueryable<T_TransEmployee> FillTransEmployee_2(string key)
		{
			IQueryable<T_TransEmployee> tTransEmployees;
			tTransEmployees = (!(key == "") ?
				from br in this.T_TransEmployees
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key)
				orderby br.warnNo
				select br :
				from br in this.T_TransEmployees
				orderby br.warnNo
				select br);
			return tTransEmployees;
		}
		public IQueryable<T_tran> FilltranToLeave_2(string key)
		{
			IQueryable<T_tran> tTrans;
			tTrans = (!(key == "") ?
				from br in this.T_trans
				where br.T_per.ch == (int?)3
				where br.fat.ToString().StartsWith(key) || br.T_per.nm.Contains(key)
				orderby br.ID
				select br :
				from br in this.T_trans
				where br.T_per.ch == (int?)3
				orderby br.ID
				select br);
			return tTrans;
		}
		public IQueryable<T_treatment> FillTreatment_2(string key)
		{
			IQueryable<T_treatment> tTreatments;
			tTreatments = (!(key == "") ?
				from br in this.T_treatments
				where br.treatment_No.ToString().StartsWith(key) || br.Note.Contains(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.treatment_No
				select br :
				from br in this.T_treatments
				orderby br.treatment_No
				select br);
			return tTreatments;
		}
		public IQueryable<T_Unit> FillUnit_2(string key)
		{
			IQueryable<T_Unit> tUnits;
			tUnits = (!(key == "") ?
				from br in this.T_Units
				where br.Unit_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.Unit_No
				select br :
				from br in this.T_Units
				orderby br.Unit_No
				select br);
			return tUnits;
		}
		public IQueryable<T_UpdateDoc> FillUpdateDocEmployee_2(string key)
		{
			IQueryable<T_UpdateDoc> tUpdateDocs;
			tUpdateDocs = (!(key == "") ?
				from br in this.T_UpdateDocs
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key)
				orderby br.warnNo
				select br :
				from br in this.T_UpdateDocs
				orderby br.warnNo
				select br);
			return tUpdateDocs;
		}
		public IQueryable<T_Vacation> FillVacation_2(string key)
		{
			IQueryable<T_Vacation> tVacations;
			tVacations = (!(key == "") ?
				from br in this.T_Vacations
				where br.warnNo.ToString().StartsWith(key) || br.Note.Contains(key) || br.warnDate.StartsWith(key) || br.VacCountDay.Value.ToString().StartsWith(key) || br.StartDate.ToString().StartsWith(key) || br.EndDate.ToString().StartsWith(key)
				orderby br.warnNo
				select br :
				from br in this.T_Vacations
				orderby br.warnNo
				select br);
			return tVacations;
		}
		public IQueryable<T_VacTyp> FillVacTyp_2(string key)
		{
			IQueryable<T_VacTyp> tVacTyps;
			tVacTyps = (!(key == "") ?
				from br in this.T_VacTyps
				where br.VacT_No.ToString().StartsWith(key) || br.NameA.Contains(key) || br.NameE.Contains(key)
				orderby br.VacT_No
				select br :
				from br in this.T_VacTyps
				orderby br.VacT_No
				select br);
			return tVacTyps;
		}
		public IQueryable<T_VisaGoBack> FillVisaGoBack_2(string key)
		{
			IQueryable<T_VisaGoBack> tVisaGoBacks;
			tVisaGoBacks = (!(key == "") ?
				from br in this.T_VisaGoBacks
				where br.VisaNo.ToString().StartsWith(key) || br.Note.Contains(key) || br.VisaBeginDate.Contains(key) || br.VisaEndDate.Contains(key)
				orderby br.VisaNo
				select br :
				from br in this.T_VisaGoBacks
				orderby br.VisaNo
				select br);
			return tVisaGoBacks;
		}
		public IQueryable<T_Waiter> FillWaiter_2(string key)
		{
			IQueryable<T_Waiter> tWaiters;
			tWaiters = (!(key == "") ?
				from br in this.T_Waiters
				where br.waiter_No.ToString().StartsWith(key) || br.Arb_Des.Contains(key) || br.Eng_Des.Contains(key)
				orderby br.waiter_No
				select br :
				from br in this.T_Waiters
				orderby br.waiter_No
				select br);
			return tWaiters;
		}
		public T_GdAuto GdAutoStock()
		{
			T_GdAuto tt = new T_GdAuto();
			IQueryable<T_GdAuto> Quary =
				from er in this.T_GdAutos
				select er;
			if (Quary.Count<T_GdAuto>() > 0)
			{
				tt = Quary.First<T_GdAuto>();
			}
			return tt;
		}
		public int Get_Pre(int ID)
		{
			int num;
			List<T_Premium> Quary = (
				from er in this.T_Premiums
				where er.Advances_No == (int?)ID
				select er).ToList<T_Premium>();
			num = (Quary.Count<T_Premium>() <= 0 ? 0 : Quary.Count<T_Premium>());
			return num;
		}
		public string Get_PreDate(int ID)
		{
			IQueryable<T_Premium> Quary =
				from er in this.T_Premiums
				orderby er.PremiumsDate
				where er.Advances_No == (int?)ID && er.IFState == (bool?)false
				select er;
			return Quary.First<T_Premium>().PremiumsDate;
		}
		private T_AttendOperat GetData(string vEmpNo, string vDate, int Day_no, int SFlag)
		{
			List<T_Attend> listEmps = new List<T_Attend>((
				from item in this.T_Attends
				where (item.EmpID == vEmpNo) && item.Day_No == (int?)Day_no
				select item).ToList<T_Attend>());
			this.Data_this_AttendOp = new T_AttendOperat();
			Guid id = Guid.NewGuid();
			this.Data_this_AttendOp.AttendOperat_ID = id.ToString();
			try
			{
				this.Data_this_AttendOp.EmpID = vEmpNo;
			}
			catch
			{
			}
			if ((SFlag == 0 ? false : SFlag != 1))
			{
				this.Data_this_AttendOp.Time1 = "xxx";
			}
			else
			{
				this.Data_this_AttendOp.Time1 = "-----";
			}
			if (!(SFlag == 0 ? false : SFlag != 1))
			{
				this.Data_this_AttendOp.Time2 = "-----";
			}
			else if (listEmps[0].Periods.Value != 2)
			{
				this.Data_this_AttendOp.Time2 = "~~~~";
			}
			else
			{
				this.Data_this_AttendOp.Time2 = "xxx";
			}
			if ((SFlag == 0 ? false : SFlag != 1))
			{
				this.Data_this_AttendOp.LeaveTime = "xxx";
			}
			else
			{
				this.Data_this_AttendOp.LeaveTime = "-----";
			}
			if (!(SFlag == 0 ? false : SFlag != 1))
			{
				this.Data_this_AttendOp.LeaveTime2 = "-----";
			}
			else if (listEmps[0].Periods.Value != 2)
			{
				this.Data_this_AttendOp.LeaveTime2 = "~~~~";
			}
			else
			{
				this.Data_this_AttendOp.LeaveTime2 = "xxx";
			}
			if (SFlag == 0)
			{
				this.Data_this_AttendOp.Note = "راحة";
			}
			else if (SFlag != 1)
			{
				this.Data_this_AttendOp.Note = "غياب";
			}
			else
			{
				this.Data_this_AttendOp.Note = "إجازة";
			}
			try
			{
				this.Data_this_AttendOp.Date = vDate;
			}
			catch
			{
			}
			try
			{
				this.Data_this_AttendOp.Day = new int?(Day_no);
			}
			catch
			{
			}
			try
			{
				this.Data_this_AttendOp.LateTime = new double?(0);
			}
			catch
			{
			}
			this.Data_this_AttendOp.ComeTime = "";
			this.Data_this_AttendOp.Operation = "DONE";
			return this.Data_this_AttendOp;
		}
		public List<T_Sal> GetEmpSal(string vDate)
		{
			List<T_Sal> tt = new List<T_Sal>();
			List<T_Sal> Quary = (
				from t in this.T_Sals
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				select t).ToList<T_Sal>();
			if (Quary.Count<T_Sal>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Sal> GetEmpSal2(string vDate)
		{
			List<T_Sal> tt = new List<T_Sal>();
			List<T_Sal> Quary = (
				from t in this.T_Sals
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				where t.SalaryStatus == (bool?)true
				select t).ToList<T_Sal>();
			if (Quary.Count<T_Sal>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Sal> GetEmpSal3(string vDate)
		{
			List<T_Sal> tt = new List<T_Sal>();
			List<T_Sal> Quary = (
				from t in this.T_Sals
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				where t.SalaryStatus == (bool?)false
				select t).ToList<T_Sal>();
			if (Quary.Count<T_Sal>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Salary> GetEmpSalary(string vDate)
		{
			List<T_Salary> tt = new List<T_Salary>();
			List<T_Salary> Quary = (
				from t in this.T_Salaries
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				select t).ToList<T_Salary>();
			if (Quary.Count<T_Salary>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Salary> GetEmpSalary2(string vDate)
		{
			List<T_Salary> tt = new List<T_Salary>();
			List<T_Salary> Quary = (
				from t in this.T_Salaries
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				where t.SalaryStatus == (bool?)true
				select t).ToList<T_Salary>();
			if (Quary.Count<T_Salary>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Salary> GetEmpSalary3(string vDate)
		{
			List<T_Salary> tt = new List<T_Salary>();
			List<T_Salary> Quary = (
				from t in this.T_Salaries
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				where t.SalaryStatus == (bool?)false
				select t).ToList<T_Salary>();
			if (Quary.Count<T_Salary>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Salary> GetEmpSalaryByEmpNo(string vDate, string _EmpID)
		{
			List<T_Salary> tt = new List<T_Salary>();
			List<T_Salary> Quary = (
				from t in this.T_Salaries
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				where t.EmpID == _EmpID
				where t.SalaryStatus.Value
				select t).ToList<T_Salary>();
			if (Quary.Count<T_Salary>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Salary> GetEmpSalaryWithoutEmpNow(string vDate, string _EmpID)
		{
			List<T_Salary> tt = new List<T_Salary>();
			List<T_Salary> Quary = (
				from t in this.T_Salaries
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2))
				where t.EmpID != _EmpID
				select t).ToList<T_Salary>();
			if (Quary.Count<T_Salary>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public T_Salary GetEmpSalaryWithRqst(string vDate, string ID)
		{
			T_Salary tt = new T_Salary();
			List<T_Salary> Quary = (
				from t in this.T_Salaries
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2)) && (t.EmpID == ID)
				select t).ToList<T_Salary>();
			if (Quary.Count<T_Salary>() > 0)
			{
				tt = Quary.First<T_Salary>();
			}
			return tt;
		}
		public T_Salary GetEmpSalaryWithRqst2(string vDate, string ID)
		{
			T_Salary tt = new T_Salary();
			List<T_Salary> Quary = (
				from t in this.T_Salaries
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2)) && (t.EmpID == ID)
				select t).ToList<T_Salary>();
			if (Quary.Count<T_Salary>() > 0)
			{
				tt = Quary.First<T_Salary>();
			}
			return tt;
		}
		public T_Sal GetEmpSalWithRqst(string vDate, string ID)
		{
			T_Sal tt = new T_Sal();
			List<T_Sal> Quary = (
				from t in this.T_Sals
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2)) && (t.EmpID == ID)
				select t).ToList<T_Sal>();
			if (Quary.Count<T_Sal>() > 0)
			{
				tt = Quary.First<T_Sal>();
			}
			return tt;
		}
		public T_Sal GetEmpSalWithRqst2(string vDate, string ID)
		{
			T_Sal tt = new T_Sal();
			List<T_Sal> Quary = (
				from t in this.T_Sals
				where t.SalYear == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) && t.SalMonth == (int?)int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(5, 2)) && (t.EmpID == ID)
				select t).ToList<T_Sal>();
			if (Quary.Count<T_Sal>() > 0)
			{
				tt = Quary.First<T_Sal>();
			}
			return tt;
		}
		public int GetMaxDayOfMonth(string vDate, bool GetDefault)
		{
			string x;
			int value;
			if (!GetDefault)
			{
				T_DaysOfMonth newdata = this.EmpFirstDayofMonth(vDate);
				if (string.IsNullOrEmpty(newdata.ID))
				{
					goto Label1;
				}
				value = newdata.DaysOfMonth.Value;
				return value;
			}
			Label1:
			bool OldCalendar = true;
			if (int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) >= 1900)
			{
				(new CultureInfo("en-US", false)).DateTimeFormat.Calendar = new GregorianCalendar();
				OldCalendar = false;
			}
			else
			{
				(new CultureInfo("ar-SA", false)).DateTimeFormat.Calendar = new HijriCalendar();
			}
			int D = 28;
			while (true)
			{
				try
				{
					x = (int.Parse(Convert.ToDateTime(vDate).ToString("yyyy/MM/dd").Substring(0, 4)) <= 1900 ? string.Concat(this.n.FormatHijri(vDate, "yyyy/MM"), "/", D) : string.Concat(this.n.FormatGreg(vDate, "yyyy/MM"), "/", D));
				}
				catch
				{
					DateTime dateTime = Convert.ToDateTime(vDate);
					x = string.Concat(dateTime.ToString("yyyy/MM"), "/", D);
				}
				try
				{
					if (Convert.ToDateTime(x).AddDays(1).Day != 1)
					{
						D++;
					}
					else
					{
						if (!OldCalendar)
						{
							(new CultureInfo("en-US", false)).DateTimeFormat.Calendar = new GregorianCalendar();
						}
						else
						{
							(new CultureInfo("ar-SA", false)).DateTimeFormat.Calendar = new HijriCalendar();
						}
						value = D;
						break;
					}
				}
				catch
				{
					value = D - 1;
					break;
				}
			}
			return value;
		}
		public int GetVacDays1(string EmpID, string SalDate)
		{
			int i;
			bool? disSal;
			int? disSalSts;
			double? amount;
			bool value;
			bool flag;
			bool value1;
			bool flag1;
			int TotDays = 0;
			string[] empID = new string[] { "Select * FROM T_Vacation Where T_Vacation.EmpID = '", EmpID, "' AND T_Vacation.AdminLock = 1 And Left(T_Vacation.StartDate,7) <> '", null, null, null, null };
			DateTime dateTime = Convert.ToDateTime(SalDate);
			empID[3] = dateTime.ToString("yyyy/MM");
			empID[4] = "' And Left(T_Vacation.EndDate,7) = '";
			dateTime = Convert.ToDateTime(SalDate);
			empID[5] = dateTime.ToString("yyyy/MM");
			empID[6] = "'";
			string quary1 = string.Concat(empID);
			List<T_Vacation> Quary = base.ExecuteQuery<T_Vacation>(quary1, new object[0]).ToList<T_Vacation>();
			for (i = 0; i < Quary.Count<T_Vacation>(); i++)
			{
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((!disSal.GetValueOrDefault() ? false : disSal.HasValue))
				{
					disSalSts = Quary[i].T_VacTyp.Dis_Sal_Sts;
					if ((disSalSts.GetValueOrDefault() != 0 ? true : !disSalSts.HasValue))
					{
						goto Label1;
					}
					value = false;
					goto Label0;
				}
				Label1:
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((disSal.GetValueOrDefault() ? true : !disSal.HasValue))
				{
					value = true;
				}
				else
				{
					amount = Quary[i].Amount;
					value = amount.Value <= 0;
				}
				Label0:
				if (!value)
				{
					dateTime = Convert.ToDateTime(Quary[i].EndDate);
					TotDays += int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2));
				}
			}
			empID = new string[] { "Select * FROM T_Vacation Where T_Vacation.EmpID = '", EmpID, "' AND T_Vacation.AdminLock = 1 And Left(T_Vacation.StartDate,7) = '", null, null, null, null };
			dateTime = Convert.ToDateTime(SalDate);
			empID[3] = dateTime.ToString("yyyy/MM");
			empID[4] = "' And Left(T_Vacation.EndDate,7)= '";
			dateTime = Convert.ToDateTime(SalDate);
			empID[5] = dateTime.ToString("yyyy/MM");
			empID[6] = "'";
			string quary2 = string.Concat(empID);
			Quary = base.ExecuteQuery<T_Vacation>(quary2, new object[0]).ToList<T_Vacation>();
			for (i = 0; i < Quary.Count<T_Vacation>(); i++)
			{
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((!disSal.GetValueOrDefault() ? false : disSal.HasValue))
				{
					disSalSts = Quary[i].T_VacTyp.Dis_Sal_Sts;
					if ((disSalSts.GetValueOrDefault() != 0 ? true : !disSalSts.HasValue))
					{
						goto Label3;
					}
					flag = false;
					goto Label2;
				}
				Label3:
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((disSal.GetValueOrDefault() ? true : !disSal.HasValue))
				{
					flag = true;
				}
				else
				{
					amount = Quary[i].Amount;
					flag = amount.Value <= 0;
				}
				Label2:
				if (!flag)
				{
					disSalSts = Quary[i].VacCountDay;
					if (!string.IsNullOrEmpty(disSalSts.Value.ToString()))
					{
						disSalSts = Quary[i].VacCountDay;
						TotDays += disSalSts.Value;
					}
				}
			}
			empID = new string[] { "Select * FROM T_Vacation Where T_Vacation.EmpID = '", EmpID, "' AND T_Vacation.AdminLock = 1 And Left(T_Vacation.StartDate,7) = '", null, null, null, null };
			dateTime = Convert.ToDateTime(SalDate);
			empID[3] = dateTime.ToString("yyyy/MM");
			empID[4] = "' And Left(T_Vacation.EndDate,7) <> '";
			dateTime = Convert.ToDateTime(SalDate);
			empID[5] = dateTime.ToString("yyyy/MM");
			empID[6] = "'";
			string quary3 = string.Concat(empID);
			Quary = base.ExecuteQuery<T_Vacation>(quary3, new object[0]).ToList<T_Vacation>();
			for (i = 0; i < Quary.Count<T_Vacation>(); i++)
			{
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((!disSal.GetValueOrDefault() ? false : disSal.HasValue))
				{
					disSalSts = Quary[i].T_VacTyp.Dis_Sal_Sts;
					if ((disSalSts.GetValueOrDefault() != 0 ? true : !disSalSts.HasValue))
					{
						goto Label5;
					}
					value1 = false;
					goto Label4;
				}
				Label5:
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((disSal.GetValueOrDefault() ? true : !disSal.HasValue))
				{
					value1 = true;
				}
				else
				{
					amount = Quary[i].Amount;
					value1 = amount.Value <= 0;
				}
				Label4:
				if (!value1)
				{
					int maxDayOfMonth = this.GetMaxDayOfMonth(SalDate, false);
					dateTime = Convert.ToDateTime(Quary[i].StartDate);
					TotDays = TotDays + (maxDayOfMonth - int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2))) + 1;
				}
			}
			try
			{
				object[] str = new object[] { "Select * FROM T_Vacation Where T_Vacation.EmpID = '", EmpID, "' AND T_Vacation.AdminLock = 1 And T_Vacation.StartDate < '", null, null, null, null, null, null };
				dateTime = Convert.ToDateTime(SalDate);
				str[3] = dateTime.ToString("yyyy/MM/dd");
				str[4] = "' And T_Vacation.EndDate > '";
				dateTime = Convert.ToDateTime(SalDate);
				str[5] = dateTime.ToString("yyyy/MM");
				str[6] = "/";
				str[7] = this.GetMaxDayOfMonth(SalDate, false);
				str[8] = "'";
				string quary4 = string.Concat(str);
				Quary = base.ExecuteQuery<T_Vacation>(quary4, new object[0]).ToList<T_Vacation>();
				for (i = 0; i < Quary.Count<T_Vacation>(); i++)
				{
					disSal = Quary[i].T_VacTyp.Dis_Sal;
					if ((!disSal.GetValueOrDefault() ? false : disSal.HasValue))
					{
						disSalSts = Quary[i].T_VacTyp.Dis_Sal_Sts;
						if ((disSalSts.GetValueOrDefault() != 0 ? true : !disSalSts.HasValue))
						{
							goto Label7;
						}
						flag1 = false;
						goto Label6;
					}
					Label7:
					disSal = Quary[i].T_VacTyp.Dis_Sal;
					if (disSal.Value)
					{
						flag1 = true;
					}
					else
					{
						amount = Quary[i].Amount;
						flag1 = amount.Value <= 0;
					}
					Label6:
					if (!flag1)
					{
						TotDays += this.GetMaxDayOfMonth(SalDate, false);
					}
				}
			}
			catch
			{
			}
			return TotDays;
		}
		public int GetVacDays2(string EmpID, string SalDate)
		{
			int i;
			bool? disSal;
			int? disSalSts;
			double? amount;
			bool value;
			bool flag;
			bool value1;
			bool flag1;
			int TotDays = 0;
			string[] empID = new string[] { "Select * FROM T_Vacation Where T_Vacation.EmpID = '", EmpID, "' AND T_Vacation.AdminLock = 1 And Left(T_Vacation.StartDate,7) <> '", null, null, null, null };
			DateTime dateTime = Convert.ToDateTime(SalDate);
			empID[3] = dateTime.ToString("yyyy/MM");
			empID[4] = "' And Left(T_Vacation.EndDate,7) = '";
			dateTime = Convert.ToDateTime(SalDate);
			empID[5] = dateTime.ToString("yyyy/MM");
			empID[6] = "'";
			string quary1 = string.Concat(empID);
			List<T_Vacation> Quary = base.ExecuteQuery<T_Vacation>(quary1, new object[0]).ToList<T_Vacation>();
			for (i = 0; i < Quary.Count<T_Vacation>(); i++)
			{
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((!disSal.GetValueOrDefault() ? false : disSal.HasValue))
				{
					disSalSts = Quary[i].T_VacTyp.Dis_Sal_Sts;
					if ((disSalSts.GetValueOrDefault() != 1 ? true : !disSalSts.HasValue))
					{
						goto Label1;
					}
					value = false;
					goto Label0;
				}
				Label1:
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((disSal.GetValueOrDefault() ? true : !disSal.HasValue))
				{
					value = true;
				}
				else
				{
					amount = Quary[i].Amount;
					value = amount.Value <= 0;
				}
				Label0:
				if (!value)
				{
					dateTime = Convert.ToDateTime(Quary[i].EndDate);
					TotDays += int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2));
				}
			}
			empID = new string[] { "Select * FROM T_Vacation Where T_Vacation.EmpID = '", EmpID, "' AND T_Vacation.AdminLock = 1 And Left(T_Vacation.StartDate,7) = '", null, null, null, null };
			dateTime = Convert.ToDateTime(SalDate);
			empID[3] = dateTime.ToString("yyyy/MM");
			empID[4] = "' And Left(T_Vacation.EndDate,7)= '";
			dateTime = Convert.ToDateTime(SalDate);
			empID[5] = dateTime.ToString("yyyy/MM");
			empID[6] = "'";
			string quary2 = string.Concat(empID);
			Quary = base.ExecuteQuery<T_Vacation>(quary2, new object[0]).ToList<T_Vacation>();
			for (i = 0; i < Quary.Count<T_Vacation>(); i++)
			{
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((!disSal.GetValueOrDefault() ? false : disSal.HasValue))
				{
					disSalSts = Quary[i].T_VacTyp.Dis_Sal_Sts;
					if ((disSalSts.GetValueOrDefault() != 1 ? true : !disSalSts.HasValue))
					{
						goto Label3;
					}
					flag = false;
					goto Label2;
				}
				Label3:
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((disSal.GetValueOrDefault() ? true : !disSal.HasValue))
				{
					flag = true;
				}
				else
				{
					amount = Quary[i].Amount;
					flag = amount.Value <= 0;
				}
				Label2:
				if (!flag)
				{
					disSalSts = Quary[i].VacCountDay;
					if (!string.IsNullOrEmpty(disSalSts.Value.ToString()))
					{
						disSalSts = Quary[i].VacCountDay;
						TotDays += disSalSts.Value;
					}
				}
			}
			empID = new string[] { "Select * FROM T_Vacation Where T_Vacation.EmpID = '", EmpID, "' AND T_Vacation.AdminLock = 1 And Left(T_Vacation.StartDate,7) = '", null, null, null, null };
			dateTime = Convert.ToDateTime(SalDate);
			empID[3] = dateTime.ToString("yyyy/MM");
			empID[4] = "' And Left(T_Vacation.EndDate,7) <> '";
			dateTime = Convert.ToDateTime(SalDate);
			empID[5] = dateTime.ToString("yyyy/MM");
			empID[6] = "'";
			string quary3 = string.Concat(empID);
			Quary = base.ExecuteQuery<T_Vacation>(quary3, new object[0]).ToList<T_Vacation>();
			for (i = 0; i < Quary.Count<T_Vacation>(); i++)
			{
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((!disSal.GetValueOrDefault() ? false : disSal.HasValue))
				{
					disSalSts = Quary[i].T_VacTyp.Dis_Sal_Sts;
					if ((disSalSts.GetValueOrDefault() != 1 ? true : !disSalSts.HasValue))
					{
						goto Label5;
					}
					value1 = false;
					goto Label4;
				}
				Label5:
				disSal = Quary[i].T_VacTyp.Dis_Sal;
				if ((disSal.GetValueOrDefault() ? true : !disSal.HasValue))
				{
					value1 = true;
				}
				else
				{
					amount = Quary[i].Amount;
					value1 = amount.Value <= 0;
				}
				Label4:
				if (!value1)
				{
					int maxDayOfMonth = this.GetMaxDayOfMonth(SalDate, false);
					dateTime = Convert.ToDateTime(Quary[i].StartDate);
					TotDays = TotDays + (maxDayOfMonth - int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2))) + 1;
				}
			}
			try
			{
				object[] str = new object[] { "Select * FROM T_Vacation Where T_Vacation.EmpID = '", EmpID, "' AND T_Vacation.AdminLock = 1 And T_Vacation.StartDate < '", null, null, null, null, null, null };
				dateTime = Convert.ToDateTime(SalDate);
				str[3] = dateTime.ToString("yyyy/MM/dd");
				str[4] = "' And T_Vacation.EndDate > '";
				dateTime = Convert.ToDateTime(SalDate);
				str[5] = dateTime.ToString("yyyy/MM");
				str[6] = "/";
				str[7] = this.GetMaxDayOfMonth(SalDate, false);
				str[8] = "'";
				string quary4 = string.Concat(str);
				Quary = base.ExecuteQuery<T_Vacation>(quary4, new object[0]).ToList<T_Vacation>();
				for (i = 0; i < Quary.Count<T_Vacation>(); i++)
				{
					disSal = Quary[i].T_VacTyp.Dis_Sal;
					if ((!disSal.GetValueOrDefault() ? false : disSal.HasValue))
					{
						disSalSts = Quary[i].T_VacTyp.Dis_Sal_Sts;
						if ((disSalSts.GetValueOrDefault() != 1 ? true : !disSalSts.HasValue))
						{
							goto Label7;
						}
						flag1 = false;
						goto Label6;
					}
					Label7:
					disSal = Quary[i].T_VacTyp.Dis_Sal;
					if (disSal.Value)
					{
						flag1 = true;
					}
					else
					{
						amount = Quary[i].Amount;
						flag1 = amount.Value <= 0;
					}
					Label6:
					if (!flag1)
					{
						TotDays += this.GetMaxDayOfMonth(SalDate, false);
					}
				}
			}
			catch
			{
			}
			return TotDays;
		}
		public T_Guarantor GuarantorEmp(int ID)
		{
			T_Guarantor tt = new T_Guarantor();
			IQueryable<T_Guarantor> Quary =
				from er in this.T_Guarantors
				where er.Guarantor_No == ID
				select er;
			if (Quary.Count<T_Guarantor>() > 0)
			{
				tt = Quary.First<T_Guarantor>();
			}
			return tt;
		}
		public T_Insurance InsuranceEmp(int ID)
		{
			T_Insurance tt = new T_Insurance();
			IQueryable<T_Insurance> Quary =
				from er in this.T_Insurances
				where er.Insurance_No == ID
				select er;
			if (Quary.Count<T_Insurance>() > 0)
			{
				tt = Quary.First<T_Insurance>();
			}
			return tt;
		}
		public T_Job JobEmp(int ID)
		{
			T_Job tt = new T_Job();
			IQueryable<T_Job> Quary =
				from er in this.T_Jobs
				where er.Job_No == ID
				select er;
			if (Quary.Count<T_Job>() > 0)
			{
				tt = Quary.First<T_Job>();
			}
			return tt;
		}
		public T_LiquidationTyp LiquidationEmp(int ID)
		{
			T_LiquidationTyp tt = new T_LiquidationTyp();
			IQueryable<T_LiquidationTyp> Quary =
				from er in this.T_LiquidationTyps
				where er.LiquidationT_No == ID
				select er;
			if (Quary.Count<T_LiquidationTyp>() > 0)
			{
				tt = Quary.First<T_LiquidationTyp>();
			}
			return tt;
		}
		public T_Nationality NationEmp(int ID)
		{
			T_Nationality tt = new T_Nationality();
			IQueryable<T_Nationality> Quary =
				from er in this.T_Nationalities
				where er.Nation_No == ID
				select er;
			if (Quary.Count<T_Nationality>() > 0)
			{
				tt = Quary.First<T_Nationality>();
			}
			return tt;
		}
		public double OpenAccCredit(string accNo)
		{
			double num;
			T_GDDET tt = new T_GDDET();
			List<T_GDDET> q = (
				from t in this.T_GDDETs
				where t.AccNo == accNo
				where t.T_GDHEAD.salMonth == "OpenGD"
				where t.gdValue < (double?)0
				select t).ToList<T_GDDET>();
			num = (q.Count <= 0 ? 0 : q.Sum<T_GDDET>((T_GDDET g) => g.gdValue.Value));
			return num;
		}
		public double OpenAccDebit(string accNo)
		{
			double num;
			T_GDDET tt = new T_GDDET();
			List<T_GDDET> q = (
				from t in this.T_GDDETs
				where t.AccNo == accNo
				where t.T_GDHEAD.salMonth == "OpenGD"
				where t.gdValue > (double?)0
				select t).ToList<T_GDDET>();
			num = (q.Count <= 0 ? 0 : q.Sum<T_GDDET>((T_GDDET g) => g.gdValue.Value));
			return num;
		}
		public T_SalaryOp OpSalaryEmp(int ID)
		{
			T_SalaryOp tt = new T_SalaryOp();
			IQueryable<T_SalaryOp> Quary =
				from er in this.T_SalaryOps
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_SalaryOp>() > 0)
			{
				tt = Quary.First<T_SalaryOp>();
			}
			return tt;
		}
		public void OpTest(string tmpDate, bool vValue)
		{
			int i;
			SqlException ex;
			double? valuePremiums;
			string str;
			string str1;
			bool OldCalndr = true;
			List<T_SalDiscount> vDisCount = base.ExecuteQuery<T_SalDiscount>(string.Concat("Select * from [T_SalDiscount] where [SalDate] like '", tmpDate, "'"), new object[0]).ToList<T_SalDiscount>();
			for (i = 0; i < vDisCount.Count; i++)
			{
				this.data_this_Discount = new T_SalDiscount();
				this.data_this_Discount = vDisCount[i];
				this.data_this_Discount.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException)
				{
					ex = sqlException;
				}
			}
			List<T_Add> vAdd = base.ExecuteQuery<T_Add>(string.Concat("Select * from [T_Add] where [SalDate] like '", tmpDate, "'"), new object[0]).ToList<T_Add>();
			for (i = 0; i < vAdd.Count; i++)
			{
				this.data_this_Add = new T_Add();
				this.data_this_Add = vAdd[i];
				this.data_this_Add.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException1)
				{
					ex = sqlException1;
				}
			}
			List<T_Premium> list = base.ExecuteQuery<T_Premium>(string.Concat("Select * from [T_Premiums] where [PremiumsDate] like '", tmpDate, "'"), new object[0]).ToList<T_Premium>();
			for (int j = 0; j < list.Count; j++)
			{
				this.data_this_Pre = new T_Premium();
				this.data_this_Pre = list[j];
				this.data_this_Pre.IFState = new bool?(vValue);
				if (!vValue)
				{
					this.data_this_Pre.Paying = new double?(0);
				}
				else
				{
					T_Premium dataThisPre = this.data_this_Pre;
					valuePremiums = list[j].ValuePremiums;
					dataThisPre.Paying = new double?(valuePremiums.Value);
				}
				T_Advance vAdvanc = (
					from t in this.T_Advances
					where (int?)t.Advances_No == list[j].Advances_No
					select t).First<T_Advance>();
				if (!vValue)
				{
					double value = vAdvanc.Remaining.Value;
					valuePremiums = vAdvanc.ValuePremium;
					vAdvanc.Remaining = new double?(value + valuePremiums.Value);
				}
				else
				{
					double num = vAdvanc.Remaining.Value;
					valuePremiums = vAdvanc.ValuePremium;
					vAdvanc.Remaining = new double?(num - valuePremiums.Value);
				}
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException2)
				{
					ex = sqlException2;
				}
			}
			List<T_Reward> vReward = base.ExecuteQuery<T_Reward>(string.Concat("Select * from [T_Rewards] where [SalDate] like '", tmpDate, "'"), new object[0]).ToList<T_Reward>();
			for (i = 0; i < vReward.Count; i++)
			{
				this.data_this_Reward = new T_Reward();
				this.data_this_Reward = vReward[i];
				this.data_this_Reward.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException3)
				{
					ex = sqlException3;
				}
			}
			List<T_CallPhone> vCallPhone = base.ExecuteQuery<T_CallPhone>(string.Concat("Select T_CallPhone.* from T_Emp INNER JOIN T_CallPhone ON T_Emp.Emp_ID = T_CallPhone.EmpID AND T_Emp.Emp_ID = T_CallPhone.EmpID where T_CallPhone.SalDate like '", tmpDate, "'"), new object[0]).ToList<T_CallPhone>();
			for (i = 0; i < vCallPhone.Count; i++)
			{
				this.data_this_CallPhone = new T_CallPhone();
				this.data_this_CallPhone = vCallPhone[i];
				this.data_this_CallPhone.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException4)
				{
					ex = sqlException4;
				}
			}
			List<T_Commentary> vCommentary = base.ExecuteQuery<T_Commentary>(string.Concat("Select T_Commentary.* from T_Emp INNER JOIN T_Commentary ON T_Emp.Emp_ID = T_Commentary.EmpID AND T_Emp.Emp_ID = T_Commentary.EmpID where T_Commentary.SalDate like '", tmpDate, "'"), new object[0]).ToList<T_Commentary>();
			for (i = 0; i < vCommentary.Count; i++)
			{
				this.data_this_Commentary = new T_Commentary();
				this.data_this_Commentary = vCommentary[i];
				this.data_this_Commentary.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException5)
				{
					ex = sqlException5;
				}
			}
			double TicketUse = 0;
			double TicketCount = 0;
			int VacCount = 0;
			List<T_Emp> vEmp = (
				from t in this.T_Emps
				orderby t.Emp_No
				where t.EmpState == (bool?)true
				select t).ToList<T_Emp>();
			for (i = 0; i < vEmp.Count; i++)
			{
				this.data_this_Emp = new T_Emp();
				this.data_this_Emp = vEmp[i];
				TicketUse = base.ExecuteQuery<double>(string.Concat("select dbo.GetTickeUsed('", this.data_this_Emp.Emp_ID, "')"), new object[0]).FirstOrDefault<double>();
				string dateAppointment = this.data_this_Emp.DateAppointment;
				str = (this.n.IsGreg(this.data_this_Emp.DateAppointment) ? VarGeneral.Gdate : VarGeneral.Hdate);
				valuePremiums = this.data_this_Emp.TicketsCount;
				TicketCount = this.TicktAmount(dateAppointment, str, valuePremiums.Value) - TicketUse;
				int VacUse = base.ExecuteQuery<int>(string.Concat("select dbo.GetVacUsed('", this.data_this_Emp.Emp_ID, "')"), new object[0]).FirstOrDefault<int>();
				string dateAppointment1 = this.data_this_Emp.DateAppointment;
				str1 = (this.n.IsGreg(this.data_this_Emp.DateAppointment) ? VarGeneral.Gdate : VarGeneral.Hdate);
				int? vacationCount = this.data_this_Emp.VacationCount;
				VacCount = this.VacAmount(dateAppointment1, str1, vacationCount.Value) - VacUse;
				this.data_this_Emp.VacationBalance = new double?((double)VacCount);
				this.data_this_Emp.TicketsBalance = new double?(TicketCount);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException6)
				{
					ex = sqlException6;
				}
			}
			string[] strArrays = new string[] { "UPDATE [T_Emp] SET T_Emp.StatusSal = 2 FROM [T_Emp] INNER JOIN dbo.T_Vacation ON T_Emp.Emp_ID = T_Vacation.[EmpID] WHERE T_Vacation.IFState = 0 and (((SUBSTRING(T_Vacation.StopSalFrom,1,4) >= 1800 and '", this.n.FormatGreg(VarGeneral.Gdate, "yyyy/MM/dd"), "' >= T_Vacation.StopSalFrom)) OR ((SUBSTRING(T_Vacation.StopSalFrom,1,4) < 1800 and '", this.n.FormatHijri(VarGeneral.Hdate, "yyyy/MM/dd"), "' >= T_Vacation.StopSalFrom ))) AND T_Vacation.StopSalFrom <> '' " };
			base.ExecuteCommand(string.Concat(strArrays), new object[0]);
			List<T_Emp> vCEmp = (
				from t in this.T_Emps
				where t.EmpState == (bool?)true
				where t.AutoReturnContr.Value
				where t.StartContr != ""
				where t.EndContr != ""
				select t).ToList<T_Emp>();
			if (int.Parse(Convert.ToDateTime(tmpDate).ToString("yyyy/MM/dd").Substring(0, 4)) >= 1900)
			{
				(new CultureInfo("en-US", false)).DateTimeFormat.Calendar = new GregorianCalendar();
				OldCalndr = false;
			}
			else
			{
				(new CultureInfo("ar-SA", false)).DateTimeFormat.Calendar = new GregorianCalendar();
			}
			for (i = 0; i < vCEmp.Count; i++)
			{
				this.data_this_Emp = new T_Emp();
				this.data_this_Emp = vEmp[i];
				if (VarGeneral.CheckDate(this.data_this_Emp.EndContr))
				{
					if ((Convert.ToDateTime(this.data_this_Emp.EndContr) < Convert.ToDateTime(VarGeneral.Gdate) ? true : Convert.ToDateTime(this.data_this_Emp.EndContr) < Convert.ToDateTime(VarGeneral.Hdate)))
					{
						int Ind = 0;
						DateTime dateTime = Convert.ToDateTime(vCEmp[i].StartContr);
						string str2 = dateTime.ToString("yyyy/MM/dd");
						dateTime = Convert.ToDateTime(vCEmp[i].EndContr);
						Ind = this.VacAmount(str2, dateTime.ToString("yyyy/MM/dd"), 1);
						strArrays = new string[5];
						dateTime = Convert.ToDateTime(vCEmp[i].EndContr);
						int num1 = int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(0, 4)) + Ind;
						strArrays[0] = num1.ToString();
						strArrays[1] = "/";
						dateTime = Convert.ToDateTime(vCEmp[i].EndContr);
						strArrays[2] = dateTime.ToString("yyyy/MM/dd").Substring(5, 2);
						strArrays[3] = "/";
						dateTime = Convert.ToDateTime(vCEmp[i].EndContr);
						strArrays[4] = dateTime.ToString("yyyy/MM/dd").Substring(8, 2);
						if (int.Parse(Convert.ToDateTime(string.Concat(strArrays)).ToString("yyyy/MM/dd").Substring(0, 4)) >= 1900)
						{
							(new CultureInfo("en-US", false)).DateTimeFormat.Calendar = new GregorianCalendar();
						}
						else
						{
							(new CultureInfo("ar-SA", false)).DateTimeFormat.Calendar = new GregorianCalendar();
						}
						if ((Convert.ToDateTime(Convert.ToDateTime(vCEmp[i].EndContr).ToString("yyyy/MM/dd")) < Convert.ToDateTime(VarGeneral.Gdate) ? true : Convert.ToDateTime(vCEmp[i].EndContr) < Convert.ToDateTime(VarGeneral.Hdate)))
						{
							DateTime D1 = Convert.ToDateTime(vCEmp[i].StartContr);
							DateTime D2 = Convert.ToDateTime(vCEmp[i].EndContr);
							TimeSpan timeSpan = D2 - D1;
							D1 = D2.AddDays((double)((long)timeSpan.Days));
							T_Emp dataThisEmp = this.data_this_Emp;
							dateTime = Convert.ToDateTime(D2);
							dataThisEmp.StartContr = dateTime.ToString("yyyy/MM/dd");
							T_Emp tEmp = this.data_this_Emp;
							dateTime = Convert.ToDateTime(D1);
							tEmp.EndContr = dateTime.ToString("yyyy/MM/dd");
							try
							{
								base.Log = VarGeneral.DebugLog;
								this.SubmitChanges(ConflictMode.ContinueOnConflict);
							}
							catch (SqlException sqlException7)
							{
								ex = sqlException7;
							}
						}
					}
				}
			}
			if (!OldCalndr)
			{
				(new CultureInfo("en-US", false)).DateTimeFormat.Calendar = new GregorianCalendar();
			}
			else
			{
				(new CultureInfo("ar-SA", false)).DateTimeFormat.Calendar = new GregorianCalendar();
			}
		}
		public void OpTest_VacTyp(string tmpDate, bool vValue)
		{
			string str;
			string str1;
			double TicketUse = 0;
			double TicketCount = 0;
			int VacCount = 0;
			List<T_Emp> vEmp = (
				from t in this.T_Emps
				orderby t.Emp_No
				where t.EmpState == (bool?)true
				select t).ToList<T_Emp>();
			for (int i = 0; i < vEmp.Count; i++)
			{
				this.data_this_Emp = new T_Emp();
				this.data_this_Emp = vEmp[i];
				TicketUse = base.ExecuteQuery<double>(string.Concat("select dbo.GetTickeUsed('", this.data_this_Emp.Emp_ID, "')"), new object[0]).FirstOrDefault<double>();
				string dateAppointment = this.data_this_Emp.DateAppointment;
				str = (this.n.IsGreg(this.data_this_Emp.DateAppointment) ? VarGeneral.Gdate : VarGeneral.Hdate);
				double? ticketsCount = this.data_this_Emp.TicketsCount;
				TicketCount = this.TicktAmount(dateAppointment, str, ticketsCount.Value) - TicketUse;
				int VacUse = base.ExecuteQuery<int>(string.Concat("select dbo.GetVacUsed('", this.data_this_Emp.Emp_ID, "')"), new object[0]).FirstOrDefault<int>();
				string dateAppointment1 = this.data_this_Emp.DateAppointment;
				str1 = (this.n.IsGreg(this.data_this_Emp.DateAppointment) ? VarGeneral.Gdate : VarGeneral.Hdate);
				int? vacationCount = this.data_this_Emp.VacationCount;
				VacCount = this.VacAmount(dateAppointment1, str1, vacationCount.Value) - VacUse;
				this.data_this_Emp.VacationBalance = new double?((double)VacCount);
				this.data_this_Emp.TicketsBalance = new double?(TicketCount);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
#pragma warning disable CS0168 // The variable 'sqlException' is declared but never used
				catch (SqlException sqlException)
#pragma warning restore CS0168 // The variable 'sqlException' is declared but never used
				{
				}
			}
			string[] strArrays = new string[] { "UPDATE [T_Emp] SET T_Emp.StatusSal = 2 FROM [T_Emp] INNER JOIN dbo.T_Vacation ON T_Emp.Emp_ID = T_Vacation.[EmpID] WHERE T_Vacation.IFState = 0 and (((SUBSTRING(T_Vacation.StopSalFrom,1,4) >= 1800 and '", this.n.FormatGreg(VarGeneral.Gdate, "yyyy/MM/dd"), "' >= T_Vacation.StopSalFrom)) OR ((SUBSTRING(T_Vacation.StopSalFrom,1,4) < 1800 and '", this.n.FormatHijri(VarGeneral.Hdate, "yyyy/MM/dd"), "' >= T_Vacation.StopSalFrom ))) AND T_Vacation.StopSalFrom <> '' " };
			base.ExecuteCommand(string.Concat(strArrays), new object[0]);
		}
		public void OpTestWithBr(string tmpDate, bool vValue)
		{
			int i;
			SqlException ex;
			double? valuePremiums;
			string str;
			string str1;
			bool OldCalndr = true;
			List<T_SalDiscount> vDisCount = base.ExecuteQuery<T_SalDiscount>(string.Concat("Select T_SalDiscount.* from T_Emp INNER JOIN T_SalDiscount ON T_Emp.Emp_ID = T_SalDiscount.EmpID where T_SalDiscount.SalDate like '", tmpDate, "'"), new object[0]).ToList<T_SalDiscount>();
			for (i = 0; i < vDisCount.Count; i++)
			{
				this.data_this_Discount = new T_SalDiscount();
				this.data_this_Discount = vDisCount[i];
				this.data_this_Discount.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException)
				{
					ex = sqlException;
				}
			}
			List<T_Add> vAdd = base.ExecuteQuery<T_Add>(string.Concat("Select T_Add.* from T_Emp INNER JOIN T_Add ON T_Emp.Emp_ID = T_Add.EmpID where T_Add.SalDate like '", tmpDate, "'"), new object[0]).ToList<T_Add>();
			for (i = 0; i < vAdd.Count; i++)
			{
				this.data_this_Add = new T_Add();
				this.data_this_Add = vAdd[i];
				this.data_this_Add.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException1)
				{
					ex = sqlException1;
				}
			}
			List<T_Premium> list = base.ExecuteQuery<T_Premium>(string.Concat("Select T_Premiums.* from T_Emp INNER JOIN T_Advances ON T_Emp.Emp_ID = T_Advances.EmpID INNER JOIN T_Premiums ON T_Advances.Advances_No = T_Premiums.Advances_No where T_Premiums.PremiumsDate like '", tmpDate, "'"), new object[0]).ToList<T_Premium>();
			for (int j = 0; j < list.Count; j++)
			{
				this.data_this_Pre = new T_Premium();
				this.data_this_Pre = list[j];
				this.data_this_Pre.IFState = new bool?(vValue);
				if (!vValue)
				{
					this.data_this_Pre.Paying = new double?(0);
				}
				else
				{
					T_Premium dataThisPre = this.data_this_Pre;
					valuePremiums = list[j].ValuePremiums;
					dataThisPre.Paying = new double?(valuePremiums.Value);
				}
				T_Advance vAdvanc = (
					from t in this.T_Advances
					where (int?)t.Advances_No == list[j].Advances_No
					select t).First<T_Advance>();
				if (!vValue)
				{
					double value = vAdvanc.Remaining.Value;
					valuePremiums = vAdvanc.ValuePremium;
					vAdvanc.Remaining = new double?(value + valuePremiums.Value);
				}
				else
				{
					double num = vAdvanc.Remaining.Value;
					valuePremiums = vAdvanc.ValuePremium;
					vAdvanc.Remaining = new double?(num - valuePremiums.Value);
				}
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException2)
				{
					ex = sqlException2;
				}
			}
			List<T_Reward> vReward = base.ExecuteQuery<T_Reward>(string.Concat("Select T_Rewards.* from T_Emp INNER JOIN T_Rewards ON T_Emp.Emp_ID = T_Rewards.EmpID AND T_Emp.Emp_ID = T_Rewards.EmpID where T_Rewards.SalDate like '", tmpDate, "'"), new object[0]).ToList<T_Reward>();
			for (i = 0; i < vReward.Count; i++)
			{
				this.data_this_Reward = new T_Reward();
				this.data_this_Reward = vReward[i];
				this.data_this_Reward.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException3)
				{
					ex = sqlException3;
				}
			}
			List<T_CallPhone> vCallPhone = base.ExecuteQuery<T_CallPhone>(string.Concat("Select T_CallPhone.* from T_Emp INNER JOIN T_CallPhone ON T_Emp.Emp_ID = T_CallPhone.EmpID AND T_Emp.Emp_ID = T_CallPhone.EmpID where T_CallPhone.SalDate like '", tmpDate, "'"), new object[0]).ToList<T_CallPhone>();
			for (i = 0; i < vCallPhone.Count; i++)
			{
				this.data_this_CallPhone = new T_CallPhone();
				this.data_this_CallPhone = vCallPhone[i];
				this.data_this_CallPhone.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException4)
				{
					ex = sqlException4;
				}
			}
			List<T_Commentary> vCommentary = base.ExecuteQuery<T_Commentary>(string.Concat("Select T_Commentary.* from T_Emp INNER JOIN T_Commentary ON T_Emp.Emp_ID = T_Commentary.EmpID AND T_Emp.Emp_ID = T_Commentary.EmpID where T_Commentary.SalDate like '", tmpDate, "'"), new object[0]).ToList<T_Commentary>();
			for (i = 0; i < vCommentary.Count; i++)
			{
				this.data_this_Commentary = new T_Commentary();
				this.data_this_Commentary = vCommentary[i];
				this.data_this_Commentary.IFState = new bool?(vValue);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException5)
				{
					ex = sqlException5;
				}
			}
			double TicketUse = 0;
			double TicketCount = 0;
			int VacCount = 0;
			List<T_Emp> vEmp = (
				from t in this.T_Emps
				orderby t.Emp_No
				where t.EmpState == (bool?)true
				select t).ToList<T_Emp>();
			for (i = 0; i < vEmp.Count; i++)
			{
				this.data_this_Emp = new T_Emp();
				this.data_this_Emp = vEmp[i];
				TicketUse = base.ExecuteQuery<double>(string.Concat("select dbo.GetTickeUsed('", this.data_this_Emp.Emp_ID, "')"), new object[0]).FirstOrDefault<double>();
				string dateAppointment = this.data_this_Emp.DateAppointment;
				str = (this.n.IsGreg(this.data_this_Emp.DateAppointment) ? VarGeneral.Gdate : VarGeneral.Hdate);
				valuePremiums = this.data_this_Emp.TicketsCount;
				TicketCount = this.TicktAmount(dateAppointment, str, valuePremiums.Value) - TicketUse;
				int VacUse = base.ExecuteQuery<int>(string.Concat("select dbo.GetVacUsed('", this.data_this_Emp.Emp_ID, "')"), new object[0]).FirstOrDefault<int>();
				string dateAppointment1 = this.data_this_Emp.DateAppointment;
				str1 = (this.n.IsGreg(this.data_this_Emp.DateAppointment) ? VarGeneral.Gdate : VarGeneral.Hdate);
				int? vacationCount = this.data_this_Emp.VacationCount;
				VacCount = this.VacAmount(dateAppointment1, str1, vacationCount.Value) - VacUse;
				this.data_this_Emp.VacationBalance = new double?((double)VacCount);
				this.data_this_Emp.TicketsBalance = new double?(TicketCount);
				try
				{
					base.Log = VarGeneral.DebugLog;
					this.SubmitChanges(ConflictMode.ContinueOnConflict);
				}
				catch (SqlException sqlException6)
				{
					ex = sqlException6;
				}
			}
			string[] strArrays = new string[] { "UPDATE [T_Emp] SET T_Emp.StatusSal = 2 FROM [T_Emp] INNER JOIN dbo.T_Vacation ON T_Emp.Emp_ID = T_Vacation.[EmpID] WHERE T_Vacation.IFState = 0 and (((SUBSTRING(T_Vacation.StopSalFrom,1,4) >= 1800 and '", this.n.FormatGreg(VarGeneral.Gdate, "yyyy/MM/dd"), "' >= T_Vacation.StopSalFrom)) OR ((SUBSTRING(T_Vacation.StopSalFrom,1,4) < 1800 and '", this.n.FormatHijri(VarGeneral.Hdate, "yyyy/MM/dd"), "' >= T_Vacation.StopSalFrom ))) AND T_Vacation.StopSalFrom <> '' " };
			base.ExecuteCommand(string.Concat(strArrays), new object[0]);
			List<T_Emp> vCEmp = (
				from t in this.T_Emps
				where t.EmpState == (bool?)true
				where t.AutoReturnContr.Value
				where t.StartContr != ""
				where t.EndContr != ""
				select t).ToList<T_Emp>();
			if (int.Parse(Convert.ToDateTime(tmpDate).ToString("yyyy/MM/dd").Substring(0, 4)) >= 1900)
			{
				(new CultureInfo("en-US", false)).DateTimeFormat.Calendar = new GregorianCalendar();
				OldCalndr = false;
			}
			else
			{
				(new CultureInfo("ar-SA", false)).DateTimeFormat.Calendar = new GregorianCalendar();
			}
			for (i = 0; i < vCEmp.Count; i++)
			{
				this.data_this_Emp = new T_Emp();
				this.data_this_Emp = vEmp[i];
				if (VarGeneral.CheckDate(this.data_this_Emp.EndContr))
				{
					if ((Convert.ToDateTime(this.data_this_Emp.EndContr) < Convert.ToDateTime(VarGeneral.Gdate) ? true : Convert.ToDateTime(this.data_this_Emp.EndContr) < Convert.ToDateTime(VarGeneral.Hdate)))
					{
						int Ind = 0;
						DateTime dateTime = Convert.ToDateTime(vCEmp[i].StartContr);
						string str2 = dateTime.ToString("yyyy/MM/dd");
						dateTime = Convert.ToDateTime(vCEmp[i].EndContr);
						Ind = this.VacAmount(str2, dateTime.ToString("yyyy/MM/dd"), 1);
						strArrays = new string[5];
						dateTime = Convert.ToDateTime(vCEmp[i].EndContr);
						int num1 = int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(0, 4)) + Ind;
						strArrays[0] = num1.ToString();
						strArrays[1] = "/";
						dateTime = Convert.ToDateTime(vCEmp[i].EndContr);
						strArrays[2] = dateTime.ToString("yyyy/MM/dd").Substring(5, 2);
						strArrays[3] = "/";
						dateTime = Convert.ToDateTime(vCEmp[i].EndContr);
						strArrays[4] = dateTime.ToString("yyyy/MM/dd").Substring(8, 2);
						if (int.Parse(Convert.ToDateTime(string.Concat(strArrays)).ToString("yyyy/MM/dd").Substring(0, 4)) >= 1900)
						{
							(new CultureInfo("en-US", false)).DateTimeFormat.Calendar = new GregorianCalendar();
						}
						else
						{
							(new CultureInfo("ar-SA", false)).DateTimeFormat.Calendar = new GregorianCalendar();
						}
						if ((Convert.ToDateTime(Convert.ToDateTime(vCEmp[i].EndContr).ToString("yyyy/MM/dd")) < Convert.ToDateTime(VarGeneral.Gdate) ? true : Convert.ToDateTime(vCEmp[i].EndContr) < Convert.ToDateTime(VarGeneral.Hdate)))
						{
							DateTime D1 = Convert.ToDateTime(vCEmp[i].StartContr);
							DateTime D2 = Convert.ToDateTime(vCEmp[i].EndContr);
							TimeSpan timeSpan = D2 - D1;
							D1 = D2.AddDays((double)((long)timeSpan.Days));
							T_Emp dataThisEmp = this.data_this_Emp;
							dateTime = Convert.ToDateTime(D2);
							dataThisEmp.StartContr = dateTime.ToString("yyyy/MM/dd");
							T_Emp tEmp = this.data_this_Emp;
							dateTime = Convert.ToDateTime(D1);
							tEmp.EndContr = dateTime.ToString("yyyy/MM/dd");
							try
							{
								base.Log = VarGeneral.DebugLog;
								this.SubmitChanges(ConflictMode.ContinueOnConflict);
							}
							catch (SqlException sqlException7)
							{
								ex = sqlException7;
							}
						}
					}
				}
			}
			if (!OldCalndr)
			{
				(new CultureInfo("en-US", false)).DateTimeFormat.Calendar = new GregorianCalendar();
			}
			else
			{
				(new CultureInfo("ar-SA", false)).DateTimeFormat.Calendar = new GregorianCalendar();
			}
		}
		public T_Owner OwnerEmp(int ID)
		{
			T_Owner tt = new T_Owner();
			IQueryable<T_Owner> Quary =
				from er in this.T_Owners
				where er.Owner_No == ID
				select er;
			if (Quary.Count<T_Owner>() > 0)
			{
				tt = Quary.First<T_Owner>();
			}
			return tt;
		}
		public T_Project PRojectEmp(int ID)
		{
			T_Project tt = new T_Project();
			IQueryable<T_Project> Quary =
				from er in this.T_Projects
				where er.Project_No == ID
				select er;
			if (Quary.Count<T_Project>() > 0)
			{
				tt = Quary.First<T_Project>();
			}
			return tt;
		}
		public void RefreshPKeys()
		{
			this.PKeys.Clear();
			var qkeys =
				from item in this.T_Emps
				orderby item.Emp_No
				where item.EmpState == (bool?)true
				select new { Code = item.Emp_ID };
			int count = 0;
			foreach (var item in qkeys)
			{
				count++;
				this.PKeys.Add(item.Code);
			}
		}
		public T_Religion ReligionEmp(int ID)
		{
			T_Religion tt = new T_Religion();
			IQueryable<T_Religion> Quary =
				from er in this.T_Religions
				where er.Religion_No == ID
				select er;
			if (Quary.Count<T_Religion>() > 0)
			{
				tt = Quary.First<T_Religion>();
			}
			return tt;
		}
		public T_Reward RewardEmp(int ID)
		{
			T_Reward tt = new T_Reward();
			IQueryable<T_Reward> Quary =
				from er in this.T_Rewards
				where er.Reward_No == ID
				select er;
			if (Quary.Count<T_Reward>() > 0)
			{
				tt = Quary.First<T_Reward>();
			}
			return tt;
		}
		public T_SalDiscount SalDiscountEmp(int ID)
		{
			T_SalDiscount tt = new T_SalDiscount();
			IQueryable<T_SalDiscount> Quary =
				from er in this.T_SalDiscounts
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_SalDiscount>() > 0)
			{
				tt = Quary.First<T_SalDiscount>();
			}
			return tt;
		}
		public T_Secretariat SecretariatsEmp(int ID)
		{
			T_Secretariat tt = new T_Secretariat();
			IQueryable<T_Secretariat> Quary =
				from er in this.T_Secretariats
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_Secretariat>() > 0)
			{
				tt = Quary.First<T_Secretariat>();
			}
			return tt;
		}
		public T_SecretariatsTyp SecretariatsTypEmp(int ID)
		{
			T_SecretariatsTyp tt = new T_SecretariatsTyp();
			IQueryable<T_SecretariatsTyp> Quary =
				from er in this.T_SecretariatsTyps
				where er.SecretariatTyp_No == ID
				select er;
			if (Quary.Count<T_SecretariatsTyp>() > 0)
			{
				tt = Quary.First<T_SecretariatsTyp>();
			}
			return tt;
		}
		public T_Section SectionEmp(int ID)
		{
			T_Section tt = new T_Section();
			IQueryable<T_Section> Quary =
				from er in this.T_Sections
				where er.Section_No == ID
				select er;
			if (Quary.Count<T_Section>() > 0)
			{
				tt = Quary.First<T_Section>();
			}
			return tt;
		}
		public T_AccDef SelectAccCatNoByReturnNo(int ReturnNo)
		{
			T_AccDef return2 = new T_AccDef();
			IQueryable<T_AccDef> source =
				from br in this.T_AccDefs
				where br.AccCat == (int?)ReturnNo
				select br;
			if (source.Count<T_AccDef>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_AccDef>();
			}
			return return2;
		}
		public T_GDDET SelectAccDefNoByReturnNo(string ReturnNo)
		{
			T_GDDET return2 = new T_GDDET();
			IQueryable<T_GDDET> source =
				from br in this.T_GDDETs
				where br.AccNo == ReturnNo
				select br;
			if (source.Count<T_GDDET>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_GDDET>();
			}
			return return2;
		}
		public T_AccDef SelectAccRootByCode(string code)
		{
			T_AccDef root = new T_AccDef();
			IQueryable<T_AccDef> source =
				from br in this.T_AccDefs
				where br.AccDef_No == code
				select br;
			if (source.Count<T_AccDef>() > 0)
			{
				root = source.First<T_AccDef>();
			}
			return root;
		}
		public T_Advance SelectAdvanceAccDefNoByReturnNo(string ReturnNo)
		{
			T_Advance return2 = new T_Advance();
			IQueryable<T_Advance> source =
				from br in this.T_Advances
				where (br.AccountID == ReturnNo) || (br.LoanAcc == ReturnNo) || (br.BankBR == ReturnNo)
				select br;
			if (source.Count<T_Advance>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Advance>();
			}
			return return2;
		}
		public List<T_Advance> SelectAdvanceReturnNo(int ReturnNo)
		{
			List<T_Advance> return2 = new List<T_Advance>();
			List<T_Advance> source = (
				from br in this.T_Advances
				where br.GadeId == (double?)((double)ReturnNo)
				select br).ToList<T_Advance>();
			if (source.Count<T_Advance>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source;
			}
			return return2;
		}
		public T_Emp SelectBankNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.Bank == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_Item SelectBarcodNoByReturnNo(string ReturnNo)
		{
			T_Item return2 = new T_Item();
			IQueryable<T_Item> source =
				from br in this.T_Items
				where (br.BarCod1 == ReturnNo) || (br.BarCod2 == ReturnNo) || (br.BarCod3 == ReturnNo) || (br.BarCod4 == ReturnNo) || (br.BarCod5 == ReturnNo)
				select br;
			if (source.Count<T_Item>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Item>();
			}
			return return2;
		}
		public List<T_Item> SelectBarcodNoByReturnNoList(string ReturnNo)
		{
			List<T_Item> return2 = new List<T_Item>();
			List<T_Item> source = (
				from br in this.T_Items
				where (br.BarCod1 == ReturnNo) || (br.BarCod2 == ReturnNo) || (br.BarCod3 == ReturnNo) || (br.BarCod4 == ReturnNo) || (br.BarCod5 == ReturnNo)
				select br).ToList<T_Item>();
			if (source.Count<T_Item>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source;
			}
			return return2;
		}
		public T_Emp SelectBirthPlaceNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.BirthPlace == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_Emp SelectBossNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.Boss == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_Car SelectCarTypByReturnNo(long ReturnNo)
		{
			T_Car return2 = new T_Car();
			IQueryable<T_Car> source =
				from br in this.T_Cars
				where (long?)br.CarType == (long?)ReturnNo
				select br;
			if (source.Count<T_Car>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Car>();
			}
			return return2;
		}
		public T_Item SelectCatNoByReturnNo(int ReturnNo)
		{
			T_Item return2 = new T_Item();
			IQueryable<T_Item> source =
				from br in this.T_Items
				where br.ItmCat == (int?)ReturnNo
				select br;
			if (source.Count<T_Item>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Item>();
			}
			return return2;
		}
		public T_Emp SelectCityNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.CityNo == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_Emp SelectContractNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.ContrTyp == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_Advance SelectCstAdvancesNoByReturnNo(int ReturnNo)
		{
			T_Advance return2 = new T_Advance();
			IQueryable<T_Advance> source =
				from br in this.T_Advances
				where br.CostCenterEmp == (int?)ReturnNo
				select br;
			if (source.Count<T_Advance>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Advance>();
			}
			return return2;
		}
		public T_Emp SelectCstEmpNoByReturnNo(int ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where br.CostCenterEmp == (int?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_GDHEAD SelectCstNoByReturnNo(int ReturnNo)
		{
			T_GDHEAD return2 = new T_GDHEAD();
			IQueryable<T_GDHEAD> source =
				from br in this.T_GDHEADs
				where br.gdCstNo == (int?)ReturnNo
				select br;
			if (source.Count<T_GDHEAD>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_GDHEAD>();
			}
			return return2;
		}
		public T_GDHEAD SelectCurencyNoByReturnNo(int ReturnNo)
		{
			T_GDHEAD return2 = new T_GDHEAD();
			IQueryable<T_GDHEAD> source =
				from br in this.T_GDHEADs
				where br.CurTyp == (int?)ReturnNo
				select br;
			if (source.Count<T_GDHEAD>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_GDHEAD>();
			}
			return return2;
		}
		public T_Snd SelectCurencyNoByReturnNoSnd(int ReturnNo)
		{
			T_Snd return2 = new T_Snd();
			IQueryable<T_Snd> source =
				from br in this.T_Snds
				where br.curr == (int?)ReturnNo
				select br;
			if (source.Count<T_Snd>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Snd>();
			}
			return return2;
		}
		public T_Emp SelectDeptNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.Dept == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_INVHED SelectDrivNoByReturnNo(int ReturnNo)
		{
			T_INVHED return2 = new T_INVHED();
			IQueryable<T_INVHED> source =
				from br in this.T_INVHEDs
				where br.chauffeurNo == (int?)ReturnNo
				select br;
			if (source.Count<T_INVHED>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_INVHED>();
			}
			return return2;
		}
		public T_Emp SelectEmpAccDefNoByReturnNo(string ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (br.AccountID == ReturnNo) || (br.SalAcc == ReturnNo) || (br.LoanAcc == ReturnNo) || (br.HouseAcc == ReturnNo) || (br.BankBR == ReturnNo)
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_Emp SelectGuarantorNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.Guarantor == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_per SelectIDTypeByReturnNo(int ReturnNo)
		{
			T_per return2 = new T_per();
			IQueryable<T_per> source =
				from br in this.T_pers
				where br.pastyp.Value == ReturnNo
				select br;
			if (source.Count<T_per>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_per>();
			}
			return return2;
		}
		public T_Emp SelectInsuranceNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.InsuranceNo == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_Emp SelectJobNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.Job == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_EndService SelectLiquidationByReturnNo(long ReturnNo)
		{
			T_EndService return2 = new T_EndService();
			IQueryable<T_EndService> source =
				from br in this.T_EndServices
				where (long?)br.CauseLiquidation == (long?)ReturnNo
				select br;
			if (source.Count<T_EndService>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_EndService>();
			}
			return return2;
		}
		public T_Rom SelectLocNoByReturnNo(int ReturnNo)
		{
			T_Rom return2 = new T_Rom();
			IQueryable<T_Rom> source =
				from br in this.T_Roms
				where br.aline == (int?)ReturnNo
				select br;
			if (source.Count<T_Rom>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Rom>();
			}
			return return2;
		}
		public T_GDHEAD SelectMndobNoByReturnNo(int ReturnNo)
		{
			T_GDHEAD return2 = new T_GDHEAD();
			IQueryable<T_GDHEAD> source =
				from br in this.T_GDHEADs
				where br.gdMnd == (int?)ReturnNo
				select br;
			if (source.Count<T_GDHEAD>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_GDHEAD>();
			}
			return return2;
		}
		public T_Emp SelectNationNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.Nationalty == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_per SelectPerByReturnNo(string ReturnNo)
		{
			T_per return2 = new T_per();
			IQueryable<T_per> source =
				from br in this.T_pers
				where br.Cust_no == ReturnNo
				select br;
			if (source.Count<T_per>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_per>();
			}
			return return2;
		}
		public T_Emp SelectReligionNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.Religion == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public List<T_Salary> SelectSalaryReturnNo(int ReturnNo)
		{
			List<T_Salary> return2 = new List<T_Salary>();
			List<T_Salary> source = (
				from br in this.T_Salaries
				where br.GadeId == (double?)((double)ReturnNo)
				select br).ToList<T_Salary>();
			if (source.Count<T_Salary>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source;
			}
			return return2;
		}
		public List<T_Sal> SelectSalsReturnNo(int ReturnNo)
		{
			List<T_Sal> return2 = new List<T_Sal>();
			List<T_Sal> source = (
				from br in this.T_Sals
				where br.GadeId2 == (double?)((double)ReturnNo)
				select br).ToList<T_Sal>();
			if (source.Count<T_Sal>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source;
			}
			return return2;
		}
		public bool SelectSecretariatNoByReturnNo(string ReturnNo)
		{
			bool flag;
			flag = ((
				from br in this.T_Secretariats
				where br.EmpID == ReturnNo
				where br.IFState == (bool?)false
				select br).Count<T_Secretariat>() <= 0 ? true : false);
			return flag;
		}
		public T_Secretariat SelectSecretariatsTypByReturnNo(long ReturnNo)
		{
			T_Secretariat return2 = new T_Secretariat();
			IQueryable<T_Secretariat> source =
				from br in this.T_Secretariats
				where (long?)br.SecretariatsTyp == (long?)ReturnNo
				select br;
			if (source.Count<T_Secretariat>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Secretariat>();
			}
			return return2;
		}
		public T_Emp SelectSectionNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.Section == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_sertyp SelectSerTypeoByReturnNo(string ReturnNo)
		{
			T_sertyp return2 = new T_sertyp();
			IQueryable<T_sertyp> source =
				from br in this.T_sertyps
				where br.accno == ReturnNo
				select br;
			if (source.Count<T_sertyp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_sertyp>();
			}
			return return2;
		}
		public T_tran SelectServTypeByReturnNo(int ReturnNo)
		{
			T_tran return2 = new T_tran();
			IQueryable<T_tran> source =
				from br in this.T_trans
				where br.typ == (int?)ReturnNo
				select br;
			if (source.Count<T_tran>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_tran>();
			}
			return return2;
		}
		public T_Emp SelectSPRojectNoByReturnNo(long ReturnNo)
		{
			T_Emp return2 = new T_Emp();
			IQueryable<T_Emp> source =
				from br in this.T_Emps
				where (long?)br.ProjectNo == (long?)ReturnNo
				select br;
			if (source.Count<T_Emp>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Emp>();
			}
			return return2;
		}
		public T_INVDET SelectStoreNoByReturnNo(int ReturnNo)
		{
			T_INVDET return2 = new T_INVDET();
			IQueryable<T_INVDET> source =
				from br in this.T_INVDETs
				where br.StoreNo == (int?)ReturnNo
				select br;
			if (source.Count<T_INVDET>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_INVDET>();
			}
			return return2;
		}
		public T_OfferQFree SelectStoreNoOfferByReturnNo(int ReturnNo)
		{
			T_OfferQFree return2 = new T_OfferQFree();
			IQueryable<T_OfferQFree> source =
				from br in this.T_OfferQFrees
				where br.OfferQFreeStoreNo == (int?)ReturnNo
				select br;
			if (source.Count<T_OfferQFree>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_OfferQFree>();
			}
			return return2;
		}
		public T_SYSSETTING SelectSyssettingReturnNo(string ReturnNo)
		{
			T_SYSSETTING return2 = new T_SYSSETTING();
			IQueryable<T_SYSSETTING> source =
				from br in this.T_SYSSETTINGs
				where br.TaxAcc == ReturnNo
				select br;
			if (source.Count<T_SYSSETTING>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_SYSSETTING>();
			}
			return return2;
		}
		public T_INVSETTING SelectTaxOptionReturnNo(string ReturnNo)
		{
			T_INVSETTING return2 = new T_INVSETTING();
			IQueryable<T_INVSETTING> source =
				from br in this.T_INVSETTINGs
				where br.InvID != VarGeneral.DraftBillId
				where (br.TaxCredit == ReturnNo) || (br.TaxDebit == ReturnNo)
				select br;
			if (source.Count<T_INVSETTING>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_INVSETTING>();
			}
			return return2;
		}
		public T_telmn SelectTelMnoByReturnNo(string ReturnNo)
		{
			T_telmn return2 = new T_telmn();
			IQueryable<T_telmn> source =
				from br in this.T_telmns
				where br.accno == ReturnNo
				select br;
			if (source.Count<T_telmn>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_telmn>();
			}
			return return2;
		}
		public T_Commentary SelectTreatmentByReturnNo(long ReturnNo)
		{
			T_Commentary return2 = new T_Commentary();
			IQueryable<T_Commentary> source =
				from br in this.T_Commentaries
				where (long?)br.treatmentNo == (long?)ReturnNo
				select br;
			if (source.Count<T_Commentary>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Commentary>();
			}
			return return2;
		}
		public T_Item SelectUnitNoByReturnNo(int ReturnNo)
		{
			T_Item return2 = new T_Item();
			IQueryable<T_Item> source =
				from br in this.T_Items
				where br.Unit1 == (int?)ReturnNo || br.Unit2 == (int?)ReturnNo || br.Unit3 == (int?)ReturnNo || br.Unit4 == (int?)ReturnNo || br.Unit5 == (int?)ReturnNo
				select br;
			if (source.Count<T_Item>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Item>();
			}
			return return2;
		}
		public T_GDHEAD SelectUsrNoByReturnNo(string ReturnNo)
		{
			T_GDHEAD return2 = new T_GDHEAD();
			IQueryable<T_GDHEAD> source =
				from br in this.T_GDHEADs
				where br.gdUser == ReturnNo
				where !br.gdLok
				select br;
			if (source.Count<T_GDHEAD>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_GDHEAD>();
			}
			return return2;
		}
		public T_Room SelectWaiterNoByReturnNo(int ReturnNo)
		{
			T_Room return2 = new T_Room();
			IQueryable<T_Room> source =
				from br in this.T_Rooms
				where br.waiterNo == (int?)ReturnNo
				select br;
			if (source.Count<T_Room>() <= 0)
			{
				return2 = null;
			}
			else
			{
				return2 = source.First<T_Room>();
			}
			return return2;
		}
		public T_AccCat StockAccCat(string no)
		{
			T_AccCat tt = new T_AccCat();
			IOrderedQueryable<T_AccCat> Quary =
				from er in this.T_AccCats
				where er.AccCat_No == no
				orderby er.AccCat_No
				select er;
			if (Quary.Count<T_AccCat>() > 0)
			{
				tt = Quary.First<T_AccCat>();
			}
			return tt;
		}
		public T_AccDef StockAccDef(string no)
		{
			object[] accDefNo;
			T_AccDef tt = new T_AccDef();
			List<T_AccDef> Quary = (
				from er in this.T_AccDefs
				where er.AccDef_No == no
				orderby er.AccDef_No
				select er).ToList<T_AccDef>();
			if (Quary.Count<T_AccDef>() > 0)
			{
				try
				{
					T_AccDef nullable = Quary.First<T_AccDef>();
					accDefNo = new object[] { " select sum(Round(T_GDDET.gdValue,", null, null, null, null };
					accDefNo[1] = (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2);
					accDefNo[2] = ")) from T_GDDET INNER JOIN  T_GDHEAD ON T_GDDET.gdID = T_GDHEAD.gdhead_ID where T_GDHEAD.gdLok = 0 and T_GDDET.gdValue > 0 and T_GDDET.AccNo ='";
					accDefNo[3] = Quary.First<T_AccDef>().AccDef_No;
					accDefNo[4] = "'";
					nullable.Debit = new double?(base.ExecuteQuery<double>(string.Concat(accDefNo), new object[0]).FirstOrDefault<double>());
				}
				catch
				{
					Quary.First<T_AccDef>().Debit = new double?(0);
				}
				try
				{
					T_AccDef tAccDef = Quary.First<T_AccDef>();
					accDefNo = new object[] { " select sum(Round(T_GDDET.gdValue,", null, null, null, null };
					accDefNo[1] = (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2);
					accDefNo[2] = ")) from T_GDDET INNER JOIN  T_GDHEAD ON T_GDDET.gdID = T_GDHEAD.gdhead_ID where T_GDHEAD.gdLok = 0 and T_GDDET.gdValue < 0 and T_GDDET.AccNo ='";
					accDefNo[3] = Quary.First<T_AccDef>().AccDef_No;
					accDefNo[4] = "'";
					tAccDef.Credit = new double?(Math.Abs(base.ExecuteQuery<double>(string.Concat(accDefNo), new object[0]).FirstOrDefault<double>()));
				}
				catch
				{
					Quary.First<T_AccDef>().Credit = new double?(0);
				}
				try
				{
					T_AccDef nullable1 = Quary.First<T_AccDef>();
					accDefNo = new object[] { " select sum(Round(T_GDDET.gdValue,", null, null, null, null };
					accDefNo[1] = (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2);
					accDefNo[2] = ")) from T_GDDET INNER JOIN  T_GDHEAD ON T_GDDET.gdID = T_GDHEAD.gdhead_ID where T_GDHEAD.gdLok = 0 and T_GDDET.AccNo ='";
					accDefNo[3] = Quary.First<T_AccDef>().AccDef_No;
					accDefNo[4] = "'";
					nullable1.Balance = new double?(base.ExecuteQuery<double>(string.Concat(accDefNo), new object[0]).FirstOrDefault<double>());
				}
				catch
				{
					Quary.First<T_AccDef>().Balance = new double?(0);
				}
				tt = Quary.First<T_AccDef>();
			}
			return tt;
		}
		public List<T_AccDef> StockAccDefList()
		{
			List<T_AccDef> tt = new List<T_AccDef>();
			List<T_AccDef> Quary = (
				from er in this.T_AccDefs
				where er.Lev == (int?)4
				where er.Sts == (int?)0
				select er).ToList<T_AccDef>();
			if (Quary.Count<T_AccDef>() > 0)
			{
				int i = 0;
				while (i < Quary.Count)
				{
					i++;
				}
				tt = Quary;
			}
			return tt;
		}
		public T_AccDef StockAccDefsByAcNO(string no)
		{
			T_AccDef tt = new T_AccDef();
			IOrderedQueryable<T_AccDef> Quary =
				from er in this.T_AccDefs
				where er.AccDef_No == no
				orderby er.AccDef_ID
				select er;
			if (Quary.Count<T_AccDef>() > 0)
			{
				tt = Quary.First<T_AccDef>();
			}
			return tt;
		}
		public T_AccDef StockAccDefs(int no)
		{
			T_AccDef tt = new T_AccDef();
			IOrderedQueryable<T_AccDef> Quary =
				from er in this.T_AccDefs
				where er.AccDef_ID == no
				orderby er.AccDef_ID
				select er;
			if (Quary.Count<T_AccDef>() > 0)
			{
				tt = Quary.First<T_AccDef>();

			}
			return tt;
		}
		public T_AccDef StockAccDefs_OnlyGaid(int no)
		{
			object[] accDefNo;
			T_AccDef tt = new T_AccDef();
			IOrderedQueryable<T_AccDef> Quary =
				from er in this.T_AccDefs
				where er.AccDef_ID == no
				orderby er.AccDef_ID
				select er;
			if (Quary.Count<T_AccDef>() > 0)
			{
				try
				{
					T_AccDef nullable = Quary.First<T_AccDef>();
					accDefNo = new object[] { " select sum(Round(T_GDDET.gdValue,", null, null, null, null };
					accDefNo[1] = (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2);
					accDefNo[2] = ")) from T_GDDET INNER JOIN  T_GDHEAD ON T_GDDET.gdID = T_GDHEAD.gdhead_ID where T_GDHEAD.gdLok = 0 and T_GDDET.gdValue > 0 and T_GDDET.AccNo ='";
					accDefNo[3] = Quary.First<T_AccDef>().AccDef_No;
					accDefNo[4] = "'";
					nullable.Debit = new double?(base.ExecuteQuery<double>(string.Concat(accDefNo), new object[0]).FirstOrDefault<double>());
				}
				catch
				{
					Quary.First<T_AccDef>().Debit = new double?(0);
				}
				try
				{
					T_AccDef tAccDef = Quary.First<T_AccDef>();
					accDefNo = new object[] { " select sum(Round(T_GDDET.gdValue,", null, null, null, null };
					accDefNo[1] = (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2);
					accDefNo[2] = ")) from T_GDDET INNER JOIN  T_GDHEAD ON T_GDDET.gdID = T_GDHEAD.gdhead_ID where T_GDHEAD.gdLok = 0 and T_GDDET.gdValue < 0 and T_GDDET.AccNo ='";
					accDefNo[3] = Quary.First<T_AccDef>().AccDef_No;
					accDefNo[4] = "'";
					tAccDef.Credit = new double?(Math.Abs(base.ExecuteQuery<double>(string.Concat(accDefNo), new object[0]).FirstOrDefault<double>()));
				}
				catch
				{
					Quary.First<T_AccDef>().Credit = new double?(0);
				}
				try
				{
					T_AccDef nullable1 = Quary.First<T_AccDef>();
					accDefNo = new object[] { " select sum(Round(T_GDDET.gdValue,", null, null, null, null };
					accDefNo[1] = (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2);
					accDefNo[2] = ")) from T_GDDET INNER JOIN  T_GDHEAD ON T_GDDET.gdID = T_GDHEAD.gdhead_ID where T_GDHEAD.gdLok = 0 and T_GDDET.AccNo ='";
					accDefNo[3] = Quary.First<T_AccDef>().AccDef_No;
					accDefNo[4] = "'";
					nullable1.Balance = new double?(base.ExecuteQuery<double>(string.Concat(accDefNo), new object[0]).FirstOrDefault<double>());
				}
				catch
				{
					Quary.First<T_AccDef>().Balance = new double?(0);
				}
				tt = Quary.First<T_AccDef>();
			}
			return tt;
		}
		public T_AccDef StockAccDefWithOutBalance(string no)
		{
			T_AccDef tt = new T_AccDef();
			List<T_AccDef> Quary = (
				from er in this.T_AccDefs
				where er.AccDef_No == no
				orderby er.AccDef_No
				select er).ToList<T_AccDef>();
			if (Quary.Count<T_AccDef>() > 0)
			{
				tt = Quary.First<T_AccDef>();
			}
			return tt;
		}
		public T_AlarmTenant StockAlarmTenant(int no)
		{
			T_AlarmTenant tt = new T_AlarmTenant();
			IOrderedQueryable<T_AlarmTenant> Quary =
				from er in this.T_AlarmTenants
				where er.AlarmTenantNo == no
				orderby er.AlarmTenantNo
				select er;
			if (Quary.Count<T_AlarmTenant>() > 0)
			{
				tt = Quary.First<T_AlarmTenant>();
			}
			return tt;
		}
		public T_BankPeaper StockBankPeaper(int no)
		{
			T_BankPeaper tt = new T_BankPeaper();
			IOrderedQueryable<T_BankPeaper> Quary =
				from er in this.T_BankPeapers
				where er.IfDel == (int?)0
				where er.ID == no
				orderby er.ID
				select er;
			if (Quary.Count<T_BankPeaper>() > 0)
			{
				tt = Quary.First<T_BankPeaper>();
			}
			return tt;
		}
		public T_BlackList StockBlackList(string no)
		{
			T_BlackList tt = new T_BlackList();
			IOrderedQueryable<T_BlackList> Quary =
				from er in this.T_BlackLists
				where er.CustNum == no
				orderby er.ID
				select er;
			if (Quary.Count<T_BlackList>() > 0)
			{
				tt = Quary.First<T_BlackList>();
			}
			return tt;
		}
		public T_CATEGORY StockCatbyname(string no)
		{
			T_CATEGORY tt = new T_CATEGORY();
			IOrderedQueryable<T_CATEGORY> Quary =
				from er in this.T_CATEGORies
				where er.Arb_Des == no
				orderby er.CAT_No
				select er;
			if (Quary.Count<T_CATEGORY>() > 0)
			{
				tt = Quary.First<T_CATEGORY>();
			}
			return tt;
		}
		public T_CATEGORY StockCat(string no)
		{
			T_CATEGORY tt = new T_CATEGORY();
			IOrderedQueryable<T_CATEGORY> Quary =
				from er in this.T_CATEGORies
				where er.CAT_No == no
				orderby er.CAT_No
				select er;
			if (Quary.Count<T_CATEGORY>() > 0)
			{
				tt = Quary.First<T_CATEGORY>();
			}
			return tt;
		}
		public T_CATEGORY StockCatID(int no)
		{
			T_CATEGORY tt = new T_CATEGORY();
			IOrderedQueryable<T_CATEGORY> Quary =
				from er in this.T_CATEGORies
				where er.CAT_ID == no
				orderby er.CAT_No
				select er;
			if (Quary.Count<T_CATEGORY>() > 0)
			{
				tt = Quary.First<T_CATEGORY>();
			}
			return tt;
		}
		public T_Pine stockPineByPicno(string no, int picno)
		{
			T_Pine tt = new T_Pine();
			var Quary =
				 from er in this.T_Pines
				 where (er.Inv_ID == no && ((int)er.Pic_no) == picno)
				 select er;


			if (Quary.Count<T_Pine>() > 0)
			{
				tt = Quary.First<T_Pine>();
			}
			return tt;
		}

		public bool StockCheckInvDet(string no)
		{
			bool flag;
			flag = ((
				from er in this.T_INVDETs
				where er.ItmNo == no
				select er).Count<T_INVDET>() <= 0 ? false : true);
			return flag;
		}

		public bool StockCheckInvOffer(string no)
		{
			IQueryable<T_OfferDet> Quary =
				from er in this.T_OfferDets
				where er.ItmNo == no
				select er;
			IQueryable<T_OfferQFree> q =
				from er in this.T_OfferQFrees
				where er.OfferQFreeItmNo == no
				select er;
			return ((Quary.Count<T_OfferDet>() > 0 ? false : q.Count<T_OfferQFree>() <= 0) ? false : true);
		}
		public List<T_Company> StockCompanyList()
		{
			List<T_Company> tt = new List<T_Company>();
			IQueryable<T_Company> Quary =
				from er in this.T_Companies
				select er;
			if (Quary.Count<T_Company>() > 0)
			{
				tt = Quary.ToList<T_Company>();
			}
			return tt;
		}
		public List<T_Pine> StockGetInvPines(string id)
		{
			List<T_Pine> tt = new List<T_Pine>();
			IQueryable<T_Pine> Quary =
				from er in this.T_Pines
				where er.Inv_ID == id
				select er;
			if (Quary.Count<T_Pine>() > 0)
			{
				tt = Quary.ToList<T_Pine>();
			}
			return tt;
		}
		public List<T_CarCheckPIC> StockGetInvPIC(string id)
		{
			List<T_CarCheckPIC> tt = new List<T_CarCheckPIC>();
			IQueryable<T_CarCheckPIC> Quary =
				from er in this.T_CarCheckPICs
				where er.INVHED_ID == id
				select er;
			if (Quary.Count<T_CarCheckPIC>() > 0)
			{
				tt = Quary.ToList<T_CarCheckPIC>();
			}
			return tt;
		}
		public List<T_Pine> StockGetInvPinesByIds(string id, int p, int x, int y)
		{
			List<T_Pine> tt = new List<T_Pine>();
			IQueryable<T_Pine> Quary =
				from er in this.T_Pines
				where er.Inv_ID == id && er.Pic_no == p && er.X.GetValueOrDefault() == x && er.Y.GetValueOrDefault() == y
				select er;
			if (Quary.Count<T_Pine>() > 0)
			{
				tt = Quary.ToList<T_Pine>();
			}
			return tt;
		}
		public List<T_Color> StockColors()
		{
			List<T_Color> tt = new List<T_Color>();
			IQueryable<T_Color> Quary =
				from er in this.T_Colors
				select er;
			if (Quary.Count<T_Color>() > 0)
			{
				tt = Quary.ToList<T_Color>();
			}
			return tt;
		}
		public T_CstTbl StockCst(string no)
		{
			T_CstTbl tt = new T_CstTbl();
			IOrderedQueryable<T_CstTbl> Quary =
				from er in this.T_CstTbls
				where er.Cst_No == no
				orderby er.Cst_No
				select er;
			if (Quary.Count<T_CstTbl>() > 0)
			{
				tt = Quary.First<T_CstTbl>();
			}
			return tt;
		}
		public T_Curency StockCurency(string no)
		{
			T_Curency tt = new T_Curency();
			IOrderedQueryable<T_Curency> Quary =
				from er in this.T_Curencies
				where er.Curency_No == no
				orderby er.Curency_No
				select er;
			if (Quary.Count<T_Curency>() > 0)
			{
				tt = Quary.First<T_Curency>();
			}
			return tt;
		}
		public T_Curency StockCurencyID(int ID)
		{
			T_Curency tt = new T_Curency();
			IOrderedQueryable<T_Curency> Quary =
				from er in this.T_Curencies
				where er.Curency_ID == ID
				orderby er.Curency_No
				select er;
			if (Quary.Count<T_Curency>() > 0)
			{
				tt = Quary.First<T_Curency>();
			}
			return tt;
		}
		public List<T_Curency> StockCurrList(int no)
		{
			List<T_Curency> tt = new List<T_Curency>();
			List<T_Curency> Quary = (
				from er in this.T_Curencies
				where er.Curency_ID == no
				orderby er.Curency_No
				select er).ToList<T_Curency>();
			if (Quary.Count<T_Curency>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public T_Chauffeur StockDriv(string no)
		{
			T_Chauffeur tt = new T_Chauffeur();
			IOrderedQueryable<T_Chauffeur> Quary =
				from er in this.T_Chauffeurs
				where er.chauffeur_No == no
				orderby er.chauffeur_No
				select er;
			if (Quary.Count<T_Chauffeur>() > 0)
			{
				tt = Quary.First<T_Chauffeur>();
			}
			return tt;
		}
		public T_Chauffeur StockDrivID(int no)
		{
			T_Chauffeur tt = new T_Chauffeur();
			IOrderedQueryable<T_Chauffeur> Quary =
				from er in this.T_Chauffeurs
				where er.chauffeur_ID == no
				orderby er.chauffeur_No
				select er;
			if (Quary.Count<T_Chauffeur>() > 0)
			{
				tt = Quary.First<T_Chauffeur>();
			}
			return tt;
		}
		public T_EqarsData StockEqarData(int no)
		{
			T_EqarsData tt = new T_EqarsData();
			IOrderedQueryable<T_EqarsData> Quary =
				from er in this.T_EqarsDatas
				where er.EqarNo == no
				orderby er.EqarNo
				select er;
			if (Quary.Count<T_EqarsData>() > 0)
			{
				tt = Quary.First<T_EqarsData>();
			}
			return tt;
		}
		public T_GDDET StockGDDET(int invtype, int ID)
		{
			T_GDDET tt = new T_GDDET();
			IOrderedQueryable<T_GDDET> Quary =
				from er in this.T_GDDETs
				where er.gdID == (int?)ID
				where er.T_GDHEAD.gdTyp == (int?)invtype
				orderby er.gdNo
				select er;
			if (Quary.Count<T_GDDET>() > 0)
			{
				tt = Quary.First<T_GDDET>();
			}
			return tt;
		}
		public T_GDHEAD StockGDHEAD(int invtype, string no)
		{
			T_GDHEAD tt = new T_GDHEAD();
			IOrderedQueryable<T_GDHEAD> Quary =
				from er in this.T_GDHEADs
				where er.gdNo == no
				where er.gdTyp == (int?)invtype
				where !er.gdLok
				orderby er.gdNo
				select er;
			if (Quary.Count<T_GDHEAD>() > 0)
			{
				tt = Quary.First<T_GDHEAD>();
			}
			return tt;
		}
		public List<T_GDHEAD> StockGdHeadid(int no)
		{
			List<T_GDHEAD> tt = new List<T_GDHEAD>();
			List<T_GDHEAD> Quary = (
				from er in this.T_GDHEADs
				where er.gdhead_ID == no
				where !er.gdLok
				select er).ToList<T_GDHEAD>();
			if (Quary.Count<T_GDHEAD>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public T_GDHEAD StockGDHEADToLeave(int invtype, string no)
		{
			T_GDHEAD tt = new T_GDHEAD();
			IOrderedQueryable<T_GDHEAD> Quary =
				from er in this.T_GDHEADs
				where er.gdNo == no
				where er.gdTyp == (int?)invtype
				where er.ChekNo == "GuestLeave"
				where !er.gdLok
				orderby er.gdNo
				select er;
			if (Quary.Count<T_GDHEAD>() > 0)
			{
				tt = Quary.First<T_GDHEAD>();
			}
			return tt;
		}
		public T_IDType StockIDType(int no)
		{
			T_IDType tt = new T_IDType();
			IOrderedQueryable<T_IDType> Quary =
				from er in this.T_IDTypes
				where er.IDType_ID == no
				orderby er.IDType_ID
				select er;
			if (Quary.Count<T_IDType>() > 0)
			{
				tt = Quary.First<T_IDType>();
			}
			return tt;
		}
		public List<T_InfoTb> StockInfoList()
		{
			List<T_InfoTb> tt = new List<T_InfoTb>();
			IQueryable<T_InfoTb> Quary =
				from er in this.T_InfoTbs
				select er;
			if (Quary.Count<T_InfoTb>() > 0)
			{
				tt = Quary.ToList<T_InfoTb>();
			}
			return tt;
		}
		public string StockInfoScreenSaverA()
		{
			string str;
			var Quary = (
				from er in this.T_InfoTbs
				where er.fldFlag == "rTrwes1"
				select new { fldValue = er.fldValue }).ToList();
			str = (Quary.Count() <= 0 ? "" : Quary.FirstOrDefault().fldValue);
			return str;
		}
		public string StockInfoScreenSaverE()
		{
			string str;
			var Quary = (
				from er in this.T_InfoTbs
				where er.fldFlag == "lTrwes1"
				select new { fldValue = er.fldValue }).ToList();
			str = (Quary.Count() <= 0 ? "" : Quary.FirstOrDefault().fldValue);
			return str;
		}
		public T_INVDET StockInvDet(int invtype, int ID)
		{
			T_INVDET tt = new T_INVDET();
			IOrderedQueryable<T_INVDET> Quary =
				from er in this.T_INVDETs
				where er.InvId == (int?)ID
				where er.T_INVHED.InvTyp == (int?)invtype
				orderby er.InvNo
				select er;
			if (Quary.Count<T_INVDET>() > 0)
			{
				tt = Quary.First<T_INVDET>();
			}
			return tt;
		}
		public T_InvDetNote StockInvDetNote(string no)
		{
			T_InvDetNote tt = new T_InvDetNote();
			IOrderedQueryable<T_InvDetNote> Quary =
				from er in this.T_InvDetNotes
				where er.InvDetNote_No == no
				orderby er.InvDetNote_No
				select er;
			if (Quary.Count<T_InvDetNote>() > 0)
			{
				tt = Quary.First<T_InvDetNote>();
			}
			return tt;
		}
		public T_INVHED StockInvHead(int invtype, string no)
		{
			T_INVHED tt = new T_INVHED();
			IOrderedQueryable<T_INVHED> Quary =
				from er in this.T_INVHEDs
				where er.InvNo == no
				where er.InvTyp == (int?)invtype
				where er.IfDel == (int?)0
				orderby er.InvNo
				select er;
			if (Quary.Count<T_INVHED>() > 0)
			{
				tt = Quary.First<T_INVHED>();
			}
			return tt;
		}
		public T_INVHED StockInvHeadbyid(int invtype, string no, int stat)
		{
			T_INVHED tt = new T_INVHED();
			IOrderedQueryable<T_INVHED> Quary =
				from er in this.T_INVHEDs
				where er.InvHed_ID == int.Parse(no)
				where er.InvTyp == (int?)invtype
				where er.IfDel == (int?)0
				where er.OrderStatus == (int)stat
				orderby er.InvNo
				select er;
			if (Quary.Count<T_INVHED>() > 0)
			{
				tt = Quary.First<T_INVHED>();
			}
			return tt;
		}
		public List<T_INVHED> StockInvHeadlist(int invtype)
		{
			T_INVHED tt = new T_INVHED();
			IOrderedQueryable<T_INVHED> Quary =
				from er in this.T_INVHEDs

				where er.InvTyp == (int?)invtype
				where er.IfDel == (int?)0
				orderby er.InvNo
				select er;

			return Quary.ToList<T_INVHED>();
		}
		public List<T_INVDET> StockINVDet(int invtype)
		{
			T_INVDET tt = new T_INVDET();
			IOrderedQueryable<T_INVDET> Quary =
				from er in this.T_INVDETs

				where er.InvDet_ID == (int)invtype

				orderby er.InvNo
				select er;

			return Quary.ToList<T_INVDET>();
		}

		public T_INVHED StockInvHeadID(int invtype, int _id)
		{
			T_INVHED tt = new T_INVHED();
			IOrderedQueryable<T_INVHED> Quary =
				from er in this.T_INVHEDs
				where er.InvHed_ID == _id
				where er.InvTyp == (int?)invtype
				orderby er.InvNo
				select er;
			if (Quary.Count<T_INVHED>() > 0)
			{
				tt = Quary.First<T_INVHED>();
			}
			return tt;
		}
		public T_INVHED StockInvHeadID2(int invtype, int _id, string sa)
		{
			T_INVHED tt = new T_INVHED();
			IOrderedQueryable<T_INVHED> Quary =
				from er in this.T_INVHEDs
				where er.InvHed_ID == _id
				where er.InvTyp == (int?)invtype
				where er.SalsManNo == sa
				orderby er.InvNo
				select er;
			if (Quary.Count<T_INVHED>() > 0)
			{
				tt = Quary.First<T_INVHED>();
			}
			return tt;
		}
		public T_INVHED StockInvHeadID2(int _id)
		{
			T_INVHED tt = new T_INVHED();
			IOrderedQueryable<T_INVHED> Quary =
				from er in this.T_INVHEDs
				where er.InvHed_ID == _id
				orderby er.InvNo
				select er;
			if (Quary.Count<T_INVHED>() > 0)
			{
				tt = Quary.First<T_INVHED>();
			}
			return tt;
		}
		public T_INVHED StockInvHeadRet(int invtype, int no)
		{
			T_INVHED tt = new T_INVHED();
			IOrderedQueryable<T_INVHED> Quary =
				from er in this.T_INVHEDs
				where er.InvHed_ID == no
				where er.InvTyp == (int?)invtype
				where er.IfDel == (int?)0
				orderby er.InvNo
				select er;
			if (Quary.Count<T_INVHED>() > 0)
			{
				tt = Quary.First<T_INVHED>();
			}
			return tt;
		}
		public T_INVSETTING StockInvSetting(int k, int no)
		{
			T_INVSETTING tt = new T_INVSETTING();
			IOrderedQueryable<T_INVSETTING> Quary =
				from er in this.T_INVSETTINGs
				where er.InvID == no && er.InvID != VarGeneral.DraftBillId
				orderby er.InvID
				select er;
			if (Quary.Count<T_INVSETTING>() > 0)
			{
				tt = Quary.First<T_INVSETTING>();
			}
			return tt;
		}
		public T_Printer StockPrinterSetting(int k, int no)
		{
			T_Printer tt = new T_Printer();
			IOrderedQueryable<T_Printer> Quary =
				from er in this.T_Printers
				where er.InvID == no && er.InvID != VarGeneral.DraftBillId && er.User_ID == k
				orderby er.InvID
				select er;
			try
			{
				if (Quary.Count<T_Printer>() > 0)
				{
					tt = Quary.First<T_Printer>();

					return tt;
				}
				else
				{
					DBUdate.DbUpdates.copysetting2();
					Quary =
					from er in this.T_Printers
					where er.InvID == no && er.InvID != VarGeneral.DraftBillId && er.User_ID == k
					orderby er.InvID
					select er;
					if (Quary.Count<T_Printer>() > 0)
					{
						tt = Quary.First<T_Printer>();

					}
				}
			}
			catch
			{
				DBUdate.DbUpdates.copysetting2();
				Quary =
				from er in this.T_Printers
				where er.InvID == no && er.InvID != VarGeneral.DraftBillId && er.User_ID == k
				orderby er.InvID
				select er;
				if (Quary.Count<T_Printer>() > 0)
				{
					tt = Quary.First<T_Printer>();

				}
			}
			return tt;
		}

		public T_Printer StockPrinterSetting2(int k, int no)
		{
			T_Printer tt = new T_Printer();
			IOrderedQueryable<T_Printer> Quary =
				from er in this.T_Printers
				where er.InvID == no && er.InvID != VarGeneral.DraftBillId && er.User_ID == k
				orderby er.InvID
				select er;
			try
			{
				if (Quary.Count<T_Printer>() > 0)
				{
					tt = Quary.First<T_Printer>();

					return tt;
				}
				else

					return null;
			}
			catch
			{
				Environment.Exit(0
					);
			}
			return null;
		}

		public T_INVSETTING StockInvSettingInvoices(int k, int no)
		{
			T_INVSETTING tt = new T_INVSETTING();
			IOrderedQueryable<T_INVSETTING> Quary =
				from er in this.T_INVSETTINGs
				where er.CatID == (int?)no && er.InvID != VarGeneral.DraftBillId
				orderby er.InvID
				select er;
			if (Quary.Count<T_INVSETTING>() > 0)
			{
				tt = Quary.First<T_INVSETTING>();
			}
			return tt;
		}
		public T_INVSETTING StockInvSettingInvoicesDefPrinter(int k, string no)
		{
			T_INVSETTING tt = new T_INVSETTING();
			IOrderedQueryable<T_INVSETTING> Quary =
				from er in this.T_INVSETTINGs
				where er.defPrn == no
				where er.CatID.HasValue && er.InvID != VarGeneral.DraftBillId
				orderby er.InvID
				select er;
			if (Quary.Count<T_INVSETTING>() > 0)
			{
				tt = Quary.First<T_INVSETTING>();
			}
			return tt;
		}
		public List<T_INVSETTING> StockInvSettingList(int k)
		{
			List<T_INVSETTING> tt = new List<T_INVSETTING>();
			IOrderedQueryable<T_INVSETTING> Quary =
				from er in this.T_INVSETTINGs
				where er.InvID != VarGeneral.DraftBillId
				orderby er.InvID
				select er;
			if (Quary.Count<T_INVSETTING>() > 0)
			{
				tt = Quary.ToList<T_INVSETTING>();
			}
			return tt;
		}
		public List<T_Printer> StockPrinterList(int k)
		{
			List<T_Printer> tt = new List<T_Printer>();
			IOrderedQueryable<T_Printer> Quary =
				from er in this.T_Printers
				where er.InvID != VarGeneral.DraftBillId && er.User_ID == VarGeneral.UserID
				orderby er.InvID
				select er;
			if (Quary.Count<T_Printer>() > 0)
			{
				tt = Quary.ToList<T_Printer>();
			}
			return tt;
		}
		public bool StockIsRepair(string no)
		{
			bool flag;
			flag = ((
				from er in this.T_INVDET_Repairs
				where er.ItmNo_Repair == no
				select er).Count<T_INVDET_Repair>() <= 0 ? false : true);
			return flag;
		}
		public T_Item StockItem(string no)
		{
			T_Item tt = new T_Item();
			IOrderedQueryable<T_Item> Quary =
				from er in this.T_Items
				where er.Itm_No == no
				orderby er.Itm_No
				select er;
			if (Quary.Count<T_Item>() > 0)
			{
				tt = Quary.First<T_Item>();
			}
			return tt;
		}
		public string StockItemBarcod(string no, string UntA, string UntE)
		{
			string barCod1;
			T_Item tt = new T_Item();
			IOrderedQueryable<T_Item> Quary =
				from er in this.T_Items
				where er.Itm_No == no
				orderby er.Itm_No
				select er;
			if (Quary.Count<T_Item>() > 0)
			{
				for (int i = 1; i <= 5; i++)
				{
					if (i == 1)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit.Eng_Des == UntE))
							{
								barCod1 = Quary.FirstOrDefault<T_Item>().BarCod1;
								return barCod1;
							}
						}
						catch
						{
						}
					}
					else if (i == 2)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit1.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit1.Eng_Des == UntE))
							{
								barCod1 = Quary.FirstOrDefault<T_Item>().BarCod2;
								return barCod1;
							}
						}
						catch
						{
						}
					}
					else if (i == 3)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit2.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit2.Eng_Des == UntE))
							{
								barCod1 = Quary.FirstOrDefault<T_Item>().BarCod3;
								return barCod1;
							}
						}
						catch
						{
						}
					}
					else if (i == 4)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit3.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit3.Eng_Des == UntE))
							{
								barCod1 = Quary.FirstOrDefault<T_Item>().BarCod4;
								return barCod1;
							}
						}
						catch
						{
						}
					}
					else if (i == 5)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit4.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit4.Eng_Des == UntE))
							{
								barCod1 = Quary.FirstOrDefault<T_Item>().BarCod5;
								return barCod1;
							}
						}
						catch
						{
						}
					}
				}
				barCod1 = "";
				return barCod1;
			}
			else
			{
				barCod1 = "";
				return barCod1;
			}
#pragma warning disable CS0162 // Unreachable code detected
			return barCod1;
#pragma warning restore CS0162 // Unreachable code detected
		}
		public bool StockItemDet(string no)
		{
			bool flag;
			flag = ((
				from er in this.T_ItemDets
				where er.GItmNo == no
				select er).Count<T_ItemDet>() <= 0 ? false : true);
			return flag;
		}
		public T_Item StockItemid(int no)
		{
			T_Item tt = new T_Item();
			IOrderedQueryable<T_Item> Quary =
				from er in this.T_Items
				where er.Itm_ID == no
				orderby er.Itm_No
				select er;
			if (Quary.Count<T_Item>() > 0)
			{
				tt = Quary.First<T_Item>();
			}
			return tt;
		}
		public List<T_Item> StockItemList(string no)
		{
			List<T_Item> tt = new List<T_Item>();
			List<T_Item> Quary = (
				from er in this.T_Items
				where er.Itm_No == no
				orderby er.Itm_No
				select er).ToList<T_Item>();
			if (Quary.Count<T_Item>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Item> StockItemListcat()
		{
			List<T_Item> tt = new List<T_Item>();
			List<T_Item> Quary = (
				from er in this.T_Items

				orderby er.ItmCat
				select er).ToList<T_Item>();
			if (Quary.Count<T_Item>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_CATEGORY> StoctCatList()
		{
			List<T_CATEGORY> tt = new List<T_CATEGORY>();
			List<T_CATEGORY> Quary = (
				from er in this.T_CATEGORies
				orderby er.CAT_ID
				select er).ToList<T_CATEGORY>();
			if (Quary.Count<T_CATEGORY>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public List<T_Item> StockItemListBycat(int no)
		{
			List<T_Item> tt = new List<T_Item>();
			List<T_Item> Quary = (
				from er in this.T_Items
				where er.ItmCat == no
				orderby er.Itm_No
				select er).ToList<T_Item>();
			if (Quary.Count<T_Item>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public int StockInvHeadSaveover(int invtype, string sales)
		{
			T_INVHED tt = new T_INVHED();
			IOrderedQueryable<T_INVHED> Quary =
				from er in this.T_INVHEDs
				where er.CInvType == invtype
				where er.InvTyp == VarGeneral.DraftBillId
				where er.SalsManNo == sales

				orderby er.InvNo
				select er;

			return Quary.Count<T_INVHED>();
		}
		public List<T_Item> StockItemListAcc(string no, int acc)
		{
			List<T_Item> tt = new List<T_Item>();
			List<T_Item> Quary = (
				from er in this.T_Items
				where er.Itm_No == no
				where er.DefultVendor == (int?)acc
				orderby er.Itm_No
				select er).ToList<T_Item>();
			if (Quary.Count<T_Item>() > 0)
			{
				tt = Quary;
			}
			return tt;
		}
		public double StockItemPrice(string no, string UntA, string UntE)
		{
			double value;
			double? untPri1;
			double num;
			bool flag;
			bool flag1;
			bool flag2;
			bool flag3;
			bool flag4;
			T_Item tt = new T_Item();
			IOrderedQueryable<T_Item> Quary =
				from er in this.T_Items
				where er.Itm_No == no
				orderby er.Itm_No
				select er;
			if (Quary.Count<T_Item>() > 0)
			{
				for (int i = 1; i <= 5; i++)
				{
					if (i == 1)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit.Eng_Des == UntE))
							{
								if (!VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 60) || Quary.FirstOrDefault<T_Item>().TaxSales.Value <= 0)
								{
									flag4 = true;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri1;
									num = untPri1.Value;
									flag4 = string.IsNullOrEmpty(num.ToString());
								}
								if (flag4)
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri1;
									value = untPri1.Value;
									return value;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri1;
									num = untPri1.Value;
									double num1 = double.Parse(VarGeneral.TString.TEmpty(num.ToString()));
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri1;
									num = untPri1.Value;
									double num2 = double.Parse(num.ToString());
									untPri1 = Quary.FirstOrDefault<T_Item>().TaxSales;
									value = Math.Round(num1 + num2 * (untPri1.Value / 100), (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2));
									return value;
								}
							}
						}
						catch
						{
						}
					}
					else if (i == 2)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit1.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit1.Eng_Des == UntE))
							{
								if (!VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 60) || Quary.FirstOrDefault<T_Item>().TaxSales.Value <= 0)
								{
									flag3 = true;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri2;
									num = untPri1.Value;
									flag3 = string.IsNullOrEmpty(num.ToString());
								}
								if (flag3)
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri2;
									value = untPri1.Value;
									return value;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri2;
									num = untPri1.Value;
									double num3 = double.Parse(VarGeneral.TString.TEmpty(num.ToString()));
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri2;
									num = untPri1.Value;
									double num4 = double.Parse(num.ToString());
									untPri1 = Quary.FirstOrDefault<T_Item>().TaxSales;
									value = Math.Round(num3 + num4 * (untPri1.Value / 100), (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2));
									return value;
								}
							}
						}
						catch
						{
						}
					}
					else if (i == 3)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit2.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit2.Eng_Des == UntE))
							{
								if (!VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 60) || Quary.FirstOrDefault<T_Item>().TaxSales.Value <= 0)
								{
									flag2 = true;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri3;
									num = untPri1.Value;
									flag2 = string.IsNullOrEmpty(num.ToString());
								}
								if (flag2)
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri3;
									value = untPri1.Value;
									return value;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri3;
									num = untPri1.Value;
									double num5 = double.Parse(VarGeneral.TString.TEmpty(num.ToString()));
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri3;
									num = untPri1.Value;
									double num6 = double.Parse(num.ToString());
									untPri1 = Quary.FirstOrDefault<T_Item>().TaxSales;
									value = Math.Round(num5 + num6 * (untPri1.Value / 100), (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2));
									return value;
								}
							}
						}
						catch
						{
						}
					}
					else if (i == 4)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit3.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit3.Eng_Des == UntE))
							{
								if (!VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 60) || Quary.FirstOrDefault<T_Item>().TaxSales.Value <= 0)
								{
									flag1 = true;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri4;
									num = untPri1.Value;
									flag1 = string.IsNullOrEmpty(num.ToString());
								}
								if (flag1)
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri4;
									value = untPri1.Value;
									return value;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri4;
									num = untPri1.Value;
									double num7 = double.Parse(VarGeneral.TString.TEmpty(num.ToString()));
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri4;
									num = untPri1.Value;
									double num8 = double.Parse(num.ToString());
									untPri1 = Quary.FirstOrDefault<T_Item>().TaxSales;
									value = Math.Round(num7 + num8 * (untPri1.Value / 100), (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2));
									return value;
								}
							}
						}
						catch
						{
						}
					}
					else if (i == 5)
					{
						try
						{
							if ((Quary.FirstOrDefault<T_Item>().T_Unit4.Arb_Des == UntA ? true : Quary.FirstOrDefault<T_Item>().T_Unit4.Eng_Des == UntE))
							{
								if (!VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 60) || Quary.FirstOrDefault<T_Item>().TaxSales.Value <= 0)
								{
									flag = true;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri5;
									num = untPri1.Value;
									flag = string.IsNullOrEmpty(num.ToString());
								}
								if (flag)
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri5;
									value = untPri1.Value;
									return value;
								}
								else
								{
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri5;
									num = untPri1.Value;
									double num9 = double.Parse(VarGeneral.TString.TEmpty(num.ToString()));
									untPri1 = Quary.FirstOrDefault<T_Item>().UntPri5;
									num = untPri1.Value;
									double num10 = double.Parse(num.ToString());
									untPri1 = Quary.FirstOrDefault<T_Item>().TaxSales;
									value = Math.Round(num9 + num10 * (untPri1.Value / 100), (VarGeneral.TString.ChkStatShow(VarGeneral.Settings_Sys.Seting, 49) ? VarGeneral.DecimalNo : 2));
									return value;
								}
							}
						}
						catch
						{
						}
					}
				}
				value = 0;
				return value;
			}
			else
			{
				value = 0;
				return value;
			}
#pragma warning disable CS0162 // Unreachable code detected
			return value;
#pragma warning restore CS0162 // Unreachable code detected
		}
		public T_ItemSerial StockItemSerial(string no)
		{
			T_ItemSerial tt = new T_ItemSerial();
			IOrderedQueryable<T_ItemSerial> Quary =
				from er in this.T_ItemSerials
				where er.SerialKey == no
				orderby er.id
				select er;
			if (Quary.Count<T_ItemSerial>() > 0)
			{
				tt = Quary.First<T_ItemSerial>();
			}
			return tt;
		}
		public double StockItmQtyInv(int no, string itmNo)
		{
			double num;
			List<T_INVDET> Quary = (
				from er in this.T_INVDETs
				where er.InvId == (int?)no
				where er.ItmNo == itmNo
				select er).ToList<T_INVDET>();
			num = (Quary.Count <= 0 ? 0 : Math.Abs(Quary.Sum<T_INVDET>((T_INVDET q) => q.RealQty.Value)));
			return num;
		}
		public T_Loc StockLoc(string no)
		{
			T_Loc tt = new T_Loc();
			IOrderedQueryable<T_Loc> Quary =
				from er in this.T_Locs
				where er.Loc_No == no
				orderby er.Loc_No
				select er;
			if (Quary.Count<T_Loc>() > 0)
			{
				tt = Quary.First<T_Loc>();
			}
			return tt;
		}
		public T_Mndob StockMndobByName(string no)
		{
			T_Mndob tt = new T_Mndob();
			IOrderedQueryable<T_Mndob> Quary =
				from er in this.T_Mndobs
				where er.Arb_Des == no
				orderby er.Mnd_No
				select er;
			if (Quary.Count<T_Mndob>() > 0)
			{
				tt = Quary.First<T_Mndob>();
			}
			return tt;
		}
		public T_Mndob StockMndob(string no)
		{
			T_Mndob tt = new T_Mndob();
			IOrderedQueryable<T_Mndob> Quary =
				from er in this.T_Mndobs
				where er.Mnd_No == no
				orderby er.Mnd_No
				select er;
			if (Quary.Count<T_Mndob>() > 0)
			{
				tt = Quary.First<T_Mndob>();
			}
			return tt;
		}
		public T_Mndob StockMndobID(int no)
		{
			T_Mndob tt = new T_Mndob();
			IOrderedQueryable<T_Mndob> Quary =
				from er in this.T_Mndobs
				where er.Mnd_ID == no
				orderby er.Mnd_No
				select er;
			if (Quary.Count<T_Mndob>() > 0)
			{
				tt = Quary.First<T_Mndob>();
			}
			return tt;
		}
		public List<T_Mndob> StockMndList()
		{
			T_Mndob tt = new T_Mndob();
			IOrderedQueryable<T_Mndob> Quary =
				from er in this.T_Mndobs
				orderby er.Mnd_No
				select er;
			if (Quary.Count<T_Mndob>() > 0)
			{
				tt = Quary.First<T_Mndob>();
			}
			List<T_Mndob> ls = new List<T_Mndob>();
			foreach (T_Mndob e in Quary)
			{
				ls.Add(e);
			}
			return ls;
		}
		public List<T_CarTyp> StocKCarCompanies()
		{
			T_CarTyp tt = new T_CarTyp();
			IOrderedQueryable<T_CarTyp> Quary =
				from er in this.T_CarTyps
				orderby er.CarTyp_No
				select er;

			List<T_CarTyp> ls = new List<T_CarTyp>();
			foreach (T_CarTyp e in Quary)
			{
				ls.Add(e);
			}
			return ls;
		}
		public T_MTemplate StockTMessages(int typ)
		{
			T_MTemplate tt = new T_MTemplate();
			IOrderedQueryable<T_MTemplate> Quary =
				from er in this.T_MTemplates
				where er.ID == typ
				orderby er.ID
				select er;


			List<T_MTemplate> ls = new List<T_MTemplate>();
			if (Quary.Count<T_MTemplate>() > 0)
			{
				tt = Quary.First<T_MTemplate>();
			}
			return tt;
		}
		public List<T_Car> StocKCarDetials(int typ)
		{
			T_Car tt = new T_Car();
			IOrderedQueryable<T_Car> Quary =
				from er in this.T_Cars
				orderby er.Car_No
				select er;


			List<T_Car> ls = new List<T_Car>();
			foreach (T_Car e in Quary)
			{
				if (e.CarType == typ)
					ls.Add(e);
			}
			return ls;
		}
		public List<T_Car> StocKCarDetialss(int no)
		{
			T_Car tt = new T_Car();
			IOrderedQueryable<T_Car> Quary =
				from er in this.T_Cars
				orderby er.Car_No
				select er;


			List<T_Car> ls = new List<T_Car>();
			foreach (T_Car e in Quary)
			{
				if (e.Car_No == no)
					ls.Add(e);
			}
			return ls;
		}

		public List<T_Car> stockallcars()
		{
			T_Car tt = new T_Car();
			IOrderedQueryable<T_Car> Quary =
				from er in this.T_Cars
				orderby er.Car_No
				select er;


			List<T_Car> ls = new List<T_Car>();
			foreach (T_Car e in Quary)
			{

				ls.Add(e);
			}
			return ls;
		}

		public T_Offer StockOffer(int invtype, string no)
		{
			T_Offer tt = new T_Offer();
			IOrderedQueryable<T_Offer> Quary =
				from er in this.T_Offers
				where er.OfferHeadNo == no
				where er.OfferHeadTyp == (int?)invtype
				orderby er.OfferHeadNo
				select er;
			if (Quary.Count<T_Offer>() > 0)
			{
				tt = Quary.First<T_Offer>();
			}
			return tt;
		}
		public T_PatientCout StockPatientCout(string no)
		{
			T_PatientCout tt = new T_PatientCout();
			IOrderedQueryable<T_PatientCout> Quary =
				from er in this.T_PatientCouts
				where er.ItmNo == no
				orderby er.ItmNo
				select er;
			if (Quary.Count<T_PatientCout>() > 0)
			{
				tt = Quary.First<T_PatientCout>();
			}
			return tt;
		}
		public T_PatientCout StockPatientCoutID(int no)
		{
			T_PatientCout tt = new T_PatientCout();
			IOrderedQueryable<T_PatientCout> Quary =
				from er in this.T_PatientCouts
				where er.ID == no
				orderby er.ItmNo
				select er;
			if (Quary.Count<T_PatientCout>() > 0)
			{
				tt = Quary.First<T_PatientCout>();
			}
			return tt;
		}
		public T_per StockPer(int no)
		{
			T_per tt = new T_per();
			IOrderedQueryable<T_per> Quary =
				from er in this.T_pers
				where er.perno == no
				orderby er.perno
				select er;
			if (Quary.Count<T_per>() > 0)
			{
				tt = Quary.First<T_per>();
			}
			return tt;
		}
		public T_STKSQTY StockQtyOLD(string no)
		{
			T_STKSQTY tt = new T_STKSQTY();
			IQueryable<T_STKSQTY> Quary =
				from er in this.T_STKSQTies
				where er.itmNo == no
				select er;
			if (Quary.Count<T_STKSQTY>() > 0)
			{
				tt = Quary.First<T_STKSQTY>();
			}
			return tt;
		}
		public T_Reserv StockReserv(int no)
		{
			T_Reserv tt = new T_Reserv();
			IOrderedQueryable<T_Reserv> Quary =
				from er in this.T_Reservs
				where er.ResrvNo == no
				orderby er.ResrvNo
				select er;
			if (Quary.Count<T_Reserv>() > 0)
			{
				tt = Quary.First<T_Reserv>();
			}
			return tt;
		}
		public T_Room StockRomm(int no)
		{
			T_Room tt = new T_Room();
			IOrderedQueryable<T_Room> Quary =
				from er in this.T_Rooms
				where er.RomeNo == no
				orderby er.RomeNo
				select er;
			if (Quary.Count<T_Room>() > 0)
			{
				tt = Quary.First<T_Room>();
			}
			return tt;
		}
		public T_Room StockRommID(int no)
		{
			T_Room tt = new T_Room();
			IOrderedQueryable<T_Room> Quary =
				from er in this.T_Rooms
				where er.ID == no
				orderby er.RomeNo
				select er;
			if (Quary.Count<T_Room>() > 0)
			{
				tt = Quary.First<T_Room>();
			}
			return tt;
		}
		public T_Rom StockRoom(int no)
		{
			T_Rom tt = new T_Rom();
			IOrderedQueryable<T_Rom> Quary =
				from er in this.T_Roms
				where er.romno == no
				orderby er.romno
				select er;
			if (Quary.Count<T_Rom>() > 0)
			{
				tt = Quary.First<T_Rom>();
			}
			return tt;
		}
		public T_RomChart StockRoomChart(int no)
		{
			T_RomChart tt = new T_RomChart();
			IOrderedQueryable<T_RomChart> Quary =
				from er in this.T_RomCharts
				where er.col1 == (int?)no || er.col2 == (int?)no || er.col3 == (int?)no || er.col4 == (int?)no || er.col5 == (int?)no || er.col6 == (int?)no || er.col7 == (int?)no || er.col8 == (int?)no || er.col9 == (int?)no || er.col10 == (int?)no || er.col11 == (int?)no || er.col12 == (int?)no || er.col13 == (int?)no || er.col14 == (int?)no || er.col15 == (int?)no || er.col16 == (int?)no || er.col17 == (int?)no || er.col18 == (int?)no || er.col19 == (int?)no || er.col20 == (int?)no || er.col21 == (int?)no || er.col22 == (int?)no || er.col23 == (int?)no || er.col24 == (int?)no || er.col25 == (int?)no || er.col26 == (int?)no || er.col27 == (int?)no || er.col28 == (int?)no || er.col29 == (int?)no || er.col30 == (int?)no || er.col31 == (int?)no || er.col32 == (int?)no || er.col33 == (int?)no || er.col34 == (int?)no || er.col35 == (int?)no || er.col36 == (int?)no || er.col37 == (int?)no || er.col38 == (int?)no || er.col39 == (int?)no || er.col40 == (int?)no || er.col41 == (int?)no || er.col42 == (int?)no || er.col43 == (int?)no || er.col44 == (int?)no || er.col45 == (int?)no || er.col46 == (int?)no || er.col47 == (int?)no || er.col48 == (int?)no || er.col49 == (int?)no || er.col50 == (int?)no || er.col51 == (int?)no || er.col52 == (int?)no || er.col53 == (int?)no || er.col54 == (int?)no || er.col55 == (int?)no || er.col56 == (int?)no || er.col57 == (int?)no || er.col58 == (int?)no || er.col59 == (int?)no || er.col60 == (int?)no || er.col62 == (int?)no || er.col63 == (int?)no || er.col64 == (int?)no || er.col65 == (int?)no || er.col66 == (int?)no || er.col67 == (int?)no || er.col68 == (int?)no || er.col69 == (int?)no || er.col70 == (int?)no || er.col71 == (int?)no || er.col72 == (int?)no || er.col73 == (int?)no || er.col74 == (int?)no || er.col74 == (int?)no || er.col75 == (int?)no || er.col76 == (int?)no || er.col77 == (int?)no || er.col78 == (int?)no || er.col79 == (int?)no || er.col80 == (int?)no || er.col81 == (int?)no || er.col82 == (int?)no || er.col83 == (int?)no || er.col84 == (int?)no || er.col85 == (int?)no || er.col86 == (int?)no || er.col87 == (int?)no || er.col88 == (int?)no || er.col89 == (int?)no || er.col90 == (int?)no || er.col91 == (int?)no || er.col92 == (int?)no || er.col93 == (int?)no || er.col94 == (int?)no || er.col95 == (int?)no || er.col96 == (int?)no || er.col97 == (int?)no || er.col98 == (int?)no || er.col99 == (int?)no || er.col100 == (int?)no
				orderby er.ID
				select er;
			if (Quary.Count<T_RomChart>() > 0)
			{
				tt = Quary.First<T_RomChart>();
			}
			return tt;
		}
		public T_sertyp StockServType(string no)
		{
			T_sertyp tt = new T_sertyp();
			IOrderedQueryable<T_sertyp> Quary =
				from er in this.T_sertyps
				where er.Serv_No == no
				orderby er.Serv_No
				select er;
			if (Quary.Count<T_sertyp>() > 0)
			{
				tt = Quary.First<T_sertyp>();
			}
			return tt;
		}
		public T_sertyp StockServTypeID(int no)
		{
			T_sertyp tt = new T_sertyp();
			IOrderedQueryable<T_sertyp> Quary =
				from er in this.T_sertyps
				where er.Serv_ID == no
				orderby er.Serv_No
				select er;
			if (Quary.Count<T_sertyp>() > 0)
			{
				tt = Quary.First<T_sertyp>();
			}
			return tt;
		}
		public T_Snd StockSnd(int sndTyp, int no)
		{
			T_Snd tt = new T_Snd();
			IOrderedQueryable<T_Snd> Quary =
				from er in this.T_Snds
				where er.fNo == no
				where er.typ == (int?)sndTyp
				orderby er.fNo
				select er;
			if (Quary.Count<T_Snd>() > 0)
			{
				tt = Quary.First<T_Snd>();
			}
			return tt;
		}
		public T_Store StockStore(int no)
		{
			T_Store tt = new T_Store();
			IOrderedQueryable<T_Store> Quary =
				from er in this.T_Stores
				where er.Stor_ID == no
				orderby er.Stor_ID
				select er;
			if (Quary.Count<T_Store>() > 0)
			{
				tt = Quary.First<T_Store>();
			}
			return tt;
		}
		public bool StockStoreCustInvSal(string vItmNo, string vCust, double vRealQ, int vStoreNo, double vQPlus)
		{
			bool flag;
			try
			{
				T_StoreMnd tt = new T_StoreMnd();
				IOrderedQueryable<T_StoreMnd> Quary =
					from er in this.T_StoreMnds
					where er.itmNo == vItmNo
					where er.CusVenNo == vCust
					where er.storeNo == (int?)vStoreNo
					orderby er.itmNo
					select er;
				if (Quary.Count<T_StoreMnd>() <= 0)
				{
					flag = false;
				}
				else
				{
					flag = (Quary.First<T_StoreMnd>().stkQty.Value + vQPlus >= vRealQ ? true : false);
				}
			}
			catch
			{
				flag = false;
			}
			return flag;
		}
		public T_StoreMnd StockStoreCustInvSalNew(string vItmNo, string vCust, int vStoreNo)
		{
			T_StoreMnd tStoreMnd;
			T_StoreMnd tt = new T_StoreMnd();
			try
			{
				IOrderedQueryable<T_StoreMnd> Quary =
					from er in this.T_StoreMnds
					where er.itmNo == vItmNo
					where er.CusVenNo == vCust
					where er.storeNo == (int?)vStoreNo
					orderby er.itmNo
					select er;
				if (Quary.Count<T_StoreMnd>() > 0)
				{
					tt = Quary.First<T_StoreMnd>();
				}
				tStoreMnd = tt;
			}
			catch
			{
				tStoreMnd = tt;
			}
			return tStoreMnd;
		}
		public bool StockStoreCustReturn(string vItmNo, string vCustSupp, double vRealQ, int vStoreNo, double vTot)
		{
			bool flag;
			double? nullable;
			try
			{
				T_StoreMnd tt = new T_StoreMnd();
				IOrderedQueryable<T_StoreMnd> Quary =
					from er in this.T_StoreMnds
					where er.itmNo == vItmNo
					where er.CusVenNo == vCustSupp
					where er.storeNo == (int?)vStoreNo
					orderby er.itmNo
					select er;
				if (Quary.Count<T_StoreMnd>() <= 0)
				{
					flag = false;
				}
				else
				{
					double? nullable1 = Quary.First<T_StoreMnd>().stkQty;
					double num = vTot;
					if (nullable1.HasValue)
					{
						nullable = new double?((double)nullable1.GetValueOrDefault() + num);
					}
					else
					{
						nullable = null;
					}
					nullable1 = nullable;
					num = vRealQ;
					flag = (((double)nullable1.GetValueOrDefault() >= num ? 0 : (nullable1.HasValue == true ? 1 : 0)) == 0 ? true : false);
				}
			}
			catch
			{
				flag = false;
			}
			return flag;
		}
		public bool StockStoreMnd(string vItmNo, double vRealQ, int vStoreNo)
		{
			bool flag;
			try
			{
				T_StoreMnd tt = new T_StoreMnd();
				IOrderedQueryable<T_STKSQTY> Quary =
					from er in this.T_STKSQTies
					where er.itmNo == vItmNo
					where er.storeNo == (int?)vStoreNo
					orderby er.itmNo
					select er;
				if (Quary.Count<T_STKSQTY>() <= 0)
				{
					flag = false;
				}
				else
				{
					double? nullable = Quary.First<T_STKSQTY>().stkQty;
					flag = (((double)nullable.GetValueOrDefault() >= vRealQ ? 0 : (nullable.HasValue == true ? 1 : 0)) == 0 ? true : false);
				}
			}
			catch
			{
				flag = false;
			}
			return flag;
		}
		public bool StockStoreMndInvSal(string vItmNo, int vMndNo, double vRealQ, int vStoreNo, double vQPlus)
		{
			bool flag;
			try
			{
				T_StoreMnd tt = new T_StoreMnd();
				IOrderedQueryable<T_StoreMnd> Quary =
					from er in this.T_StoreMnds
					where er.itmNo == vItmNo
					where er.MndNo == (int?)vMndNo
					where er.storeNo == (int?)vStoreNo
					orderby er.itmNo
					select er;
				if (Quary.Count<T_StoreMnd>() <= 0)
				{
					flag = false;
				}
				else
				{
					flag = (Quary.First<T_StoreMnd>().stkQty.Value + vQPlus >= vRealQ ? true : false);
				}
			}
			catch
			{
				flag = false;
			}
			return flag;
		}
		public T_StoreMnd StockStoreMndInvSalNew(string vItmNo, int vMndNo, int vStoreNo)
		{
			T_StoreMnd tStoreMnd;
			T_StoreMnd tt = new T_StoreMnd();
			try
			{
				IOrderedQueryable<T_StoreMnd> Quary =
					from er in this.T_StoreMnds
					where er.itmNo == vItmNo
					where er.MndNo == (int?)vMndNo
					where er.storeNo == (int?)vStoreNo
					orderby er.itmNo
					select er;
				if (Quary.Count<T_StoreMnd>() > 0)
				{
					tt = Quary.First<T_StoreMnd>();
				}
				tStoreMnd = tt;
			}
			catch
			{
				tStoreMnd = tt;
			}
			return tStoreMnd;
		}
		public bool StockStoreMndReturn(string vItmNo, int vMndNo, double vRealQ, int vStoreNo, double vTot)
		{
			bool flag;
			double? nullable;
			try
			{
				T_StoreMnd tt = new T_StoreMnd();
				IOrderedQueryable<T_StoreMnd> Quary =
					from er in this.T_StoreMnds
					where er.itmNo == vItmNo
					where er.MndNo == (int?)vMndNo
					where er.storeNo == (int?)vStoreNo
					orderby er.itmNo
					select er;
				if (Quary.Count<T_StoreMnd>() <= 0)
				{
					flag = false;
				}
				else
				{
					double? nullable1 = Quary.First<T_StoreMnd>().stkQty;
					double num = vTot;
					if (nullable1.HasValue)
					{
						nullable = new double?((double)nullable1.GetValueOrDefault() + num);
					}
					else
					{
						nullable = null;
					}
					nullable1 = nullable;
					num = vRealQ;
					flag = (((double)nullable1.GetValueOrDefault() >= num ? 0 : (nullable1.HasValue == true ? 1 : 0)) == 0 ? true : false);
				}
			}
			catch
			{
				flag = false;
			}
			return flag;
		}
		public T_tel StockTel(int no)
		{
			T_tel tt = new T_tel();
			IOrderedQueryable<T_tel> Quary =
				from er in this.T_tels
				where er.ID == no
				orderby er.ID
				select er;
			if (Quary.Count<T_tel>() > 0)
			{
				tt = Quary.First<T_tel>();
			}
			return tt;
		}
		public T_telmn StockTelMn(int no)
		{
			T_telmn tt = new T_telmn();
			IOrderedQueryable<T_telmn> Quary =
				from er in this.T_telmns
				where er.pl == no
				orderby er.pl
				select er;
			if (Quary.Count<T_telmn>() > 0)
			{
				tt = Quary.First<T_telmn>();
			}
			return tt;
		}
		public T_TenantContract StockTenantContractData(int no, int _tenant)
		{
			T_TenantContract tt = new T_TenantContract();
			IOrderedQueryable<T_TenantContract> Quary =
				from er in this.T_TenantContracts
				where er.ContractNo == no
				where er.tenant_ID == _tenant
				orderby er.ContractNo
				select er;
			if (Quary.Count<T_TenantContract>() > 0)
			{
				tt = Quary.First<T_TenantContract>();
			}
			return tt;
		}
		public T_TenantContract StockTenantContractDataID(int no)
		{
			T_TenantContract tt = new T_TenantContract();
			IOrderedQueryable<T_TenantContract> Quary =
				from er in this.T_TenantContracts
				where er.ContractID == no
				orderby er.ContractNo
				select er;
			if (Quary.Count<T_TenantContract>() > 0)
			{
				tt = Quary.First<T_TenantContract>();
			}
			return tt;
		}
		public T_Tenant StockTenantData(int no)
		{
			T_Tenant tt = new T_Tenant();
			IOrderedQueryable<T_Tenant> Quary =
				from er in this.T_Tenants
				where er.tenantNo == no
				orderby er.tenantNo
				select er;
			if (Quary.Count<T_Tenant>() > 0)
			{
				tt = Quary.First<T_Tenant>();
			}
			return tt;
		}
		public T_TenantPayment StockTenantPaymentData(int no, int _tenantContract)
		{
			T_TenantPayment tt = new T_TenantPayment();
			IOrderedQueryable<T_TenantPayment> Quary =
				from er in this.T_TenantPayments
				where er.PaymentNo == no
				where er.tenantContract_ID == _tenantContract
				orderby er.PaymentNo
				select er;
			if (Quary.Count<T_TenantPayment>() > 0)
			{
				tt = Quary.First<T_TenantPayment>();
			}
			return tt;
		}
		public T_TenantPayment StockTenantPaymentDataID(int no)
		{
			T_TenantPayment tt = new T_TenantPayment();
			IOrderedQueryable<T_TenantPayment> Quary =
				from er in this.T_TenantPayments
				where er.PaymentID == no
				orderby er.PaymentNo
				select er;
			if (Quary.Count<T_TenantPayment>() > 0)
			{
				tt = Quary.First<T_TenantPayment>();
			}
			return tt;
		}
		public T_tran StockTran(int no)
		{
			T_tran tt = new T_tran();
			IOrderedQueryable<T_tran> Quary =
				from er in this.T_trans
				where er.fat == (int?)no
				orderby er.ID
				select er;
			if (Quary.Count<T_tran>() > 0)
			{
				tt = Quary.First<T_tran>();
			}
			return tt;
		}
		public T_Unit StockUnitid(string no)
		{
			T_Unit tt = new T_Unit();
			IOrderedQueryable<T_Unit> Quary =
				from er in this.T_Units
				where er.Arb_Des == no
				orderby er.Unit_No
				select er;
			if (Quary.Count<T_Unit>() > 0)
			{
				tt = Quary.First<T_Unit>();
			}
			return tt;
		}
		public T_Unit StockUnit(string no)
		{
			T_Unit tt = new T_Unit();
			IOrderedQueryable<T_Unit> Quary =
				from er in this.T_Units
				where er.Unit_No == no
				orderby er.Unit_No
				select er;
			if (Quary.Count<T_Unit>() > 0)
			{
				tt = Quary.First<T_Unit>();
			}
			return tt;
		}
		public T_Unit StockUnitbyname(string no)
		{
			T_Unit tt = new T_Unit();
			IOrderedQueryable<T_Unit> Quary;
			if (VarGeneral.UserLang == 0)
				Quary =
				from er in this.T_Units
				where (VarGeneral.UserLang == 0 ? er.Arb_Des == no : er.Eng_Des == no)
				orderby er.Unit_No
				select er;
			else
				Quary =
				from er in this.T_Units
				where er.Eng_Des == no
				orderby er.Unit_No
				select er;
			if (Quary.Count<T_Unit>() > 0)
			{
				tt = Quary.First<T_Unit>();
			}
			return tt;
		}
		public T_Waiter StockWaiter(string no)
		{
			T_Waiter tt = new T_Waiter();
			IOrderedQueryable<T_Waiter> Quary =
				from er in this.T_Waiters
				where er.waiter_No == no
				orderby er.waiter_No
				select er;
			if (Quary.Count<T_Waiter>() > 0)
			{
				tt = Quary.First<T_Waiter>();
			}
			return tt;
		}
		public T_Waiter StockWaiterID(int no)
		{
			T_Waiter tt = new T_Waiter();
			IOrderedQueryable<T_Waiter> Quary =
				from er in this.T_Waiters
				where er.waiter_ID == no
				orderby er.waiter_No
				select er;
			if (Quary.Count<T_Waiter>() > 0)
			{
				tt = Quary.First<T_Waiter>();
			}
			return tt;
		}
		public T_Info SystemSettingEmp()
		{
			T_Info tt = new T_Info();
			List<T_Info> Quary = (
				from er in this.T_Infos
				select er).ToList<T_Info>();
			if (Quary.Count<T_Info>() > 0)
			{
				tt = Quary.First<T_Info>();
			}
			return tt;
		}
		public T_SYSSETTING SystemSettingStock()
		{
			T_SYSSETTING tt = new T_SYSSETTING();
			IQueryable<T_SYSSETTING> Quary =
				from er in this.T_SYSSETTINGs
				select er;
			try
			{

				if (Quary.Count<T_SYSSETTING>() > 0)
				{

					tt = Quary.First<T_SYSSETTING>();
				}
			}
			catch
			{

				{

				}
			}
			return tt;
		}
		public T_Ticket TicketEmp(int ID)
		{
			T_Ticket tt = new T_Ticket();
			IQueryable<T_Ticket> Quary =
				from er in this.T_Tickets
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_Ticket>() > 0)
			{
				tt = Quary.First<T_Ticket>();
			}
			return tt;
		}
		public double TicktAmount(string BDate, string EDate, double vDays)
		{
			double num;
			int Years = 0;
			int Months = 0;
			int Days = 0;
			if (Convert.ToDateTime(BDate) > Convert.ToDateTime(EDate))
			{
				num = vDays;
			}
			else if (vDays > 0)
			{
				DateTime dateTime = Convert.ToDateTime(EDate);
				int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2));
				dateTime = Convert.ToDateTime(EDate);
				int num1 = int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2));
				dateTime = Convert.ToDateTime(BDate);
				Days = num1 - int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2));
				if (Days < 0)
				{
					Days += 30;
					Months += -1;
				}
				dateTime = Convert.ToDateTime(EDate);
				int num2 = int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(5, 2));
				dateTime = Convert.ToDateTime(BDate);
				Months = Months + (num2 - int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(5, 2)));
				if (Months < 0)
				{
					Months += 12;
					Years += -1;
				}
				dateTime = Convert.ToDateTime(EDate);
				int num3 = int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(0, 4));
				dateTime = Convert.ToDateTime(BDate);
				Years = Years + (num3 - int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(0, 4)));
				Months = Years * 12 + Months;
				num = (double)Months * vDays / 12;
			}
			else
			{
				num = vDays;
			}
			return num;
		}
		public T_TransEmployee TransEmp(int ID)
		{
			T_TransEmployee tt = new T_TransEmployee();
			IQueryable<T_TransEmployee> Quary =
				from er in this.T_TransEmployees
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_TransEmployee>() > 0)
			{
				tt = Quary.First<T_TransEmployee>();
			}
			return tt;
		}
		public T_treatment TreatmentEmp(int ID)
		{
			T_treatment tt = new T_treatment();
			IQueryable<T_treatment> Quary =
				from er in this.T_treatments
				where er.treatment_No == ID
				select er;
			if (Quary.Count<T_treatment>() > 0)
			{
				tt = Quary.First<T_treatment>();
			}
			return tt;
		}
		public void Update_TicketBalance(string EmpID, double vTicket, double vTicket2)
		{
			double? nullable;
			double? nullable1;
			double? nullable2;
			T_Emp q = this.EmpsEmp(EmpID);
			T_Emp tEmp = q;
			double? ticketsBalance = q.TicketsBalance;
			double num = vTicket2;
			if (ticketsBalance.HasValue)
			{
				nullable1 = new double?((double)ticketsBalance.GetValueOrDefault() + num);
			}
			else
			{
				nullable = null;
				nullable1 = nullable;
			}
			ticketsBalance = nullable1;
			num = vTicket;
			if (ticketsBalance.HasValue)
			{
				nullable2 = new double?((double)ticketsBalance.GetValueOrDefault() - num);
			}
			else
			{
				nullable = null;
				nullable2 = nullable;
			}
			tEmp.TicketsBalance = nullable2;
			try
			{
				base.Log = VarGeneral.DebugLog;
				this.SubmitChanges(ConflictMode.ContinueOnConflict);
			}
#pragma warning disable CS0168 // The variable 'sqlException' is declared but never used
			catch (SqlException sqlException)
#pragma warning restore CS0168 // The variable 'sqlException' is declared but never used
			{
				return;
			}
#pragma warning disable CS0168 // The variable 'exception' is declared but never used
			catch (Exception exception)
#pragma warning restore CS0168 // The variable 'exception' is declared but never used
			{
				return;
			}
		}
		public void Update_VacBalance(string EmpID, double vVca, double vVca2)
		{
			double? nullable;
			double? nullable1;
			double? nullable2;
			T_Emp q = this.EmpsEmp(EmpID);
			T_Emp tEmp = q;
			double? vacationBalance = q.VacationBalance;
			double num = vVca2;
			if (vacationBalance.HasValue)
			{
				nullable1 = new double?((double)vacationBalance.GetValueOrDefault() + num);
			}
			else
			{
				nullable = null;
				nullable1 = nullable;
			}
			vacationBalance = nullable1;
			num = vVca;
			if (vacationBalance.HasValue)
			{
				nullable2 = new double?((double)vacationBalance.GetValueOrDefault() - num);
			}
			else
			{
				nullable = null;
				nullable2 = nullable;
			}
			tEmp.VacationBalance = nullable2;
			try
			{
				base.Log = VarGeneral.DebugLog;
				this.SubmitChanges(ConflictMode.ContinueOnConflict);
			}
#pragma warning disable CS0168 // The variable 'sqlException' is declared but never used
			catch (SqlException sqlException)
#pragma warning restore CS0168 // The variable 'sqlException' is declared but never used
			{
				return;
			}
#pragma warning disable CS0168 // The variable 'exception' is declared but never used
			catch (Exception exception)
#pragma warning restore CS0168 // The variable 'exception' is declared but never used
			{
				return;
			}
		}
		public T_UpdateDoc UpdateDocEmp(int ID)
		{
			T_UpdateDoc tt = new T_UpdateDoc();
			IQueryable<T_UpdateDoc> Quary =
				from er in this.T_UpdateDocs
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_UpdateDoc>() > 0)
			{
				tt = Quary.First<T_UpdateDoc>();
			}
			return tt;
		}
		public int VacAmount(string BDate, string EDate, int vDays)
		{
			int num;
			int Years = 0;
			int Months = 0;
			int Days = 0;
			Months = 0;
			if (Convert.ToDateTime(BDate) > Convert.ToDateTime(EDate))
			{
				num = vDays;
			}
			else if (vDays > 0)
			{
				DateTime dateTime = Convert.ToDateTime(EDate);
				int num1 = int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2));
				dateTime = Convert.ToDateTime(BDate);
				Days = num1 - int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(8, 2));
				if (Days < 0)
				{
					Days += 30;
					Months += -1;
				}
				dateTime = Convert.ToDateTime(EDate);
				int num2 = int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(5, 2));
				dateTime = Convert.ToDateTime(BDate);
				Months = Months + (num2 - int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(5, 2)));
				if (Months < 0)
				{
					Months += 12;
					Years += -1;
				}
				dateTime = Convert.ToDateTime(EDate);
				int num3 = int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(0, 4));
				dateTime = Convert.ToDateTime(BDate);
				Years = Years + (num3 - int.Parse(dateTime.ToString("yyyy/MM/dd").Substring(0, 4)));
				Months = Years * 12 + Months;
				num = Months * vDays / 12;
			}
			else
			{
				num = vDays;
			}
			return num;
		}
		public T_Vacation VacEmp(int ID)
		{
			T_Vacation tt = new T_Vacation();
			IQueryable<T_Vacation> Quary =
				from er in this.T_Vacations
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_Vacation>() > 0)
			{
				tt = Quary.First<T_Vacation>();
			}
			return tt;
		}
		public bool VacEmpSalStatus(string ID, string HDate, string GDate, int vState)
		{
			bool flag;
			bool flag1;
			bool flag2;
			bool flag3;
			T_Vacation tt = new T_Vacation();
			List<T_Vacation> Quary = (
				from er in this.T_Vacations
				where er.EmpID == ID
				select er).ToList<T_Vacation>();
			if (Quary.Count<T_Vacation>() > 0)
			{
				for (int i = 0; i < Quary.Count<T_Vacation>(); i++)
				{
					tt = Quary[i];
					if (vState == 0)
					{
						if (Convert.ToDateTime(tt.StopSalFrom) >= Convert.ToDateTime(HDate))
						{
							flag3 = false;
						}
						else
						{
							flag3 = (Convert.ToDateTime(tt.StopSalFrom) < Convert.ToDateTime(GDate) ? true : !(tt.StopSalFrom != ""));
						}
						if (!flag3)
						{
							flag = true;
							return flag;
						}
					}
					else if (vState != 1)
					{
						HDate = this.n.FormatHijri(HDate, "yyyy/MM/31");
						GDate = this.n.FormatGreg(GDate, "yyyy/MM/31");
						if (Convert.ToDateTime(tt.EndDate) > Convert.ToDateTime(HDate))
						{
							flag1 = false;
						}
						else
						{
							flag1 = (Convert.ToDateTime(tt.EndDate) <= Convert.ToDateTime(GDate) ? true : !(tt.StopSalFrom != ""));
						}
						if (!flag1)
						{
							flag = true;
							return flag;
						}
					}
					else
					{
						string Dt1 = string.Concat(this.n.FormatHijri(HDate, "yyyy/MM"), "/31");
						string Dt2 = string.Concat(this.n.FormatGreg(GDate, "yyyy/MM"), "/31");
						if (Convert.ToDateTime(tt.EndDate) <= Convert.ToDateTime(Dt1))
						{
							flag2 = false;
						}
						else
						{
							flag2 = (Convert.ToDateTime(tt.EndDate) > Convert.ToDateTime(Dt2) ? true : !(tt.StopSalFrom != ""));
						}
						if (!flag2)
						{
							flag = true;
							return flag;
						}
					}
				}
			}
			flag = false;
			return flag;
		}
		public T_VacTyp VacTypEmp(int ID)
		{
			T_VacTyp tt = new T_VacTyp();
			IQueryable<T_VacTyp> Quary =
				from er in this.T_VacTyps
				where er.VacT_No == ID
				select er;
			if (Quary.Count<T_VacTyp>() > 0)
			{
				tt = Quary.First<T_VacTyp>();
			}
			return tt;
		}
		public T_VisaGoBack VisaGoBackEmp(int ID)
		{
			T_VisaGoBack tt = new T_VisaGoBack();
			IQueryable<T_VisaGoBack> Quary =
				from er in this.T_VisaGoBacks
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_VisaGoBack>() > 0)
			{
				tt = Quary.First<T_VisaGoBack>();
			}
			return tt;
		}
		public T_VisaIntroduction VisaIntroductionEmp(int ID)
		{
			T_VisaIntroduction tt = new T_VisaIntroduction();
			IQueryable<T_VisaIntroduction> Quary =
				from er in this.T_VisaIntroductions
				where er.warnNo == ID
				select er;
			if (Quary.Count<T_VisaIntroduction>() > 0)
			{
				tt = Quary.First<T_VisaIntroduction>();
			}
			return tt;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_CarExecuationTable")]
	public partial class T_CarExecuationTable
	{

		private System.Nullable<int> _EX_ID;

		private System.Nullable<int> _INV_ID;

		private string _Cat_ArbDesc;

		private string _Cat_EngDesc;

		private System.Nullable<int> _checked;

		public T_CarExecuationTable()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EX_ID", DbType = "Int")]
		public System.Nullable<int> EX_ID
		{
			get
			{
				return this._EX_ID;
			}
			set
			{
				if ((this._EX_ID != value))
				{
					this._EX_ID = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INV_ID", DbType = "Int")]
		public System.Nullable<int> INV_ID
		{
			get
			{
				return this._INV_ID;
			}
			set
			{
				if ((this._INV_ID != value))
				{
					this._INV_ID = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cat_ArbDesc", DbType = "VarChar(MAX)")]
		public string Cat_ArbDesc
		{
			get
			{
				return this._Cat_ArbDesc;
			}
			set
			{
				if ((this._Cat_ArbDesc != value))
				{
					this._Cat_ArbDesc = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cat_EngDesc", DbType = "VarChar(MAX)")]
		public string Cat_EngDesc
		{
			get
			{
				return this._Cat_EngDesc;
			}
			set
			{
				if ((this._Cat_EngDesc != value))
				{
					this._Cat_EngDesc = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Name = "checked", Storage = "_checked", DbType = "Int")]
		public System.Nullable<int> @checked
		{
			get
			{
				return this._checked;
			}
			set
			{
				if ((this._checked != value))
				{
					this._checked = value;
				}
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.cod")]
	public partial class cod : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _cod1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void Oncod1Changing(int value);
		partial void Oncod1Changed();
		#endregion

		public cod()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Name = "cod", Storage = "_cod1", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int cod1
		{
			get
			{
				return this._cod1;
			}
			set
			{
				if ((this._cod1 != value))
				{
					this.Oncod1Changing(value);
					this.SendPropertyChanging();
					this._cod1 = value;
					this.SendPropertyChanged("cod1");
					this.Oncod1Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}










	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.FReport")]
	public partial class FReport : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _Report_Name;

		private string _Report_Data;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnReport_NameChanging(string value);
		partial void OnReport_NameChanged();
		partial void OnReport_DataChanging(string value);
		partial void OnReport_DataChanged();
		#endregion

		public FReport()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Report_Name", DbType = "VarChar(MAX)")]
		public string Report_Name
		{
			get
			{
				return this._Report_Name;
			}
			set
			{
				if ((this._Report_Name != value))
				{
					this.OnReport_NameChanging(value);
					this.SendPropertyChanging();
					this._Report_Name = value;
					this.SendPropertyChanged("Report_Name");
					this.OnReport_NameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Report_Data", DbType = "VarChar(MAX)")]
		public string Report_Data
		{
			get
			{
				return this._Report_Data;
			}
			set
			{
				if ((this._Report_Data != value))
				{
					this.OnReport_DataChanging(value);
					this.SendPropertyChanging();
					this._Report_Data = value;
					this.SendPropertyChanged("Report_Data");
					this.OnReport_DataChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_AccCat")]
	public partial class T_AccCat : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _AccCat_ID;

		private string _AccCat_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<int> _CompanyID;

		private EntitySet<T_AccDef> _T_AccDefs;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAccCat_IDChanging(int value);
		partial void OnAccCat_IDChanged();
		partial void OnAccCat_NoChanging(string value);
		partial void OnAccCat_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_AccCat()
		{
			this._T_AccDefs = new EntitySet<T_AccDef>(new Action<T_AccDef>(this.attach_T_AccDefs), new Action<T_AccDef>(this.detach_T_AccDefs));
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCat_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int AccCat_ID
		{
			get
			{
				return this._AccCat_ID;
			}
			set
			{
				if ((this._AccCat_ID != value))
				{
					this.OnAccCat_IDChanging(value);
					this.SendPropertyChanging();
					this._AccCat_ID = value;
					this.SendPropertyChanged("AccCat_ID");
					this.OnAccCat_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCat_No", DbType = "VarChar(30)")]
		public string AccCat_No
		{
			get
			{
				return this._AccCat_No;
			}
			set
			{
				if ((this._AccCat_No != value))
				{
					this.OnAccCat_NoChanging(value);
					this.SendPropertyChanging();
					this._AccCat_No = value;
					this.SendPropertyChanged("AccCat_No");
					this.OnAccCat_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccCat_T_AccDef", Storage = "_T_AccDefs", ThisKey = "AccCat_ID", OtherKey = "AccCat")]
		public EntitySet<T_AccDef> T_AccDefs
		{
			get
			{
				return this._T_AccDefs;
			}
			set
			{
				this._T_AccDefs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_AccCat", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_AccCats.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_AccCats.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_AccDefs(T_AccDef entity)
		{
			this.SendPropertyChanging();
			entity.T_AccCat = this;
		}

		private void detach_T_AccDefs(T_AccDef entity)
		{
			this.SendPropertyChanging();
			entity.T_AccCat = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_AccDef")]
	public partial class T_AccDef : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _AccDef_ID;

		private string _AccDef_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private string _ParAcc;

		private System.Nullable<int> _Lev;

		private string _Typ;

		private System.Nullable<int> _AccCat;

		private System.Nullable<int> _DC;

		private System.Nullable<int> _Sts;

		private System.Nullable<double> _Debit;

		private System.Nullable<double> _Credit;

		private System.Nullable<double> _Balance;

		private System.Nullable<int> _Trn;

		private string _City;

		private string _Email;

		private string _Telphone1;

		private string _Telphone2;

		private string _Fax;

		private string _Mobile;

		private System.Nullable<double> _MaxLemt;

		private string _DesPers;

		private System.Nullable<int> _StrAm;

		private string _Adders;

		private System.Nullable<int> _Mnd;

		private System.Nullable<int> _Price;

		private string _zipCod;

		private string _PersonalNm;

		private string _RessonStoped;

		private System.Nullable<bool> _StopedState;

		private System.Nullable<int> _CompanyID;

		private System.Nullable<int> _StopInvTyp;

		private string _DateAppointment;

		private string _ID_Date;

		private string _ID_DateEnd;

		private string _Passport_Date;

		private string _Insurance_Date;

		private string _Passport_DateEnd;

		private string _Insurance_DateEnd;

		private string _ID_No;

		private string _Passport_No;

		private string _Insurance_No;

		private string _ID_From;

		private string _Passport_From;

		private string _Insurance_From;

		private System.Nullable<double> _MainSal;

		private System.Nullable<double> _BankComm;

		private string _TaxNo;

		private System.Nullable<double> _TotPoints;

		private System.Nullable<double> _MaxDisCust;

		private System.Nullable<double> _vColNum1;

		private System.Nullable<double> _vColNum2;

		private string _vColStr1;

		private string _vColStr2;

		private string _vColStr3;

		private System.Nullable<double> _DepreciationPercent;

		private string _ProofAcc;

		private string _RelayAcc;

		private EntitySet<T_Advance> _T_Advances;

		private EntitySet<T_Advance> _T_Advances1;

		private EntitySet<T_Advance> _T_Advances2;

		private EntitySet<T_BankPeaper> _T_BankPeapers;

		private EntitySet<T_BankPeaper> _T_BankPeapers1;

		private EntitySet<T_BankPeaper> _T_BankPeapers2;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_Emp> _T_Emps1;

		private EntitySet<T_Emp> _T_Emps2;

		private EntitySet<T_Emp> _T_Emps3;

		private EntitySet<T_Emp> _T_Emps4;

		private EntitySet<T_EqarsData> _T_EqarsDatas;

		private EntitySet<T_GDDET> _T_GDDETs;

		private EntitySet<T_per> _T_pers;

		private EntitySet<T_Sal> _T_Sals;

		private EntitySet<T_Salary> _T_Salaries;

		private EntitySet<T_Salary> _T_Salaries1;

		private EntitySet<T_Salary> _T_Salaries2;

		private EntitySet<T_Salary> _T_Salaries3;

		private EntitySet<T_Salary> _T_Salaries4;

		private EntitySet<T_sertyp> _T_sertyps;

		private EntitySet<T_StoreMnd> _T_StoreMnds;

		private EntitySet<T_Tenant> _T_Tenants;

		private EntityRef<T_AccCat> _T_AccCat;

		private EntityRef<T_Mndob> _T_Mndob;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAccDef_IDChanging(int value);
		partial void OnAccDef_IDChanged();
		partial void OnAccDef_NoChanging(string value);
		partial void OnAccDef_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnParAccChanging(string value);
		partial void OnParAccChanged();
		partial void OnLevChanging(System.Nullable<int> value);
		partial void OnLevChanged();
		partial void OnTypChanging(string value);
		partial void OnTypChanged();
		partial void OnAccCatChanging(System.Nullable<int> value);
		partial void OnAccCatChanged();
		partial void OnDCChanging(System.Nullable<int> value);
		partial void OnDCChanged();
		partial void OnStsChanging(System.Nullable<int> value);
		partial void OnStsChanged();
		partial void OnDebitChanging(System.Nullable<double> value);
		partial void OnDebitChanged();
		partial void OnCreditChanging(System.Nullable<double> value);
		partial void OnCreditChanged();
		partial void OnBalanceChanging(System.Nullable<double> value);
		partial void OnBalanceChanged();
		partial void OnTrnChanging(System.Nullable<int> value);
		partial void OnTrnChanged();
		partial void OnCityChanging(string value);
		partial void OnCityChanged();
		partial void OnEmailChanging(string value);
		partial void OnEmailChanged();
		partial void OnTelphone1Changing(string value);
		partial void OnTelphone1Changed();
		partial void OnTelphone2Changing(string value);
		partial void OnTelphone2Changed();
		partial void OnFaxChanging(string value);
		partial void OnFaxChanged();
		partial void OnMobileChanging(string value);
		partial void OnMobileChanged();
		partial void OnMaxLemtChanging(System.Nullable<double> value);
		partial void OnMaxLemtChanged();
		partial void OnDesPersChanging(string value);
		partial void OnDesPersChanged();
		partial void OnStrAmChanging(System.Nullable<int> value);
		partial void OnStrAmChanged();
		partial void OnAddersChanging(string value);
		partial void OnAddersChanged();
		partial void OnMndChanging(System.Nullable<int> value);
		partial void OnMndChanged();
		partial void OnPriceChanging(System.Nullable<int> value);
		partial void OnPriceChanged();
		partial void OnzipCodChanging(string value);
		partial void OnzipCodChanged();
		partial void OnPersonalNmChanging(string value);
		partial void OnPersonalNmChanged();
		partial void OnRessonStopedChanging(string value);
		partial void OnRessonStopedChanged();
		partial void OnStopedStateChanging(System.Nullable<bool> value);
		partial void OnStopedStateChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnStopInvTypChanging(System.Nullable<int> value);
		partial void OnStopInvTypChanged();
		partial void OnDateAppointmentChanging(string value);
		partial void OnDateAppointmentChanged();
		partial void OnID_DateChanging(string value);
		partial void OnID_DateChanged();
		partial void OnID_DateEndChanging(string value);
		partial void OnID_DateEndChanged();
		partial void OnPassport_DateChanging(string value);
		partial void OnPassport_DateChanged();
		partial void OnInsurance_DateChanging(string value);
		partial void OnInsurance_DateChanged();
		partial void OnPassport_DateEndChanging(string value);
		partial void OnPassport_DateEndChanged();
		partial void OnInsurance_DateEndChanging(string value);
		partial void OnInsurance_DateEndChanged();
		partial void OnID_NoChanging(string value);
		partial void OnID_NoChanged();
		partial void OnPassport_NoChanging(string value);
		partial void OnPassport_NoChanged();
		partial void OnInsurance_NoChanging(string value);
		partial void OnInsurance_NoChanged();
		partial void OnID_FromChanging(string value);
		partial void OnID_FromChanged();
		partial void OnPassport_FromChanging(string value);
		partial void OnPassport_FromChanged();
		partial void OnInsurance_FromChanging(string value);
		partial void OnInsurance_FromChanged();
		partial void OnMainSalChanging(System.Nullable<double> value);
		partial void OnMainSalChanged();
		partial void OnBankCommChanging(System.Nullable<double> value);
		partial void OnBankCommChanged();
		partial void OnTaxNoChanging(string value);
		partial void OnTaxNoChanged();
		partial void OnTotPointsChanging(System.Nullable<double> value);
		partial void OnTotPointsChanged();
		partial void OnMaxDisCustChanging(System.Nullable<double> value);
		partial void OnMaxDisCustChanged();
		partial void OnvColNum1Changing(System.Nullable<double> value);
		partial void OnvColNum1Changed();
		partial void OnvColNum2Changing(System.Nullable<double> value);
		partial void OnvColNum2Changed();
		partial void OnvColStr1Changing(string value);
		partial void OnvColStr1Changed();
		partial void OnvColStr2Changing(string value);
		partial void OnvColStr2Changed();
		partial void OnvColStr3Changing(string value);
		partial void OnvColStr3Changed();
		partial void OnDepreciationPercentChanging(System.Nullable<double> value);
		partial void OnDepreciationPercentChanged();
		partial void OnProofAccChanging(string value);
		partial void OnProofAccChanged();
		partial void OnRelayAccChanging(string value);
		partial void OnRelayAccChanged();
		#endregion

		public T_AccDef()
		{
			this._T_Advances = new EntitySet<T_Advance>(new Action<T_Advance>(this.attach_T_Advances), new Action<T_Advance>(this.detach_T_Advances));
			this._T_Advances1 = new EntitySet<T_Advance>(new Action<T_Advance>(this.attach_T_Advances1), new Action<T_Advance>(this.detach_T_Advances1));
			this._T_Advances2 = new EntitySet<T_Advance>(new Action<T_Advance>(this.attach_T_Advances2), new Action<T_Advance>(this.detach_T_Advances2));
			this._T_BankPeapers = new EntitySet<T_BankPeaper>(new Action<T_BankPeaper>(this.attach_T_BankPeapers), new Action<T_BankPeaper>(this.detach_T_BankPeapers));
			this._T_BankPeapers1 = new EntitySet<T_BankPeaper>(new Action<T_BankPeaper>(this.attach_T_BankPeapers1), new Action<T_BankPeaper>(this.detach_T_BankPeapers1));
			this._T_BankPeapers2 = new EntitySet<T_BankPeaper>(new Action<T_BankPeaper>(this.attach_T_BankPeapers2), new Action<T_BankPeaper>(this.detach_T_BankPeapers2));
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_Emps1 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps1), new Action<T_Emp>(this.detach_T_Emps1));
			this._T_Emps2 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps2), new Action<T_Emp>(this.detach_T_Emps2));
			this._T_Emps3 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps3), new Action<T_Emp>(this.detach_T_Emps3));
			this._T_Emps4 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps4), new Action<T_Emp>(this.detach_T_Emps4));
			this._T_EqarsDatas = new EntitySet<T_EqarsData>(new Action<T_EqarsData>(this.attach_T_EqarsDatas), new Action<T_EqarsData>(this.detach_T_EqarsDatas));
			this._T_GDDETs = new EntitySet<T_GDDET>(new Action<T_GDDET>(this.attach_T_GDDETs), new Action<T_GDDET>(this.detach_T_GDDETs));
			this._T_pers = new EntitySet<T_per>(new Action<T_per>(this.attach_T_pers), new Action<T_per>(this.detach_T_pers));
			this._T_Sals = new EntitySet<T_Sal>(new Action<T_Sal>(this.attach_T_Sals), new Action<T_Sal>(this.detach_T_Sals));
			this._T_Salaries = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries), new Action<T_Salary>(this.detach_T_Salaries));
			this._T_Salaries1 = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries1), new Action<T_Salary>(this.detach_T_Salaries1));
			this._T_Salaries2 = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries2), new Action<T_Salary>(this.detach_T_Salaries2));
			this._T_Salaries3 = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries3), new Action<T_Salary>(this.detach_T_Salaries3));
			this._T_Salaries4 = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries4), new Action<T_Salary>(this.detach_T_Salaries4));
			this._T_sertyps = new EntitySet<T_sertyp>(new Action<T_sertyp>(this.attach_T_sertyps), new Action<T_sertyp>(this.detach_T_sertyps));
			this._T_StoreMnds = new EntitySet<T_StoreMnd>(new Action<T_StoreMnd>(this.attach_T_StoreMnds), new Action<T_StoreMnd>(this.detach_T_StoreMnds));
			this._T_Tenants = new EntitySet<T_Tenant>(new Action<T_Tenant>(this.attach_T_Tenants), new Action<T_Tenant>(this.detach_T_Tenants));
			this._T_AccCat = default(EntityRef<T_AccCat>);
			this._T_Mndob = default(EntityRef<T_Mndob>);
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccDef_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int AccDef_ID
		{
			get
			{
				return this._AccDef_ID;
			}
			set
			{
				if ((this._AccDef_ID != value))
				{
					this.OnAccDef_IDChanging(value);
					this.SendPropertyChanging();
					this._AccDef_ID = value;
					this.SendPropertyChanged("AccDef_ID");
					this.OnAccDef_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccDef_No", DbType = "VarChar(30) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string AccDef_No
		{
			get
			{
				return this._AccDef_No;
			}
			set
			{
				if ((this._AccDef_No != value))
				{
					this.OnAccDef_NoChanging(value);
					this.SendPropertyChanging();
					this._AccDef_No = value;
					this.SendPropertyChanged("AccDef_No");
					this.OnAccDef_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ParAcc", DbType = "VarChar(12)")]
		public string ParAcc
		{
			get
			{
				return this._ParAcc;
			}
			set
			{
				if ((this._ParAcc != value))
				{
					this.OnParAccChanging(value);
					this.SendPropertyChanging();
					this._ParAcc = value;
					this.SendPropertyChanged("ParAcc");
					this.OnParAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Lev", DbType = "Int")]
		public System.Nullable<int> Lev
		{
			get
			{
				return this._Lev;
			}
			set
			{
				if ((this._Lev != value))
				{
					this.OnLevChanging(value);
					this.SendPropertyChanging();
					this._Lev = value;
					this.SendPropertyChanged("Lev");
					this.OnLevChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Typ", DbType = "VarChar(4)")]
		public string Typ
		{
			get
			{
				return this._Typ;
			}
			set
			{
				if ((this._Typ != value))
				{
					this.OnTypChanging(value);
					this.SendPropertyChanging();
					this._Typ = value;
					this.SendPropertyChanged("Typ");
					this.OnTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCat", DbType = "Int")]
		public System.Nullable<int> AccCat
		{
			get
			{
				return this._AccCat;
			}
			set
			{
				if ((this._AccCat != value))
				{
					if (this._T_AccCat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccCatChanging(value);
					this.SendPropertyChanging();
					this._AccCat = value;
					this.SendPropertyChanged("AccCat");
					this.OnAccCatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DC", DbType = "Int")]
		public System.Nullable<int> DC
		{
			get
			{
				return this._DC;
			}
			set
			{
				if ((this._DC != value))
				{
					this.OnDCChanging(value);
					this.SendPropertyChanging();
					this._DC = value;
					this.SendPropertyChanged("DC");
					this.OnDCChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sts", DbType = "Int")]
		public System.Nullable<int> Sts
		{
			get
			{
				return this._Sts;
			}
			set
			{
				if ((this._Sts != value))
				{
					this.OnStsChanging(value);
					this.SendPropertyChanging();
					this._Sts = value;
					this.SendPropertyChanged("Sts");
					this.OnStsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Debit", DbType = "Float")]
		public System.Nullable<double> Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Credit", DbType = "Float")]
		public System.Nullable<double> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Balance", DbType = "Float")]
		public System.Nullable<double> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Trn", DbType = "Int")]
		public System.Nullable<int> Trn
		{
			get
			{
				return this._Trn;
			}
			set
			{
				if ((this._Trn != value))
				{
					this.OnTrnChanging(value);
					this.SendPropertyChanging();
					this._Trn = value;
					this.SendPropertyChanged("Trn");
					this.OnTrnChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "VarChar(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Telphone1", DbType = "VarChar(30)")]
		public string Telphone1
		{
			get
			{
				return this._Telphone1;
			}
			set
			{
				if ((this._Telphone1 != value))
				{
					this.OnTelphone1Changing(value);
					this.SendPropertyChanging();
					this._Telphone1 = value;
					this.SendPropertyChanged("Telphone1");
					this.OnTelphone1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Telphone2", DbType = "VarChar(30)")]
		public string Telphone2
		{
			get
			{
				return this._Telphone2;
			}
			set
			{
				if ((this._Telphone2 != value))
				{
					this.OnTelphone2Changing(value);
					this.SendPropertyChanging();
					this._Telphone2 = value;
					this.SendPropertyChanged("Telphone2");
					this.OnTelphone2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(30)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "VarChar(30)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaxLemt", DbType = "Float")]
		public System.Nullable<double> MaxLemt
		{
			get
			{
				return this._MaxLemt;
			}
			set
			{
				if ((this._MaxLemt != value))
				{
					this.OnMaxLemtChanging(value);
					this.SendPropertyChanging();
					this._MaxLemt = value;
					this.SendPropertyChanged("MaxLemt");
					this.OnMaxLemtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DesPers", DbType = "VarChar(10)")]
		public string DesPers
		{
			get
			{
				return this._DesPers;
			}
			set
			{
				if ((this._DesPers != value))
				{
					this.OnDesPersChanging(value);
					this.SendPropertyChanging();
					this._DesPers = value;
					this.SendPropertyChanged("DesPers");
					this.OnDesPersChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StrAm", DbType = "Int")]
		public System.Nullable<int> StrAm
		{
			get
			{
				return this._StrAm;
			}
			set
			{
				if ((this._StrAm != value))
				{
					this.OnStrAmChanging(value);
					this.SendPropertyChanging();
					this._StrAm = value;
					this.SendPropertyChanged("StrAm");
					this.OnStrAmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Adders", DbType = "VarChar(100)")]
		public string Adders
		{
			get
			{
				return this._Adders;
			}
			set
			{
				if ((this._Adders != value))
				{
					this.OnAddersChanging(value);
					this.SendPropertyChanging();
					this._Adders = value;
					this.SendPropertyChanged("Adders");
					this.OnAddersChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mnd", DbType = "Int")]
		public System.Nullable<int> Mnd
		{
			get
			{
				return this._Mnd;
			}
			set
			{
				if ((this._Mnd != value))
				{
					if (this._T_Mndob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMndChanging(value);
					this.SendPropertyChanging();
					this._Mnd = value;
					this.SendPropertyChanged("Mnd");
					this.OnMndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price", DbType = "Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_zipCod", DbType = "VarChar(30)")]
		public string zipCod
		{
			get
			{
				return this._zipCod;
			}
			set
			{
				if ((this._zipCod != value))
				{
					this.OnzipCodChanging(value);
					this.SendPropertyChanging();
					this._zipCod = value;
					this.SendPropertyChanged("zipCod");
					this.OnzipCodChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PersonalNm", DbType = "VarChar(30)")]
		public string PersonalNm
		{
			get
			{
				return this._PersonalNm;
			}
			set
			{
				if ((this._PersonalNm != value))
				{
					this.OnPersonalNmChanging(value);
					this.SendPropertyChanging();
					this._PersonalNm = value;
					this.SendPropertyChanged("PersonalNm");
					this.OnPersonalNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RessonStoped", DbType = "VarChar(30)")]
		public string RessonStoped
		{
			get
			{
				return this._RessonStoped;
			}
			set
			{
				if ((this._RessonStoped != value))
				{
					this.OnRessonStopedChanging(value);
					this.SendPropertyChanging();
					this._RessonStoped = value;
					this.SendPropertyChanged("RessonStoped");
					this.OnRessonStopedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StopedState", DbType = "Bit")]
		public System.Nullable<bool> StopedState
		{
			get
			{
				return this._StopedState;
			}
			set
			{
				if ((this._StopedState != value))
				{
					this.OnStopedStateChanging(value);
					this.SendPropertyChanging();
					this._StopedState = value;
					this.SendPropertyChanged("StopedState");
					this.OnStopedStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StopInvTyp", DbType = "Int")]
		public System.Nullable<int> StopInvTyp
		{
			get
			{
				return this._StopInvTyp;
			}
			set
			{
				if ((this._StopInvTyp != value))
				{
					this.OnStopInvTypChanging(value);
					this.SendPropertyChanging();
					this._StopInvTyp = value;
					this.SendPropertyChanged("StopInvTyp");
					this.OnStopInvTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateAppointment", DbType = "VarChar(10)")]
		public string DateAppointment
		{
			get
			{
				return this._DateAppointment;
			}
			set
			{
				if ((this._DateAppointment != value))
				{
					this.OnDateAppointmentChanging(value);
					this.SendPropertyChanging();
					this._DateAppointment = value;
					this.SendPropertyChanged("DateAppointment");
					this.OnDateAppointmentChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_Date", DbType = "VarChar(10)")]
		public string ID_Date
		{
			get
			{
				return this._ID_Date;
			}
			set
			{
				if ((this._ID_Date != value))
				{
					this.OnID_DateChanging(value);
					this.SendPropertyChanging();
					this._ID_Date = value;
					this.SendPropertyChanged("ID_Date");
					this.OnID_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_DateEnd", DbType = "VarChar(10)")]
		public string ID_DateEnd
		{
			get
			{
				return this._ID_DateEnd;
			}
			set
			{
				if ((this._ID_DateEnd != value))
				{
					this.OnID_DateEndChanging(value);
					this.SendPropertyChanging();
					this._ID_DateEnd = value;
					this.SendPropertyChanged("ID_DateEnd");
					this.OnID_DateEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Passport_Date", DbType = "VarChar(10)")]
		public string Passport_Date
		{
			get
			{
				return this._Passport_Date;
			}
			set
			{
				if ((this._Passport_Date != value))
				{
					this.OnPassport_DateChanging(value);
					this.SendPropertyChanging();
					this._Passport_Date = value;
					this.SendPropertyChanged("Passport_Date");
					this.OnPassport_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_Date", DbType = "VarChar(10)")]
		public string Insurance_Date
		{
			get
			{
				return this._Insurance_Date;
			}
			set
			{
				if ((this._Insurance_Date != value))
				{
					this.OnInsurance_DateChanging(value);
					this.SendPropertyChanging();
					this._Insurance_Date = value;
					this.SendPropertyChanged("Insurance_Date");
					this.OnInsurance_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Passport_DateEnd", DbType = "VarChar(10)")]
		public string Passport_DateEnd
		{
			get
			{
				return this._Passport_DateEnd;
			}
			set
			{
				if ((this._Passport_DateEnd != value))
				{
					this.OnPassport_DateEndChanging(value);
					this.SendPropertyChanging();
					this._Passport_DateEnd = value;
					this.SendPropertyChanged("Passport_DateEnd");
					this.OnPassport_DateEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_DateEnd", DbType = "VarChar(10)")]
		public string Insurance_DateEnd
		{
			get
			{
				return this._Insurance_DateEnd;
			}
			set
			{
				if ((this._Insurance_DateEnd != value))
				{
					this.OnInsurance_DateEndChanging(value);
					this.SendPropertyChanging();
					this._Insurance_DateEnd = value;
					this.SendPropertyChanged("Insurance_DateEnd");
					this.OnInsurance_DateEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_No", DbType = "VarChar(15)")]
		public string ID_No
		{
			get
			{
				return this._ID_No;
			}
			set
			{
				if ((this._ID_No != value))
				{
					this.OnID_NoChanging(value);
					this.SendPropertyChanging();
					this._ID_No = value;
					this.SendPropertyChanged("ID_No");
					this.OnID_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Passport_No", DbType = "VarChar(15)")]
		public string Passport_No
		{
			get
			{
				return this._Passport_No;
			}
			set
			{
				if ((this._Passport_No != value))
				{
					this.OnPassport_NoChanging(value);
					this.SendPropertyChanging();
					this._Passport_No = value;
					this.SendPropertyChanged("Passport_No");
					this.OnPassport_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_No", DbType = "VarChar(15)")]
		public string Insurance_No
		{
			get
			{
				return this._Insurance_No;
			}
			set
			{
				if ((this._Insurance_No != value))
				{
					this.OnInsurance_NoChanging(value);
					this.SendPropertyChanging();
					this._Insurance_No = value;
					this.SendPropertyChanged("Insurance_No");
					this.OnInsurance_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_From", DbType = "VarChar(50)")]
		public string ID_From
		{
			get
			{
				return this._ID_From;
			}
			set
			{
				if ((this._ID_From != value))
				{
					this.OnID_FromChanging(value);
					this.SendPropertyChanging();
					this._ID_From = value;
					this.SendPropertyChanged("ID_From");
					this.OnID_FromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Passport_From", DbType = "VarChar(50)")]
		public string Passport_From
		{
			get
			{
				return this._Passport_From;
			}
			set
			{
				if ((this._Passport_From != value))
				{
					this.OnPassport_FromChanging(value);
					this.SendPropertyChanging();
					this._Passport_From = value;
					this.SendPropertyChanged("Passport_From");
					this.OnPassport_FromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_From", DbType = "VarChar(50)")]
		public string Insurance_From
		{
			get
			{
				return this._Insurance_From;
			}
			set
			{
				if ((this._Insurance_From != value))
				{
					this.OnInsurance_FromChanging(value);
					this.SendPropertyChanging();
					this._Insurance_From = value;
					this.SendPropertyChanged("Insurance_From");
					this.OnInsurance_FromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MainSal", DbType = "Float")]
		public System.Nullable<double> MainSal
		{
			get
			{
				return this._MainSal;
			}
			set
			{
				if ((this._MainSal != value))
				{
					this.OnMainSalChanging(value);
					this.SendPropertyChanging();
					this._MainSal = value;
					this.SendPropertyChanged("MainSal");
					this.OnMainSalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankComm", DbType = "Float")]
		public System.Nullable<double> BankComm
		{
			get
			{
				return this._BankComm;
			}
			set
			{
				if ((this._BankComm != value))
				{
					this.OnBankCommChanging(value);
					this.SendPropertyChanging();
					this._BankComm = value;
					this.SendPropertyChanged("BankComm");
					this.OnBankCommChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxNo", DbType = "VarChar(50)")]
		public string TaxNo
		{
			get
			{
				return this._TaxNo;
			}
			set
			{
				if ((this._TaxNo != value))
				{
					this.OnTaxNoChanging(value);
					this.SendPropertyChanging();
					this._TaxNo = value;
					this.SendPropertyChanged("TaxNo");
					this.OnTaxNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotPoints", DbType = "Float")]
		public System.Nullable<double> TotPoints
		{
			get
			{
				return this._TotPoints;
			}
			set
			{
				if ((this._TotPoints != value))
				{
					this.OnTotPointsChanging(value);
					this.SendPropertyChanging();
					this._TotPoints = value;
					this.SendPropertyChanged("TotPoints");
					this.OnTotPointsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaxDisCust", DbType = "Float")]
		public System.Nullable<double> MaxDisCust
		{
			get
			{
				return this._MaxDisCust;
			}
			set
			{
				if ((this._MaxDisCust != value))
				{
					this.OnMaxDisCustChanging(value);
					this.SendPropertyChanging();
					this._MaxDisCust = value;
					this.SendPropertyChanged("MaxDisCust");
					this.OnMaxDisCustChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vColNum1", DbType = "Float")]
		public System.Nullable<double> vColNum1
		{
			get
			{
				return this._vColNum1;
			}
			set
			{
				if ((this._vColNum1 != value))
				{
					this.OnvColNum1Changing(value);
					this.SendPropertyChanging();
					this._vColNum1 = value;
					this.SendPropertyChanged("vColNum1");
					this.OnvColNum1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vColNum2", DbType = "Float")]
		public System.Nullable<double> vColNum2
		{
			get
			{
				return this._vColNum2;
			}
			set
			{
				if ((this._vColNum2 != value))
				{
					this.OnvColNum2Changing(value);
					this.SendPropertyChanging();
					this._vColNum2 = value;
					this.SendPropertyChanged("vColNum2");
					this.OnvColNum2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vColStr1", DbType = "VarChar(250)")]
		public string vColStr1
		{
			get
			{
				return this._vColStr1;
			}
			set
			{
				if ((this._vColStr1 != value))
				{
					this.OnvColStr1Changing(value);
					this.SendPropertyChanging();
					this._vColStr1 = value;
					this.SendPropertyChanged("vColStr1");
					this.OnvColStr1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vColStr2", DbType = "VarChar(250)")]
		public string vColStr2
		{
			get
			{
				return this._vColStr2;
			}
			set
			{
				if ((this._vColStr2 != value))
				{
					this.OnvColStr2Changing(value);
					this.SendPropertyChanging();
					this._vColStr2 = value;
					this.SendPropertyChanged("vColStr2");
					this.OnvColStr2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vColStr3", DbType = "VarChar(250)")]
		public string vColStr3
		{
			get
			{
				return this._vColStr3;
			}
			set
			{
				if ((this._vColStr3 != value))
				{
					this.OnvColStr3Changing(value);
					this.SendPropertyChanging();
					this._vColStr3 = value;
					this.SendPropertyChanged("vColStr3");
					this.OnvColStr3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DepreciationPercent", DbType = "Float")]
		public System.Nullable<double> DepreciationPercent
		{
			get
			{
				return this._DepreciationPercent;
			}
			set
			{
				if ((this._DepreciationPercent != value))
				{
					this.OnDepreciationPercentChanging(value);
					this.SendPropertyChanging();
					this._DepreciationPercent = value;
					this.SendPropertyChanged("DepreciationPercent");
					this.OnDepreciationPercentChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProofAcc", DbType = "VarChar(30)")]
		public string ProofAcc
		{
			get
			{
				return this._ProofAcc;
			}
			set
			{
				if ((this._ProofAcc != value))
				{
					this.OnProofAccChanging(value);
					this.SendPropertyChanging();
					this._ProofAcc = value;
					this.SendPropertyChanged("ProofAcc");
					this.OnProofAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RelayAcc", DbType = "VarChar(30)")]
		public string RelayAcc
		{
			get
			{
				return this._RelayAcc;
			}
			set
			{
				if ((this._RelayAcc != value))
				{
					this.OnRelayAccChanging(value);
					this.SendPropertyChanging();
					this._RelayAcc = value;
					this.SendPropertyChanged("RelayAcc");
					this.OnRelayAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Advance", Storage = "_T_Advances", ThisKey = "AccDef_No", OtherKey = "AccountID")]
		public EntitySet<T_Advance> T_Advances
		{
			get
			{
				return this._T_Advances;
			}
			set
			{
				this._T_Advances.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Advance1", Storage = "_T_Advances1", ThisKey = "AccDef_No", OtherKey = "BankBR")]
		public EntitySet<T_Advance> T_Advances1
		{
			get
			{
				return this._T_Advances1;
			}
			set
			{
				this._T_Advances1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Advance2", Storage = "_T_Advances2", ThisKey = "AccDef_No", OtherKey = "LoanAcc")]
		public EntitySet<T_Advance> T_Advances2
		{
			get
			{
				return this._T_Advances2;
			}
			set
			{
				this._T_Advances2.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_BankPeaper", Storage = "_T_BankPeapers", ThisKey = "AccDef_No", OtherKey = "CustAcc")]
		public EntitySet<T_BankPeaper> T_BankPeapers
		{
			get
			{
				return this._T_BankPeapers;
			}
			set
			{
				this._T_BankPeapers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_BankPeaper1", Storage = "_T_BankPeapers1", ThisKey = "AccDef_No", OtherKey = "BankAcc")]
		public EntitySet<T_BankPeaper> T_BankPeapers1
		{
			get
			{
				return this._T_BankPeapers1;
			}
			set
			{
				this._T_BankPeapers1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_BankPeaper2", Storage = "_T_BankPeapers2", ThisKey = "AccDef_No", OtherKey = "BranchAcc")]
		public EntitySet<T_BankPeaper> T_BankPeapers2
		{
			get
			{
				return this._T_BankPeapers2;
			}
			set
			{
				this._T_BankPeapers2.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp", Storage = "_T_Emps", ThisKey = "AccDef_No", OtherKey = "AccountID")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp1", Storage = "_T_Emps1", ThisKey = "AccDef_No", OtherKey = "BankBR")]
		public EntitySet<T_Emp> T_Emps1
		{
			get
			{
				return this._T_Emps1;
			}
			set
			{
				this._T_Emps1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp2", Storage = "_T_Emps2", ThisKey = "AccDef_No", OtherKey = "HouseAcc")]
		public EntitySet<T_Emp> T_Emps2
		{
			get
			{
				return this._T_Emps2;
			}
			set
			{
				this._T_Emps2.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp3", Storage = "_T_Emps3", ThisKey = "AccDef_No", OtherKey = "LoanAcc")]
		public EntitySet<T_Emp> T_Emps3
		{
			get
			{
				return this._T_Emps3;
			}
			set
			{
				this._T_Emps3.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp4", Storage = "_T_Emps4", ThisKey = "AccDef_No", OtherKey = "SalAcc")]
		public EntitySet<T_Emp> T_Emps4
		{
			get
			{
				return this._T_Emps4;
			}
			set
			{
				this._T_Emps4.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_EqarsData", Storage = "_T_EqarsDatas", ThisKey = "AccDef_No", OtherKey = "AccNo")]
		public EntitySet<T_EqarsData> T_EqarsDatas
		{
			get
			{
				return this._T_EqarsDatas;
			}
			set
			{
				this._T_EqarsDatas.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_GDDET", Storage = "_T_GDDETs", ThisKey = "AccDef_No", OtherKey = "AccNo")]
		public EntitySet<T_GDDET> T_GDDETs
		{
			get
			{
				return this._T_GDDETs;
			}
			set
			{
				this._T_GDDETs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_per", Storage = "_T_pers", ThisKey = "AccDef_No", OtherKey = "Cust_no")]
		public EntitySet<T_per> T_pers
		{
			get
			{
				return this._T_pers;
			}
			set
			{
				this._T_pers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Sal", Storage = "_T_Sals", ThisKey = "AccDef_No", OtherKey = "EmpID")]
		public EntitySet<T_Sal> T_Sals
		{
			get
			{
				return this._T_Sals;
			}
			set
			{
				this._T_Sals.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary", Storage = "_T_Salaries", ThisKey = "AccDef_No", OtherKey = "AccountNo")]
		public EntitySet<T_Salary> T_Salaries
		{
			get
			{
				return this._T_Salaries;
			}
			set
			{
				this._T_Salaries.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary1", Storage = "_T_Salaries1", ThisKey = "AccDef_No", OtherKey = "BankBR")]
		public EntitySet<T_Salary> T_Salaries1
		{
			get
			{
				return this._T_Salaries1;
			}
			set
			{
				this._T_Salaries1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary2", Storage = "_T_Salaries2", ThisKey = "AccDef_No", OtherKey = "HouseAcc")]
		public EntitySet<T_Salary> T_Salaries2
		{
			get
			{
				return this._T_Salaries2;
			}
			set
			{
				this._T_Salaries2.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary3", Storage = "_T_Salaries3", ThisKey = "AccDef_No", OtherKey = "LoanAcc")]
		public EntitySet<T_Salary> T_Salaries3
		{
			get
			{
				return this._T_Salaries3;
			}
			set
			{
				this._T_Salaries3.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary4", Storage = "_T_Salaries4", ThisKey = "AccDef_No", OtherKey = "SalAcc")]
		public EntitySet<T_Salary> T_Salaries4
		{
			get
			{
				return this._T_Salaries4;
			}
			set
			{
				this._T_Salaries4.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_sertyp", Storage = "_T_sertyps", ThisKey = "AccDef_No", OtherKey = "accno")]
		public EntitySet<T_sertyp> T_sertyps
		{
			get
			{
				return this._T_sertyps;
			}
			set
			{
				this._T_sertyps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_StoreMnd", Storage = "_T_StoreMnds", ThisKey = "AccDef_No", OtherKey = "CusVenNo")]
		public EntitySet<T_StoreMnd> T_StoreMnds
		{
			get
			{
				return this._T_StoreMnds;
			}
			set
			{
				this._T_StoreMnds.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Tenant", Storage = "_T_Tenants", ThisKey = "AccDef_No", OtherKey = "AccNo")]
		public EntitySet<T_Tenant> T_Tenants
		{
			get
			{
				return this._T_Tenants;
			}
			set
			{
				this._T_Tenants.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccCat_T_AccDef", Storage = "_T_AccCat", ThisKey = "AccCat", OtherKey = "AccCat_ID", IsForeignKey = true)]
		public T_AccCat T_AccCat
		{
			get
			{
				return this._T_AccCat.Entity;
			}
			set
			{
				T_AccCat previousValue = this._T_AccCat.Entity;
				if (((previousValue != value)
							|| (this._T_AccCat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccCat.Entity = null;
						previousValue.T_AccDefs.Remove(this);
					}
					this._T_AccCat.Entity = value;
					if ((value != null))
					{
						value.T_AccDefs.Add(this);
						this._AccCat = value.AccCat_ID;
					}
					else
					{
						this._AccCat = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_AccCat");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Mndob_T_AccDef", Storage = "_T_Mndob", ThisKey = "Mnd", OtherKey = "Mnd_ID", IsForeignKey = true)]
		public T_Mndob T_Mndob
		{
			get
			{
				return this._T_Mndob.Entity;
			}
			set
			{
				T_Mndob previousValue = this._T_Mndob.Entity;
				if (((previousValue != value)
							|| (this._T_Mndob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Mndob.Entity = null;
						previousValue.T_AccDefs.Remove(this);
					}
					this._T_Mndob.Entity = value;
					if ((value != null))
					{
						value.T_AccDefs.Add(this);
						this._Mnd = value.Mnd_ID;
					}
					else
					{
						this._Mnd = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Mndob");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_AccDef", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_AccDefs.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_AccDefs.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Advances(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_Advances(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_Advances1(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef1 = this;
		}

		private void detach_T_Advances1(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef1 = null;
		}

		private void attach_T_Advances2(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef2 = this;
		}

		private void detach_T_Advances2(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef2 = null;
		}

		private void attach_T_BankPeapers(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_BankPeapers(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_BankPeapers1(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef1 = this;
		}

		private void detach_T_BankPeapers1(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef1 = null;
		}

		private void attach_T_BankPeapers2(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef2 = this;
		}

		private void detach_T_BankPeapers2(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef2 = null;
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_Emps1(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef1 = this;
		}

		private void detach_T_Emps1(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef1 = null;
		}

		private void attach_T_Emps2(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef2 = this;
		}

		private void detach_T_Emps2(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef2 = null;
		}

		private void attach_T_Emps3(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef3 = this;
		}

		private void detach_T_Emps3(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef3 = null;
		}

		private void attach_T_Emps4(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef4 = this;
		}

		private void detach_T_Emps4(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef4 = null;
		}

		private void attach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_GDDETs(T_GDDET entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_GDDETs(T_GDDET entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_Sals(T_Sal entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_Sals(T_Sal entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_Salaries1(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef1 = this;
		}

		private void detach_T_Salaries1(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef1 = null;
		}

		private void attach_T_Salaries2(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef2 = this;
		}

		private void detach_T_Salaries2(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef2 = null;
		}

		private void attach_T_Salaries3(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef3 = this;
		}

		private void detach_T_Salaries3(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef3 = null;
		}

		private void attach_T_Salaries4(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef4 = this;
		}

		private void detach_T_Salaries4(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef4 = null;
		}

		private void attach_T_sertyps(T_sertyp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_sertyps(T_sertyp entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_StoreMnds(T_StoreMnd entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_StoreMnds(T_StoreMnd entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}

		private void attach_T_Tenants(T_Tenant entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = this;
		}

		private void detach_T_Tenants(T_Tenant entity)
		{
			this.SendPropertyChanging();
			entity.T_AccDef = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Add")]
	public partial class T_Add : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Add_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private string _SalDate;

		private System.Nullable<int> _CalculateNo;

		private System.Nullable<int> _AddTyp;

		private System.Nullable<int> _DayOfMonth;

		private System.Nullable<double> _CountDay;

		private System.Nullable<double> _AddValue;

		private System.Nullable<double> _AddTotaly;

		private string _Note;

		private System.Nullable<bool> _IFState;

		private System.Nullable<bool> _MinuteTyp;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_OpMethod> _T_OpMethod;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAdd_IDChanging(string value);
		partial void OnAdd_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnSalDateChanging(string value);
		partial void OnSalDateChanged();
		partial void OnCalculateNoChanging(System.Nullable<int> value);
		partial void OnCalculateNoChanged();
		partial void OnAddTypChanging(System.Nullable<int> value);
		partial void OnAddTypChanged();
		partial void OnDayOfMonthChanging(System.Nullable<int> value);
		partial void OnDayOfMonthChanged();
		partial void OnCountDayChanging(System.Nullable<double> value);
		partial void OnCountDayChanged();
		partial void OnAddValueChanging(System.Nullable<double> value);
		partial void OnAddValueChanged();
		partial void OnAddTotalyChanging(System.Nullable<double> value);
		partial void OnAddTotalyChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		partial void OnMinuteTypChanging(System.Nullable<bool> value);
		partial void OnMinuteTypChanged();
		#endregion

		public T_Add()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_OpMethod = default(EntityRef<T_OpMethod>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Add_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Add_ID
		{
			get
			{
				return this._Add_ID;
			}
			set
			{
				if ((this._Add_ID != value))
				{
					this.OnAdd_IDChanging(value);
					this.SendPropertyChanging();
					this._Add_ID = value;
					this.SendPropertyChanged("Add_ID");
					this.OnAdd_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalDate", DbType = "VarChar(10)")]
		public string SalDate
		{
			get
			{
				return this._SalDate;
			}
			set
			{
				if ((this._SalDate != value))
				{
					this.OnSalDateChanging(value);
					this.SendPropertyChanging();
					this._SalDate = value;
					this.SendPropertyChanged("SalDate");
					this.OnSalDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculateNo", DbType = "Int")]
		public System.Nullable<int> CalculateNo
		{
			get
			{
				return this._CalculateNo;
			}
			set
			{
				if ((this._CalculateNo != value))
				{
					if (this._T_OpMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalculateNoChanging(value);
					this.SendPropertyChanging();
					this._CalculateNo = value;
					this.SendPropertyChanged("CalculateNo");
					this.OnCalculateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddTyp", DbType = "Int")]
		public System.Nullable<int> AddTyp
		{
			get
			{
				return this._AddTyp;
			}
			set
			{
				if ((this._AddTyp != value))
				{
					this.OnAddTypChanging(value);
					this.SendPropertyChanging();
					this._AddTyp = value;
					this.SendPropertyChanged("AddTyp");
					this.OnAddTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayOfMonth", DbType = "Int")]
		public System.Nullable<int> DayOfMonth
		{
			get
			{
				return this._DayOfMonth;
			}
			set
			{
				if ((this._DayOfMonth != value))
				{
					this.OnDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._DayOfMonth = value;
					this.SendPropertyChanged("DayOfMonth");
					this.OnDayOfMonthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CountDay", DbType = "Float")]
		public System.Nullable<double> CountDay
		{
			get
			{
				return this._CountDay;
			}
			set
			{
				if ((this._CountDay != value))
				{
					this.OnCountDayChanging(value);
					this.SendPropertyChanging();
					this._CountDay = value;
					this.SendPropertyChanged("CountDay");
					this.OnCountDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddValue", DbType = "Float")]
		public System.Nullable<double> AddValue
		{
			get
			{
				return this._AddValue;
			}
			set
			{
				if ((this._AddValue != value))
				{
					this.OnAddValueChanging(value);
					this.SendPropertyChanging();
					this._AddValue = value;
					this.SendPropertyChanged("AddValue");
					this.OnAddValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddTotaly", DbType = "Float")]
		public System.Nullable<double> AddTotaly
		{
			get
			{
				return this._AddTotaly;
			}
			set
			{
				if ((this._AddTotaly != value))
				{
					this.OnAddTotalyChanging(value);
					this.SendPropertyChanging();
					this._AddTotaly = value;
					this.SendPropertyChanged("AddTotaly");
					this.OnAddTotalyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MinuteTyp", DbType = "Bit")]
		public System.Nullable<bool> MinuteTyp
		{
			get
			{
				return this._MinuteTyp;
			}
			set
			{
				if ((this._MinuteTyp != value))
				{
					this.OnMinuteTypChanging(value);
					this.SendPropertyChanging();
					this._MinuteTyp = value;
					this.SendPropertyChanged("MinuteTyp");
					this.OnMinuteTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Add", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Adds.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Adds.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Add", Storage = "_T_OpMethod", ThisKey = "CalculateNo", OtherKey = "Method_No", IsForeignKey = true)]
		public T_OpMethod T_OpMethod
		{
			get
			{
				return this._T_OpMethod.Entity;
			}
			set
			{
				T_OpMethod previousValue = this._T_OpMethod.Entity;
				if (((previousValue != value)
							|| (this._T_OpMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OpMethod.Entity = null;
						previousValue.T_Adds.Remove(this);
					}
					this._T_OpMethod.Entity = value;
					if ((value != null))
					{
						value.T_Adds.Add(this);
						this._CalculateNo = value.Method_No;
					}
					else
					{
						this._CalculateNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OpMethod");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_AddTyp")]
	public partial class T_AddTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _AddTyp_No;

		private string _NameA;

		private string _NameE;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAddTyp_NoChanging(int value);
		partial void OnAddTyp_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_AddTyp()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddTyp_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int AddTyp_No
		{
			get
			{
				return this._AddTyp_No;
			}
			set
			{
				if ((this._AddTyp_No != value))
				{
					this.OnAddTyp_NoChanging(value);
					this.SendPropertyChanging();
					this._AddTyp_No = value;
					this.SendPropertyChanged("AddTyp_No");
					this.OnAddTyp_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(20)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(20)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Advances")]
	public partial class T_Advance : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Advances_ID;

		private int _Advances_No;

		private string _ResolutionNo;

		private string _ResolutionDate;

		private string _EmpID;

		private System.Nullable<double> _Salary;

		private string _SalDate;

		private System.Nullable<double> _ValueAdvances;

		private System.Nullable<double> _Remaining;

		private System.Nullable<int> _TotalPremiums;

		private System.Nullable<double> _ValuePremium;

		private System.Nullable<double> _ValuePremiumEdit;

		private string _Note;

		private string _LoanAcc;

		private string _fGUID;

		private string _AccountID;

		private string _BankBR;

		private System.Nullable<int> _CostCenterEmp;

		private System.Nullable<bool> _AutoDisFromSalary;

		private System.Nullable<bool> _AccID;

		private System.Nullable<double> _GadeId;

		private EntitySet<T_Premium> _T_Premiums;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_AccDef> _T_AccDef1;

		private EntityRef<T_AccDef> _T_AccDef2;

		private EntityRef<T_CstTbl> _T_CstTbl;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAdvances_IDChanging(string value);
		partial void OnAdvances_IDChanged();
		partial void OnAdvances_NoChanging(int value);
		partial void OnAdvances_NoChanged();
		partial void OnResolutionNoChanging(string value);
		partial void OnResolutionNoChanged();
		partial void OnResolutionDateChanging(string value);
		partial void OnResolutionDateChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnSalaryChanging(System.Nullable<double> value);
		partial void OnSalaryChanged();
		partial void OnSalDateChanging(string value);
		partial void OnSalDateChanged();
		partial void OnValueAdvancesChanging(System.Nullable<double> value);
		partial void OnValueAdvancesChanged();
		partial void OnRemainingChanging(System.Nullable<double> value);
		partial void OnRemainingChanged();
		partial void OnTotalPremiumsChanging(System.Nullable<int> value);
		partial void OnTotalPremiumsChanged();
		partial void OnValuePremiumChanging(System.Nullable<double> value);
		partial void OnValuePremiumChanged();
		partial void OnValuePremiumEditChanging(System.Nullable<double> value);
		partial void OnValuePremiumEditChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnLoanAccChanging(string value);
		partial void OnLoanAccChanged();
		partial void OnfGUIDChanging(string value);
		partial void OnfGUIDChanged();
		partial void OnAccountIDChanging(string value);
		partial void OnAccountIDChanged();
		partial void OnBankBRChanging(string value);
		partial void OnBankBRChanged();
		partial void OnCostCenterEmpChanging(System.Nullable<int> value);
		partial void OnCostCenterEmpChanged();
		partial void OnAutoDisFromSalaryChanging(System.Nullable<bool> value);
		partial void OnAutoDisFromSalaryChanged();
		partial void OnAccIDChanging(System.Nullable<bool> value);
		partial void OnAccIDChanged();
		partial void OnGadeIdChanging(System.Nullable<double> value);
		partial void OnGadeIdChanged();
		#endregion

		public T_Advance()
		{
			this._T_Premiums = new EntitySet<T_Premium>(new Action<T_Premium>(this.attach_T_Premiums), new Action<T_Premium>(this.detach_T_Premiums));
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_AccDef1 = default(EntityRef<T_AccDef>);
			this._T_AccDef2 = default(EntityRef<T_AccDef>);
			this._T_CstTbl = default(EntityRef<T_CstTbl>);
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Advances_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Advances_ID
		{
			get
			{
				return this._Advances_ID;
			}
			set
			{
				if ((this._Advances_ID != value))
				{
					this.OnAdvances_IDChanging(value);
					this.SendPropertyChanging();
					this._Advances_ID = value;
					this.SendPropertyChanged("Advances_ID");
					this.OnAdvances_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Advances_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Advances_No
		{
			get
			{
				return this._Advances_No;
			}
			set
			{
				if ((this._Advances_No != value))
				{
					this.OnAdvances_NoChanging(value);
					this.SendPropertyChanging();
					this._Advances_No = value;
					this.SendPropertyChanged("Advances_No");
					this.OnAdvances_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ResolutionNo", DbType = "VarChar(10)")]
		public string ResolutionNo
		{
			get
			{
				return this._ResolutionNo;
			}
			set
			{
				if ((this._ResolutionNo != value))
				{
					this.OnResolutionNoChanging(value);
					this.SendPropertyChanging();
					this._ResolutionNo = value;
					this.SendPropertyChanged("ResolutionNo");
					this.OnResolutionNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ResolutionDate", DbType = "VarChar(10)")]
		public string ResolutionDate
		{
			get
			{
				return this._ResolutionDate;
			}
			set
			{
				if ((this._ResolutionDate != value))
				{
					this.OnResolutionDateChanging(value);
					this.SendPropertyChanging();
					this._ResolutionDate = value;
					this.SendPropertyChanged("ResolutionDate");
					this.OnResolutionDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Salary", DbType = "Float")]
		public System.Nullable<double> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalDate", DbType = "VarChar(10)")]
		public string SalDate
		{
			get
			{
				return this._SalDate;
			}
			set
			{
				if ((this._SalDate != value))
				{
					this.OnSalDateChanging(value);
					this.SendPropertyChanging();
					this._SalDate = value;
					this.SendPropertyChanged("SalDate");
					this.OnSalDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ValueAdvances", DbType = "Float")]
		public System.Nullable<double> ValueAdvances
		{
			get
			{
				return this._ValueAdvances;
			}
			set
			{
				if ((this._ValueAdvances != value))
				{
					this.OnValueAdvancesChanging(value);
					this.SendPropertyChanging();
					this._ValueAdvances = value;
					this.SendPropertyChanged("ValueAdvances");
					this.OnValueAdvancesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remaining", DbType = "Float")]
		public System.Nullable<double> Remaining
		{
			get
			{
				return this._Remaining;
			}
			set
			{
				if ((this._Remaining != value))
				{
					this.OnRemainingChanging(value);
					this.SendPropertyChanging();
					this._Remaining = value;
					this.SendPropertyChanged("Remaining");
					this.OnRemainingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalPremiums", DbType = "Int")]
		public System.Nullable<int> TotalPremiums
		{
			get
			{
				return this._TotalPremiums;
			}
			set
			{
				if ((this._TotalPremiums != value))
				{
					this.OnTotalPremiumsChanging(value);
					this.SendPropertyChanging();
					this._TotalPremiums = value;
					this.SendPropertyChanged("TotalPremiums");
					this.OnTotalPremiumsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ValuePremium", DbType = "Float")]
		public System.Nullable<double> ValuePremium
		{
			get
			{
				return this._ValuePremium;
			}
			set
			{
				if ((this._ValuePremium != value))
				{
					this.OnValuePremiumChanging(value);
					this.SendPropertyChanging();
					this._ValuePremium = value;
					this.SendPropertyChanged("ValuePremium");
					this.OnValuePremiumChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ValuePremiumEdit", DbType = "Float")]
		public System.Nullable<double> ValuePremiumEdit
		{
			get
			{
				return this._ValuePremiumEdit;
			}
			set
			{
				if ((this._ValuePremiumEdit != value))
				{
					this.OnValuePremiumEditChanging(value);
					this.SendPropertyChanging();
					this._ValuePremiumEdit = value;
					this.SendPropertyChanged("ValuePremiumEdit");
					this.OnValuePremiumEditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoanAcc", DbType = "VarChar(30)")]
		public string LoanAcc
		{
			get
			{
				return this._LoanAcc;
			}
			set
			{
				if ((this._LoanAcc != value))
				{
					if (this._T_AccDef2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanAccChanging(value);
					this.SendPropertyChanging();
					this._LoanAcc = value;
					this.SendPropertyChanged("LoanAcc");
					this.OnLoanAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fGUID", DbType = "VarChar(40)")]
		public string fGUID
		{
			get
			{
				return this._fGUID;
			}
			set
			{
				if ((this._fGUID != value))
				{
					this.OnfGUIDChanging(value);
					this.SendPropertyChanging();
					this._fGUID = value;
					this.SendPropertyChanged("fGUID");
					this.OnfGUIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountID", DbType = "VarChar(30)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankBR", DbType = "VarChar(30)")]
		public string BankBR
		{
			get
			{
				return this._BankBR;
			}
			set
			{
				if ((this._BankBR != value))
				{
					if (this._T_AccDef1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankBRChanging(value);
					this.SendPropertyChanging();
					this._BankBR = value;
					this.SendPropertyChanged("BankBR");
					this.OnBankBRChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CostCenterEmp", DbType = "Int")]
		public System.Nullable<int> CostCenterEmp
		{
			get
			{
				return this._CostCenterEmp;
			}
			set
			{
				if ((this._CostCenterEmp != value))
				{
					if (this._T_CstTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostCenterEmpChanging(value);
					this.SendPropertyChanging();
					this._CostCenterEmp = value;
					this.SendPropertyChanged("CostCenterEmp");
					this.OnCostCenterEmpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoDisFromSalary", DbType = "Bit")]
		public System.Nullable<bool> AutoDisFromSalary
		{
			get
			{
				return this._AutoDisFromSalary;
			}
			set
			{
				if ((this._AutoDisFromSalary != value))
				{
					this.OnAutoDisFromSalaryChanging(value);
					this.SendPropertyChanging();
					this._AutoDisFromSalary = value;
					this.SendPropertyChanged("AutoDisFromSalary");
					this.OnAutoDisFromSalaryChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccID", DbType = "Bit")]
		public System.Nullable<bool> AccID
		{
			get
			{
				return this._AccID;
			}
			set
			{
				if ((this._AccID != value))
				{
					this.OnAccIDChanging(value);
					this.SendPropertyChanging();
					this._AccID = value;
					this.SendPropertyChanged("AccID");
					this.OnAccIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId", DbType = "Float")]
		public System.Nullable<double> GadeId
		{
			get
			{
				return this._GadeId;
			}
			set
			{
				if ((this._GadeId != value))
				{
					this.OnGadeIdChanging(value);
					this.SendPropertyChanging();
					this._GadeId = value;
					this.SendPropertyChanged("GadeId");
					this.OnGadeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Advance_T_Premium", Storage = "_T_Premiums", ThisKey = "Advances_No", OtherKey = "Advances_No")]
		public EntitySet<T_Premium> T_Premiums
		{
			get
			{
				return this._T_Premiums;
			}
			set
			{
				this._T_Premiums.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Advance", Storage = "_T_AccDef", ThisKey = "AccountID", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_Advances.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_Advances.Add(this);
						this._AccountID = value.AccDef_No;
					}
					else
					{
						this._AccountID = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Advance1", Storage = "_T_AccDef1", ThisKey = "BankBR", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef1
		{
			get
			{
				return this._T_AccDef1.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef1.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef1.Entity = null;
						previousValue.T_Advances1.Remove(this);
					}
					this._T_AccDef1.Entity = value;
					if ((value != null))
					{
						value.T_Advances1.Add(this);
						this._BankBR = value.AccDef_No;
					}
					else
					{
						this._BankBR = default(string);
					}
					this.SendPropertyChanged("T_AccDef1");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Advance2", Storage = "_T_AccDef2", ThisKey = "LoanAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef2
		{
			get
			{
				return this._T_AccDef2.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef2.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef2.Entity = null;
						previousValue.T_Advances2.Remove(this);
					}
					this._T_AccDef2.Entity = value;
					if ((value != null))
					{
						value.T_Advances2.Add(this);
						this._LoanAcc = value.AccDef_No;
					}
					else
					{
						this._LoanAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef2");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_Advance", Storage = "_T_CstTbl", ThisKey = "CostCenterEmp", OtherKey = "Cst_ID", IsForeignKey = true)]
		public T_CstTbl T_CstTbl
		{
			get
			{
				return this._T_CstTbl.Entity;
			}
			set
			{
				T_CstTbl previousValue = this._T_CstTbl.Entity;
				if (((previousValue != value)
							|| (this._T_CstTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_CstTbl.Entity = null;
						previousValue.T_Advances.Remove(this);
					}
					this._T_CstTbl.Entity = value;
					if ((value != null))
					{
						value.T_Advances.Add(this);
						this._CostCenterEmp = value.Cst_ID;
					}
					else
					{
						this._CostCenterEmp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_CstTbl");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Advance", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Advances.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Advances.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Premiums(T_Premium entity)
		{
			this.SendPropertyChanging();
			entity.T_Advance = this;
		}

		private void detach_T_Premiums(T_Premium entity)
		{
			this.SendPropertyChanging();
			entity.T_Advance = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_AinNatural")]
	public partial class T_AinNatural : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _AinNatural_ID;

		private int _AinNatural_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_AinsData> _T_AinsDatas;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAinNatural_IDChanging(string value);
		partial void OnAinNatural_IDChanged();
		partial void OnAinNatural_NoChanging(int value);
		partial void OnAinNatural_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_AinNatural()
		{
			this._T_AinsDatas = new EntitySet<T_AinsData>(new Action<T_AinsData>(this.attach_T_AinsDatas), new Action<T_AinsData>(this.detach_T_AinsDatas));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinNatural_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string AinNatural_ID
		{
			get
			{
				return this._AinNatural_ID;
			}
			set
			{
				if ((this._AinNatural_ID != value))
				{
					this.OnAinNatural_IDChanging(value);
					this.SendPropertyChanging();
					this._AinNatural_ID = value;
					this.SendPropertyChanged("AinNatural_ID");
					this.OnAinNatural_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinNatural_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int AinNatural_No
		{
			get
			{
				return this._AinNatural_No;
			}
			set
			{
				if ((this._AinNatural_No != value))
				{
					this.OnAinNatural_NoChanging(value);
					this.SendPropertyChanging();
					this._AinNatural_No = value;
					this.SendPropertyChanged("AinNatural_No");
					this.OnAinNatural_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinNatural_T_AinsData", Storage = "_T_AinsDatas", ThisKey = "AinNatural_No", OtherKey = "AinNature")]
		public EntitySet<T_AinsData> T_AinsDatas
		{
			get
			{
				return this._T_AinsDatas;
			}
			set
			{
				this._T_AinsDatas.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_AinsDatas(T_AinsData entity)
		{
			this.SendPropertyChanging();
			entity.T_AinNatural = this;
		}

		private void detach_T_AinsDatas(T_AinsData entity)
		{
			this.SendPropertyChanging();
			entity.T_AinNatural = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_AinsData")]
	public partial class T_AinsData : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _AinID;

		private string _AinNo;

		private int _EqarID;

		private int _AinTyp;

		private int _AinNature;

		private System.Nullable<int> _AinStatus;

		private System.Nullable<double> _RentOfYear;

		private System.Nullable<double> _EyeValue;

		private string _EyeDetail;

		private EntitySet<T_EqarContract> _T_EqarContracts;

		private EntitySet<T_EqarSale> _T_EqarSales;

		private EntitySet<T_TenantContract> _T_TenantContracts;

		private EntityRef<T_AinNatural> _T_AinNatural;

		private EntityRef<T_AinTyp> _T_AinTyp;

		private EntityRef<T_EqarsData> _T_EqarsData;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAinIDChanging(int value);
		partial void OnAinIDChanged();
		partial void OnAinNoChanging(string value);
		partial void OnAinNoChanged();
		partial void OnEqarIDChanging(int value);
		partial void OnEqarIDChanged();
		partial void OnAinTypChanging(int value);
		partial void OnAinTypChanged();
		partial void OnAinNatureChanging(int value);
		partial void OnAinNatureChanged();
		partial void OnAinStatusChanging(System.Nullable<int> value);
		partial void OnAinStatusChanged();
		partial void OnRentOfYearChanging(System.Nullable<double> value);
		partial void OnRentOfYearChanged();
		partial void OnEyeValueChanging(System.Nullable<double> value);
		partial void OnEyeValueChanged();
		partial void OnEyeDetailChanging(string value);
		partial void OnEyeDetailChanged();
		#endregion

		public T_AinsData()
		{
			this._T_EqarContracts = new EntitySet<T_EqarContract>(new Action<T_EqarContract>(this.attach_T_EqarContracts), new Action<T_EqarContract>(this.detach_T_EqarContracts));
			this._T_EqarSales = new EntitySet<T_EqarSale>(new Action<T_EqarSale>(this.attach_T_EqarSales), new Action<T_EqarSale>(this.detach_T_EqarSales));
			this._T_TenantContracts = new EntitySet<T_TenantContract>(new Action<T_TenantContract>(this.attach_T_TenantContracts), new Action<T_TenantContract>(this.detach_T_TenantContracts));
			this._T_AinNatural = default(EntityRef<T_AinNatural>);
			this._T_AinTyp = default(EntityRef<T_AinTyp>);
			this._T_EqarsData = default(EntityRef<T_EqarsData>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int AinID
		{
			get
			{
				return this._AinID;
			}
			set
			{
				if ((this._AinID != value))
				{
					this.OnAinIDChanging(value);
					this.SendPropertyChanging();
					this._AinID = value;
					this.SendPropertyChanged("AinID");
					this.OnAinIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinNo", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
		public string AinNo
		{
			get
			{
				return this._AinNo;
			}
			set
			{
				if ((this._AinNo != value))
				{
					this.OnAinNoChanging(value);
					this.SendPropertyChanging();
					this._AinNo = value;
					this.SendPropertyChanged("AinNo");
					this.OnAinNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarID", DbType = "Int NOT NULL")]
		public int EqarID
		{
			get
			{
				return this._EqarID;
			}
			set
			{
				if ((this._EqarID != value))
				{
					if (this._T_EqarsData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEqarIDChanging(value);
					this.SendPropertyChanging();
					this._EqarID = value;
					this.SendPropertyChanged("EqarID");
					this.OnEqarIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinTyp", DbType = "Int NOT NULL")]
		public int AinTyp
		{
			get
			{
				return this._AinTyp;
			}
			set
			{
				if ((this._AinTyp != value))
				{
					if (this._T_AinTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAinTypChanging(value);
					this.SendPropertyChanging();
					this._AinTyp = value;
					this.SendPropertyChanged("AinTyp");
					this.OnAinTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinNature", DbType = "Int NOT NULL")]
		public int AinNature
		{
			get
			{
				return this._AinNature;
			}
			set
			{
				if ((this._AinNature != value))
				{
					if (this._T_AinNatural.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAinNatureChanging(value);
					this.SendPropertyChanging();
					this._AinNature = value;
					this.SendPropertyChanged("AinNature");
					this.OnAinNatureChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinStatus", DbType = "Int")]
		public System.Nullable<int> AinStatus
		{
			get
			{
				return this._AinStatus;
			}
			set
			{
				if ((this._AinStatus != value))
				{
					this.OnAinStatusChanging(value);
					this.SendPropertyChanging();
					this._AinStatus = value;
					this.SendPropertyChanged("AinStatus");
					this.OnAinStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RentOfYear", DbType = "Float")]
		public System.Nullable<double> RentOfYear
		{
			get
			{
				return this._RentOfYear;
			}
			set
			{
				if ((this._RentOfYear != value))
				{
					this.OnRentOfYearChanging(value);
					this.SendPropertyChanging();
					this._RentOfYear = value;
					this.SendPropertyChanged("RentOfYear");
					this.OnRentOfYearChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EyeValue", DbType = "Float")]
		public System.Nullable<double> EyeValue
		{
			get
			{
				return this._EyeValue;
			}
			set
			{
				if ((this._EyeValue != value))
				{
					this.OnEyeValueChanging(value);
					this.SendPropertyChanging();
					this._EyeValue = value;
					this.SendPropertyChanged("EyeValue");
					this.OnEyeValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EyeDetail", DbType = "VarChar(750)")]
		public string EyeDetail
		{
			get
			{
				return this._EyeDetail;
			}
			set
			{
				if ((this._EyeDetail != value))
				{
					this.OnEyeDetailChanging(value);
					this.SendPropertyChanging();
					this._EyeDetail = value;
					this.SendPropertyChanged("EyeDetail");
					this.OnEyeDetailChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinsData_T_EqarContract", Storage = "_T_EqarContracts", ThisKey = "AinID", OtherKey = "AinID")]
		public EntitySet<T_EqarContract> T_EqarContracts
		{
			get
			{
				return this._T_EqarContracts;
			}
			set
			{
				this._T_EqarContracts.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinsData_T_EqarSale", Storage = "_T_EqarSales", ThisKey = "AinID", OtherKey = "AinID")]
		public EntitySet<T_EqarSale> T_EqarSales
		{
			get
			{
				return this._T_EqarSales;
			}
			set
			{
				this._T_EqarSales.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinsData_T_TenantContract", Storage = "_T_TenantContracts", ThisKey = "AinID", OtherKey = "Ain_ID")]
		public EntitySet<T_TenantContract> T_TenantContracts
		{
			get
			{
				return this._T_TenantContracts;
			}
			set
			{
				this._T_TenantContracts.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinNatural_T_AinsData", Storage = "_T_AinNatural", ThisKey = "AinNature", OtherKey = "AinNatural_No", IsForeignKey = true)]
		public T_AinNatural T_AinNatural
		{
			get
			{
				return this._T_AinNatural.Entity;
			}
			set
			{
				T_AinNatural previousValue = this._T_AinNatural.Entity;
				if (((previousValue != value)
							|| (this._T_AinNatural.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AinNatural.Entity = null;
						previousValue.T_AinsDatas.Remove(this);
					}
					this._T_AinNatural.Entity = value;
					if ((value != null))
					{
						value.T_AinsDatas.Add(this);
						this._AinNature = value.AinNatural_No;
					}
					else
					{
						this._AinNature = default(int);
					}
					this.SendPropertyChanged("T_AinNatural");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinTyp_T_AinsData", Storage = "_T_AinTyp", ThisKey = "AinTyp", OtherKey = "AinTyp_No", IsForeignKey = true)]
		public T_AinTyp T_AinTyp
		{
			get
			{
				return this._T_AinTyp.Entity;
			}
			set
			{
				T_AinTyp previousValue = this._T_AinTyp.Entity;
				if (((previousValue != value)
							|| (this._T_AinTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AinTyp.Entity = null;
						previousValue.T_AinsDatas.Remove(this);
					}
					this._T_AinTyp.Entity = value;
					if ((value != null))
					{
						value.T_AinsDatas.Add(this);
						this._AinTyp = value.AinTyp_No;
					}
					else
					{
						this._AinTyp = default(int);
					}
					this.SendPropertyChanged("T_AinTyp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarsData_T_AinsData", Storage = "_T_EqarsData", ThisKey = "EqarID", OtherKey = "EqarID", IsForeignKey = true)]
		public T_EqarsData T_EqarsData
		{
			get
			{
				return this._T_EqarsData.Entity;
			}
			set
			{
				T_EqarsData previousValue = this._T_EqarsData.Entity;
				if (((previousValue != value)
							|| (this._T_EqarsData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_EqarsData.Entity = null;
						previousValue.T_AinsDatas.Remove(this);
					}
					this._T_EqarsData.Entity = value;
					if ((value != null))
					{
						value.T_AinsDatas.Add(this);
						this._EqarID = value.EqarID;
					}
					else
					{
						this._EqarID = default(int);
					}
					this.SendPropertyChanged("T_EqarsData");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_EqarContracts(T_EqarContract entity)
		{
			this.SendPropertyChanging();
			entity.T_AinsData = this;
		}

		private void detach_T_EqarContracts(T_EqarContract entity)
		{
			this.SendPropertyChanging();
			entity.T_AinsData = null;
		}

		private void attach_T_EqarSales(T_EqarSale entity)
		{
			this.SendPropertyChanging();
			entity.T_AinsData = this;
		}

		private void detach_T_EqarSales(T_EqarSale entity)
		{
			this.SendPropertyChanging();
			entity.T_AinsData = null;
		}

		private void attach_T_TenantContracts(T_TenantContract entity)
		{
			this.SendPropertyChanging();
			entity.T_AinsData = this;
		}

		private void detach_T_TenantContracts(T_TenantContract entity)
		{
			this.SendPropertyChanging();
			entity.T_AinsData = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_AinTyp")]
	public partial class T_AinTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _AinTyp_ID;

		private int _AinTyp_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_AinsData> _T_AinsDatas;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAinTyp_IDChanging(string value);
		partial void OnAinTyp_IDChanged();
		partial void OnAinTyp_NoChanging(int value);
		partial void OnAinTyp_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_AinTyp()
		{
			this._T_AinsDatas = new EntitySet<T_AinsData>(new Action<T_AinsData>(this.attach_T_AinsDatas), new Action<T_AinsData>(this.detach_T_AinsDatas));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinTyp_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string AinTyp_ID
		{
			get
			{
				return this._AinTyp_ID;
			}
			set
			{
				if ((this._AinTyp_ID != value))
				{
					this.OnAinTyp_IDChanging(value);
					this.SendPropertyChanging();
					this._AinTyp_ID = value;
					this.SendPropertyChanged("AinTyp_ID");
					this.OnAinTyp_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinTyp_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int AinTyp_No
		{
			get
			{
				return this._AinTyp_No;
			}
			set
			{
				if ((this._AinTyp_No != value))
				{
					this.OnAinTyp_NoChanging(value);
					this.SendPropertyChanging();
					this._AinTyp_No = value;
					this.SendPropertyChanged("AinTyp_No");
					this.OnAinTyp_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinTyp_T_AinsData", Storage = "_T_AinsDatas", ThisKey = "AinTyp_No", OtherKey = "AinTyp")]
		public EntitySet<T_AinsData> T_AinsDatas
		{
			get
			{
				return this._T_AinsDatas;
			}
			set
			{
				this._T_AinsDatas.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_AinsDatas(T_AinsData entity)
		{
			this.SendPropertyChanging();
			entity.T_AinTyp = this;
		}

		private void detach_T_AinsDatas(T_AinsData entity)
		{
			this.SendPropertyChanging();
			entity.T_AinTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_AlarmTenant")]
	public partial class T_AlarmTenant : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _AlarmTenantID;

		private int _AlarmTenantNo;

		private string _AlarmDateG;

		private string _AlarmDateH;

		private int _tenant_ID;

		private string _AlarmSubject;

		private string _AlarmDetail;

		private string _AlarmAdmin;

		private EntityRef<T_Tenant> _T_Tenant;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAlarmTenantIDChanging(int value);
		partial void OnAlarmTenantIDChanged();
		partial void OnAlarmTenantNoChanging(int value);
		partial void OnAlarmTenantNoChanged();
		partial void OnAlarmDateGChanging(string value);
		partial void OnAlarmDateGChanged();
		partial void OnAlarmDateHChanging(string value);
		partial void OnAlarmDateHChanged();
		partial void Ontenant_IDChanging(int value);
		partial void Ontenant_IDChanged();
		partial void OnAlarmSubjectChanging(string value);
		partial void OnAlarmSubjectChanged();
		partial void OnAlarmDetailChanging(string value);
		partial void OnAlarmDetailChanged();
		partial void OnAlarmAdminChanging(string value);
		partial void OnAlarmAdminChanged();
		#endregion

		public T_AlarmTenant()
		{
			this._T_Tenant = default(EntityRef<T_Tenant>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmTenantID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int AlarmTenantID
		{
			get
			{
				return this._AlarmTenantID;
			}
			set
			{
				if ((this._AlarmTenantID != value))
				{
					this.OnAlarmTenantIDChanging(value);
					this.SendPropertyChanging();
					this._AlarmTenantID = value;
					this.SendPropertyChanged("AlarmTenantID");
					this.OnAlarmTenantIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmTenantNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int AlarmTenantNo
		{
			get
			{
				return this._AlarmTenantNo;
			}
			set
			{
				if ((this._AlarmTenantNo != value))
				{
					this.OnAlarmTenantNoChanging(value);
					this.SendPropertyChanging();
					this._AlarmTenantNo = value;
					this.SendPropertyChanged("AlarmTenantNo");
					this.OnAlarmTenantNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDateG", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string AlarmDateG
		{
			get
			{
				return this._AlarmDateG;
			}
			set
			{
				if ((this._AlarmDateG != value))
				{
					this.OnAlarmDateGChanging(value);
					this.SendPropertyChanging();
					this._AlarmDateG = value;
					this.SendPropertyChanged("AlarmDateG");
					this.OnAlarmDateGChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDateH", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string AlarmDateH
		{
			get
			{
				return this._AlarmDateH;
			}
			set
			{
				if ((this._AlarmDateH != value))
				{
					this.OnAlarmDateHChanging(value);
					this.SendPropertyChanging();
					this._AlarmDateH = value;
					this.SendPropertyChanged("AlarmDateH");
					this.OnAlarmDateHChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tenant_ID", DbType = "Int NOT NULL")]
		public int tenant_ID
		{
			get
			{
				return this._tenant_ID;
			}
			set
			{
				if ((this._tenant_ID != value))
				{
					if (this._T_Tenant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontenant_IDChanging(value);
					this.SendPropertyChanging();
					this._tenant_ID = value;
					this.SendPropertyChanged("tenant_ID");
					this.Ontenant_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmSubject", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
		public string AlarmSubject
		{
			get
			{
				return this._AlarmSubject;
			}
			set
			{
				if ((this._AlarmSubject != value))
				{
					this.OnAlarmSubjectChanging(value);
					this.SendPropertyChanging();
					this._AlarmSubject = value;
					this.SendPropertyChanged("AlarmSubject");
					this.OnAlarmSubjectChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDetail", DbType = "VarChar(1500)")]
		public string AlarmDetail
		{
			get
			{
				return this._AlarmDetail;
			}
			set
			{
				if ((this._AlarmDetail != value))
				{
					this.OnAlarmDetailChanging(value);
					this.SendPropertyChanging();
					this._AlarmDetail = value;
					this.SendPropertyChanged("AlarmDetail");
					this.OnAlarmDetailChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmAdmin", DbType = "VarChar(100)")]
		public string AlarmAdmin
		{
			get
			{
				return this._AlarmAdmin;
			}
			set
			{
				if ((this._AlarmAdmin != value))
				{
					this.OnAlarmAdminChanging(value);
					this.SendPropertyChanging();
					this._AlarmAdmin = value;
					this.SendPropertyChanged("AlarmAdmin");
					this.OnAlarmAdminChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Tenant_T_AlarmTenant", Storage = "_T_Tenant", ThisKey = "tenant_ID", OtherKey = "tenantID", IsForeignKey = true)]
		public T_Tenant T_Tenant
		{
			get
			{
				return this._T_Tenant.Entity;
			}
			set
			{
				T_Tenant previousValue = this._T_Tenant.Entity;
				if (((previousValue != value)
							|| (this._T_Tenant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Tenant.Entity = null;
						previousValue.T_AlarmTenants.Remove(this);
					}
					this._T_Tenant.Entity = value;
					if ((value != null))
					{
						value.T_AlarmTenants.Add(this);
						this._tenant_ID = value.tenantID;
					}
					else
					{
						this._tenant_ID = default(int);
					}
					this.SendPropertyChanged("T_Tenant");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Attend")]
	public partial class T_Attend : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Attend_ID;

		private string _EmpID;

		private System.Nullable<int> _Day_No;

		private System.Nullable<int> _Periods;

		private string _Time1;

		private string _TimeAllow1;

		private string _LeaveTime1;

		private string _Time2;

		private string _TimeAlow2;

		private string _LeaveTime2;

		private EntityRef<T_DayOfWeek> _T_DayOfWeek;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAttend_IDChanging(string value);
		partial void OnAttend_IDChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnDay_NoChanging(System.Nullable<int> value);
		partial void OnDay_NoChanged();
		partial void OnPeriodsChanging(System.Nullable<int> value);
		partial void OnPeriodsChanged();
		partial void OnTime1Changing(string value);
		partial void OnTime1Changed();
		partial void OnTimeAllow1Changing(string value);
		partial void OnTimeAllow1Changed();
		partial void OnLeaveTime1Changing(string value);
		partial void OnLeaveTime1Changed();
		partial void OnTime2Changing(string value);
		partial void OnTime2Changed();
		partial void OnTimeAlow2Changing(string value);
		partial void OnTimeAlow2Changed();
		partial void OnLeaveTime2Changing(string value);
		partial void OnLeaveTime2Changed();
		#endregion

		public T_Attend()
		{
			this._T_DayOfWeek = default(EntityRef<T_DayOfWeek>);
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Attend_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string Attend_ID
		{
			get
			{
				return this._Attend_ID;
			}
			set
			{
				if ((this._Attend_ID != value))
				{
					this.OnAttend_IDChanging(value);
					this.SendPropertyChanging();
					this._Attend_ID = value;
					this.SendPropertyChanged("Attend_ID");
					this.OnAttend_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Day_No", DbType = "Int")]
		public System.Nullable<int> Day_No
		{
			get
			{
				return this._Day_No;
			}
			set
			{
				if ((this._Day_No != value))
				{
					if (this._T_DayOfWeek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDay_NoChanging(value);
					this.SendPropertyChanging();
					this._Day_No = value;
					this.SendPropertyChanged("Day_No");
					this.OnDay_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Periods", DbType = "Int")]
		public System.Nullable<int> Periods
		{
			get
			{
				return this._Periods;
			}
			set
			{
				if ((this._Periods != value))
				{
					this.OnPeriodsChanging(value);
					this.SendPropertyChanging();
					this._Periods = value;
					this.SendPropertyChanged("Periods");
					this.OnPeriodsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Time1", DbType = "VarChar(10)")]
		public string Time1
		{
			get
			{
				return this._Time1;
			}
			set
			{
				if ((this._Time1 != value))
				{
					this.OnTime1Changing(value);
					this.SendPropertyChanging();
					this._Time1 = value;
					this.SendPropertyChanged("Time1");
					this.OnTime1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TimeAllow1", DbType = "VarChar(10)")]
		public string TimeAllow1
		{
			get
			{
				return this._TimeAllow1;
			}
			set
			{
				if ((this._TimeAllow1 != value))
				{
					this.OnTimeAllow1Changing(value);
					this.SendPropertyChanging();
					this._TimeAllow1 = value;
					this.SendPropertyChanged("TimeAllow1");
					this.OnTimeAllow1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LeaveTime1", DbType = "VarChar(10)")]
		public string LeaveTime1
		{
			get
			{
				return this._LeaveTime1;
			}
			set
			{
				if ((this._LeaveTime1 != value))
				{
					this.OnLeaveTime1Changing(value);
					this.SendPropertyChanging();
					this._LeaveTime1 = value;
					this.SendPropertyChanged("LeaveTime1");
					this.OnLeaveTime1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Time2", DbType = "VarChar(10)")]
		public string Time2
		{
			get
			{
				return this._Time2;
			}
			set
			{
				if ((this._Time2 != value))
				{
					this.OnTime2Changing(value);
					this.SendPropertyChanging();
					this._Time2 = value;
					this.SendPropertyChanged("Time2");
					this.OnTime2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TimeAlow2", DbType = "VarChar(10)")]
		public string TimeAlow2
		{
			get
			{
				return this._TimeAlow2;
			}
			set
			{
				if ((this._TimeAlow2 != value))
				{
					this.OnTimeAlow2Changing(value);
					this.SendPropertyChanging();
					this._TimeAlow2 = value;
					this.SendPropertyChanged("TimeAlow2");
					this.OnTimeAlow2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LeaveTime2", DbType = "VarChar(10)")]
		public string LeaveTime2
		{
			get
			{
				return this._LeaveTime2;
			}
			set
			{
				if ((this._LeaveTime2 != value))
				{
					this.OnLeaveTime2Changing(value);
					this.SendPropertyChanging();
					this._LeaveTime2 = value;
					this.SendPropertyChanged("LeaveTime2");
					this.OnLeaveTime2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_DayOfWeek_T_Attend", Storage = "_T_DayOfWeek", ThisKey = "Day_No", OtherKey = "Day_No", IsForeignKey = true)]
		public T_DayOfWeek T_DayOfWeek
		{
			get
			{
				return this._T_DayOfWeek.Entity;
			}
			set
			{
				T_DayOfWeek previousValue = this._T_DayOfWeek.Entity;
				if (((previousValue != value)
							|| (this._T_DayOfWeek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_DayOfWeek.Entity = null;
						previousValue.T_Attends.Remove(this);
					}
					this._T_DayOfWeek.Entity = value;
					if ((value != null))
					{
						value.T_Attends.Add(this);
						this._Day_No = value.Day_No;
					}
					else
					{
						this._Day_No = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_DayOfWeek");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Attend", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Attends.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Attends.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_AttendOperat")]
	public partial class T_AttendOperat : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _AttendOperat_ID;

		private string _EmpID;

		private System.Nullable<int> _Day;

		private string _Date;

		private string _ComeTime;

		private System.Nullable<double> _LateTime;

		private string _Time1;

		private string _Time2;

		private string _LeaveTime;

		private string _LeaveTime2;

		private string _Note;

		private string _Operation;

		private System.Nullable<int> _Usr_No;

		private string _DateEdit;

		private System.Nullable<int> _ProjectNo;

		private EntityRef<T_DayOfWeek> _T_DayOfWeek;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_Project> _T_Project;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAttendOperat_IDChanging(string value);
		partial void OnAttendOperat_IDChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnDayChanging(System.Nullable<int> value);
		partial void OnDayChanged();
		partial void OnDateChanging(string value);
		partial void OnDateChanged();
		partial void OnComeTimeChanging(string value);
		partial void OnComeTimeChanged();
		partial void OnLateTimeChanging(System.Nullable<double> value);
		partial void OnLateTimeChanged();
		partial void OnTime1Changing(string value);
		partial void OnTime1Changed();
		partial void OnTime2Changing(string value);
		partial void OnTime2Changed();
		partial void OnLeaveTimeChanging(string value);
		partial void OnLeaveTimeChanged();
		partial void OnLeaveTime2Changing(string value);
		partial void OnLeaveTime2Changed();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnOperationChanging(string value);
		partial void OnOperationChanged();
		partial void OnUsr_NoChanging(System.Nullable<int> value);
		partial void OnUsr_NoChanged();
		partial void OnDateEditChanging(string value);
		partial void OnDateEditChanged();
		partial void OnProjectNoChanging(System.Nullable<int> value);
		partial void OnProjectNoChanged();
		#endregion

		public T_AttendOperat()
		{
			this._T_DayOfWeek = default(EntityRef<T_DayOfWeek>);
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_Project = default(EntityRef<T_Project>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AttendOperat_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string AttendOperat_ID
		{
			get
			{
				return this._AttendOperat_ID;
			}
			set
			{
				if ((this._AttendOperat_ID != value))
				{
					this.OnAttendOperat_IDChanging(value);
					this.SendPropertyChanging();
					this._AttendOperat_ID = value;
					this.SendPropertyChanged("AttendOperat_ID");
					this.OnAttendOperat_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Day", DbType = "Int")]
		public System.Nullable<int> Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					if (this._T_DayOfWeek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", DbType = "VarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComeTime", DbType = "VarChar(20)")]
		public string ComeTime
		{
			get
			{
				return this._ComeTime;
			}
			set
			{
				if ((this._ComeTime != value))
				{
					this.OnComeTimeChanging(value);
					this.SendPropertyChanging();
					this._ComeTime = value;
					this.SendPropertyChanged("ComeTime");
					this.OnComeTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LateTime", DbType = "Float")]
		public System.Nullable<double> LateTime
		{
			get
			{
				return this._LateTime;
			}
			set
			{
				if ((this._LateTime != value))
				{
					this.OnLateTimeChanging(value);
					this.SendPropertyChanging();
					this._LateTime = value;
					this.SendPropertyChanged("LateTime");
					this.OnLateTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Time1", DbType = "VarChar(20)")]
		public string Time1
		{
			get
			{
				return this._Time1;
			}
			set
			{
				if ((this._Time1 != value))
				{
					this.OnTime1Changing(value);
					this.SendPropertyChanging();
					this._Time1 = value;
					this.SendPropertyChanged("Time1");
					this.OnTime1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Time2", DbType = "VarChar(20)")]
		public string Time2
		{
			get
			{
				return this._Time2;
			}
			set
			{
				if ((this._Time2 != value))
				{
					this.OnTime2Changing(value);
					this.SendPropertyChanging();
					this._Time2 = value;
					this.SendPropertyChanged("Time2");
					this.OnTime2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LeaveTime", DbType = "VarChar(20)")]
		public string LeaveTime
		{
			get
			{
				return this._LeaveTime;
			}
			set
			{
				if ((this._LeaveTime != value))
				{
					this.OnLeaveTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveTime = value;
					this.SendPropertyChanged("LeaveTime");
					this.OnLeaveTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LeaveTime2", DbType = "VarChar(20)")]
		public string LeaveTime2
		{
			get
			{
				return this._LeaveTime2;
			}
			set
			{
				if ((this._LeaveTime2 != value))
				{
					this.OnLeaveTime2Changing(value);
					this.SendPropertyChanging();
					this._LeaveTime2 = value;
					this.SendPropertyChanged("LeaveTime2");
					this.OnLeaveTime2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Operation", DbType = "VarChar(10)")]
		public string Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged("Operation");
					this.OnOperationChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr_No", DbType = "Int")]
		public System.Nullable<int> Usr_No
		{
			get
			{
				return this._Usr_No;
			}
			set
			{
				if ((this._Usr_No != value))
				{
					this.OnUsr_NoChanging(value);
					this.SendPropertyChanging();
					this._Usr_No = value;
					this.SendPropertyChanged("Usr_No");
					this.OnUsr_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateEdit", DbType = "VarChar(10)")]
		public string DateEdit
		{
			get
			{
				return this._DateEdit;
			}
			set
			{
				if ((this._DateEdit != value))
				{
					this.OnDateEditChanging(value);
					this.SendPropertyChanging();
					this._DateEdit = value;
					this.SendPropertyChanged("DateEdit");
					this.OnDateEditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProjectNo", DbType = "Int")]
		public System.Nullable<int> ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					if (this._T_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_DayOfWeek_T_AttendOperat", Storage = "_T_DayOfWeek", ThisKey = "Day", OtherKey = "Day_No", IsForeignKey = true)]
		public T_DayOfWeek T_DayOfWeek
		{
			get
			{
				return this._T_DayOfWeek.Entity;
			}
			set
			{
				T_DayOfWeek previousValue = this._T_DayOfWeek.Entity;
				if (((previousValue != value)
							|| (this._T_DayOfWeek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_DayOfWeek.Entity = null;
						previousValue.T_AttendOperats.Remove(this);
					}
					this._T_DayOfWeek.Entity = value;
					if ((value != null))
					{
						value.T_AttendOperats.Add(this);
						this._Day = value.Day_No;
					}
					else
					{
						this._Day = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_DayOfWeek");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_AttendOperat", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_AttendOperats.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_AttendOperats.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Project_T_AttendOperat", Storage = "_T_Project", ThisKey = "ProjectNo", OtherKey = "Project_No", IsForeignKey = true)]
		public T_Project T_Project
		{
			get
			{
				return this._T_Project.Entity;
			}
			set
			{
				T_Project previousValue = this._T_Project.Entity;
				if (((previousValue != value)
							|| (this._T_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Project.Entity = null;
						previousValue.T_AttendOperats.Remove(this);
					}
					this._T_Project.Entity = value;
					if ((value != null))
					{
						value.T_AttendOperats.Add(this);
						this._ProjectNo = value.Project_No;
					}
					else
					{
						this._ProjectNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Project");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Authorization")]
	public partial class T_Authorization : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Authorization_ID;

		private int _Authorization_No;

		private string _Date;

		private string _EmpID;

		private string _ExitTime;

		private string _BackTime;

		private string _reason;

		private string _Note;

		private string _RTime;

		private System.Nullable<bool> _IFState;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAuthorization_IDChanging(string value);
		partial void OnAuthorization_IDChanged();
		partial void OnAuthorization_NoChanging(int value);
		partial void OnAuthorization_NoChanged();
		partial void OnDateChanging(string value);
		partial void OnDateChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnExitTimeChanging(string value);
		partial void OnExitTimeChanged();
		partial void OnBackTimeChanging(string value);
		partial void OnBackTimeChanged();
		partial void OnreasonChanging(string value);
		partial void OnreasonChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnRTimeChanging(string value);
		partial void OnRTimeChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		#endregion

		public T_Authorization()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Authorization_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Authorization_ID
		{
			get
			{
				return this._Authorization_ID;
			}
			set
			{
				if ((this._Authorization_ID != value))
				{
					this.OnAuthorization_IDChanging(value);
					this.SendPropertyChanging();
					this._Authorization_ID = value;
					this.SendPropertyChanged("Authorization_ID");
					this.OnAuthorization_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Authorization_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Authorization_No
		{
			get
			{
				return this._Authorization_No;
			}
			set
			{
				if ((this._Authorization_No != value))
				{
					this.OnAuthorization_NoChanging(value);
					this.SendPropertyChanging();
					this._Authorization_No = value;
					this.SendPropertyChanged("Authorization_No");
					this.OnAuthorization_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", DbType = "VarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExitTime", DbType = "VarChar(20)")]
		public string ExitTime
		{
			get
			{
				return this._ExitTime;
			}
			set
			{
				if ((this._ExitTime != value))
				{
					this.OnExitTimeChanging(value);
					this.SendPropertyChanging();
					this._ExitTime = value;
					this.SendPropertyChanged("ExitTime");
					this.OnExitTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BackTime", DbType = "VarChar(20)")]
		public string BackTime
		{
			get
			{
				return this._BackTime;
			}
			set
			{
				if ((this._BackTime != value))
				{
					this.OnBackTimeChanging(value);
					this.SendPropertyChanging();
					this._BackTime = value;
					this.SendPropertyChanged("BackTime");
					this.OnBackTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_reason", DbType = "VarChar(250)")]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RTime", DbType = "VarChar(10)")]
		public string RTime
		{
			get
			{
				return this._RTime;
			}
			set
			{
				if ((this._RTime != value))
				{
					this.OnRTimeChanging(value);
					this.SendPropertyChanging();
					this._RTime = value;
					this.SendPropertyChanged("RTime");
					this.OnRTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Authorization", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Authorizations.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Authorizations.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Bank")]
	public partial class T_Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Bank_ID;

		private int _Bank_No;

		private string _Cod;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_Salary> _T_Salaries;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBank_IDChanging(string value);
		partial void OnBank_IDChanged();
		partial void OnBank_NoChanging(int value);
		partial void OnBank_NoChanged();
		partial void OnCodChanging(string value);
		partial void OnCodChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_Bank()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_Salaries = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries), new Action<T_Salary>(this.detach_T_Salaries));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Bank_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Bank_ID
		{
			get
			{
				return this._Bank_ID;
			}
			set
			{
				if ((this._Bank_ID != value))
				{
					this.OnBank_IDChanging(value);
					this.SendPropertyChanging();
					this._Bank_ID = value;
					this.SendPropertyChanged("Bank_ID");
					this.OnBank_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Bank_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Bank_No
		{
			get
			{
				return this._Bank_No;
			}
			set
			{
				if ((this._Bank_No != value))
				{
					this.OnBank_NoChanging(value);
					this.SendPropertyChanging();
					this._Bank_No = value;
					this.SendPropertyChanged("Bank_No");
					this.OnBank_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cod", DbType = "VarChar(50)")]
		public string Cod
		{
			get
			{
				return this._Cod;
			}
			set
			{
				if ((this._Cod != value))
				{
					this.OnCodChanging(value);
					this.SendPropertyChanging();
					this._Cod = value;
					this.SendPropertyChanged("Cod");
					this.OnCodChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(50)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(50)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Bank_T_Emp", Storage = "_T_Emps", ThisKey = "Bank_No", OtherKey = "Bank")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Bank_T_Salary", Storage = "_T_Salaries", ThisKey = "Bank_No", OtherKey = "Bank")]
		public EntitySet<T_Salary> T_Salaries
		{
			get
			{
				return this._T_Salaries;
			}
			set
			{
				this._T_Salaries.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Bank = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Bank = null;
		}

		private void attach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Bank = this;
		}

		private void detach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Bank = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_BankPeaper")]
	public partial class T_BankPeaper : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _PageNo;

		private string _CustAcc;

		private string _BankAcc;

		private string _BranchAcc;

		private string _PageDate;

		private string _PageDatePay;

		private System.Nullable<double> _Amount;

		private System.Nullable<bool> _PageType;

		private System.Nullable<bool> _vTyp;

		private System.Nullable<int> _PayState;

		private System.Nullable<int> _gdID;

		private System.Nullable<int> _IfDel;

		private System.Nullable<int> _gdTyp;

		private string _gdUser;

		private System.Nullable<int> _CompanyID;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_AccDef> _T_AccDef1;

		private EntityRef<T_AccDef> _T_AccDef2;

		private EntityRef<T_GDHEAD> _T_GDHEAD;

		private EntityRef<T_INVSETTING> _T_INVSETTING;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnPageNoChanging(string value);
		partial void OnPageNoChanged();
		partial void OnCustAccChanging(string value);
		partial void OnCustAccChanged();
		partial void OnBankAccChanging(string value);
		partial void OnBankAccChanged();
		partial void OnBranchAccChanging(string value);
		partial void OnBranchAccChanged();
		partial void OnPageDateChanging(string value);
		partial void OnPageDateChanged();
		partial void OnPageDatePayChanging(string value);
		partial void OnPageDatePayChanged();
		partial void OnAmountChanging(System.Nullable<double> value);
		partial void OnAmountChanged();
		partial void OnPageTypeChanging(System.Nullable<bool> value);
		partial void OnPageTypeChanged();
		partial void OnvTypChanging(System.Nullable<bool> value);
		partial void OnvTypChanged();
		partial void OnPayStateChanging(System.Nullable<int> value);
		partial void OnPayStateChanged();
		partial void OngdIDChanging(System.Nullable<int> value);
		partial void OngdIDChanged();
		partial void OnIfDelChanging(System.Nullable<int> value);
		partial void OnIfDelChanged();
		partial void OngdTypChanging(System.Nullable<int> value);
		partial void OngdTypChanged();
		partial void OngdUserChanging(string value);
		partial void OngdUserChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_BankPeaper()
		{
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_AccDef1 = default(EntityRef<T_AccDef>);
			this._T_AccDef2 = default(EntityRef<T_AccDef>);
			this._T_GDHEAD = default(EntityRef<T_GDHEAD>);
			this._T_INVSETTING = default(EntityRef<T_INVSETTING>);
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PageNo", DbType = "VarChar(20)")]
		public string PageNo
		{
			get
			{
				return this._PageNo;
			}
			set
			{
				if ((this._PageNo != value))
				{
					this.OnPageNoChanging(value);
					this.SendPropertyChanging();
					this._PageNo = value;
					this.SendPropertyChanged("PageNo");
					this.OnPageNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustAcc", DbType = "VarChar(30)")]
		public string CustAcc
		{
			get
			{
				return this._CustAcc;
			}
			set
			{
				if ((this._CustAcc != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustAccChanging(value);
					this.SendPropertyChanging();
					this._CustAcc = value;
					this.SendPropertyChanged("CustAcc");
					this.OnCustAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankAcc", DbType = "VarChar(30)")]
		public string BankAcc
		{
			get
			{
				return this._BankAcc;
			}
			set
			{
				if ((this._BankAcc != value))
				{
					if (this._T_AccDef1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccChanging(value);
					this.SendPropertyChanging();
					this._BankAcc = value;
					this.SendPropertyChanged("BankAcc");
					this.OnBankAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BranchAcc", DbType = "VarChar(30)")]
		public string BranchAcc
		{
			get
			{
				return this._BranchAcc;
			}
			set
			{
				if ((this._BranchAcc != value))
				{
					if (this._T_AccDef2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchAccChanging(value);
					this.SendPropertyChanging();
					this._BranchAcc = value;
					this.SendPropertyChanged("BranchAcc");
					this.OnBranchAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PageDate", DbType = "VarChar(50)")]
		public string PageDate
		{
			get
			{
				return this._PageDate;
			}
			set
			{
				if ((this._PageDate != value))
				{
					this.OnPageDateChanging(value);
					this.SendPropertyChanging();
					this._PageDate = value;
					this.SendPropertyChanged("PageDate");
					this.OnPageDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PageDatePay", DbType = "VarChar(50)")]
		public string PageDatePay
		{
			get
			{
				return this._PageDatePay;
			}
			set
			{
				if ((this._PageDatePay != value))
				{
					this.OnPageDatePayChanging(value);
					this.SendPropertyChanging();
					this._PageDatePay = value;
					this.SendPropertyChanged("PageDatePay");
					this.OnPageDatePayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Amount", DbType = "Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PageType", DbType = "Bit")]
		public System.Nullable<bool> PageType
		{
			get
			{
				return this._PageType;
			}
			set
			{
				if ((this._PageType != value))
				{
					this.OnPageTypeChanging(value);
					this.SendPropertyChanging();
					this._PageType = value;
					this.SendPropertyChanged("PageType");
					this.OnPageTypeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vTyp", DbType = "Bit")]
		public System.Nullable<bool> vTyp
		{
			get
			{
				return this._vTyp;
			}
			set
			{
				if ((this._vTyp != value))
				{
					this.OnvTypChanging(value);
					this.SendPropertyChanging();
					this._vTyp = value;
					this.SendPropertyChanged("vTyp");
					this.OnvTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PayState", DbType = "Int")]
		public System.Nullable<int> PayState
		{
			get
			{
				return this._PayState;
			}
			set
			{
				if ((this._PayState != value))
				{
					this.OnPayStateChanging(value);
					this.SendPropertyChanging();
					this._PayState = value;
					this.SendPropertyChanged("PayState");
					this.OnPayStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdID", DbType = "Int")]
		public System.Nullable<int> gdID
		{
			get
			{
				return this._gdID;
			}
			set
			{
				if ((this._gdID != value))
				{
					if (this._T_GDHEAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngdIDChanging(value);
					this.SendPropertyChanging();
					this._gdID = value;
					this.SendPropertyChanged("gdID");
					this.OngdIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IfDel", DbType = "Int")]
		public System.Nullable<int> IfDel
		{
			get
			{
				return this._IfDel;
			}
			set
			{
				if ((this._IfDel != value))
				{
					this.OnIfDelChanging(value);
					this.SendPropertyChanging();
					this._IfDel = value;
					this.SendPropertyChanged("IfDel");
					this.OnIfDelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdTyp", DbType = "Int")]
		public System.Nullable<int> gdTyp
		{
			get
			{
				return this._gdTyp;
			}
			set
			{
				if ((this._gdTyp != value))
				{
					if (this._T_INVSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngdTypChanging(value);
					this.SendPropertyChanging();
					this._gdTyp = value;
					this.SendPropertyChanged("gdTyp");
					this.OngdTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdUser", DbType = "VarChar(3)")]
		public string gdUser
		{
			get
			{
				return this._gdUser;
			}
			set
			{
				if ((this._gdUser != value))
				{
					this.OngdUserChanging(value);
					this.SendPropertyChanging();
					this._gdUser = value;
					this.SendPropertyChanged("gdUser");
					this.OngdUserChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_BankPeaper", Storage = "_T_AccDef", ThisKey = "CustAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_BankPeapers.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_BankPeapers.Add(this);
						this._CustAcc = value.AccDef_No;
					}
					else
					{
						this._CustAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_BankPeaper1", Storage = "_T_AccDef1", ThisKey = "BankAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef1
		{
			get
			{
				return this._T_AccDef1.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef1.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef1.Entity = null;
						previousValue.T_BankPeapers1.Remove(this);
					}
					this._T_AccDef1.Entity = value;
					if ((value != null))
					{
						value.T_BankPeapers1.Add(this);
						this._BankAcc = value.AccDef_No;
					}
					else
					{
						this._BankAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef1");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_BankPeaper2", Storage = "_T_AccDef2", ThisKey = "BranchAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef2
		{
			get
			{
				return this._T_AccDef2.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef2.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef2.Entity = null;
						previousValue.T_BankPeapers2.Remove(this);
					}
					this._T_AccDef2.Entity = value;
					if ((value != null))
					{
						value.T_BankPeapers2.Add(this);
						this._BranchAcc = value.AccDef_No;
					}
					else
					{
						this._BranchAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef2");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_GDHEAD_T_BankPeaper", Storage = "_T_GDHEAD", ThisKey = "gdID", OtherKey = "gdhead_ID", IsForeignKey = true)]
		public T_GDHEAD T_GDHEAD
		{
			get
			{
				return this._T_GDHEAD.Entity;
			}
			set
			{
				T_GDHEAD previousValue = this._T_GDHEAD.Entity;
				if (((previousValue != value)
							|| (this._T_GDHEAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_GDHEAD.Entity = null;
						previousValue.T_BankPeapers.Remove(this);
					}
					this._T_GDHEAD.Entity = value;
					if ((value != null))
					{
						value.T_BankPeapers.Add(this);
						this._gdID = value.gdhead_ID;
					}
					else
					{
						this._gdID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_GDHEAD");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVSETTING_T_BankPeaper", Storage = "_T_INVSETTING", ThisKey = "gdTyp", OtherKey = "InvID", IsForeignKey = true)]
		public T_INVSETTING T_INVSETTING
		{
			get
			{
				return this._T_INVSETTING.Entity;
			}
			set
			{
				T_INVSETTING previousValue = this._T_INVSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_INVSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_INVSETTING.Entity = null;
						previousValue.T_BankPeapers.Remove(this);
					}
					this._T_INVSETTING.Entity = value;
					if ((value != null))
					{
						value.T_BankPeapers.Add(this);
						this._gdTyp = value.InvID;
					}
					else
					{
						this._gdTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_INVSETTING");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_BankPeaper", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_BankPeapers.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_BankPeapers.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_BirthPlace")]
	public partial class T_BirthPlace : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _BirthPlaceNo;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_Emp> _T_Emps;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBirthPlaceNoChanging(int value);
		partial void OnBirthPlaceNoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_BirthPlace()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BirthPlaceNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int BirthPlaceNo
		{
			get
			{
				return this._BirthPlaceNo;
			}
			set
			{
				if ((this._BirthPlaceNo != value))
				{
					this.OnBirthPlaceNoChanging(value);
					this.SendPropertyChanging();
					this._BirthPlaceNo = value;
					this.SendPropertyChanged("BirthPlaceNo");
					this.OnBirthPlaceNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(20)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(20)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_BirthPlace_T_Emp", Storage = "_T_Emps", ThisKey = "BirthPlaceNo", OtherKey = "BirthPlace")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_BirthPlace = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_BirthPlace = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_BlackList")]
	public partial class T_BlackList : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _CustNum;

		private string _CustNam;

		private string _IdNo;

		private string _LecnId;

		private string _Dis;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnCustNumChanging(string value);
		partial void OnCustNumChanged();
		partial void OnCustNamChanging(string value);
		partial void OnCustNamChanged();
		partial void OnIdNoChanging(string value);
		partial void OnIdNoChanged();
		partial void OnLecnIdChanging(string value);
		partial void OnLecnIdChanged();
		partial void OnDisChanging(string value);
		partial void OnDisChanged();
		#endregion

		public T_BlackList()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustNum", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string CustNum
		{
			get
			{
				return this._CustNum;
			}
			set
			{
				if ((this._CustNum != value))
				{
					this.OnCustNumChanging(value);
					this.SendPropertyChanging();
					this._CustNum = value;
					this.SendPropertyChanged("CustNum");
					this.OnCustNumChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustNam", DbType = "VarChar(250)")]
		public string CustNam
		{
			get
			{
				return this._CustNam;
			}
			set
			{
				if ((this._CustNam != value))
				{
					this.OnCustNamChanging(value);
					this.SendPropertyChanging();
					this._CustNam = value;
					this.SendPropertyChanged("CustNam");
					this.OnCustNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdNo", DbType = "VarChar(100)")]
		public string IdNo
		{
			get
			{
				return this._IdNo;
			}
			set
			{
				if ((this._IdNo != value))
				{
					this.OnIdNoChanging(value);
					this.SendPropertyChanging();
					this._IdNo = value;
					this.SendPropertyChanged("IdNo");
					this.OnIdNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LecnId", DbType = "VarChar(100)")]
		public string LecnId
		{
			get
			{
				return this._LecnId;
			}
			set
			{
				if ((this._LecnId != value))
				{
					this.OnLecnIdChanging(value);
					this.SendPropertyChanging();
					this._LecnId = value;
					this.SendPropertyChanged("LecnId");
					this.OnLecnIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dis", DbType = "VarChar(100)")]
		public string Dis
		{
			get
			{
				return this._Dis;
			}
			set
			{
				if ((this._Dis != value))
				{
					this.OnDisChanging(value);
					this.SendPropertyChanging();
					this._Dis = value;
					this.SendPropertyChanged("Dis");
					this.OnDisChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_BloodTyp")]
	public partial class T_BloodTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _BloodTyp_No;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_Emp> _T_Emps;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBloodTyp_NoChanging(int value);
		partial void OnBloodTyp_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_BloodTyp()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BloodTyp_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int BloodTyp_No
		{
			get
			{
				return this._BloodTyp_No;
			}
			set
			{
				if ((this._BloodTyp_No != value))
				{
					this.OnBloodTyp_NoChanging(value);
					this.SendPropertyChanging();
					this._BloodTyp_No = value;
					this.SendPropertyChanged("BloodTyp_No");
					this.OnBloodTyp_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(10)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(10)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_BloodTyp_T_Emp", Storage = "_T_Emps", ThisKey = "BloodTyp_No", OtherKey = "BloodTyp")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_BloodTyp = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_BloodTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Boss")]
	public partial class T_Boss : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Boss_ID;

		private int _Boss_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnBoss_IDChanging(string value);
		partial void OnBoss_IDChanged();
		partial void OnBoss_NoChanging(int value);
		partial void OnBoss_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_Boss()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Boss_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Boss_ID
		{
			get
			{
				return this._Boss_ID;
			}
			set
			{
				if ((this._Boss_ID != value))
				{
					this.OnBoss_IDChanging(value);
					this.SendPropertyChanging();
					this._Boss_ID = value;
					this.SendPropertyChanged("Boss_ID");
					this.OnBoss_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Boss_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Boss_No
		{
			get
			{
				return this._Boss_No;
			}
			set
			{
				if ((this._Boss_No != value))
				{
					this.OnBoss_NoChanging(value);
					this.SendPropertyChanging();
					this._Boss_No = value;
					this.SendPropertyChanged("Boss_No");
					this.OnBoss_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Printers")]
	public partial class T_Printer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		T_INVSETTING defa = new T_INVSETTING();

		T_INVSETTING _InvInfo = null;
		public T_INVSETTING InvInfo
		{
			get
			{
				if (_InvInfo == null)

				{
					Stock_DataDataContext db = new Stock_DataDataContext(VarGeneral.BranchCS);
					var q = from i in db.T_INVSETTINGs
							where i.InvID == InvID
							select i;
					if (q.Count() == 1)
						_InvInfo = q.ToList()[0];

				}
				if (_InvInfo != null)
					return _InvInfo;
				else
				{

					defa.InvID = 1091;
					defa.InvSetting = "1";
					defa.InvNamA = "اعدادات التقارير";
					defa.InvNamE = "Report Settings";
					return defa;
				}
			}
		}
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		public string InvNamA { get { return InvInfo.InvNamA; } }

		private int _P_ID;

		private string _Printer_Name;

		private string _Paper_Size;

		private string _Default_Operation;

		private System.Nullable<int> _DefLines_Setting;

		private System.Nullable<double> _hAl_Setting;

		private System.Nullable<double> _hAs_Setting;

		private System.Nullable<double> _hYm_Setting;

		private System.Nullable<double> _hYs_Setting;

		private System.Nullable<double> _lnPg_Setting;

		private System.Nullable<double> _lnSpc_Setting;

		private string _defPrn_Setting;

		private string _nTyp_Setting;

		private string _defSizePaper_Setting;

		private System.Nullable<int> _Orientation_Setting;

		private System.Nullable<int> _DefLines;

		private System.Nullable<double> _hAl;

		private System.Nullable<double> _hAs;

		private System.Nullable<double> _hYm;

		private System.Nullable<double> _hYs;

		private System.Nullable<double> _lnPg;

		private System.Nullable<double> _lnSpc;

		private string _defPrn;

		private string _nTyp;

		private string _defSizePaper;

		private System.Nullable<int> _Orientation;

		private int _InvID;

		private System.Nullable<int> _User_ID;

		private string _Branch_ID;

		private string _Company;

		private string _invGdADesc;

		private string _invGdEDesc;

		private string _InvTypA4;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnP_IDChanging(int value);
		partial void OnP_IDChanged();
		partial void OnPrinter_NameChanging(string value);
		partial void OnPrinter_NameChanged();
		partial void OnPaper_SizeChanging(string value);
		partial void OnPaper_SizeChanged();
		partial void OnDefault_OperationChanging(string value);
		partial void OnDefault_OperationChanged();
		partial void OnDefLines_SettingChanging(System.Nullable<int> value);
		partial void OnDefLines_SettingChanged();
		partial void OnhAl_SettingChanging(System.Nullable<double> value);
		partial void OnhAl_SettingChanged();
		partial void OnhAs_SettingChanging(System.Nullable<double> value);
		partial void OnhAs_SettingChanged();
		partial void OnhYm_SettingChanging(System.Nullable<double> value);
		partial void OnhYm_SettingChanged();
		partial void OnhYs_SettingChanging(System.Nullable<double> value);
		partial void OnhYs_SettingChanged();
		partial void OnlnPg_SettingChanging(System.Nullable<double> value);
		partial void OnlnPg_SettingChanged();
		partial void OnlnSpc_SettingChanging(System.Nullable<double> value);
		partial void OnlnSpc_SettingChanged();
		partial void OndefPrn_SettingChanging(string value);
		partial void OndefPrn_SettingChanged();
		partial void OnnTyp_SettingChanging(string value);
		partial void OnnTyp_SettingChanged();
		partial void OndefSizePaper_SettingChanging(string value);
		partial void OndefSizePaper_SettingChanged();
		partial void OnOrientation_SettingChanging(System.Nullable<int> value);
		partial void OnOrientation_SettingChanged();
		partial void OnDefLinesChanging(System.Nullable<int> value);
		partial void OnDefLinesChanged();
		partial void OnhAlChanging(System.Nullable<double> value);
		partial void OnhAlChanged();
		partial void OnhAsChanging(System.Nullable<double> value);
		partial void OnhAsChanged();
		partial void OnhYmChanging(System.Nullable<double> value);
		partial void OnhYmChanged();
		partial void OnhYsChanging(System.Nullable<double> value);
		partial void OnhYsChanged();
		partial void OnlnPgChanging(System.Nullable<double> value);
		partial void OnlnPgChanged();
		partial void OnlnSpcChanging(System.Nullable<double> value);
		partial void OnlnSpcChanged();
		partial void OndefPrnChanging(string value);
		partial void OndefPrnChanged();
		partial void OnnTypChanging(string value);
		partial void OnnTypChanged();
		partial void OndefSizePaperChanging(string value);
		partial void OndefSizePaperChanged();
		partial void OnOrientationChanging(System.Nullable<int> value);
		partial void OnOrientationChanged();
		partial void OnInvIDChanging(int value);
		partial void OnInvIDChanged();
		partial void OnUser_IDChanging(System.Nullable<int> value);
		partial void OnUser_IDChanged();
		partial void OnBranch_IDChanging(string value);
		partial void OnBranch_IDChanged();
		partial void OnCompanyChanging(string value);
		partial void OnCompanyChanged();
		partial void OninvGdADescChanging(string value);
		partial void OninvGdADescChanged();
		partial void OninvGdEDescChanging(string value);
		partial void OninvGdEDescChanged();
		partial void OnInvTypA4Changing(string value);
		partial void OnInvTypA4Changed();
		#endregion

		public T_Printer()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_P_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int P_ID
		{
			get
			{
				return this._P_ID;
			}
			set
			{
				if ((this._P_ID != value))
				{
					this.OnP_IDChanging(value);
					this.SendPropertyChanging();
					this._P_ID = value;
					this.SendPropertyChanged("P_ID");
					this.OnP_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Printer_Name", DbType = "VarChar(MAX)")]
		public string Printer_Name
		{
			get
			{
				return this._Printer_Name;
			}
			set
			{
				if ((this._Printer_Name != value))
				{
					this.OnPrinter_NameChanging(value);
					this.SendPropertyChanging();
					this._Printer_Name = value;
					this.SendPropertyChanged("Printer_Name");
					this.OnPrinter_NameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Paper_Size", DbType = "VarChar(50)")]
		public string Paper_Size
		{
			get
			{
				return this._Paper_Size;
			}
			set
			{
				if ((this._Paper_Size != value))
				{
					this.OnPaper_SizeChanging(value);
					this.SendPropertyChanging();
					this._Paper_Size = value;
					this.SendPropertyChanged("Paper_Size");
					this.OnPaper_SizeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Default_Operation", DbType = "VarChar(MAX)")]
		public string Default_Operation
		{
			get
			{
				return this._Default_Operation;
			}
			set
			{
				if ((this._Default_Operation != value))
				{
					this.OnDefault_OperationChanging(value);
					this.SendPropertyChanging();
					this._Default_Operation = value;
					this.SendPropertyChanged("Default_Operation");
					this.OnDefault_OperationChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefLines_Setting", DbType = "Int")]
		public System.Nullable<int> DefLines_Setting
		{
			get
			{
				return this._DefLines_Setting;
			}
			set
			{
				if ((this._DefLines_Setting != value))
				{
					this.OnDefLines_SettingChanging(value);
					this.SendPropertyChanging();
					this._DefLines_Setting = value;
					this.SendPropertyChanged("DefLines_Setting");
					this.OnDefLines_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hAl_Setting", DbType = "Float")]
		public System.Nullable<double> hAl_Setting
		{
			get
			{
				return this._hAl_Setting;
			}
			set
			{
				if ((this._hAl_Setting != value))
				{
					this.OnhAl_SettingChanging(value);
					this.SendPropertyChanging();
					this._hAl_Setting = value;
					this.SendPropertyChanged("hAl_Setting");
					this.OnhAl_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hAs_Setting", DbType = "Float")]
		public System.Nullable<double> hAs_Setting
		{
			get
			{
				return this._hAs_Setting;
			}
			set
			{
				if ((this._hAs_Setting != value))
				{
					this.OnhAs_SettingChanging(value);
					this.SendPropertyChanging();
					this._hAs_Setting = value;
					this.SendPropertyChanged("hAs_Setting");
					this.OnhAs_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hYm_Setting", DbType = "Float")]
		public System.Nullable<double> hYm_Setting
		{
			get
			{
				return this._hYm_Setting;
			}
			set
			{
				if ((this._hYm_Setting != value))
				{
					this.OnhYm_SettingChanging(value);
					this.SendPropertyChanging();
					this._hYm_Setting = value;
					this.SendPropertyChanged("hYm_Setting");
					this.OnhYm_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hYs_Setting", DbType = "Float")]
		public System.Nullable<double> hYs_Setting
		{
			get
			{
				return this._hYs_Setting;
			}
			set
			{
				if ((this._hYs_Setting != value))
				{
					this.OnhYs_SettingChanging(value);
					this.SendPropertyChanging();
					this._hYs_Setting = value;
					this.SendPropertyChanged("hYs_Setting");
					this.OnhYs_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lnPg_Setting", DbType = "Float")]
		public System.Nullable<double> lnPg_Setting
		{
			get
			{
				return this._lnPg_Setting;
			}
			set
			{
				if ((this._lnPg_Setting != value))
				{
					this.OnlnPg_SettingChanging(value);
					this.SendPropertyChanging();
					this._lnPg_Setting = value;
					this.SendPropertyChanged("lnPg_Setting");
					this.OnlnPg_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lnSpc_Setting", DbType = "Float")]
		public System.Nullable<double> lnSpc_Setting
		{
			get
			{
				return this._lnSpc_Setting;
			}
			set
			{
				if ((this._lnSpc_Setting != value))
				{
					this.OnlnSpc_SettingChanging(value);
					this.SendPropertyChanging();
					this._lnSpc_Setting = value;
					this.SendPropertyChanged("lnSpc_Setting");
					this.OnlnSpc_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_defPrn_Setting", DbType = "VarChar(100)")]
		public string defPrn_Setting
		{
			get
			{
				return this._defPrn_Setting;
			}
			set
			{
				if ((this._defPrn_Setting != value))
				{
					this.OndefPrn_SettingChanging(value);
					this.SendPropertyChanging();
					this._defPrn_Setting = value;
					this.SendPropertyChanged("defPrn_Setting");
					this.OndefPrn_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nTyp_Setting", DbType = "VarChar(3)")]
		public string nTyp_Setting
		{
			get
			{
				return this._nTyp_Setting;
			}
			set
			{
				if ((this._nTyp_Setting != value))
				{
					this.OnnTyp_SettingChanging(value);
					this.SendPropertyChanging();
					this._nTyp_Setting = value;
					this.SendPropertyChanged("nTyp_Setting");
					this.OnnTyp_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_defSizePaper_Setting", DbType = "VarChar(100)")]
		public string defSizePaper_Setting
		{
			get
			{
				return this._defSizePaper_Setting;
			}
			set
			{
				if ((this._defSizePaper_Setting != value))
				{
					this.OndefSizePaper_SettingChanging(value);
					this.SendPropertyChanging();
					this._defSizePaper_Setting = value;
					this.SendPropertyChanged("defSizePaper_Setting");
					this.OndefSizePaper_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Orientation_Setting", DbType = "Int")]
		public System.Nullable<int> Orientation_Setting
		{
			get
			{
				return this._Orientation_Setting;
			}
			set
			{
				if ((this._Orientation_Setting != value))
				{
					this.OnOrientation_SettingChanging(value);
					this.SendPropertyChanging();
					this._Orientation_Setting = value;
					this.SendPropertyChanged("Orientation_Setting");
					this.OnOrientation_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefLines", DbType = "Int")]
		public System.Nullable<int> DefLines
		{
			get
			{
				return this._DefLines;
			}
			set
			{
				if ((this._DefLines != value))
				{
					this.OnDefLinesChanging(value);
					this.SendPropertyChanging();
					this._DefLines = value;
					this.SendPropertyChanged("DefLines");
					this.OnDefLinesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hAl", DbType = "Float")]
		public System.Nullable<double> hAl
		{
			get
			{
				return this._hAl;
			}
			set
			{
				if ((this._hAl != value))
				{
					this.OnhAlChanging(value);
					this.SendPropertyChanging();
					this._hAl = value;
					this.SendPropertyChanged("hAl");
					this.OnhAlChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hAs", DbType = "Float")]
		public System.Nullable<double> hAs
		{
			get
			{
				return this._hAs;
			}
			set
			{
				if ((this._hAs != value))
				{
					this.OnhAsChanging(value);
					this.SendPropertyChanging();
					this._hAs = value;
					this.SendPropertyChanged("hAs");
					this.OnhAsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hYm", DbType = "Float")]
		public System.Nullable<double> hYm
		{
			get
			{
				return this._hYm;
			}
			set
			{
				if ((this._hYm != value))
				{
					this.OnhYmChanging(value);
					this.SendPropertyChanging();
					this._hYm = value;
					this.SendPropertyChanged("hYm");
					this.OnhYmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hYs", DbType = "Float")]
		public System.Nullable<double> hYs
		{
			get
			{
				return this._hYs;
			}
			set
			{
				if ((this._hYs != value))
				{
					this.OnhYsChanging(value);
					this.SendPropertyChanging();
					this._hYs = value;
					this.SendPropertyChanged("hYs");
					this.OnhYsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lnPg", DbType = "Float")]
		public System.Nullable<double> lnPg
		{
			get
			{
				return this._lnPg;
			}
			set
			{
				if ((this._lnPg != value))
				{
					this.OnlnPgChanging(value);
					this.SendPropertyChanging();
					this._lnPg = value;
					this.SendPropertyChanged("lnPg");
					this.OnlnPgChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lnSpc", DbType = "Float")]
		public System.Nullable<double> lnSpc
		{
			get
			{
				return this._lnSpc;
			}
			set
			{
				if ((this._lnSpc != value))
				{
					this.OnlnSpcChanging(value);
					this.SendPropertyChanging();
					this._lnSpc = value;
					this.SendPropertyChanged("lnSpc");
					this.OnlnSpcChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_defPrn", DbType = "VarChar(100)")]
		public string defPrn
		{
			get
			{
				return this._defPrn;
			}
			set
			{
				if ((this._defPrn != value))
				{
					this.OndefPrnChanging(value);
					this.SendPropertyChanging();
					this._defPrn = value;
					this.SendPropertyChanged("defPrn");
					this.OndefPrnChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nTyp", DbType = "VarChar(3)")]
		public string nTyp
		{
			get
			{
				return this._nTyp;
			}
			set
			{
				if ((this._nTyp != value))
				{
					this.OnnTypChanging(value);
					this.SendPropertyChanging();
					this._nTyp = value;
					this.SendPropertyChanged("nTyp");
					this.OnnTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_defSizePaper", DbType = "VarChar(100)")]
		public string defSizePaper
		{
			get
			{
				return this._defSizePaper;
			}
			set
			{
				if ((this._defSizePaper != value))
				{
					this.OndefSizePaperChanging(value);
					this.SendPropertyChanging();
					this._defSizePaper = value;
					this.SendPropertyChanged("defSizePaper");
					this.OndefSizePaperChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Orientation", DbType = "Int")]
		public System.Nullable<int> Orientation
		{
			get
			{
				return this._Orientation;
			}
			set
			{
				if ((this._Orientation != value))
				{
					this.OnOrientationChanging(value);
					this.SendPropertyChanging();
					this._Orientation = value;
					this.SendPropertyChanged("Orientation");
					this.OnOrientationChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvID", DbType = "Int NOT NULL")]
		public int InvID
		{
			get
			{
				return this._InvID;
			}
			set
			{
				if ((this._InvID != value))
				{
					this.OnInvIDChanging(value);
					this.SendPropertyChanging();
					this._InvID = value;
					this.SendPropertyChanged("InvID");
					this.OnInvIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_User_ID", DbType = "Int")]
		public System.Nullable<int> User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Branch_ID", DbType = "VarChar(50)")]
		public string Branch_ID
		{
			get
			{
				return this._Branch_ID;
			}
			set
			{
				if ((this._Branch_ID != value))
				{
					this.OnBranch_IDChanging(value);
					this.SendPropertyChanging();
					this._Branch_ID = value;
					this.SendPropertyChanged("Branch_ID");
					this.OnBranch_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Company", DbType = "VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_invGdADesc", DbType = "VarChar(MAX)")]
		public string invGdADesc
		{
			get
			{
				return this._invGdADesc;
			}
			set
			{
				if ((this._invGdADesc != value))
				{
					this.OninvGdADescChanging(value);
					this.SendPropertyChanging();
					this._invGdADesc = value;
					this.SendPropertyChanged("invGdADesc");
					this.OninvGdADescChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_invGdEDesc", DbType = "VarChar(MAX)")]
		public string invGdEDesc
		{
			get
			{
				return this._invGdEDesc;
			}
			set
			{
				if ((this._invGdEDesc != value))
				{
					this.OninvGdEDescChanging(value);
					this.SendPropertyChanging();
					this._invGdEDesc = value;
					this.SendPropertyChanged("invGdEDesc");
					this.OninvGdEDescChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypA4", DbType = "VarChar(50)")]
		public string InvTypA4
		{
			get
			{
				return this._InvTypA4;
			}
			set
			{
				if ((this._InvTypA4 != value))
				{
					this.OnInvTypA4Changing(value);
					this.SendPropertyChanging();
					this._InvTypA4 = value;
					this.SendPropertyChanged("InvTypA4");
					this.OnInvTypA4Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_CallPhone")]
	public partial class T_CallPhone : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Phone_ID;

		private int _Phone_No;

		private string _PhoneDate;

		private string _EmpID;

		private string _SalDate;

		private System.Nullable<double> _PhoneValue;

		private string _Note;

		private System.Nullable<bool> _IFState;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnPhone_IDChanging(string value);
		partial void OnPhone_IDChanged();
		partial void OnPhone_NoChanging(int value);
		partial void OnPhone_NoChanged();
		partial void OnPhoneDateChanging(string value);
		partial void OnPhoneDateChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnSalDateChanging(string value);
		partial void OnSalDateChanged();
		partial void OnPhoneValueChanging(System.Nullable<double> value);
		partial void OnPhoneValueChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		#endregion

		public T_CallPhone()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Phone_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Phone_ID
		{
			get
			{
				return this._Phone_ID;
			}
			set
			{
				if ((this._Phone_ID != value))
				{
					this.OnPhone_IDChanging(value);
					this.SendPropertyChanging();
					this._Phone_ID = value;
					this.SendPropertyChanged("Phone_ID");
					this.OnPhone_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Phone_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Phone_No
		{
			get
			{
				return this._Phone_No;
			}
			set
			{
				if ((this._Phone_No != value))
				{
					this.OnPhone_NoChanging(value);
					this.SendPropertyChanging();
					this._Phone_No = value;
					this.SendPropertyChanged("Phone_No");
					this.OnPhone_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PhoneDate", DbType = "VarChar(10)")]
		public string PhoneDate
		{
			get
			{
				return this._PhoneDate;
			}
			set
			{
				if ((this._PhoneDate != value))
				{
					this.OnPhoneDateChanging(value);
					this.SendPropertyChanging();
					this._PhoneDate = value;
					this.SendPropertyChanged("PhoneDate");
					this.OnPhoneDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalDate", DbType = "VarChar(10)")]
		public string SalDate
		{
			get
			{
				return this._SalDate;
			}
			set
			{
				if ((this._SalDate != value))
				{
					this.OnSalDateChanging(value);
					this.SendPropertyChanging();
					this._SalDate = value;
					this.SendPropertyChanged("SalDate");
					this.OnSalDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PhoneValue", DbType = "Float")]
		public System.Nullable<double> PhoneValue
		{
			get
			{
				return this._PhoneValue;
			}
			set
			{
				if ((this._PhoneValue != value))
				{
					this.OnPhoneValueChanging(value);
					this.SendPropertyChanging();
					this._PhoneValue = value;
					this.SendPropertyChanged("PhoneValue");
					this.OnPhoneValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_CallPhone", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_CallPhones.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_CallPhones.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_CarCheckPIC")]
	public partial class T_CarCheckPIC : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _INVHED_ID;

		private System.Data.Linq.Binary _Pic_1;

		private System.Data.Linq.Binary _Pic_2;

		private System.Data.Linq.Binary _Pic_3;

		private System.Data.Linq.Binary _Pic_4;

		private System.Data.Linq.Binary _Pic_5;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnINVHED_IDChanging(string value);
		partial void OnINVHED_IDChanged();
		partial void OnPic_1Changing(System.Data.Linq.Binary value);
		partial void OnPic_1Changed();
		partial void OnPic_2Changing(System.Data.Linq.Binary value);
		partial void OnPic_2Changed();
		partial void OnPic_3Changing(System.Data.Linq.Binary value);
		partial void OnPic_3Changed();
		partial void OnPic_4Changing(System.Data.Linq.Binary value);
		partial void OnPic_4Changed();
		partial void OnPic_5Changing(System.Data.Linq.Binary value);
		partial void OnPic_5Changed();
		#endregion

		public T_CarCheckPIC()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INVHED_ID", DbType = "VarChar(MAX)")]
		public string INVHED_ID
		{
			get
			{
				return this._INVHED_ID;
			}
			set
			{
				if ((this._INVHED_ID != value))
				{
					this.OnINVHED_IDChanging(value);
					this.SendPropertyChanging();
					this._INVHED_ID = value;
					this.SendPropertyChanged("INVHED_ID");
					this.OnINVHED_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pic_1", DbType = "Image", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary Pic_1
		{
			get
			{
				return this._Pic_1;
			}
			set
			{
				if ((this._Pic_1 != value))
				{
					this.OnPic_1Changing(value);
					this.SendPropertyChanging();
					this._Pic_1 = value;
					this.SendPropertyChanged("Pic_1");
					this.OnPic_1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pic_2", DbType = "Image", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary Pic_2
		{
			get
			{
				return this._Pic_2;
			}
			set
			{
				if ((this._Pic_2 != value))
				{
					this.OnPic_2Changing(value);
					this.SendPropertyChanging();
					this._Pic_2 = value;
					this.SendPropertyChanged("Pic_2");
					this.OnPic_2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pic_3", DbType = "Image", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary Pic_3
		{
			get
			{
				return this._Pic_3;
			}
			set
			{
				if ((this._Pic_3 != value))
				{
					this.OnPic_3Changing(value);
					this.SendPropertyChanging();
					this._Pic_3 = value;
					this.SendPropertyChanged("Pic_3");
					this.OnPic_3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pic_4", DbType = "Image", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary Pic_4
		{
			get
			{
				return this._Pic_4;
			}
			set
			{
				if ((this._Pic_4 != value))
				{
					this.OnPic_4Changing(value);
					this.SendPropertyChanging();
					this._Pic_4 = value;
					this.SendPropertyChanged("Pic_4");
					this.OnPic_4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pic_5", DbType = "Image", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary Pic_5
		{
			get
			{
				return this._Pic_5;
			}
			set
			{
				if ((this._Pic_5 != value))
				{
					this.OnPic_5Changing(value);
					this.SendPropertyChanging();
					this._Pic_5 = value;
					this.SendPropertyChanged("Pic_5");
					this.OnPic_5Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_CarNames")]
	public partial class T_CarName : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Car_ID;

		private int _Car_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private System.Nullable<int> _CarType;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCar_IDChanging(string value);
		partial void OnCar_IDChanged();
		partial void OnCar_NoChanging(int value);
		partial void OnCar_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnCarTypeChanging(System.Nullable<int> value);
		partial void OnCarTypeChanged();
		#endregion

		public T_CarName()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Car_ID
		{
			get
			{
				return this._Car_ID;
			}
			set
			{
				if ((this._Car_ID != value))
				{
					this.OnCar_IDChanging(value);
					this.SendPropertyChanging();
					this._Car_ID = value;
					this.SendPropertyChanged("Car_ID");
					this.OnCar_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Car_No
		{
			get
			{
				return this._Car_No;
			}
			set
			{
				if ((this._Car_No != value))
				{
					this.OnCar_NoChanging(value);
					this.SendPropertyChanging();
					this._Car_No = value;
					this.SendPropertyChanged("Car_No");
					this.OnCar_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(50)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(50)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CarType", DbType = "Int")]
		public System.Nullable<int> CarType
		{
			get
			{
				return this._CarType;
			}
			set
			{
				if ((this._CarType != value))
				{
					this.OnCarTypeChanging(value);
					this.SendPropertyChanging();
					this._CarType = value;
					this.SendPropertyChanged("CarType");
					this.OnCarTypeChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Cars")]
	public partial class T_Car : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Car_ID;

		private int _Car_No;

		private string _NameA;

		private string _NameE;

		private string _Model;

		private string _PlateNo;

		private string _Color;

		private string _Note;

		private System.Nullable<int> _CarType;

		private string _FormNo;

		private string _FormBeginDate;

		private string _FormEndDate;

		private string _AllownceNo;

		private string _AllownceBeginDate;

		private string _AllownceEndDate;

		private string _AllownceName;

		private string _PlayCardNo;

		private string _PlayCardBeginDate;

		private string _PlayCardEndDate;

		private System.Nullable<int> _CompanyID;

		private string _EmpID;

		private EntityRef<T_CarTyp> _T_CarTyp;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCar_IDChanging(string value);
		partial void OnCar_IDChanged();
		partial void OnCar_NoChanging(int value);
		partial void OnCar_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnModelChanging(string value);
		partial void OnModelChanged();
		partial void OnPlateNoChanging(string value);
		partial void OnPlateNoChanged();
		partial void OnColorChanging(string value);
		partial void OnColorChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnCarTypeChanging(System.Nullable<int> value);
		partial void OnCarTypeChanged();
		partial void OnFormNoChanging(string value);
		partial void OnFormNoChanged();
		partial void OnFormBeginDateChanging(string value);
		partial void OnFormBeginDateChanged();
		partial void OnFormEndDateChanging(string value);
		partial void OnFormEndDateChanged();
		partial void OnAllownceNoChanging(string value);
		partial void OnAllownceNoChanged();
		partial void OnAllownceBeginDateChanging(string value);
		partial void OnAllownceBeginDateChanged();
		partial void OnAllownceEndDateChanging(string value);
		partial void OnAllownceEndDateChanged();
		partial void OnAllownceNameChanging(string value);
		partial void OnAllownceNameChanged();
		partial void OnPlayCardNoChanging(string value);
		partial void OnPlayCardNoChanged();
		partial void OnPlayCardBeginDateChanging(string value);
		partial void OnPlayCardBeginDateChanged();
		partial void OnPlayCardEndDateChanging(string value);
		partial void OnPlayCardEndDateChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		#endregion

		public T_Car()
		{
			this._T_CarTyp = default(EntityRef<T_CarTyp>);
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Car_ID
		{
			get
			{
				return this._Car_ID;
			}
			set
			{
				if ((this._Car_ID != value))
				{
					this.OnCar_IDChanging(value);
					this.SendPropertyChanging();
					this._Car_ID = value;
					this.SendPropertyChanged("Car_ID");
					this.OnCar_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Car_No
		{
			get
			{
				return this._Car_No;
			}
			set
			{
				if ((this._Car_No != value))
				{
					this.OnCar_NoChanging(value);
					this.SendPropertyChanging();
					this._Car_No = value;
					this.SendPropertyChanged("Car_No");
					this.OnCar_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(50)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(50)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Model", DbType = "VarChar(20)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PlateNo", DbType = "VarChar(20)")]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this.OnPlateNoChanging(value);
					this.SendPropertyChanging();
					this._PlateNo = value;
					this.SendPropertyChanged("PlateNo");
					this.OnPlateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Color", DbType = "VarChar(30)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CarType", DbType = "Int")]
		public System.Nullable<int> CarType
		{
			get
			{
				return this._CarType;
			}
			set
			{
				if ((this._CarType != value))
				{
					if (this._T_CarTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarTypeChanging(value);
					this.SendPropertyChanging();
					this._CarType = value;
					this.SendPropertyChanged("CarType");
					this.OnCarTypeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FormNo", DbType = "VarChar(20)")]
		public string FormNo
		{
			get
			{
				return this._FormNo;
			}
			set
			{
				if ((this._FormNo != value))
				{
					this.OnFormNoChanging(value);
					this.SendPropertyChanging();
					this._FormNo = value;
					this.SendPropertyChanged("FormNo");
					this.OnFormNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FormBeginDate", DbType = "VarChar(20)")]
		public string FormBeginDate
		{
			get
			{
				return this._FormBeginDate;
			}
			set
			{
				if ((this._FormBeginDate != value))
				{
					this.OnFormBeginDateChanging(value);
					this.SendPropertyChanging();
					this._FormBeginDate = value;
					this.SendPropertyChanged("FormBeginDate");
					this.OnFormBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FormEndDate", DbType = "VarChar(20)")]
		public string FormEndDate
		{
			get
			{
				return this._FormEndDate;
			}
			set
			{
				if ((this._FormEndDate != value))
				{
					this.OnFormEndDateChanging(value);
					this.SendPropertyChanging();
					this._FormEndDate = value;
					this.SendPropertyChanged("FormEndDate");
					this.OnFormEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllownceNo", DbType = "VarChar(20)")]
		public string AllownceNo
		{
			get
			{
				return this._AllownceNo;
			}
			set
			{
				if ((this._AllownceNo != value))
				{
					this.OnAllownceNoChanging(value);
					this.SendPropertyChanging();
					this._AllownceNo = value;
					this.SendPropertyChanged("AllownceNo");
					this.OnAllownceNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllownceBeginDate", DbType = "VarChar(20)")]
		public string AllownceBeginDate
		{
			get
			{
				return this._AllownceBeginDate;
			}
			set
			{
				if ((this._AllownceBeginDate != value))
				{
					this.OnAllownceBeginDateChanging(value);
					this.SendPropertyChanging();
					this._AllownceBeginDate = value;
					this.SendPropertyChanged("AllownceBeginDate");
					this.OnAllownceBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllownceEndDate", DbType = "VarChar(20)")]
		public string AllownceEndDate
		{
			get
			{
				return this._AllownceEndDate;
			}
			set
			{
				if ((this._AllownceEndDate != value))
				{
					this.OnAllownceEndDateChanging(value);
					this.SendPropertyChanging();
					this._AllownceEndDate = value;
					this.SendPropertyChanged("AllownceEndDate");
					this.OnAllownceEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllownceName", DbType = "VarChar(40)")]
		public string AllownceName
		{
			get
			{
				return this._AllownceName;
			}
			set
			{
				if ((this._AllownceName != value))
				{
					this.OnAllownceNameChanging(value);
					this.SendPropertyChanging();
					this._AllownceName = value;
					this.SendPropertyChanged("AllownceName");
					this.OnAllownceNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PlayCardNo", DbType = "VarChar(20)")]
		public string PlayCardNo
		{
			get
			{
				return this._PlayCardNo;
			}
			set
			{
				if ((this._PlayCardNo != value))
				{
					this.OnPlayCardNoChanging(value);
					this.SendPropertyChanging();
					this._PlayCardNo = value;
					this.SendPropertyChanged("PlayCardNo");
					this.OnPlayCardNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PlayCardBeginDate", DbType = "VarChar(20)")]
		public string PlayCardBeginDate
		{
			get
			{
				return this._PlayCardBeginDate;
			}
			set
			{
				if ((this._PlayCardBeginDate != value))
				{
					this.OnPlayCardBeginDateChanging(value);
					this.SendPropertyChanging();
					this._PlayCardBeginDate = value;
					this.SendPropertyChanged("PlayCardBeginDate");
					this.OnPlayCardBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PlayCardEndDate", DbType = "VarChar(20)")]
		public string PlayCardEndDate
		{
			get
			{
				return this._PlayCardEndDate;
			}
			set
			{
				if ((this._PlayCardEndDate != value))
				{
					this.OnPlayCardEndDateChanging(value);
					this.SendPropertyChanging();
					this._PlayCardEndDate = value;
					this.SendPropertyChanged("PlayCardEndDate");
					this.OnPlayCardEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CarTyp_T_Car", Storage = "_T_CarTyp", ThisKey = "CarType", OtherKey = "CarTyp_No", IsForeignKey = true)]
		public T_CarTyp T_CarTyp
		{
			get
			{
				return this._T_CarTyp.Entity;
			}
			set
			{
				T_CarTyp previousValue = this._T_CarTyp.Entity;
				if (((previousValue != value)
							|| (this._T_CarTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_CarTyp.Entity = null;
						previousValue.T_Cars.Remove(this);
					}
					this._T_CarTyp.Entity = value;
					if ((value != null))
					{
						value.T_Cars.Add(this);
						this._CarType = value.CarTyp_No;
					}
					else
					{
						this._CarType = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_CarTyp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Car", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Cars.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Cars.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_CarTyp")]
	public partial class T_CarTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _CarTyp_ID;

		private int _CarTyp_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_Car> _T_Cars;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCarTyp_IDChanging(string value);
		partial void OnCarTyp_IDChanged();
		partial void OnCarTyp_NoChanging(int value);
		partial void OnCarTyp_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_CarTyp()
		{
			this._T_Cars = new EntitySet<T_Car>(new Action<T_Car>(this.attach_T_Cars), new Action<T_Car>(this.detach_T_Cars));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CarTyp_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string CarTyp_ID
		{
			get
			{
				return this._CarTyp_ID;
			}
			set
			{
				if ((this._CarTyp_ID != value))
				{
					this.OnCarTyp_IDChanging(value);
					this.SendPropertyChanging();
					this._CarTyp_ID = value;
					this.SendPropertyChanged("CarTyp_ID");
					this.OnCarTyp_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CarTyp_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int CarTyp_No
		{
			get
			{
				return this._CarTyp_No;
			}
			set
			{
				if ((this._CarTyp_No != value))
				{
					this.OnCarTyp_NoChanging(value);
					this.SendPropertyChanging();
					this._CarTyp_No = value;
					this.SendPropertyChanged("CarTyp_No");
					this.OnCarTyp_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(50)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(50)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CarTyp_T_Car", Storage = "_T_Cars", ThisKey = "CarTyp_No", OtherKey = "CarType")]
		public EntitySet<T_Car> T_Cars
		{
			get
			{
				return this._T_Cars;
			}
			set
			{
				this._T_Cars.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Cars(T_Car entity)
		{
			this.SendPropertyChanging();
			entity.T_CarTyp = this;
		}

		private void detach_T_Cars(T_Car entity)
		{
			this.SendPropertyChanging();
			entity.T_CarTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_CATEGORY")]
	public partial class T_CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		System.Data.Linq.Binary _CatImage;
		   [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CatImage", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary CatImage
		{
			get
			{
				return this._CatImage;
			}
			set
			{
				if ((this._CatImage != value))
				{
					this.OnCatImageChanging(value);
					this.SendPropertyChanging();
					this._CatImage = value;
					this.SendPropertyChanged("CatImage");
					this.OnCatImageChanged();
				}
			}
		}
		partial void OnCatImageChanging(System.Data.Linq.Binary value);
		partial void OnCatImageChanged();
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _CAT_ID;

		private string _CAT_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<int> _CompanyID;

		private System.Nullable<double> _TotalPurchaes;

		private System.Nullable<double> _TotalPoint;

		private string _CAT_Symbol;

		private EntitySet<T_INVSETTING> _T_INVSETTINGs;

		private EntitySet<T_Item> _T_Items;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCAT_IDChanging(int value);
		partial void OnCAT_IDChanged();
		partial void OnCAT_NoChanging(string value);
		partial void OnCAT_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnTotalPurchaesChanging(System.Nullable<double> value);
		partial void OnTotalPurchaesChanged();
		partial void OnTotalPointChanging(System.Nullable<double> value);
		partial void OnTotalPointChanged();
		partial void OnCAT_SymbolChanging(string value);
		partial void OnCAT_SymbolChanged();
		#endregion

		public T_CATEGORY()
		{
			this._T_INVSETTINGs = new EntitySet<T_INVSETTING>(new Action<T_INVSETTING>(this.attach_T_INVSETTINGs), new Action<T_INVSETTING>(this.detach_T_INVSETTINGs));
			this._T_Items = new EntitySet<T_Item>(new Action<T_Item>(this.attach_T_Items), new Action<T_Item>(this.detach_T_Items));
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CAT_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int CAT_ID
		{
			get
			{
				return this._CAT_ID;
			}
			set
			{
				if ((this._CAT_ID != value))
				{
					this.OnCAT_IDChanging(value);
					this.SendPropertyChanging();
					this._CAT_ID = value;
					this.SendPropertyChanged("CAT_ID");
					this.OnCAT_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CAT_No", DbType = "VarChar(30)")]
		public string CAT_No
		{
			get
			{
				return this._CAT_No;
			}
			set
			{
				if ((this._CAT_No != value))
				{
					this.OnCAT_NoChanging(value);
					this.SendPropertyChanging();
					this._CAT_No = value;
					this.SendPropertyChanged("CAT_No");
					this.OnCAT_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalPurchaes", DbType = "Float")]
		public System.Nullable<double> TotalPurchaes
		{
			get
			{
				return this._TotalPurchaes;
			}
			set
			{
				if ((this._TotalPurchaes != value))
				{
					this.OnTotalPurchaesChanging(value);
					this.SendPropertyChanging();
					this._TotalPurchaes = value;
					this.SendPropertyChanged("TotalPurchaes");
					this.OnTotalPurchaesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalPoint", DbType = "Float")]
		public System.Nullable<double> TotalPoint
		{
			get
			{
				return this._TotalPoint;
			}
			set
			{
				if ((this._TotalPoint != value))
				{
					this.OnTotalPointChanging(value);
					this.SendPropertyChanging();
					this._TotalPoint = value;
					this.SendPropertyChanged("TotalPoint");
					this.OnTotalPointChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CAT_Symbol", DbType = "VarChar(100)")]
		public string CAT_Symbol
		{
			get
			{
				return this._CAT_Symbol;
			}
			set
			{
				if ((this._CAT_Symbol != value))
				{
					this.OnCAT_SymbolChanging(value);
					this.SendPropertyChanging();
					this._CAT_Symbol = value;
					this.SendPropertyChanged("CAT_Symbol");
					this.OnCAT_SymbolChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CATEGORY_T_INVSETTING", Storage = "_T_INVSETTINGs", ThisKey = "CAT_ID", OtherKey = "CatID")]
		public EntitySet<T_INVSETTING> T_INVSETTINGs
		{
			get
			{
				return this._T_INVSETTINGs;
			}
			set
			{
				this._T_INVSETTINGs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CATEGORY_T_Item", Storage = "_T_Items", ThisKey = "CAT_ID", OtherKey = "ItmCat")]
		public EntitySet<T_Item> T_Items
		{
			get
			{
				return this._T_Items;
			}
			set
			{
				this._T_Items.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_CATEGORY", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_CATEGORies.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_CATEGORies.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_INVSETTINGs(T_INVSETTING entity)
		{
			this.SendPropertyChanging();
			entity.T_CATEGORY = this;
		}

		private void detach_T_INVSETTINGs(T_INVSETTING entity)
		{
			this.SendPropertyChanging();
			entity.T_CATEGORY = null;
		}

		private void attach_T_Items(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_CATEGORY = this;
		}

		private void detach_T_Items(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_CATEGORY = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Chauffeur")]
	public partial class T_Chauffeur : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _chauffeur_ID;

		private string _chauffeur_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<int> _chauffeurSts;

		private System.Nullable<int> _CompanyID;

		private EntitySet<T_INVHED> _T_INVHEDs;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void Onchauffeur_IDChanging(int value);
		partial void Onchauffeur_IDChanged();
		partial void Onchauffeur_NoChanging(string value);
		partial void Onchauffeur_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnchauffeurStsChanging(System.Nullable<int> value);
		partial void OnchauffeurStsChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_Chauffeur()
		{
			this._T_INVHEDs = new EntitySet<T_INVHED>(new Action<T_INVHED>(this.attach_T_INVHEDs), new Action<T_INVHED>(this.detach_T_INVHEDs));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_chauffeur_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int chauffeur_ID
		{
			get
			{
				return this._chauffeur_ID;
			}
			set
			{
				if ((this._chauffeur_ID != value))
				{
					this.Onchauffeur_IDChanging(value);
					this.SendPropertyChanging();
					this._chauffeur_ID = value;
					this.SendPropertyChanged("chauffeur_ID");
					this.Onchauffeur_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_chauffeur_No", DbType = "VarChar(30)")]
		public string chauffeur_No
		{
			get
			{
				return this._chauffeur_No;
			}
			set
			{
				if ((this._chauffeur_No != value))
				{
					this.Onchauffeur_NoChanging(value);
					this.SendPropertyChanging();
					this._chauffeur_No = value;
					this.SendPropertyChanged("chauffeur_No");
					this.Onchauffeur_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_chauffeurSts", DbType = "Int")]
		public System.Nullable<int> chauffeurSts
		{
			get
			{
				return this._chauffeurSts;
			}
			set
			{
				if ((this._chauffeurSts != value))
				{
					this.OnchauffeurStsChanging(value);
					this.SendPropertyChanging();
					this._chauffeurSts = value;
					this.SendPropertyChanged("chauffeurSts");
					this.OnchauffeurStsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Chauffeur_T_INVHED", Storage = "_T_INVHEDs", ThisKey = "chauffeur_ID", OtherKey = "chauffeurNo")]
		public EntitySet<T_INVHED> T_INVHEDs
		{
			get
			{
				return this._T_INVHEDs;
			}
			set
			{
				this._T_INVHEDs.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_Chauffeur = this;
		}

		private void detach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_Chauffeur = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_City")]
	public partial class T_City : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _City_ID;

		private int _City_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_Emp> _T_Emps1;

		private EntitySet<T_Emp> _T_Emps2;

		private EntitySet<T_Emp> _T_Emps3;

		private EntitySet<T_Emp> _T_Emps4;

		private EntitySet<T_Emp> _T_Emps5;

		private EntitySet<T_EqarsData> _T_EqarsDatas;

		private EntitySet<T_UpdateDoc> _T_UpdateDocs;

		private EntitySet<T_UpdateDoc> _T_UpdateDocs1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCity_IDChanging(string value);
		partial void OnCity_IDChanged();
		partial void OnCity_NoChanging(int value);
		partial void OnCity_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_City()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_Emps1 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps1), new Action<T_Emp>(this.detach_T_Emps1));
			this._T_Emps2 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps2), new Action<T_Emp>(this.detach_T_Emps2));
			this._T_Emps3 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps3), new Action<T_Emp>(this.detach_T_Emps3));
			this._T_Emps4 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps4), new Action<T_Emp>(this.detach_T_Emps4));
			this._T_Emps5 = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps5), new Action<T_Emp>(this.detach_T_Emps5));
			this._T_EqarsDatas = new EntitySet<T_EqarsData>(new Action<T_EqarsData>(this.attach_T_EqarsDatas), new Action<T_EqarsData>(this.detach_T_EqarsDatas));
			this._T_UpdateDocs = new EntitySet<T_UpdateDoc>(new Action<T_UpdateDoc>(this.attach_T_UpdateDocs), new Action<T_UpdateDoc>(this.detach_T_UpdateDocs));
			this._T_UpdateDocs1 = new EntitySet<T_UpdateDoc>(new Action<T_UpdateDoc>(this.attach_T_UpdateDocs1), new Action<T_UpdateDoc>(this.detach_T_UpdateDocs1));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string City_ID
		{
			get
			{
				return this._City_ID;
			}
			set
			{
				if ((this._City_ID != value))
				{
					this.OnCity_IDChanging(value);
					this.SendPropertyChanging();
					this._City_ID = value;
					this.SendPropertyChanged("City_ID");
					this.OnCity_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int City_No
		{
			get
			{
				return this._City_No;
			}
			set
			{
				if ((this._City_No != value))
				{
					this.OnCity_NoChanging(value);
					this.SendPropertyChanging();
					this._City_No = value;
					this.SendPropertyChanged("City_No");
					this.OnCity_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp", Storage = "_T_Emps", ThisKey = "City_No", OtherKey = "CityNo")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp1", Storage = "_T_Emps1", ThisKey = "City_No", OtherKey = "ID_From")]
		public EntitySet<T_Emp> T_Emps1
		{
			get
			{
				return this._T_Emps1;
			}
			set
			{
				this._T_Emps1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp2", Storage = "_T_Emps2", ThisKey = "City_No", OtherKey = "Passport_From")]
		public EntitySet<T_Emp> T_Emps2
		{
			get
			{
				return this._T_Emps2;
			}
			set
			{
				this._T_Emps2.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp3", Storage = "_T_Emps3", ThisKey = "City_No", OtherKey = "License_From")]
		public EntitySet<T_Emp> T_Emps3
		{
			get
			{
				return this._T_Emps3;
			}
			set
			{
				this._T_Emps3.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp4", Storage = "_T_Emps4", ThisKey = "City_No", OtherKey = "Form_From")]
		public EntitySet<T_Emp> T_Emps4
		{
			get
			{
				return this._T_Emps4;
			}
			set
			{
				this._T_Emps4.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp5", Storage = "_T_Emps5", ThisKey = "City_No", OtherKey = "Insurance_From")]
		public EntitySet<T_Emp> T_Emps5
		{
			get
			{
				return this._T_Emps5;
			}
			set
			{
				this._T_Emps5.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_EqarsData", Storage = "_T_EqarsDatas", ThisKey = "City_No", OtherKey = "CityNo")]
		public EntitySet<T_EqarsData> T_EqarsDatas
		{
			get
			{
				return this._T_EqarsDatas;
			}
			set
			{
				this._T_EqarsDatas.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_UpdateDoc", Storage = "_T_UpdateDocs", ThisKey = "City_No", OtherKey = "DocFrom")]
		public EntitySet<T_UpdateDoc> T_UpdateDocs
		{
			get
			{
				return this._T_UpdateDocs;
			}
			set
			{
				this._T_UpdateDocs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_UpdateDoc1", Storage = "_T_UpdateDocs1", ThisKey = "City_No", OtherKey = "DocFromAfter")]
		public EntitySet<T_UpdateDoc> T_UpdateDocs1
		{
			get
			{
				return this._T_UpdateDocs1;
			}
			set
			{
				this._T_UpdateDocs1.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City = null;
		}

		private void attach_T_Emps1(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City1 = this;
		}

		private void detach_T_Emps1(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City1 = null;
		}

		private void attach_T_Emps2(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City2 = this;
		}

		private void detach_T_Emps2(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City2 = null;
		}

		private void attach_T_Emps3(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City3 = this;
		}

		private void detach_T_Emps3(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City3 = null;
		}

		private void attach_T_Emps4(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City4 = this;
		}

		private void detach_T_Emps4(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City4 = null;
		}

		private void attach_T_Emps5(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City5 = this;
		}

		private void detach_T_Emps5(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_City5 = null;
		}

		private void attach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_City = this;
		}

		private void detach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_City = null;
		}

		private void attach_T_UpdateDocs(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_City = this;
		}

		private void detach_T_UpdateDocs(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_City = null;
		}

		private void attach_T_UpdateDocs1(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_City1 = this;
		}

		private void detach_T_UpdateDocs1(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_City1 = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Colors")]
	public partial class T_Color : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _Color_Name;

		private string _Color_NameE;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnColor_NameChanging(string value);
		partial void OnColor_NameChanged();
		partial void OnColor_NameEChanging(string value);
		partial void OnColor_NameEChanged();
		#endregion

		public T_Color()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Color_Name", DbType = "VarChar(50)")]
		public string Color_Name
		{
			get
			{
				return this._Color_Name;
			}
			set
			{
				if ((this._Color_Name != value))
				{
					this.OnColor_NameChanging(value);
					this.SendPropertyChanging();
					this._Color_Name = value;
					this.SendPropertyChanged("Color_Name");
					this.OnColor_NameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Color_NameE", DbType = "VarChar(MAX)")]
		public string Color_NameE
		{
			get
			{
				return this._Color_NameE;
			}
			set
			{
				if ((this._Color_NameE != value))
				{
					this.OnColor_NameEChanging(value);
					this.SendPropertyChanging();
					this._Color_NameE = value;
					this.SendPropertyChanged("Color_NameE");
					this.OnColor_NameEChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Commentary")]
	public partial class T_Commentary : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Commentary_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private string _SalDate;

		private System.Nullable<double> _Value;

		private string _Note;

		private System.Nullable<bool> _IFState;

		private System.Nullable<int> _treatmentNo;

		private string _CommentaryName;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_treatment> _T_treatment;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCommentary_IDChanging(string value);
		partial void OnCommentary_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnSalDateChanging(string value);
		partial void OnSalDateChanged();
		partial void OnValueChanging(System.Nullable<double> value);
		partial void OnValueChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		partial void OntreatmentNoChanging(System.Nullable<int> value);
		partial void OntreatmentNoChanged();
		partial void OnCommentaryNameChanging(string value);
		partial void OnCommentaryNameChanged();
		#endregion

		public T_Commentary()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_treatment = default(EntityRef<T_treatment>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Commentary_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Commentary_ID
		{
			get
			{
				return this._Commentary_ID;
			}
			set
			{
				if ((this._Commentary_ID != value))
				{
					this.OnCommentary_IDChanging(value);
					this.SendPropertyChanging();
					this._Commentary_ID = value;
					this.SendPropertyChanged("Commentary_ID");
					this.OnCommentary_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalDate", DbType = "VarChar(10)")]
		public string SalDate
		{
			get
			{
				return this._SalDate;
			}
			set
			{
				if ((this._SalDate != value))
				{
					this.OnSalDateChanging(value);
					this.SendPropertyChanging();
					this._SalDate = value;
					this.SendPropertyChanged("SalDate");
					this.OnSalDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Value", DbType = "Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_treatmentNo", DbType = "Int")]
		public System.Nullable<int> treatmentNo
		{
			get
			{
				return this._treatmentNo;
			}
			set
			{
				if ((this._treatmentNo != value))
				{
					if (this._T_treatment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntreatmentNoChanging(value);
					this.SendPropertyChanging();
					this._treatmentNo = value;
					this.SendPropertyChanged("treatmentNo");
					this.OntreatmentNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CommentaryName", DbType = "VarChar(40)")]
		public string CommentaryName
		{
			get
			{
				return this._CommentaryName;
			}
			set
			{
				if ((this._CommentaryName != value))
				{
					this.OnCommentaryNameChanging(value);
					this.SendPropertyChanging();
					this._CommentaryName = value;
					this.SendPropertyChanged("CommentaryName");
					this.OnCommentaryNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Commentary", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Commentaries.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Commentaries.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_treatment_T_Commentary", Storage = "_T_treatment", ThisKey = "treatmentNo", OtherKey = "treatment_No", IsForeignKey = true)]
		public T_treatment T_treatment
		{
			get
			{
				return this._T_treatment.Entity;
			}
			set
			{
				T_treatment previousValue = this._T_treatment.Entity;
				if (((previousValue != value)
							|| (this._T_treatment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_treatment.Entity = null;
						previousValue.T_Commentaries.Remove(this);
					}
					this._T_treatment.Entity = value;
					if ((value != null))
					{
						value.T_Commentaries.Add(this);
						this._treatmentNo = value.treatment_No;
					}
					else
					{
						this._treatmentNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_treatment");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Company")]
	public partial class T_Company : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Cop_ID;

		private string _CopNam;

		private string _Active;

		private string _Adder;

		private string _Tel1;

		private string _Tel2;

		private string _Fax;

		private string _Pox;

		private string _Symbl;

		private string _Eamil;

		private string _Mobl;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCop_IDChanging(int value);
		partial void OnCop_IDChanged();
		partial void OnCopNamChanging(string value);
		partial void OnCopNamChanged();
		partial void OnActiveChanging(string value);
		partial void OnActiveChanged();
		partial void OnAdderChanging(string value);
		partial void OnAdderChanged();
		partial void OnTel1Changing(string value);
		partial void OnTel1Changed();
		partial void OnTel2Changing(string value);
		partial void OnTel2Changed();
		partial void OnFaxChanging(string value);
		partial void OnFaxChanged();
		partial void OnPoxChanging(string value);
		partial void OnPoxChanged();
		partial void OnSymblChanging(string value);
		partial void OnSymblChanged();
		partial void OnEamilChanging(string value);
		partial void OnEamilChanged();
		partial void OnMoblChanging(string value);
		partial void OnMoblChanged();
		#endregion

		public T_Company()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cop_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Cop_ID
		{
			get
			{
				return this._Cop_ID;
			}
			set
			{
				if ((this._Cop_ID != value))
				{
					this.OnCop_IDChanging(value);
					this.SendPropertyChanging();
					this._Cop_ID = value;
					this.SendPropertyChanged("Cop_ID");
					this.OnCop_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CopNam", DbType = "VarChar(50)")]
		public string CopNam
		{
			get
			{
				return this._CopNam;
			}
			set
			{
				if ((this._CopNam != value))
				{
					this.OnCopNamChanging(value);
					this.SendPropertyChanging();
					this._CopNam = value;
					this.SendPropertyChanged("CopNam");
					this.OnCopNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Active", DbType = "VarChar(50)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Adder", DbType = "VarChar(50)")]
		public string Adder
		{
			get
			{
				return this._Adder;
			}
			set
			{
				if ((this._Adder != value))
				{
					this.OnAdderChanging(value);
					this.SendPropertyChanging();
					this._Adder = value;
					this.SendPropertyChanged("Adder");
					this.OnAdderChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel1", DbType = "VarChar(20)")]
		public string Tel1
		{
			get
			{
				return this._Tel1;
			}
			set
			{
				if ((this._Tel1 != value))
				{
					this.OnTel1Changing(value);
					this.SendPropertyChanging();
					this._Tel1 = value;
					this.SendPropertyChanged("Tel1");
					this.OnTel1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel2", DbType = "VarChar(50)")]
		public string Tel2
		{
			get
			{
				return this._Tel2;
			}
			set
			{
				if ((this._Tel2 != value))
				{
					this.OnTel2Changing(value);
					this.SendPropertyChanging();
					this._Tel2 = value;
					this.SendPropertyChanged("Tel2");
					this.OnTel2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pox", DbType = "VarChar(20)")]
		public string Pox
		{
			get
			{
				return this._Pox;
			}
			set
			{
				if ((this._Pox != value))
				{
					this.OnPoxChanging(value);
					this.SendPropertyChanging();
					this._Pox = value;
					this.SendPropertyChanged("Pox");
					this.OnPoxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Symbl", DbType = "VarChar(20)")]
		public string Symbl
		{
			get
			{
				return this._Symbl;
			}
			set
			{
				if ((this._Symbl != value))
				{
					this.OnSymblChanging(value);
					this.SendPropertyChanging();
					this._Symbl = value;
					this.SendPropertyChanged("Symbl");
					this.OnSymblChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eamil", DbType = "VarChar(100)")]
		public string Eamil
		{
			get
			{
				return this._Eamil;
			}
			set
			{
				if ((this._Eamil != value))
				{
					this.OnEamilChanging(value);
					this.SendPropertyChanging();
					this._Eamil = value;
					this.SendPropertyChanged("Eamil");
					this.OnEamilChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobl", DbType = "VarChar(20)")]
		public string Mobl
		{
			get
			{
				return this._Mobl;
			}
			set
			{
				if ((this._Mobl != value))
				{
					this.OnMoblChanging(value);
					this.SendPropertyChanging();
					this._Mobl = value;
					this.SendPropertyChanged("Mobl");
					this.OnMoblChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Contract")]
	public partial class T_Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Contract_ID;

		private int _Contract_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_Emp> _T_Emps;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnContract_IDChanging(string value);
		partial void OnContract_IDChanged();
		partial void OnContract_NoChanging(int value);
		partial void OnContract_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_Contract()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Contract_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Contract_ID
		{
			get
			{
				return this._Contract_ID;
			}
			set
			{
				if ((this._Contract_ID != value))
				{
					this.OnContract_IDChanging(value);
					this.SendPropertyChanging();
					this._Contract_ID = value;
					this.SendPropertyChanged("Contract_ID");
					this.OnContract_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Contract_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Contract_No
		{
			get
			{
				return this._Contract_No;
			}
			set
			{
				if ((this._Contract_No != value))
				{
					this.OnContract_NoChanging(value);
					this.SendPropertyChanging();
					this._Contract_No = value;
					this.SendPropertyChanged("Contract_No");
					this.OnContract_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Contract_T_Emp", Storage = "_T_Emps", ThisKey = "Contract_No", OtherKey = "ContrTyp")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Contract = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Contract = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_CstTbl")]
	public partial class T_CstTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Cst_ID;

		private string _Cst_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<int> _CompanyID;

		private string _CstFlied1;

		private string _CstFlied2;

		private string _CstFlied3;

		private string _CstFlied4;

		private string _CstFlied5;

		private EntitySet<T_Advance> _T_Advances;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_GDHEAD> _T_GDHEADs;

		private EntitySet<T_INVHED> _T_INVHEDs;

		private EntitySet<T_Salary> _T_Salaries;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCst_IDChanging(int value);
		partial void OnCst_IDChanged();
		partial void OnCst_NoChanging(string value);
		partial void OnCst_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnCstFlied1Changing(string value);
		partial void OnCstFlied1Changed();
		partial void OnCstFlied2Changing(string value);
		partial void OnCstFlied2Changed();
		partial void OnCstFlied3Changing(string value);
		partial void OnCstFlied3Changed();
		partial void OnCstFlied4Changing(string value);
		partial void OnCstFlied4Changed();
		partial void OnCstFlied5Changing(string value);
		partial void OnCstFlied5Changed();
		#endregion

		public T_CstTbl()
		{
			this._T_Advances = new EntitySet<T_Advance>(new Action<T_Advance>(this.attach_T_Advances), new Action<T_Advance>(this.detach_T_Advances));
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_GDHEADs = new EntitySet<T_GDHEAD>(new Action<T_GDHEAD>(this.attach_T_GDHEADs), new Action<T_GDHEAD>(this.detach_T_GDHEADs));
			this._T_INVHEDs = new EntitySet<T_INVHED>(new Action<T_INVHED>(this.attach_T_INVHEDs), new Action<T_INVHED>(this.detach_T_INVHEDs));
			this._T_Salaries = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries), new Action<T_Salary>(this.detach_T_Salaries));
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cst_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Cst_ID
		{
			get
			{
				return this._Cst_ID;
			}
			set
			{
				if ((this._Cst_ID != value))
				{
					this.OnCst_IDChanging(value);
					this.SendPropertyChanging();
					this._Cst_ID = value;
					this.SendPropertyChanged("Cst_ID");
					this.OnCst_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cst_No", DbType = "VarChar(30)")]
		public string Cst_No
		{
			get
			{
				return this._Cst_No;
			}
			set
			{
				if ((this._Cst_No != value))
				{
					this.OnCst_NoChanging(value);
					this.SendPropertyChanging();
					this._Cst_No = value;
					this.SendPropertyChanged("Cst_No");
					this.OnCst_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CstFlied1", DbType = "VarChar(250)")]
		public string CstFlied1
		{
			get
			{
				return this._CstFlied1;
			}
			set
			{
				if ((this._CstFlied1 != value))
				{
					this.OnCstFlied1Changing(value);
					this.SendPropertyChanging();
					this._CstFlied1 = value;
					this.SendPropertyChanged("CstFlied1");
					this.OnCstFlied1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CstFlied2", DbType = "VarChar(250)")]
		public string CstFlied2
		{
			get
			{
				return this._CstFlied2;
			}
			set
			{
				if ((this._CstFlied2 != value))
				{
					this.OnCstFlied2Changing(value);
					this.SendPropertyChanging();
					this._CstFlied2 = value;
					this.SendPropertyChanged("CstFlied2");
					this.OnCstFlied2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CstFlied3", DbType = "VarChar(250)")]
		public string CstFlied3
		{
			get
			{
				return this._CstFlied3;
			}
			set
			{
				if ((this._CstFlied3 != value))
				{
					this.OnCstFlied3Changing(value);
					this.SendPropertyChanging();
					this._CstFlied3 = value;
					this.SendPropertyChanged("CstFlied3");
					this.OnCstFlied3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CstFlied4", DbType = "VarChar(250)")]
		public string CstFlied4
		{
			get
			{
				return this._CstFlied4;
			}
			set
			{
				if ((this._CstFlied4 != value))
				{
					this.OnCstFlied4Changing(value);
					this.SendPropertyChanging();
					this._CstFlied4 = value;
					this.SendPropertyChanged("CstFlied4");
					this.OnCstFlied4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CstFlied5", DbType = "VarChar(250)")]
		public string CstFlied5
		{
			get
			{
				return this._CstFlied5;
			}
			set
			{
				if ((this._CstFlied5 != value))
				{
					this.OnCstFlied5Changing(value);
					this.SendPropertyChanging();
					this._CstFlied5 = value;
					this.SendPropertyChanged("CstFlied5");
					this.OnCstFlied5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_Advance", Storage = "_T_Advances", ThisKey = "Cst_ID", OtherKey = "CostCenterEmp")]
		public EntitySet<T_Advance> T_Advances
		{
			get
			{
				return this._T_Advances;
			}
			set
			{
				this._T_Advances.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_Emp", Storage = "_T_Emps", ThisKey = "Cst_ID", OtherKey = "CostCenterEmp")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_GDHEAD", Storage = "_T_GDHEADs", ThisKey = "Cst_ID", OtherKey = "gdCstNo")]
		public EntitySet<T_GDHEAD> T_GDHEADs
		{
			get
			{
				return this._T_GDHEADs;
			}
			set
			{
				this._T_GDHEADs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_INVHED", Storage = "_T_INVHEDs", ThisKey = "Cst_ID", OtherKey = "InvCstNo")]
		public EntitySet<T_INVHED> T_INVHEDs
		{
			get
			{
				return this._T_INVHEDs;
			}
			set
			{
				this._T_INVHEDs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_Salary", Storage = "_T_Salaries", ThisKey = "Cst_ID", OtherKey = "CostCenterEmp")]
		public EntitySet<T_Salary> T_Salaries
		{
			get
			{
				return this._T_Salaries;
			}
			set
			{
				this._T_Salaries.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_CstTbl", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_CstTbls.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_CstTbls.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Advances(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = this;
		}

		private void detach_T_Advances(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = null;
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = null;
		}

		private void attach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = this;
		}

		private void detach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = null;
		}

		private void attach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = this;
		}

		private void detach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = null;
		}

		private void attach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = this;
		}

		private void detach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_CstTbl = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Curency")]
	public partial class T_Curency : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Curency_ID;

		private string _Curency_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<double> _Rate;

		private string _Symbol;

		private System.Nullable<int> _CompanyID;

		private EntitySet<T_GDHEAD> _T_GDHEADs;

		private EntitySet<T_INVHED> _T_INVHEDs;

		private EntitySet<T_per> _T_pers;

		private EntitySet<T_Snd> _T_Snds;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCurency_IDChanging(int value);
		partial void OnCurency_IDChanged();
		partial void OnCurency_NoChanging(string value);
		partial void OnCurency_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnRateChanging(System.Nullable<double> value);
		partial void OnRateChanged();
		partial void OnSymbolChanging(string value);
		partial void OnSymbolChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_Curency()
		{
			this._T_GDHEADs = new EntitySet<T_GDHEAD>(new Action<T_GDHEAD>(this.attach_T_GDHEADs), new Action<T_GDHEAD>(this.detach_T_GDHEADs));
			this._T_INVHEDs = new EntitySet<T_INVHED>(new Action<T_INVHED>(this.attach_T_INVHEDs), new Action<T_INVHED>(this.detach_T_INVHEDs));
			this._T_pers = new EntitySet<T_per>(new Action<T_per>(this.attach_T_pers), new Action<T_per>(this.detach_T_pers));
			this._T_Snds = new EntitySet<T_Snd>(new Action<T_Snd>(this.attach_T_Snds), new Action<T_Snd>(this.detach_T_Snds));
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Curency_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Curency_ID
		{
			get
			{
				return this._Curency_ID;
			}
			set
			{
				if ((this._Curency_ID != value))
				{
					this.OnCurency_IDChanging(value);
					this.SendPropertyChanging();
					this._Curency_ID = value;
					this.SendPropertyChanged("Curency_ID");
					this.OnCurency_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Curency_No", DbType = "VarChar(40)")]
		public string Curency_No
		{
			get
			{
				return this._Curency_No;
			}
			set
			{
				if ((this._Curency_No != value))
				{
					this.OnCurency_NoChanging(value);
					this.SendPropertyChanging();
					this._Curency_No = value;
					this.SendPropertyChanged("Curency_No");
					this.OnCurency_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rate", DbType = "Float")]
		public System.Nullable<double> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Symbol", DbType = "VarChar(4)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Curency_T_GDHEAD", Storage = "_T_GDHEADs", ThisKey = "Curency_ID", OtherKey = "CurTyp")]
		public EntitySet<T_GDHEAD> T_GDHEADs
		{
			get
			{
				return this._T_GDHEADs;
			}
			set
			{
				this._T_GDHEADs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Curency_T_INVHED", Storage = "_T_INVHEDs", ThisKey = "Curency_ID", OtherKey = "CurTyp")]
		public EntitySet<T_INVHED> T_INVHEDs
		{
			get
			{
				return this._T_INVHEDs;
			}
			set
			{
				this._T_INVHEDs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Curency_T_per", Storage = "_T_pers", ThisKey = "Curency_ID", OtherKey = "curr")]
		public EntitySet<T_per> T_pers
		{
			get
			{
				return this._T_pers;
			}
			set
			{
				this._T_pers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Curency_T_Snd", Storage = "_T_Snds", ThisKey = "Curency_ID", OtherKey = "curr")]
		public EntitySet<T_Snd> T_Snds
		{
			get
			{
				return this._T_Snds;
			}
			set
			{
				this._T_Snds.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Curency", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_Curencies.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_Curencies.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_Curency = this;
		}

		private void detach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_Curency = null;
		}

		private void attach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_Curency = this;
		}

		private void detach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_Curency = null;
		}

		private void attach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_Curency = this;
		}

		private void detach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_Curency = null;
		}

		private void attach_T_Snds(T_Snd entity)
		{
			this.SendPropertyChanging();
			entity.T_Curency = this;
		}

		private void detach_T_Snds(T_Snd entity)
		{
			this.SendPropertyChanging();
			entity.T_Curency = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_DayOfWeek")]
	public partial class T_DayOfWeek : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Day_No;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_Attend> _T_Attends;

		private EntitySet<T_AttendOperat> _T_AttendOperats;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnDay_NoChanging(int value);
		partial void OnDay_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_DayOfWeek()
		{
			this._T_Attends = new EntitySet<T_Attend>(new Action<T_Attend>(this.attach_T_Attends), new Action<T_Attend>(this.detach_T_Attends));
			this._T_AttendOperats = new EntitySet<T_AttendOperat>(new Action<T_AttendOperat>(this.attach_T_AttendOperats), new Action<T_AttendOperat>(this.detach_T_AttendOperats));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Day_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Day_No
		{
			get
			{
				return this._Day_No;
			}
			set
			{
				if ((this._Day_No != value))
				{
					this.OnDay_NoChanging(value);
					this.SendPropertyChanging();
					this._Day_No = value;
					this.SendPropertyChanged("Day_No");
					this.OnDay_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(10)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(10)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_DayOfWeek_T_Attend", Storage = "_T_Attends", ThisKey = "Day_No", OtherKey = "Day_No")]
		public EntitySet<T_Attend> T_Attends
		{
			get
			{
				return this._T_Attends;
			}
			set
			{
				this._T_Attends.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_DayOfWeek_T_AttendOperat", Storage = "_T_AttendOperats", ThisKey = "Day_No", OtherKey = "Day")]
		public EntitySet<T_AttendOperat> T_AttendOperats
		{
			get
			{
				return this._T_AttendOperats;
			}
			set
			{
				this._T_AttendOperats.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Attends(T_Attend entity)
		{
			this.SendPropertyChanging();
			entity.T_DayOfWeek = this;
		}

		private void detach_T_Attends(T_Attend entity)
		{
			this.SendPropertyChanging();
			entity.T_DayOfWeek = null;
		}

		private void attach_T_AttendOperats(T_AttendOperat entity)
		{
			this.SendPropertyChanging();
			entity.T_DayOfWeek = this;
		}

		private void detach_T_AttendOperats(T_AttendOperat entity)
		{
			this.SendPropertyChanging();
			entity.T_DayOfWeek = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_DaysOfMonth")]
	public partial class T_DaysOfMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _ID;

		private System.Nullable<int> _DaysOfMonth;

		private System.Nullable<int> _Year;

		private System.Nullable<int> _Month;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(string value);
		partial void OnIDChanged();
		partial void OnDaysOfMonthChanging(System.Nullable<int> value);
		partial void OnDaysOfMonthChanged();
		partial void OnYearChanging(System.Nullable<int> value);
		partial void OnYearChanged();
		partial void OnMonthChanging(System.Nullable<int> value);
		partial void OnMonthChanged();
		#endregion

		public T_DaysOfMonth()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DaysOfMonth", DbType = "Int")]
		public System.Nullable<int> DaysOfMonth
		{
			get
			{
				return this._DaysOfMonth;
			}
			set
			{
				if ((this._DaysOfMonth != value))
				{
					this.OnDaysOfMonthChanging(value);
					this.SendPropertyChanging();
					this._DaysOfMonth = value;
					this.SendPropertyChanged("DaysOfMonth");
					this.OnDaysOfMonthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Year", DbType = "Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Month", DbType = "Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Dept")]
	public partial class T_Dept : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Dept_ID;

		private int _Dept_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private string _BossName;

		private string _Phone;

		private string _Fax;

		private string _AllownceNo;

		private string _AllownceBeginDate;

		private string _AllownceEndDate;

		private string _ZakaaNo;

		private string _ZakaaBeginDate;

		private string _ZakaaEndDate1;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_Salary> _T_Salaries;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnDept_IDChanging(string value);
		partial void OnDept_IDChanged();
		partial void OnDept_NoChanging(int value);
		partial void OnDept_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnBossNameChanging(string value);
		partial void OnBossNameChanged();
		partial void OnPhoneChanging(string value);
		partial void OnPhoneChanged();
		partial void OnFaxChanging(string value);
		partial void OnFaxChanged();
		partial void OnAllownceNoChanging(string value);
		partial void OnAllownceNoChanged();
		partial void OnAllownceBeginDateChanging(string value);
		partial void OnAllownceBeginDateChanged();
		partial void OnAllownceEndDateChanging(string value);
		partial void OnAllownceEndDateChanged();
		partial void OnZakaaNoChanging(string value);
		partial void OnZakaaNoChanged();
		partial void OnZakaaBeginDateChanging(string value);
		partial void OnZakaaBeginDateChanged();
		partial void OnZakaaEndDate1Changing(string value);
		partial void OnZakaaEndDate1Changed();
		#endregion

		public T_Dept()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_Salaries = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries), new Action<T_Salary>(this.detach_T_Salaries));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dept_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Dept_ID
		{
			get
			{
				return this._Dept_ID;
			}
			set
			{
				if ((this._Dept_ID != value))
				{
					this.OnDept_IDChanging(value);
					this.SendPropertyChanging();
					this._Dept_ID = value;
					this.SendPropertyChanged("Dept_ID");
					this.OnDept_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dept_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Dept_No
		{
			get
			{
				return this._Dept_No;
			}
			set
			{
				if ((this._Dept_No != value))
				{
					this.OnDept_NoChanging(value);
					this.SendPropertyChanging();
					this._Dept_No = value;
					this.SendPropertyChanged("Dept_No");
					this.OnDept_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(50)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(50)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossName", DbType = "VarChar(30)")]
		public string BossName
		{
			get
			{
				return this._BossName;
			}
			set
			{
				if ((this._BossName != value))
				{
					this.OnBossNameChanging(value);
					this.SendPropertyChanging();
					this._BossName = value;
					this.SendPropertyChanged("BossName");
					this.OnBossNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Phone", DbType = "VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllownceNo", DbType = "VarChar(20)")]
		public string AllownceNo
		{
			get
			{
				return this._AllownceNo;
			}
			set
			{
				if ((this._AllownceNo != value))
				{
					this.OnAllownceNoChanging(value);
					this.SendPropertyChanging();
					this._AllownceNo = value;
					this.SendPropertyChanged("AllownceNo");
					this.OnAllownceNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllownceBeginDate", DbType = "VarChar(20)")]
		public string AllownceBeginDate
		{
			get
			{
				return this._AllownceBeginDate;
			}
			set
			{
				if ((this._AllownceBeginDate != value))
				{
					this.OnAllownceBeginDateChanging(value);
					this.SendPropertyChanging();
					this._AllownceBeginDate = value;
					this.SendPropertyChanged("AllownceBeginDate");
					this.OnAllownceBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllownceEndDate", DbType = "VarChar(20)")]
		public string AllownceEndDate
		{
			get
			{
				return this._AllownceEndDate;
			}
			set
			{
				if ((this._AllownceEndDate != value))
				{
					this.OnAllownceEndDateChanging(value);
					this.SendPropertyChanging();
					this._AllownceEndDate = value;
					this.SendPropertyChanged("AllownceEndDate");
					this.OnAllownceEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZakaaNo", DbType = "VarChar(20)")]
		public string ZakaaNo
		{
			get
			{
				return this._ZakaaNo;
			}
			set
			{
				if ((this._ZakaaNo != value))
				{
					this.OnZakaaNoChanging(value);
					this.SendPropertyChanging();
					this._ZakaaNo = value;
					this.SendPropertyChanged("ZakaaNo");
					this.OnZakaaNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZakaaBeginDate", DbType = "VarChar(20)")]
		public string ZakaaBeginDate
		{
			get
			{
				return this._ZakaaBeginDate;
			}
			set
			{
				if ((this._ZakaaBeginDate != value))
				{
					this.OnZakaaBeginDateChanging(value);
					this.SendPropertyChanging();
					this._ZakaaBeginDate = value;
					this.SendPropertyChanged("ZakaaBeginDate");
					this.OnZakaaBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZakaaEndDate1", DbType = "VarChar(20)")]
		public string ZakaaEndDate1
		{
			get
			{
				return this._ZakaaEndDate1;
			}
			set
			{
				if ((this._ZakaaEndDate1 != value))
				{
					this.OnZakaaEndDate1Changing(value);
					this.SendPropertyChanging();
					this._ZakaaEndDate1 = value;
					this.SendPropertyChanged("ZakaaEndDate1");
					this.OnZakaaEndDate1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Dept_T_Emp", Storage = "_T_Emps", ThisKey = "Dept_No", OtherKey = "Dept")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Dept_T_Salary", Storage = "_T_Salaries", ThisKey = "Dept_No", OtherKey = "DeptNo")]
		public EntitySet<T_Salary> T_Salaries
		{
			get
			{
				return this._T_Salaries;
			}
			set
			{
				this._T_Salaries.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Dept = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Dept = null;
		}

		private void attach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Dept = this;
		}

		private void detach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Dept = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_EditItemPrice")]
	public partial class T_EditItemPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _ItmNo;

		private System.Nullable<double> _SelPriceNow1;

		private System.Nullable<double> _SelPriceNew1;

		private System.Nullable<double> _SelCostNow;

		private System.Nullable<double> _SelCostNew;

		private System.Nullable<double> _Legates;

		private System.Nullable<double> _LegatesNew;

		private System.Nullable<double> _Distributors;

		private System.Nullable<double> _DistributorsNew;

		private System.Nullable<double> _Sentence;

		private System.Nullable<double> _SentenceNew;

		private System.Nullable<double> _Sectorial;

		private System.Nullable<double> _SectorialNew;

		private System.Nullable<double> _VIP;

		private System.Nullable<double> _VIPNew;

		private System.Nullable<double> _SelPriceNow2;

		private System.Nullable<double> _SelPriceNew2;

		private System.Nullable<double> _SelPriceNow3;

		private System.Nullable<double> _SelPriceNew3;

		private System.Nullable<double> _SelPriceNow4;

		private System.Nullable<double> _SelPriceNew4;

		private System.Nullable<double> _SelPriceNow5;

		private System.Nullable<double> _SelPriceNew5;

		private string _LTim;

		private string _HDate;

		private string _GDate;

		private string _UsrNm;

		private EntityRef<T_Item> _T_Item;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnItmNoChanging(string value);
		partial void OnItmNoChanged();
		partial void OnSelPriceNow1Changing(System.Nullable<double> value);
		partial void OnSelPriceNow1Changed();
		partial void OnSelPriceNew1Changing(System.Nullable<double> value);
		partial void OnSelPriceNew1Changed();
		partial void OnSelCostNowChanging(System.Nullable<double> value);
		partial void OnSelCostNowChanged();
		partial void OnSelCostNewChanging(System.Nullable<double> value);
		partial void OnSelCostNewChanged();
		partial void OnLegatesChanging(System.Nullable<double> value);
		partial void OnLegatesChanged();
		partial void OnLegatesNewChanging(System.Nullable<double> value);
		partial void OnLegatesNewChanged();
		partial void OnDistributorsChanging(System.Nullable<double> value);
		partial void OnDistributorsChanged();
		partial void OnDistributorsNewChanging(System.Nullable<double> value);
		partial void OnDistributorsNewChanged();
		partial void OnSentenceChanging(System.Nullable<double> value);
		partial void OnSentenceChanged();
		partial void OnSentenceNewChanging(System.Nullable<double> value);
		partial void OnSentenceNewChanged();
		partial void OnSectorialChanging(System.Nullable<double> value);
		partial void OnSectorialChanged();
		partial void OnSectorialNewChanging(System.Nullable<double> value);
		partial void OnSectorialNewChanged();
		partial void OnVIPChanging(System.Nullable<double> value);
		partial void OnVIPChanged();
		partial void OnVIPNewChanging(System.Nullable<double> value);
		partial void OnVIPNewChanged();
		partial void OnSelPriceNow2Changing(System.Nullable<double> value);
		partial void OnSelPriceNow2Changed();
		partial void OnSelPriceNew2Changing(System.Nullable<double> value);
		partial void OnSelPriceNew2Changed();
		partial void OnSelPriceNow3Changing(System.Nullable<double> value);
		partial void OnSelPriceNow3Changed();
		partial void OnSelPriceNew3Changing(System.Nullable<double> value);
		partial void OnSelPriceNew3Changed();
		partial void OnSelPriceNow4Changing(System.Nullable<double> value);
		partial void OnSelPriceNow4Changed();
		partial void OnSelPriceNew4Changing(System.Nullable<double> value);
		partial void OnSelPriceNew4Changed();
		partial void OnSelPriceNow5Changing(System.Nullable<double> value);
		partial void OnSelPriceNow5Changed();
		partial void OnSelPriceNew5Changing(System.Nullable<double> value);
		partial void OnSelPriceNew5Changed();
		partial void OnLTimChanging(string value);
		partial void OnLTimChanged();
		partial void OnHDateChanging(string value);
		partial void OnHDateChanged();
		partial void OnGDateChanging(string value);
		partial void OnGDateChanged();
		partial void OnUsrNmChanging(string value);
		partial void OnUsrNmChanged();
		#endregion

		public T_EditItemPrice()
		{
			this._T_Item = default(EntityRef<T_Item>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmNo", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
		public string ItmNo
		{
			get
			{
				return this._ItmNo;
			}
			set
			{
				if ((this._ItmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmNoChanging(value);
					this.SendPropertyChanging();
					this._ItmNo = value;
					this.SendPropertyChanged("ItmNo");
					this.OnItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNow1", DbType = "Float")]
		public System.Nullable<double> SelPriceNow1
		{
			get
			{
				return this._SelPriceNow1;
			}
			set
			{
				if ((this._SelPriceNow1 != value))
				{
					this.OnSelPriceNow1Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNow1 = value;
					this.SendPropertyChanged("SelPriceNow1");
					this.OnSelPriceNow1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNew1", DbType = "Float")]
		public System.Nullable<double> SelPriceNew1
		{
			get
			{
				return this._SelPriceNew1;
			}
			set
			{
				if ((this._SelPriceNew1 != value))
				{
					this.OnSelPriceNew1Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNew1 = value;
					this.SendPropertyChanged("SelPriceNew1");
					this.OnSelPriceNew1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelCostNow", DbType = "Float")]
		public System.Nullable<double> SelCostNow
		{
			get
			{
				return this._SelCostNow;
			}
			set
			{
				if ((this._SelCostNow != value))
				{
					this.OnSelCostNowChanging(value);
					this.SendPropertyChanging();
					this._SelCostNow = value;
					this.SendPropertyChanged("SelCostNow");
					this.OnSelCostNowChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelCostNew", DbType = "Float")]
		public System.Nullable<double> SelCostNew
		{
			get
			{
				return this._SelCostNew;
			}
			set
			{
				if ((this._SelCostNew != value))
				{
					this.OnSelCostNewChanging(value);
					this.SendPropertyChanging();
					this._SelCostNew = value;
					this.SendPropertyChanged("SelCostNew");
					this.OnSelCostNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Legates", DbType = "Float")]
		public System.Nullable<double> Legates
		{
			get
			{
				return this._Legates;
			}
			set
			{
				if ((this._Legates != value))
				{
					this.OnLegatesChanging(value);
					this.SendPropertyChanging();
					this._Legates = value;
					this.SendPropertyChanged("Legates");
					this.OnLegatesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LegatesNew", DbType = "Float")]
		public System.Nullable<double> LegatesNew
		{
			get
			{
				return this._LegatesNew;
			}
			set
			{
				if ((this._LegatesNew != value))
				{
					this.OnLegatesNewChanging(value);
					this.SendPropertyChanging();
					this._LegatesNew = value;
					this.SendPropertyChanged("LegatesNew");
					this.OnLegatesNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Distributors", DbType = "Float")]
		public System.Nullable<double> Distributors
		{
			get
			{
				return this._Distributors;
			}
			set
			{
				if ((this._Distributors != value))
				{
					this.OnDistributorsChanging(value);
					this.SendPropertyChanging();
					this._Distributors = value;
					this.SendPropertyChanged("Distributors");
					this.OnDistributorsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DistributorsNew", DbType = "Float")]
		public System.Nullable<double> DistributorsNew
		{
			get
			{
				return this._DistributorsNew;
			}
			set
			{
				if ((this._DistributorsNew != value))
				{
					this.OnDistributorsNewChanging(value);
					this.SendPropertyChanging();
					this._DistributorsNew = value;
					this.SendPropertyChanged("DistributorsNew");
					this.OnDistributorsNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sentence", DbType = "Float")]
		public System.Nullable<double> Sentence
		{
			get
			{
				return this._Sentence;
			}
			set
			{
				if ((this._Sentence != value))
				{
					this.OnSentenceChanging(value);
					this.SendPropertyChanging();
					this._Sentence = value;
					this.SendPropertyChanged("Sentence");
					this.OnSentenceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SentenceNew", DbType = "Float")]
		public System.Nullable<double> SentenceNew
		{
			get
			{
				return this._SentenceNew;
			}
			set
			{
				if ((this._SentenceNew != value))
				{
					this.OnSentenceNewChanging(value);
					this.SendPropertyChanging();
					this._SentenceNew = value;
					this.SendPropertyChanged("SentenceNew");
					this.OnSentenceNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sectorial", DbType = "Float")]
		public System.Nullable<double> Sectorial
		{
			get
			{
				return this._Sectorial;
			}
			set
			{
				if ((this._Sectorial != value))
				{
					this.OnSectorialChanging(value);
					this.SendPropertyChanging();
					this._Sectorial = value;
					this.SendPropertyChanged("Sectorial");
					this.OnSectorialChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SectorialNew", DbType = "Float")]
		public System.Nullable<double> SectorialNew
		{
			get
			{
				return this._SectorialNew;
			}
			set
			{
				if ((this._SectorialNew != value))
				{
					this.OnSectorialNewChanging(value);
					this.SendPropertyChanging();
					this._SectorialNew = value;
					this.SendPropertyChanged("SectorialNew");
					this.OnSectorialNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VIP", DbType = "Float")]
		public System.Nullable<double> VIP
		{
			get
			{
				return this._VIP;
			}
			set
			{
				if ((this._VIP != value))
				{
					this.OnVIPChanging(value);
					this.SendPropertyChanging();
					this._VIP = value;
					this.SendPropertyChanged("VIP");
					this.OnVIPChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VIPNew", DbType = "Float")]
		public System.Nullable<double> VIPNew
		{
			get
			{
				return this._VIPNew;
			}
			set
			{
				if ((this._VIPNew != value))
				{
					this.OnVIPNewChanging(value);
					this.SendPropertyChanging();
					this._VIPNew = value;
					this.SendPropertyChanged("VIPNew");
					this.OnVIPNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNow2", DbType = "Float")]
		public System.Nullable<double> SelPriceNow2
		{
			get
			{
				return this._SelPriceNow2;
			}
			set
			{
				if ((this._SelPriceNow2 != value))
				{
					this.OnSelPriceNow2Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNow2 = value;
					this.SendPropertyChanged("SelPriceNow2");
					this.OnSelPriceNow2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNew2", DbType = "Float")]
		public System.Nullable<double> SelPriceNew2
		{
			get
			{
				return this._SelPriceNew2;
			}
			set
			{
				if ((this._SelPriceNew2 != value))
				{
					this.OnSelPriceNew2Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNew2 = value;
					this.SendPropertyChanged("SelPriceNew2");
					this.OnSelPriceNew2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNow3", DbType = "Float")]
		public System.Nullable<double> SelPriceNow3
		{
			get
			{
				return this._SelPriceNow3;
			}
			set
			{
				if ((this._SelPriceNow3 != value))
				{
					this.OnSelPriceNow3Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNow3 = value;
					this.SendPropertyChanged("SelPriceNow3");
					this.OnSelPriceNow3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNew3", DbType = "Float")]
		public System.Nullable<double> SelPriceNew3
		{
			get
			{
				return this._SelPriceNew3;
			}
			set
			{
				if ((this._SelPriceNew3 != value))
				{
					this.OnSelPriceNew3Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNew3 = value;
					this.SendPropertyChanged("SelPriceNew3");
					this.OnSelPriceNew3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNow4", DbType = "Float")]
		public System.Nullable<double> SelPriceNow4
		{
			get
			{
				return this._SelPriceNow4;
			}
			set
			{
				if ((this._SelPriceNow4 != value))
				{
					this.OnSelPriceNow4Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNow4 = value;
					this.SendPropertyChanged("SelPriceNow4");
					this.OnSelPriceNow4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNew4", DbType = "Float")]
		public System.Nullable<double> SelPriceNew4
		{
			get
			{
				return this._SelPriceNew4;
			}
			set
			{
				if ((this._SelPriceNew4 != value))
				{
					this.OnSelPriceNew4Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNew4 = value;
					this.SendPropertyChanged("SelPriceNew4");
					this.OnSelPriceNew4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNow5", DbType = "Float")]
		public System.Nullable<double> SelPriceNow5
		{
			get
			{
				return this._SelPriceNow5;
			}
			set
			{
				if ((this._SelPriceNow5 != value))
				{
					this.OnSelPriceNow5Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNow5 = value;
					this.SendPropertyChanged("SelPriceNow5");
					this.OnSelPriceNow5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SelPriceNew5", DbType = "Float")]
		public System.Nullable<double> SelPriceNew5
		{
			get
			{
				return this._SelPriceNew5;
			}
			set
			{
				if ((this._SelPriceNew5 != value))
				{
					this.OnSelPriceNew5Changing(value);
					this.SendPropertyChanging();
					this._SelPriceNew5 = value;
					this.SendPropertyChanged("SelPriceNew5");
					this.OnSelPriceNew5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LTim", DbType = "VarChar(10)")]
		public string LTim
		{
			get
			{
				return this._LTim;
			}
			set
			{
				if ((this._LTim != value))
				{
					this.OnLTimChanging(value);
					this.SendPropertyChanging();
					this._LTim = value;
					this.SendPropertyChanged("LTim");
					this.OnLTimChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HDate", DbType = "VarChar(10)")]
		public string HDate
		{
			get
			{
				return this._HDate;
			}
			set
			{
				if ((this._HDate != value))
				{
					this.OnHDateChanging(value);
					this.SendPropertyChanging();
					this._HDate = value;
					this.SendPropertyChanged("HDate");
					this.OnHDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GDate", DbType = "VarChar(10)")]
		public string GDate
		{
			get
			{
				return this._GDate;
			}
			set
			{
				if ((this._GDate != value))
				{
					this.OnGDateChanging(value);
					this.SendPropertyChanging();
					this._GDate = value;
					this.SendPropertyChanged("GDate");
					this.OnGDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UsrNm", DbType = "VarChar(50)")]
		public string UsrNm
		{
			get
			{
				return this._UsrNm;
			}
			set
			{
				if ((this._UsrNm != value))
				{
					this.OnUsrNmChanging(value);
					this.SendPropertyChanging();
					this._UsrNm = value;
					this.SendPropertyChanged("UsrNm");
					this.OnUsrNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_EditItemPrice", Storage = "_T_Item", ThisKey = "ItmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_EditItemPrices.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_EditItemPrices.Add(this);
						this._ItmNo = value.Itm_No;
					}
					else
					{
						this._ItmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Emp")]
	public partial class T_Emp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Emp_ID;

		private string _Emp_No;

		private string _Pass;

		private string _NameA;

		private string _NameE;

		private string _DateAppointment;

		private string _StartContr;

		private string _EndContr;

		private string _LastFilter;

		private string _ID_Date;

		private string _ID_DateEnd;

		private string _Passport_Date;

		private string _Passport_DateEnd;

		private string _License_Date;

		private string _License_DateEnd;

		private string _Form_Date;

		private string _Form_DateEnd;

		private string _Insurance_Date;

		private string _Insurance_DateEnd;

		private string _BirthDate;

		private System.Nullable<bool> _AutoReturnContr;

		private System.Nullable<double> _WorkHours;

		private System.Nullable<int> _DayOfMonth;

		private System.Nullable<int> _VacationCount;

		private System.Nullable<double> _VacationBalance;

		private System.Nullable<double> _TicketsCount;

		private System.Nullable<double> _TicketsPrice;

		private System.Nullable<double> _TicketsBalance;

		private System.Nullable<bool> _IsDesSocialInsurance;

		private string _SocialInsuranceNo;

		private System.Nullable<double> _MainSal;

		private System.Nullable<double> _HousingAllowance;

		private System.Nullable<double> _TransferAllowance;

		private System.Nullable<double> _SubsistenceAllowance;

		private System.Nullable<double> _NaturalWorkAllowance;

		private System.Nullable<double> _OtherAllowance;

		private System.Nullable<double> _DisOneDay;

		private System.Nullable<double> _LateHours;

		private System.Nullable<double> _SocialInsuranceComp;

		private System.Nullable<double> _SocialInsurance;

		private System.Nullable<double> _InsuranceMedicalCom;

		private System.Nullable<double> _InsuranceMedical;

		private System.Nullable<double> _AddDay;

		private System.Nullable<double> _AddHours;

		private System.Nullable<double> _MandateDay;

		private string _BankBR;

		private string _AccountID;

		private string _ID_No;

		private string _Passport_No;

		private string _License_No;

		private string _Form_No;

		private string _Insurance_No;

		private string _AddressA;

		private string _AddressE;

		private string _PO_Box;

		private string _ZipCode;

		private string _Tel;

		private string _Email;

		private string _QualificationA;

		private string _QualificatioE;

		private string _ExperiencesA;

		private string _ExperiencesE;

		private string _Note;

		private System.Nullable<bool> _EmpState;

		private System.Data.Linq.Binary _EmpPic;

		private System.Nullable<int> _Job;

		private System.Nullable<int> _Dept;

		private System.Nullable<int> _Section;

		private System.Nullable<int> _Guarantor;

		private System.Nullable<int> _ContrTyp;

		private System.Nullable<int> _DirBoss;

		private System.Nullable<int> _StatusSal;

		private System.Nullable<int> _Bank;

		private System.Nullable<int> _ID_From;

		private System.Nullable<int> _Passport_From;

		private System.Nullable<int> _License_From;

		private System.Nullable<int> _Form_From;

		private System.Nullable<int> _Insurance_From;

		private System.Nullable<int> _Religion;

		private System.Nullable<int> _Sex;

		private System.Nullable<int> _Nationalty;

		private System.Nullable<int> _BloodTyp;

		private System.Nullable<int> _MaritalStatus;

		private System.Nullable<int> _BirthPlace;

		private System.Nullable<int> _CityNo;

		private System.Nullable<int> _CalculateNo;

		private string _FatherA;

		private string _GrandFA;

		private string _FamilyA;

		private string _FatherE;

		private string _GrandFE;

		private string _FamilyE;

		private string _FirstNameA;

		private string _FirstNameE;

		private System.Nullable<int> _CompanyID;

		private string _SalAcc;

		private string _LoanAcc;

		private string _HouseAcc;

		private System.Nullable<int> _Allowances;

		private System.Nullable<int> _AllowancesTime;

		private string _WorkNo;

		private string _VisaNo;

		private string _VisaEnterNo;

		private string _VisaDate;

		private string _VisaCountry;

		private System.Nullable<int> _CostCenterEmp;

		private System.Nullable<int> _ProjectNo;

		private string _Insurance_Name;

		private System.Nullable<int> _InsuranceNo;

		private string _SocialInsuranceDate;

		private string _ExclusionDate;

		private System.Nullable<int> _Boss;

		private EntitySet<T_Add> _T_Adds;

		private EntitySet<T_Advance> _T_Advances;

		private EntitySet<T_Attend> _T_Attends;

		private EntitySet<T_AttendOperat> _T_AttendOperats;

		private EntitySet<T_Authorization> _T_Authorizations;

		private EntitySet<T_CallPhone> _T_CallPhones;

		private EntitySet<T_Car> _T_Cars;

		private EntitySet<T_Commentary> _T_Commentaries;

		private EntitySet<T_EndService> _T_EndServices;

		private EntitySet<T_Family> _T_Families;

		private EntitySet<T_Reward> _T_Rewards;

		private EntitySet<T_Reward> _T_Rewards1;

		private EntitySet<T_Salary> _T_Salaries;

		private EntitySet<T_SalaryOp> _T_SalaryOps;

		private EntitySet<T_SalDiscount> _T_SalDiscounts;

		private EntitySet<T_Secretariat> _T_Secretariats;

		private EntitySet<T_Ticket> _T_Tickets;

		private EntitySet<T_TransEmployee> _T_TransEmployees;

		private EntitySet<T_UpdateDoc> _T_UpdateDocs;

		private EntitySet<T_Vacation> _T_Vacations;

		private EntitySet<T_Vacation> _T_Vacations1;

		private EntitySet<T_VisaGoBack> _T_VisaGoBacks;

		private EntitySet<T_VisaIntroduction> _T_VisaIntroductions;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_AccDef> _T_AccDef1;

		private EntityRef<T_AccDef> _T_AccDef2;

		private EntityRef<T_AccDef> _T_AccDef3;

		private EntityRef<T_AccDef> _T_AccDef4;

		private EntityRef<T_Bank> _T_Bank;

		private EntityRef<T_BirthPlace> _T_BirthPlace;

		private EntityRef<T_BloodTyp> _T_BloodTyp;

		private EntityRef<T_City> _T_City;

		private EntityRef<T_City> _T_City1;

		private EntityRef<T_City> _T_City2;

		private EntityRef<T_City> _T_City3;

		private EntityRef<T_City> _T_City4;

		private EntityRef<T_City> _T_City5;

		private EntityRef<T_Contract> _T_Contract;

		private EntityRef<T_CstTbl> _T_CstTbl;

		private EntityRef<T_Dept> _T_Dept;

		private EntityRef<T_Guarantor> _T_Guarantor;

		private EntityRef<T_Info> _T_Info;

		private EntityRef<T_Job> _T_Job;

		private EntityRef<T_MStatus> _T_MStatus;

		private EntityRef<T_Nationality> _T_Nationality;

		private EntityRef<T_OpMethod> _T_OpMethod;

		private EntityRef<T_Project> _T_Project;

		private EntityRef<T_Religion> _T_Religion;

		private EntityRef<T_SalStatus> _T_SalStatus;

		private EntityRef<T_Section> _T_Section;

		private EntityRef<T_Sex> _T_Sex;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnEmp_IDChanging(string value);
		partial void OnEmp_IDChanged();
		partial void OnEmp_NoChanging(string value);
		partial void OnEmp_NoChanged();
		partial void OnPassChanging(string value);
		partial void OnPassChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnDateAppointmentChanging(string value);
		partial void OnDateAppointmentChanged();
		partial void OnStartContrChanging(string value);
		partial void OnStartContrChanged();
		partial void OnEndContrChanging(string value);
		partial void OnEndContrChanged();
		partial void OnLastFilterChanging(string value);
		partial void OnLastFilterChanged();
		partial void OnID_DateChanging(string value);
		partial void OnID_DateChanged();
		partial void OnID_DateEndChanging(string value);
		partial void OnID_DateEndChanged();
		partial void OnPassport_DateChanging(string value);
		partial void OnPassport_DateChanged();
		partial void OnPassport_DateEndChanging(string value);
		partial void OnPassport_DateEndChanged();
		partial void OnLicense_DateChanging(string value);
		partial void OnLicense_DateChanged();
		partial void OnLicense_DateEndChanging(string value);
		partial void OnLicense_DateEndChanged();
		partial void OnForm_DateChanging(string value);
		partial void OnForm_DateChanged();
		partial void OnForm_DateEndChanging(string value);
		partial void OnForm_DateEndChanged();
		partial void OnInsurance_DateChanging(string value);
		partial void OnInsurance_DateChanged();
		partial void OnInsurance_DateEndChanging(string value);
		partial void OnInsurance_DateEndChanged();
		partial void OnBirthDateChanging(string value);
		partial void OnBirthDateChanged();
		partial void OnAutoReturnContrChanging(System.Nullable<bool> value);
		partial void OnAutoReturnContrChanged();
		partial void OnWorkHoursChanging(System.Nullable<double> value);
		partial void OnWorkHoursChanged();
		partial void OnDayOfMonthChanging(System.Nullable<int> value);
		partial void OnDayOfMonthChanged();
		partial void OnVacationCountChanging(System.Nullable<int> value);
		partial void OnVacationCountChanged();
		partial void OnVacationBalanceChanging(System.Nullable<double> value);
		partial void OnVacationBalanceChanged();
		partial void OnTicketsCountChanging(System.Nullable<double> value);
		partial void OnTicketsCountChanged();
		partial void OnTicketsPriceChanging(System.Nullable<double> value);
		partial void OnTicketsPriceChanged();
		partial void OnTicketsBalanceChanging(System.Nullable<double> value);
		partial void OnTicketsBalanceChanged();
		partial void OnIsDesSocialInsuranceChanging(System.Nullable<bool> value);
		partial void OnIsDesSocialInsuranceChanged();
		partial void OnSocialInsuranceNoChanging(string value);
		partial void OnSocialInsuranceNoChanged();
		partial void OnMainSalChanging(System.Nullable<double> value);
		partial void OnMainSalChanged();
		partial void OnHousingAllowanceChanging(System.Nullable<double> value);
		partial void OnHousingAllowanceChanged();
		partial void OnTransferAllowanceChanging(System.Nullable<double> value);
		partial void OnTransferAllowanceChanged();
		partial void OnSubsistenceAllowanceChanging(System.Nullable<double> value);
		partial void OnSubsistenceAllowanceChanged();
		partial void OnNaturalWorkAllowanceChanging(System.Nullable<double> value);
		partial void OnNaturalWorkAllowanceChanged();
		partial void OnOtherAllowanceChanging(System.Nullable<double> value);
		partial void OnOtherAllowanceChanged();
		partial void OnDisOneDayChanging(System.Nullable<double> value);
		partial void OnDisOneDayChanged();
		partial void OnLateHoursChanging(System.Nullable<double> value);
		partial void OnLateHoursChanged();
		partial void OnSocialInsuranceCompChanging(System.Nullable<double> value);
		partial void OnSocialInsuranceCompChanged();
		partial void OnSocialInsuranceChanging(System.Nullable<double> value);
		partial void OnSocialInsuranceChanged();
		partial void OnInsuranceMedicalComChanging(System.Nullable<double> value);
		partial void OnInsuranceMedicalComChanged();
		partial void OnInsuranceMedicalChanging(System.Nullable<double> value);
		partial void OnInsuranceMedicalChanged();
		partial void OnAddDayChanging(System.Nullable<double> value);
		partial void OnAddDayChanged();
		partial void OnAddHoursChanging(System.Nullable<double> value);
		partial void OnAddHoursChanged();
		partial void OnMandateDayChanging(System.Nullable<double> value);
		partial void OnMandateDayChanged();
		partial void OnBankBRChanging(string value);
		partial void OnBankBRChanged();
		partial void OnAccountIDChanging(string value);
		partial void OnAccountIDChanged();
		partial void OnID_NoChanging(string value);
		partial void OnID_NoChanged();
		partial void OnPassport_NoChanging(string value);
		partial void OnPassport_NoChanged();
		partial void OnLicense_NoChanging(string value);
		partial void OnLicense_NoChanged();
		partial void OnForm_NoChanging(string value);
		partial void OnForm_NoChanged();
		partial void OnInsurance_NoChanging(string value);
		partial void OnInsurance_NoChanged();
		partial void OnAddressAChanging(string value);
		partial void OnAddressAChanged();
		partial void OnAddressEChanging(string value);
		partial void OnAddressEChanged();
		partial void OnPO_BoxChanging(string value);
		partial void OnPO_BoxChanged();
		partial void OnZipCodeChanging(string value);
		partial void OnZipCodeChanged();
		partial void OnTelChanging(string value);
		partial void OnTelChanged();
		partial void OnEmailChanging(string value);
		partial void OnEmailChanged();
		partial void OnQualificationAChanging(string value);
		partial void OnQualificationAChanged();
		partial void OnQualificatioEChanging(string value);
		partial void OnQualificatioEChanged();
		partial void OnExperiencesAChanging(string value);
		partial void OnExperiencesAChanged();
		partial void OnExperiencesEChanging(string value);
		partial void OnExperiencesEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnEmpStateChanging(System.Nullable<bool> value);
		partial void OnEmpStateChanged();
		partial void OnEmpPicChanging(System.Data.Linq.Binary value);
		partial void OnEmpPicChanged();
		partial void OnJobChanging(System.Nullable<int> value);
		partial void OnJobChanged();
		partial void OnDeptChanging(System.Nullable<int> value);
		partial void OnDeptChanged();
		partial void OnSectionChanging(System.Nullable<int> value);
		partial void OnSectionChanged();
		partial void OnGuarantorChanging(System.Nullable<int> value);
		partial void OnGuarantorChanged();
		partial void OnContrTypChanging(System.Nullable<int> value);
		partial void OnContrTypChanged();
		partial void OnDirBossChanging(System.Nullable<int> value);
		partial void OnDirBossChanged();
		partial void OnStatusSalChanging(System.Nullable<int> value);
		partial void OnStatusSalChanged();
		partial void OnBankChanging(System.Nullable<int> value);
		partial void OnBankChanged();
		partial void OnID_FromChanging(System.Nullable<int> value);
		partial void OnID_FromChanged();
		partial void OnPassport_FromChanging(System.Nullable<int> value);
		partial void OnPassport_FromChanged();
		partial void OnLicense_FromChanging(System.Nullable<int> value);
		partial void OnLicense_FromChanged();
		partial void OnForm_FromChanging(System.Nullable<int> value);
		partial void OnForm_FromChanged();
		partial void OnInsurance_FromChanging(System.Nullable<int> value);
		partial void OnInsurance_FromChanged();
		partial void OnReligionChanging(System.Nullable<int> value);
		partial void OnReligionChanged();
		partial void OnSexChanging(System.Nullable<int> value);
		partial void OnSexChanged();
		partial void OnNationaltyChanging(System.Nullable<int> value);
		partial void OnNationaltyChanged();
		partial void OnBloodTypChanging(System.Nullable<int> value);
		partial void OnBloodTypChanged();
		partial void OnMaritalStatusChanging(System.Nullable<int> value);
		partial void OnMaritalStatusChanged();
		partial void OnBirthPlaceChanging(System.Nullable<int> value);
		partial void OnBirthPlaceChanged();
		partial void OnCityNoChanging(System.Nullable<int> value);
		partial void OnCityNoChanged();
		partial void OnCalculateNoChanging(System.Nullable<int> value);
		partial void OnCalculateNoChanged();
		partial void OnFatherAChanging(string value);
		partial void OnFatherAChanged();
		partial void OnGrandFAChanging(string value);
		partial void OnGrandFAChanged();
		partial void OnFamilyAChanging(string value);
		partial void OnFamilyAChanged();
		partial void OnFatherEChanging(string value);
		partial void OnFatherEChanged();
		partial void OnGrandFEChanging(string value);
		partial void OnGrandFEChanged();
		partial void OnFamilyEChanging(string value);
		partial void OnFamilyEChanged();
		partial void OnFirstNameAChanging(string value);
		partial void OnFirstNameAChanged();
		partial void OnFirstNameEChanging(string value);
		partial void OnFirstNameEChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnSalAccChanging(string value);
		partial void OnSalAccChanged();
		partial void OnLoanAccChanging(string value);
		partial void OnLoanAccChanged();
		partial void OnHouseAccChanging(string value);
		partial void OnHouseAccChanged();
		partial void OnAllowancesChanging(System.Nullable<int> value);
		partial void OnAllowancesChanged();
		partial void OnAllowancesTimeChanging(System.Nullable<int> value);
		partial void OnAllowancesTimeChanged();
		partial void OnWorkNoChanging(string value);
		partial void OnWorkNoChanged();
		partial void OnVisaNoChanging(string value);
		partial void OnVisaNoChanged();
		partial void OnVisaEnterNoChanging(string value);
		partial void OnVisaEnterNoChanged();
		partial void OnVisaDateChanging(string value);
		partial void OnVisaDateChanged();
		partial void OnVisaCountryChanging(string value);
		partial void OnVisaCountryChanged();
		partial void OnCostCenterEmpChanging(System.Nullable<int> value);
		partial void OnCostCenterEmpChanged();
		partial void OnProjectNoChanging(System.Nullable<int> value);
		partial void OnProjectNoChanged();
		partial void OnInsurance_NameChanging(string value);
		partial void OnInsurance_NameChanged();
		partial void OnInsuranceNoChanging(System.Nullable<int> value);
		partial void OnInsuranceNoChanged();
		partial void OnSocialInsuranceDateChanging(string value);
		partial void OnSocialInsuranceDateChanged();
		partial void OnExclusionDateChanging(string value);
		partial void OnExclusionDateChanged();
		partial void OnBossChanging(System.Nullable<int> value);
		partial void OnBossChanged();
		#endregion

		public T_Emp()
		{
			this._T_Adds = new EntitySet<T_Add>(new Action<T_Add>(this.attach_T_Adds), new Action<T_Add>(this.detach_T_Adds));
			this._T_Advances = new EntitySet<T_Advance>(new Action<T_Advance>(this.attach_T_Advances), new Action<T_Advance>(this.detach_T_Advances));
			this._T_Attends = new EntitySet<T_Attend>(new Action<T_Attend>(this.attach_T_Attends), new Action<T_Attend>(this.detach_T_Attends));
			this._T_AttendOperats = new EntitySet<T_AttendOperat>(new Action<T_AttendOperat>(this.attach_T_AttendOperats), new Action<T_AttendOperat>(this.detach_T_AttendOperats));
			this._T_Authorizations = new EntitySet<T_Authorization>(new Action<T_Authorization>(this.attach_T_Authorizations), new Action<T_Authorization>(this.detach_T_Authorizations));
			this._T_CallPhones = new EntitySet<T_CallPhone>(new Action<T_CallPhone>(this.attach_T_CallPhones), new Action<T_CallPhone>(this.detach_T_CallPhones));
			this._T_Cars = new EntitySet<T_Car>(new Action<T_Car>(this.attach_T_Cars), new Action<T_Car>(this.detach_T_Cars));
			this._T_Commentaries = new EntitySet<T_Commentary>(new Action<T_Commentary>(this.attach_T_Commentaries), new Action<T_Commentary>(this.detach_T_Commentaries));
			this._T_EndServices = new EntitySet<T_EndService>(new Action<T_EndService>(this.attach_T_EndServices), new Action<T_EndService>(this.detach_T_EndServices));
			this._T_Families = new EntitySet<T_Family>(new Action<T_Family>(this.attach_T_Families), new Action<T_Family>(this.detach_T_Families));
			this._T_Rewards = new EntitySet<T_Reward>(new Action<T_Reward>(this.attach_T_Rewards), new Action<T_Reward>(this.detach_T_Rewards));
			this._T_Rewards1 = new EntitySet<T_Reward>(new Action<T_Reward>(this.attach_T_Rewards1), new Action<T_Reward>(this.detach_T_Rewards1));
			this._T_Salaries = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries), new Action<T_Salary>(this.detach_T_Salaries));
			this._T_SalaryOps = new EntitySet<T_SalaryOp>(new Action<T_SalaryOp>(this.attach_T_SalaryOps), new Action<T_SalaryOp>(this.detach_T_SalaryOps));
			this._T_SalDiscounts = new EntitySet<T_SalDiscount>(new Action<T_SalDiscount>(this.attach_T_SalDiscounts), new Action<T_SalDiscount>(this.detach_T_SalDiscounts));
			this._T_Secretariats = new EntitySet<T_Secretariat>(new Action<T_Secretariat>(this.attach_T_Secretariats), new Action<T_Secretariat>(this.detach_T_Secretariats));
			this._T_Tickets = new EntitySet<T_Ticket>(new Action<T_Ticket>(this.attach_T_Tickets), new Action<T_Ticket>(this.detach_T_Tickets));
			this._T_TransEmployees = new EntitySet<T_TransEmployee>(new Action<T_TransEmployee>(this.attach_T_TransEmployees), new Action<T_TransEmployee>(this.detach_T_TransEmployees));
			this._T_UpdateDocs = new EntitySet<T_UpdateDoc>(new Action<T_UpdateDoc>(this.attach_T_UpdateDocs), new Action<T_UpdateDoc>(this.detach_T_UpdateDocs));
			this._T_Vacations = new EntitySet<T_Vacation>(new Action<T_Vacation>(this.attach_T_Vacations), new Action<T_Vacation>(this.detach_T_Vacations));
			this._T_Vacations1 = new EntitySet<T_Vacation>(new Action<T_Vacation>(this.attach_T_Vacations1), new Action<T_Vacation>(this.detach_T_Vacations1));
			this._T_VisaGoBacks = new EntitySet<T_VisaGoBack>(new Action<T_VisaGoBack>(this.attach_T_VisaGoBacks), new Action<T_VisaGoBack>(this.detach_T_VisaGoBacks));
			this._T_VisaIntroductions = new EntitySet<T_VisaIntroduction>(new Action<T_VisaIntroduction>(this.attach_T_VisaIntroductions), new Action<T_VisaIntroduction>(this.detach_T_VisaIntroductions));
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_AccDef1 = default(EntityRef<T_AccDef>);
			this._T_AccDef2 = default(EntityRef<T_AccDef>);
			this._T_AccDef3 = default(EntityRef<T_AccDef>);
			this._T_AccDef4 = default(EntityRef<T_AccDef>);
			this._T_Bank = default(EntityRef<T_Bank>);
			this._T_BirthPlace = default(EntityRef<T_BirthPlace>);
			this._T_BloodTyp = default(EntityRef<T_BloodTyp>);
			this._T_City = default(EntityRef<T_City>);
			this._T_City1 = default(EntityRef<T_City>);
			this._T_City2 = default(EntityRef<T_City>);
			this._T_City3 = default(EntityRef<T_City>);
			this._T_City4 = default(EntityRef<T_City>);
			this._T_City5 = default(EntityRef<T_City>);
			this._T_Contract = default(EntityRef<T_Contract>);
			this._T_CstTbl = default(EntityRef<T_CstTbl>);
			this._T_Dept = default(EntityRef<T_Dept>);
			this._T_Guarantor = default(EntityRef<T_Guarantor>);
			this._T_Info = default(EntityRef<T_Info>);
			this._T_Job = default(EntityRef<T_Job>);
			this._T_MStatus = default(EntityRef<T_MStatus>);
			this._T_Nationality = default(EntityRef<T_Nationality>);
			this._T_OpMethod = default(EntityRef<T_OpMethod>);
			this._T_Project = default(EntityRef<T_Project>);
			this._T_Religion = default(EntityRef<T_Religion>);
			this._T_SalStatus = default(EntityRef<T_SalStatus>);
			this._T_Section = default(EntityRef<T_Section>);
			this._T_Sex = default(EntityRef<T_Sex>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Emp_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string Emp_ID
		{
			get
			{
				return this._Emp_ID;
			}
			set
			{
				if ((this._Emp_ID != value))
				{
					this.OnEmp_IDChanging(value);
					this.SendPropertyChanging();
					this._Emp_ID = value;
					this.SendPropertyChanged("Emp_ID");
					this.OnEmp_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Emp_No", DbType = "VarChar(6) NOT NULL", CanBeNull = false)]
		public string Emp_No
		{
			get
			{
				return this._Emp_No;
			}
			set
			{
				if ((this._Emp_No != value))
				{
					this.OnEmp_NoChanging(value);
					this.SendPropertyChanging();
					this._Emp_No = value;
					this.SendPropertyChanged("Emp_No");
					this.OnEmp_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pass", DbType = "VarChar(50)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateAppointment", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string DateAppointment
		{
			get
			{
				return this._DateAppointment;
			}
			set
			{
				if ((this._DateAppointment != value))
				{
					this.OnDateAppointmentChanging(value);
					this.SendPropertyChanging();
					this._DateAppointment = value;
					this.SendPropertyChanged("DateAppointment");
					this.OnDateAppointmentChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartContr", DbType = "VarChar(10)")]
		public string StartContr
		{
			get
			{
				return this._StartContr;
			}
			set
			{
				if ((this._StartContr != value))
				{
					this.OnStartContrChanging(value);
					this.SendPropertyChanging();
					this._StartContr = value;
					this.SendPropertyChanged("StartContr");
					this.OnStartContrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndContr", DbType = "VarChar(10)")]
		public string EndContr
		{
			get
			{
				return this._EndContr;
			}
			set
			{
				if ((this._EndContr != value))
				{
					this.OnEndContrChanging(value);
					this.SendPropertyChanging();
					this._EndContr = value;
					this.SendPropertyChanged("EndContr");
					this.OnEndContrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastFilter", DbType = "VarChar(10)")]
		public string LastFilter
		{
			get
			{
				return this._LastFilter;
			}
			set
			{
				if ((this._LastFilter != value))
				{
					this.OnLastFilterChanging(value);
					this.SendPropertyChanging();
					this._LastFilter = value;
					this.SendPropertyChanged("LastFilter");
					this.OnLastFilterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_Date", DbType = "VarChar(10)")]
		public string ID_Date
		{
			get
			{
				return this._ID_Date;
			}
			set
			{
				if ((this._ID_Date != value))
				{
					this.OnID_DateChanging(value);
					this.SendPropertyChanging();
					this._ID_Date = value;
					this.SendPropertyChanged("ID_Date");
					this.OnID_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_DateEnd", DbType = "VarChar(10)")]
		public string ID_DateEnd
		{
			get
			{
				return this._ID_DateEnd;
			}
			set
			{
				if ((this._ID_DateEnd != value))
				{
					this.OnID_DateEndChanging(value);
					this.SendPropertyChanging();
					this._ID_DateEnd = value;
					this.SendPropertyChanged("ID_DateEnd");
					this.OnID_DateEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Passport_Date", DbType = "VarChar(10)")]
		public string Passport_Date
		{
			get
			{
				return this._Passport_Date;
			}
			set
			{
				if ((this._Passport_Date != value))
				{
					this.OnPassport_DateChanging(value);
					this.SendPropertyChanging();
					this._Passport_Date = value;
					this.SendPropertyChanged("Passport_Date");
					this.OnPassport_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Passport_DateEnd", DbType = "VarChar(10)")]
		public string Passport_DateEnd
		{
			get
			{
				return this._Passport_DateEnd;
			}
			set
			{
				if ((this._Passport_DateEnd != value))
				{
					this.OnPassport_DateEndChanging(value);
					this.SendPropertyChanging();
					this._Passport_DateEnd = value;
					this.SendPropertyChanged("Passport_DateEnd");
					this.OnPassport_DateEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_License_Date", DbType = "VarChar(10)")]
		public string License_Date
		{
			get
			{
				return this._License_Date;
			}
			set
			{
				if ((this._License_Date != value))
				{
					this.OnLicense_DateChanging(value);
					this.SendPropertyChanging();
					this._License_Date = value;
					this.SendPropertyChanged("License_Date");
					this.OnLicense_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_License_DateEnd", DbType = "VarChar(10)")]
		public string License_DateEnd
		{
			get
			{
				return this._License_DateEnd;
			}
			set
			{
				if ((this._License_DateEnd != value))
				{
					this.OnLicense_DateEndChanging(value);
					this.SendPropertyChanging();
					this._License_DateEnd = value;
					this.SendPropertyChanged("License_DateEnd");
					this.OnLicense_DateEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Form_Date", DbType = "VarChar(10)")]
		public string Form_Date
		{
			get
			{
				return this._Form_Date;
			}
			set
			{
				if ((this._Form_Date != value))
				{
					this.OnForm_DateChanging(value);
					this.SendPropertyChanging();
					this._Form_Date = value;
					this.SendPropertyChanged("Form_Date");
					this.OnForm_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Form_DateEnd", DbType = "VarChar(10)")]
		public string Form_DateEnd
		{
			get
			{
				return this._Form_DateEnd;
			}
			set
			{
				if ((this._Form_DateEnd != value))
				{
					this.OnForm_DateEndChanging(value);
					this.SendPropertyChanging();
					this._Form_DateEnd = value;
					this.SendPropertyChanged("Form_DateEnd");
					this.OnForm_DateEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_Date", DbType = "VarChar(10)")]
		public string Insurance_Date
		{
			get
			{
				return this._Insurance_Date;
			}
			set
			{
				if ((this._Insurance_Date != value))
				{
					this.OnInsurance_DateChanging(value);
					this.SendPropertyChanging();
					this._Insurance_Date = value;
					this.SendPropertyChanged("Insurance_Date");
					this.OnInsurance_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_DateEnd", DbType = "VarChar(10)")]
		public string Insurance_DateEnd
		{
			get
			{
				return this._Insurance_DateEnd;
			}
			set
			{
				if ((this._Insurance_DateEnd != value))
				{
					this.OnInsurance_DateEndChanging(value);
					this.SendPropertyChanging();
					this._Insurance_DateEnd = value;
					this.SendPropertyChanged("Insurance_DateEnd");
					this.OnInsurance_DateEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BirthDate", DbType = "VarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoReturnContr", DbType = "Bit")]
		public System.Nullable<bool> AutoReturnContr
		{
			get
			{
				return this._AutoReturnContr;
			}
			set
			{
				if ((this._AutoReturnContr != value))
				{
					this.OnAutoReturnContrChanging(value);
					this.SendPropertyChanging();
					this._AutoReturnContr = value;
					this.SendPropertyChanged("AutoReturnContr");
					this.OnAutoReturnContrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WorkHours", DbType = "Float")]
		public System.Nullable<double> WorkHours
		{
			get
			{
				return this._WorkHours;
			}
			set
			{
				if ((this._WorkHours != value))
				{
					this.OnWorkHoursChanging(value);
					this.SendPropertyChanging();
					this._WorkHours = value;
					this.SendPropertyChanged("WorkHours");
					this.OnWorkHoursChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayOfMonth", DbType = "Int")]
		public System.Nullable<int> DayOfMonth
		{
			get
			{
				return this._DayOfMonth;
			}
			set
			{
				if ((this._DayOfMonth != value))
				{
					this.OnDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._DayOfMonth = value;
					this.SendPropertyChanged("DayOfMonth");
					this.OnDayOfMonthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacationCount", DbType = "Int")]
		public System.Nullable<int> VacationCount
		{
			get
			{
				return this._VacationCount;
			}
			set
			{
				if ((this._VacationCount != value))
				{
					this.OnVacationCountChanging(value);
					this.SendPropertyChanging();
					this._VacationCount = value;
					this.SendPropertyChanged("VacationCount");
					this.OnVacationCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacationBalance", DbType = "Float")]
		public System.Nullable<double> VacationBalance
		{
			get
			{
				return this._VacationBalance;
			}
			set
			{
				if ((this._VacationBalance != value))
				{
					this.OnVacationBalanceChanging(value);
					this.SendPropertyChanging();
					this._VacationBalance = value;
					this.SendPropertyChanged("VacationBalance");
					this.OnVacationBalanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketsCount", DbType = "Float")]
		public System.Nullable<double> TicketsCount
		{
			get
			{
				return this._TicketsCount;
			}
			set
			{
				if ((this._TicketsCount != value))
				{
					this.OnTicketsCountChanging(value);
					this.SendPropertyChanging();
					this._TicketsCount = value;
					this.SendPropertyChanged("TicketsCount");
					this.OnTicketsCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketsPrice", DbType = "Float")]
		public System.Nullable<double> TicketsPrice
		{
			get
			{
				return this._TicketsPrice;
			}
			set
			{
				if ((this._TicketsPrice != value))
				{
					this.OnTicketsPriceChanging(value);
					this.SendPropertyChanging();
					this._TicketsPrice = value;
					this.SendPropertyChanged("TicketsPrice");
					this.OnTicketsPriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketsBalance", DbType = "Float")]
		public System.Nullable<double> TicketsBalance
		{
			get
			{
				return this._TicketsBalance;
			}
			set
			{
				if ((this._TicketsBalance != value))
				{
					this.OnTicketsBalanceChanging(value);
					this.SendPropertyChanging();
					this._TicketsBalance = value;
					this.SendPropertyChanged("TicketsBalance");
					this.OnTicketsBalanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDesSocialInsurance", DbType = "Bit")]
		public System.Nullable<bool> IsDesSocialInsurance
		{
			get
			{
				return this._IsDesSocialInsurance;
			}
			set
			{
				if ((this._IsDesSocialInsurance != value))
				{
					this.OnIsDesSocialInsuranceChanging(value);
					this.SendPropertyChanging();
					this._IsDesSocialInsurance = value;
					this.SendPropertyChanged("IsDesSocialInsurance");
					this.OnIsDesSocialInsuranceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialInsuranceNo", DbType = "VarChar(15)")]
		public string SocialInsuranceNo
		{
			get
			{
				return this._SocialInsuranceNo;
			}
			set
			{
				if ((this._SocialInsuranceNo != value))
				{
					this.OnSocialInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._SocialInsuranceNo = value;
					this.SendPropertyChanged("SocialInsuranceNo");
					this.OnSocialInsuranceNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MainSal", DbType = "Float")]
		public System.Nullable<double> MainSal
		{
			get
			{
				return this._MainSal;
			}
			set
			{
				if ((this._MainSal != value))
				{
					this.OnMainSalChanging(value);
					this.SendPropertyChanging();
					this._MainSal = value;
					this.SendPropertyChanged("MainSal");
					this.OnMainSalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HousingAllowance", DbType = "Float")]
		public System.Nullable<double> HousingAllowance
		{
			get
			{
				return this._HousingAllowance;
			}
			set
			{
				if ((this._HousingAllowance != value))
				{
					this.OnHousingAllowanceChanging(value);
					this.SendPropertyChanging();
					this._HousingAllowance = value;
					this.SendPropertyChanged("HousingAllowance");
					this.OnHousingAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransferAllowance", DbType = "Float")]
		public System.Nullable<double> TransferAllowance
		{
			get
			{
				return this._TransferAllowance;
			}
			set
			{
				if ((this._TransferAllowance != value))
				{
					this.OnTransferAllowanceChanging(value);
					this.SendPropertyChanging();
					this._TransferAllowance = value;
					this.SendPropertyChanged("TransferAllowance");
					this.OnTransferAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubsistenceAllowance", DbType = "Float")]
		public System.Nullable<double> SubsistenceAllowance
		{
			get
			{
				return this._SubsistenceAllowance;
			}
			set
			{
				if ((this._SubsistenceAllowance != value))
				{
					this.OnSubsistenceAllowanceChanging(value);
					this.SendPropertyChanging();
					this._SubsistenceAllowance = value;
					this.SendPropertyChanged("SubsistenceAllowance");
					this.OnSubsistenceAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NaturalWorkAllowance", DbType = "Float")]
		public System.Nullable<double> NaturalWorkAllowance
		{
			get
			{
				return this._NaturalWorkAllowance;
			}
			set
			{
				if ((this._NaturalWorkAllowance != value))
				{
					this.OnNaturalWorkAllowanceChanging(value);
					this.SendPropertyChanging();
					this._NaturalWorkAllowance = value;
					this.SendPropertyChanged("NaturalWorkAllowance");
					this.OnNaturalWorkAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OtherAllowance", DbType = "Float")]
		public System.Nullable<double> OtherAllowance
		{
			get
			{
				return this._OtherAllowance;
			}
			set
			{
				if ((this._OtherAllowance != value))
				{
					this.OnOtherAllowanceChanging(value);
					this.SendPropertyChanging();
					this._OtherAllowance = value;
					this.SendPropertyChanged("OtherAllowance");
					this.OnOtherAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DisOneDay", DbType = "Float")]
		public System.Nullable<double> DisOneDay
		{
			get
			{
				return this._DisOneDay;
			}
			set
			{
				if ((this._DisOneDay != value))
				{
					this.OnDisOneDayChanging(value);
					this.SendPropertyChanging();
					this._DisOneDay = value;
					this.SendPropertyChanged("DisOneDay");
					this.OnDisOneDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LateHours", DbType = "Float")]
		public System.Nullable<double> LateHours
		{
			get
			{
				return this._LateHours;
			}
			set
			{
				if ((this._LateHours != value))
				{
					this.OnLateHoursChanging(value);
					this.SendPropertyChanging();
					this._LateHours = value;
					this.SendPropertyChanged("LateHours");
					this.OnLateHoursChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialInsuranceComp", DbType = "Float")]
		public System.Nullable<double> SocialInsuranceComp
		{
			get
			{
				return this._SocialInsuranceComp;
			}
			set
			{
				if ((this._SocialInsuranceComp != value))
				{
					this.OnSocialInsuranceCompChanging(value);
					this.SendPropertyChanging();
					this._SocialInsuranceComp = value;
					this.SendPropertyChanged("SocialInsuranceComp");
					this.OnSocialInsuranceCompChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialInsurance", DbType = "Float")]
		public System.Nullable<double> SocialInsurance
		{
			get
			{
				return this._SocialInsurance;
			}
			set
			{
				if ((this._SocialInsurance != value))
				{
					this.OnSocialInsuranceChanging(value);
					this.SendPropertyChanging();
					this._SocialInsurance = value;
					this.SendPropertyChanged("SocialInsurance");
					this.OnSocialInsuranceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceMedicalCom", DbType = "Float")]
		public System.Nullable<double> InsuranceMedicalCom
		{
			get
			{
				return this._InsuranceMedicalCom;
			}
			set
			{
				if ((this._InsuranceMedicalCom != value))
				{
					this.OnInsuranceMedicalComChanging(value);
					this.SendPropertyChanging();
					this._InsuranceMedicalCom = value;
					this.SendPropertyChanged("InsuranceMedicalCom");
					this.OnInsuranceMedicalComChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceMedical", DbType = "Float")]
		public System.Nullable<double> InsuranceMedical
		{
			get
			{
				return this._InsuranceMedical;
			}
			set
			{
				if ((this._InsuranceMedical != value))
				{
					this.OnInsuranceMedicalChanging(value);
					this.SendPropertyChanging();
					this._InsuranceMedical = value;
					this.SendPropertyChanged("InsuranceMedical");
					this.OnInsuranceMedicalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddDay", DbType = "Float")]
		public System.Nullable<double> AddDay
		{
			get
			{
				return this._AddDay;
			}
			set
			{
				if ((this._AddDay != value))
				{
					this.OnAddDayChanging(value);
					this.SendPropertyChanging();
					this._AddDay = value;
					this.SendPropertyChanged("AddDay");
					this.OnAddDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddHours", DbType = "Float")]
		public System.Nullable<double> AddHours
		{
			get
			{
				return this._AddHours;
			}
			set
			{
				if ((this._AddHours != value))
				{
					this.OnAddHoursChanging(value);
					this.SendPropertyChanging();
					this._AddHours = value;
					this.SendPropertyChanged("AddHours");
					this.OnAddHoursChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MandateDay", DbType = "Float")]
		public System.Nullable<double> MandateDay
		{
			get
			{
				return this._MandateDay;
			}
			set
			{
				if ((this._MandateDay != value))
				{
					this.OnMandateDayChanging(value);
					this.SendPropertyChanging();
					this._MandateDay = value;
					this.SendPropertyChanged("MandateDay");
					this.OnMandateDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankBR", DbType = "VarChar(30)")]
		public string BankBR
		{
			get
			{
				return this._BankBR;
			}
			set
			{
				if ((this._BankBR != value))
				{
					if (this._T_AccDef1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankBRChanging(value);
					this.SendPropertyChanging();
					this._BankBR = value;
					this.SendPropertyChanged("BankBR");
					this.OnBankBRChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountID", DbType = "VarChar(30)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_No", DbType = "VarChar(15)")]
		public string ID_No
		{
			get
			{
				return this._ID_No;
			}
			set
			{
				if ((this._ID_No != value))
				{
					this.OnID_NoChanging(value);
					this.SendPropertyChanging();
					this._ID_No = value;
					this.SendPropertyChanged("ID_No");
					this.OnID_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Passport_No", DbType = "VarChar(15)")]
		public string Passport_No
		{
			get
			{
				return this._Passport_No;
			}
			set
			{
				if ((this._Passport_No != value))
				{
					this.OnPassport_NoChanging(value);
					this.SendPropertyChanging();
					this._Passport_No = value;
					this.SendPropertyChanged("Passport_No");
					this.OnPassport_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_License_No", DbType = "VarChar(15)")]
		public string License_No
		{
			get
			{
				return this._License_No;
			}
			set
			{
				if ((this._License_No != value))
				{
					this.OnLicense_NoChanging(value);
					this.SendPropertyChanging();
					this._License_No = value;
					this.SendPropertyChanged("License_No");
					this.OnLicense_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Form_No", DbType = "VarChar(15)")]
		public string Form_No
		{
			get
			{
				return this._Form_No;
			}
			set
			{
				if ((this._Form_No != value))
				{
					this.OnForm_NoChanging(value);
					this.SendPropertyChanging();
					this._Form_No = value;
					this.SendPropertyChanged("Form_No");
					this.OnForm_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_No", DbType = "VarChar(15)")]
		public string Insurance_No
		{
			get
			{
				return this._Insurance_No;
			}
			set
			{
				if ((this._Insurance_No != value))
				{
					this.OnInsurance_NoChanging(value);
					this.SendPropertyChanging();
					this._Insurance_No = value;
					this.SendPropertyChanged("Insurance_No");
					this.OnInsurance_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddressA", DbType = "VarChar(30)")]
		public string AddressA
		{
			get
			{
				return this._AddressA;
			}
			set
			{
				if ((this._AddressA != value))
				{
					this.OnAddressAChanging(value);
					this.SendPropertyChanging();
					this._AddressA = value;
					this.SendPropertyChanged("AddressA");
					this.OnAddressAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddressE", DbType = "VarChar(30)")]
		public string AddressE
		{
			get
			{
				return this._AddressE;
			}
			set
			{
				if ((this._AddressE != value))
				{
					this.OnAddressEChanging(value);
					this.SendPropertyChanging();
					this._AddressE = value;
					this.SendPropertyChanged("AddressE");
					this.OnAddressEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PO_Box", DbType = "VarChar(10)")]
		public string PO_Box
		{
			get
			{
				return this._PO_Box;
			}
			set
			{
				if ((this._PO_Box != value))
				{
					this.OnPO_BoxChanging(value);
					this.SendPropertyChanging();
					this._PO_Box = value;
					this.SendPropertyChanged("PO_Box");
					this.OnPO_BoxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZipCode", DbType = "VarChar(15)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel", DbType = "VarChar(30)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QualificationA", DbType = "VarChar(30)")]
		public string QualificationA
		{
			get
			{
				return this._QualificationA;
			}
			set
			{
				if ((this._QualificationA != value))
				{
					this.OnQualificationAChanging(value);
					this.SendPropertyChanging();
					this._QualificationA = value;
					this.SendPropertyChanged("QualificationA");
					this.OnQualificationAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QualificatioE", DbType = "VarChar(30)")]
		public string QualificatioE
		{
			get
			{
				return this._QualificatioE;
			}
			set
			{
				if ((this._QualificatioE != value))
				{
					this.OnQualificatioEChanging(value);
					this.SendPropertyChanging();
					this._QualificatioE = value;
					this.SendPropertyChanged("QualificatioE");
					this.OnQualificatioEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExperiencesA", DbType = "VarChar(100)")]
		public string ExperiencesA
		{
			get
			{
				return this._ExperiencesA;
			}
			set
			{
				if ((this._ExperiencesA != value))
				{
					this.OnExperiencesAChanging(value);
					this.SendPropertyChanging();
					this._ExperiencesA = value;
					this.SendPropertyChanged("ExperiencesA");
					this.OnExperiencesAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExperiencesE", DbType = "VarChar(100)")]
		public string ExperiencesE
		{
			get
			{
				return this._ExperiencesE;
			}
			set
			{
				if ((this._ExperiencesE != value))
				{
					this.OnExperiencesEChanging(value);
					this.SendPropertyChanging();
					this._ExperiencesE = value;
					this.SendPropertyChanged("ExperiencesE");
					this.OnExperiencesEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(30)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpState", DbType = "Bit")]
		public System.Nullable<bool> EmpState
		{
			get
			{
				return this._EmpState;
			}
			set
			{
				if ((this._EmpState != value))
				{
					this.OnEmpStateChanging(value);
					this.SendPropertyChanging();
					this._EmpState = value;
					this.SendPropertyChanged("EmpState");
					this.OnEmpStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpPic", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary EmpPic
		{
			get
			{
				return this._EmpPic;
			}
			set
			{
				if ((this._EmpPic != value))
				{
					this.OnEmpPicChanging(value);
					this.SendPropertyChanging();
					this._EmpPic = value;
					this.SendPropertyChanged("EmpPic");
					this.OnEmpPicChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Job", DbType = "Int")]
		public System.Nullable<int> Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					if (this._T_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dept", DbType = "Int")]
		public System.Nullable<int> Dept
		{
			get
			{
				return this._Dept;
			}
			set
			{
				if ((this._Dept != value))
				{
					if (this._T_Dept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptChanging(value);
					this.SendPropertyChanging();
					this._Dept = value;
					this.SendPropertyChanged("Dept");
					this.OnDeptChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Section", DbType = "Int")]
		public System.Nullable<int> Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					if (this._T_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Guarantor", DbType = "Int")]
		public System.Nullable<int> Guarantor
		{
			get
			{
				return this._Guarantor;
			}
			set
			{
				if ((this._Guarantor != value))
				{
					if (this._T_Guarantor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGuarantorChanging(value);
					this.SendPropertyChanging();
					this._Guarantor = value;
					this.SendPropertyChanged("Guarantor");
					this.OnGuarantorChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContrTyp", DbType = "Int")]
		public System.Nullable<int> ContrTyp
		{
			get
			{
				return this._ContrTyp;
			}
			set
			{
				if ((this._ContrTyp != value))
				{
					if (this._T_Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContrTypChanging(value);
					this.SendPropertyChanging();
					this._ContrTyp = value;
					this.SendPropertyChanged("ContrTyp");
					this.OnContrTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DirBoss", DbType = "Int")]
		public System.Nullable<int> DirBoss
		{
			get
			{
				return this._DirBoss;
			}
			set
			{
				if ((this._DirBoss != value))
				{
					this.OnDirBossChanging(value);
					this.SendPropertyChanging();
					this._DirBoss = value;
					this.SendPropertyChanged("DirBoss");
					this.OnDirBossChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StatusSal", DbType = "Int")]
		public System.Nullable<int> StatusSal
		{
			get
			{
				return this._StatusSal;
			}
			set
			{
				if ((this._StatusSal != value))
				{
					if (this._T_SalStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusSalChanging(value);
					this.SendPropertyChanging();
					this._StatusSal = value;
					this.SendPropertyChanged("StatusSal");
					this.OnStatusSalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Bank", DbType = "Int")]
		public System.Nullable<int> Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					if (this._T_Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_From", DbType = "Int")]
		public System.Nullable<int> ID_From
		{
			get
			{
				return this._ID_From;
			}
			set
			{
				if ((this._ID_From != value))
				{
					if (this._T_City1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_FromChanging(value);
					this.SendPropertyChanging();
					this._ID_From = value;
					this.SendPropertyChanged("ID_From");
					this.OnID_FromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Passport_From", DbType = "Int")]
		public System.Nullable<int> Passport_From
		{
			get
			{
				return this._Passport_From;
			}
			set
			{
				if ((this._Passport_From != value))
				{
					if (this._T_City2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPassport_FromChanging(value);
					this.SendPropertyChanging();
					this._Passport_From = value;
					this.SendPropertyChanged("Passport_From");
					this.OnPassport_FromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_License_From", DbType = "Int")]
		public System.Nullable<int> License_From
		{
			get
			{
				return this._License_From;
			}
			set
			{
				if ((this._License_From != value))
				{
					if (this._T_City3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLicense_FromChanging(value);
					this.SendPropertyChanging();
					this._License_From = value;
					this.SendPropertyChanged("License_From");
					this.OnLicense_FromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Form_From", DbType = "Int")]
		public System.Nullable<int> Form_From
		{
			get
			{
				return this._Form_From;
			}
			set
			{
				if ((this._Form_From != value))
				{
					if (this._T_City4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_FromChanging(value);
					this.SendPropertyChanging();
					this._Form_From = value;
					this.SendPropertyChanged("Form_From");
					this.OnForm_FromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_From", DbType = "Int")]
		public System.Nullable<int> Insurance_From
		{
			get
			{
				return this._Insurance_From;
			}
			set
			{
				if ((this._Insurance_From != value))
				{
					if (this._T_City5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsurance_FromChanging(value);
					this.SendPropertyChanging();
					this._Insurance_From = value;
					this.SendPropertyChanged("Insurance_From");
					this.OnInsurance_FromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Religion", DbType = "Int")]
		public System.Nullable<int> Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					if (this._T_Religion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sex", DbType = "Int")]
		public System.Nullable<int> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					if (this._T_Sex.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nationalty", DbType = "Int")]
		public System.Nullable<int> Nationalty
		{
			get
			{
				return this._Nationalty;
			}
			set
			{
				if ((this._Nationalty != value))
				{
					if (this._T_Nationality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNationaltyChanging(value);
					this.SendPropertyChanging();
					this._Nationalty = value;
					this.SendPropertyChanged("Nationalty");
					this.OnNationaltyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BloodTyp", DbType = "Int")]
		public System.Nullable<int> BloodTyp
		{
			get
			{
				return this._BloodTyp;
			}
			set
			{
				if ((this._BloodTyp != value))
				{
					if (this._T_BloodTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBloodTypChanging(value);
					this.SendPropertyChanging();
					this._BloodTyp = value;
					this.SendPropertyChanged("BloodTyp");
					this.OnBloodTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaritalStatus", DbType = "Int")]
		public System.Nullable<int> MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					if (this._T_MStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BirthPlace", DbType = "Int")]
		public System.Nullable<int> BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					if (this._T_BirthPlace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CityNo", DbType = "Int")]
		public System.Nullable<int> CityNo
		{
			get
			{
				return this._CityNo;
			}
			set
			{
				if ((this._CityNo != value))
				{
					if (this._T_City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityNoChanging(value);
					this.SendPropertyChanging();
					this._CityNo = value;
					this.SendPropertyChanged("CityNo");
					this.OnCityNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculateNo", DbType = "Int")]
		public System.Nullable<int> CalculateNo
		{
			get
			{
				return this._CalculateNo;
			}
			set
			{
				if ((this._CalculateNo != value))
				{
					if (this._T_OpMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalculateNoChanging(value);
					this.SendPropertyChanging();
					this._CalculateNo = value;
					this.SendPropertyChanged("CalculateNo");
					this.OnCalculateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FatherA", DbType = "VarChar(30)")]
		public string FatherA
		{
			get
			{
				return this._FatherA;
			}
			set
			{
				if ((this._FatherA != value))
				{
					this.OnFatherAChanging(value);
					this.SendPropertyChanging();
					this._FatherA = value;
					this.SendPropertyChanged("FatherA");
					this.OnFatherAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GrandFA", DbType = "VarChar(30)")]
		public string GrandFA
		{
			get
			{
				return this._GrandFA;
			}
			set
			{
				if ((this._GrandFA != value))
				{
					this.OnGrandFAChanging(value);
					this.SendPropertyChanging();
					this._GrandFA = value;
					this.SendPropertyChanged("GrandFA");
					this.OnGrandFAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FamilyA", DbType = "VarChar(30)")]
		public string FamilyA
		{
			get
			{
				return this._FamilyA;
			}
			set
			{
				if ((this._FamilyA != value))
				{
					this.OnFamilyAChanging(value);
					this.SendPropertyChanging();
					this._FamilyA = value;
					this.SendPropertyChanged("FamilyA");
					this.OnFamilyAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FatherE", DbType = "VarChar(30)")]
		public string FatherE
		{
			get
			{
				return this._FatherE;
			}
			set
			{
				if ((this._FatherE != value))
				{
					this.OnFatherEChanging(value);
					this.SendPropertyChanging();
					this._FatherE = value;
					this.SendPropertyChanged("FatherE");
					this.OnFatherEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GrandFE", DbType = "VarChar(30)")]
		public string GrandFE
		{
			get
			{
				return this._GrandFE;
			}
			set
			{
				if ((this._GrandFE != value))
				{
					this.OnGrandFEChanging(value);
					this.SendPropertyChanging();
					this._GrandFE = value;
					this.SendPropertyChanged("GrandFE");
					this.OnGrandFEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FamilyE", DbType = "VarChar(30)")]
		public string FamilyE
		{
			get
			{
				return this._FamilyE;
			}
			set
			{
				if ((this._FamilyE != value))
				{
					this.OnFamilyEChanging(value);
					this.SendPropertyChanging();
					this._FamilyE = value;
					this.SendPropertyChanged("FamilyE");
					this.OnFamilyEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstNameA", DbType = "VarChar(30)")]
		public string FirstNameA
		{
			get
			{
				return this._FirstNameA;
			}
			set
			{
				if ((this._FirstNameA != value))
				{
					this.OnFirstNameAChanging(value);
					this.SendPropertyChanging();
					this._FirstNameA = value;
					this.SendPropertyChanged("FirstNameA");
					this.OnFirstNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstNameE", DbType = "VarChar(30)")]
		public string FirstNameE
		{
			get
			{
				return this._FirstNameE;
			}
			set
			{
				if ((this._FirstNameE != value))
				{
					this.OnFirstNameEChanging(value);
					this.SendPropertyChanging();
					this._FirstNameE = value;
					this.SendPropertyChanged("FirstNameE");
					this.OnFirstNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_Info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalAcc", DbType = "VarChar(30)")]
		public string SalAcc
		{
			get
			{
				return this._SalAcc;
			}
			set
			{
				if ((this._SalAcc != value))
				{
					if (this._T_AccDef4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalAccChanging(value);
					this.SendPropertyChanging();
					this._SalAcc = value;
					this.SendPropertyChanged("SalAcc");
					this.OnSalAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoanAcc", DbType = "VarChar(30)")]
		public string LoanAcc
		{
			get
			{
				return this._LoanAcc;
			}
			set
			{
				if ((this._LoanAcc != value))
				{
					if (this._T_AccDef3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanAccChanging(value);
					this.SendPropertyChanging();
					this._LoanAcc = value;
					this.SendPropertyChanged("LoanAcc");
					this.OnLoanAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HouseAcc", DbType = "VarChar(30)")]
		public string HouseAcc
		{
			get
			{
				return this._HouseAcc;
			}
			set
			{
				if ((this._HouseAcc != value))
				{
					if (this._T_AccDef2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHouseAccChanging(value);
					this.SendPropertyChanging();
					this._HouseAcc = value;
					this.SendPropertyChanged("HouseAcc");
					this.OnHouseAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Allowances", DbType = "Int")]
		public System.Nullable<int> Allowances
		{
			get
			{
				return this._Allowances;
			}
			set
			{
				if ((this._Allowances != value))
				{
					this.OnAllowancesChanging(value);
					this.SendPropertyChanging();
					this._Allowances = value;
					this.SendPropertyChanged("Allowances");
					this.OnAllowancesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowancesTime", DbType = "Int")]
		public System.Nullable<int> AllowancesTime
		{
			get
			{
				return this._AllowancesTime;
			}
			set
			{
				if ((this._AllowancesTime != value))
				{
					this.OnAllowancesTimeChanging(value);
					this.SendPropertyChanging();
					this._AllowancesTime = value;
					this.SendPropertyChanged("AllowancesTime");
					this.OnAllowancesTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WorkNo", DbType = "VarChar(30)")]
		public string WorkNo
		{
			get
			{
				return this._WorkNo;
			}
			set
			{
				if ((this._WorkNo != value))
				{
					this.OnWorkNoChanging(value);
					this.SendPropertyChanging();
					this._WorkNo = value;
					this.SendPropertyChanged("WorkNo");
					this.OnWorkNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaNo", DbType = "VarChar(30)")]
		public string VisaNo
		{
			get
			{
				return this._VisaNo;
			}
			set
			{
				if ((this._VisaNo != value))
				{
					this.OnVisaNoChanging(value);
					this.SendPropertyChanging();
					this._VisaNo = value;
					this.SendPropertyChanged("VisaNo");
					this.OnVisaNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaEnterNo", DbType = "VarChar(30)")]
		public string VisaEnterNo
		{
			get
			{
				return this._VisaEnterNo;
			}
			set
			{
				if ((this._VisaEnterNo != value))
				{
					this.OnVisaEnterNoChanging(value);
					this.SendPropertyChanging();
					this._VisaEnterNo = value;
					this.SendPropertyChanged("VisaEnterNo");
					this.OnVisaEnterNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaDate", DbType = "VarChar(30)")]
		public string VisaDate
		{
			get
			{
				return this._VisaDate;
			}
			set
			{
				if ((this._VisaDate != value))
				{
					this.OnVisaDateChanging(value);
					this.SendPropertyChanging();
					this._VisaDate = value;
					this.SendPropertyChanged("VisaDate");
					this.OnVisaDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaCountry", DbType = "VarChar(30)")]
		public string VisaCountry
		{
			get
			{
				return this._VisaCountry;
			}
			set
			{
				if ((this._VisaCountry != value))
				{
					this.OnVisaCountryChanging(value);
					this.SendPropertyChanging();
					this._VisaCountry = value;
					this.SendPropertyChanged("VisaCountry");
					this.OnVisaCountryChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CostCenterEmp", DbType = "Int")]
		public System.Nullable<int> CostCenterEmp
		{
			get
			{
				return this._CostCenterEmp;
			}
			set
			{
				if ((this._CostCenterEmp != value))
				{
					if (this._T_CstTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostCenterEmpChanging(value);
					this.SendPropertyChanging();
					this._CostCenterEmp = value;
					this.SendPropertyChanged("CostCenterEmp");
					this.OnCostCenterEmpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProjectNo", DbType = "Int")]
		public System.Nullable<int> ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					if (this._T_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_Name", DbType = "VarChar(100)")]
		public string Insurance_Name
		{
			get
			{
				return this._Insurance_Name;
			}
			set
			{
				if ((this._Insurance_Name != value))
				{
					this.OnInsurance_NameChanging(value);
					this.SendPropertyChanging();
					this._Insurance_Name = value;
					this.SendPropertyChanged("Insurance_Name");
					this.OnInsurance_NameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceNo", DbType = "Int")]
		public System.Nullable<int> InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialInsuranceDate", DbType = "VarChar(10)")]
		public string SocialInsuranceDate
		{
			get
			{
				return this._SocialInsuranceDate;
			}
			set
			{
				if ((this._SocialInsuranceDate != value))
				{
					this.OnSocialInsuranceDateChanging(value);
					this.SendPropertyChanging();
					this._SocialInsuranceDate = value;
					this.SendPropertyChanged("SocialInsuranceDate");
					this.OnSocialInsuranceDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExclusionDate", DbType = "VarChar(10)")]
		public string ExclusionDate
		{
			get
			{
				return this._ExclusionDate;
			}
			set
			{
				if ((this._ExclusionDate != value))
				{
					this.OnExclusionDateChanging(value);
					this.SendPropertyChanging();
					this._ExclusionDate = value;
					this.SendPropertyChanged("ExclusionDate");
					this.OnExclusionDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Boss", DbType = "Int")]
		public System.Nullable<int> Boss
		{
			get
			{
				return this._Boss;
			}
			set
			{
				if ((this._Boss != value))
				{
					this.OnBossChanging(value);
					this.SendPropertyChanging();
					this._Boss = value;
					this.SendPropertyChanged("Boss");
					this.OnBossChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Add", Storage = "_T_Adds", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Add> T_Adds
		{
			get
			{
				return this._T_Adds;
			}
			set
			{
				this._T_Adds.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Advance", Storage = "_T_Advances", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Advance> T_Advances
		{
			get
			{
				return this._T_Advances;
			}
			set
			{
				this._T_Advances.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Attend", Storage = "_T_Attends", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Attend> T_Attends
		{
			get
			{
				return this._T_Attends;
			}
			set
			{
				this._T_Attends.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_AttendOperat", Storage = "_T_AttendOperats", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_AttendOperat> T_AttendOperats
		{
			get
			{
				return this._T_AttendOperats;
			}
			set
			{
				this._T_AttendOperats.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Authorization", Storage = "_T_Authorizations", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Authorization> T_Authorizations
		{
			get
			{
				return this._T_Authorizations;
			}
			set
			{
				this._T_Authorizations.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_CallPhone", Storage = "_T_CallPhones", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_CallPhone> T_CallPhones
		{
			get
			{
				return this._T_CallPhones;
			}
			set
			{
				this._T_CallPhones.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Car", Storage = "_T_Cars", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Car> T_Cars
		{
			get
			{
				return this._T_Cars;
			}
			set
			{
				this._T_Cars.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Commentary", Storage = "_T_Commentaries", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Commentary> T_Commentaries
		{
			get
			{
				return this._T_Commentaries;
			}
			set
			{
				this._T_Commentaries.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_EndService", Storage = "_T_EndServices", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_EndService> T_EndServices
		{
			get
			{
				return this._T_EndServices;
			}
			set
			{
				this._T_EndServices.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Family", Storage = "_T_Families", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Family> T_Families
		{
			get
			{
				return this._T_Families;
			}
			set
			{
				this._T_Families.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Reward", Storage = "_T_Rewards", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Reward> T_Rewards
		{
			get
			{
				return this._T_Rewards;
			}
			set
			{
				this._T_Rewards.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Reward1", Storage = "_T_Rewards1", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Reward> T_Rewards1
		{
			get
			{
				return this._T_Rewards1;
			}
			set
			{
				this._T_Rewards1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Salary", Storage = "_T_Salaries", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Salary> T_Salaries
		{
			get
			{
				return this._T_Salaries;
			}
			set
			{
				this._T_Salaries.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_SalaryOp", Storage = "_T_SalaryOps", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_SalaryOp> T_SalaryOps
		{
			get
			{
				return this._T_SalaryOps;
			}
			set
			{
				this._T_SalaryOps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_SalDiscount", Storage = "_T_SalDiscounts", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_SalDiscount> T_SalDiscounts
		{
			get
			{
				return this._T_SalDiscounts;
			}
			set
			{
				this._T_SalDiscounts.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Secretariat", Storage = "_T_Secretariats", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Secretariat> T_Secretariats
		{
			get
			{
				return this._T_Secretariats;
			}
			set
			{
				this._T_Secretariats.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Ticket", Storage = "_T_Tickets", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Ticket> T_Tickets
		{
			get
			{
				return this._T_Tickets;
			}
			set
			{
				this._T_Tickets.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_TransEmployee", Storage = "_T_TransEmployees", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_TransEmployee> T_TransEmployees
		{
			get
			{
				return this._T_TransEmployees;
			}
			set
			{
				this._T_TransEmployees.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_UpdateDoc", Storage = "_T_UpdateDocs", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_UpdateDoc> T_UpdateDocs
		{
			get
			{
				return this._T_UpdateDocs;
			}
			set
			{
				this._T_UpdateDocs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Vacation", Storage = "_T_Vacations", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_Vacation> T_Vacations
		{
			get
			{
				return this._T_Vacations;
			}
			set
			{
				this._T_Vacations.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Vacation1", Storage = "_T_Vacations1", ThisKey = "Emp_ID", OtherKey = "EmpCover")]
		public EntitySet<T_Vacation> T_Vacations1
		{
			get
			{
				return this._T_Vacations1;
			}
			set
			{
				this._T_Vacations1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_VisaGoBack", Storage = "_T_VisaGoBacks", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_VisaGoBack> T_VisaGoBacks
		{
			get
			{
				return this._T_VisaGoBacks;
			}
			set
			{
				this._T_VisaGoBacks.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_VisaIntroduction", Storage = "_T_VisaIntroductions", ThisKey = "Emp_ID", OtherKey = "EmpID")]
		public EntitySet<T_VisaIntroduction> T_VisaIntroductions
		{
			get
			{
				return this._T_VisaIntroductions;
			}
			set
			{
				this._T_VisaIntroductions.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp", Storage = "_T_AccDef", ThisKey = "AccountID", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._AccountID = value.AccDef_No;
					}
					else
					{
						this._AccountID = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp1", Storage = "_T_AccDef1", ThisKey = "BankBR", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef1
		{
			get
			{
				return this._T_AccDef1.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef1.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef1.Entity = null;
						previousValue.T_Emps1.Remove(this);
					}
					this._T_AccDef1.Entity = value;
					if ((value != null))
					{
						value.T_Emps1.Add(this);
						this._BankBR = value.AccDef_No;
					}
					else
					{
						this._BankBR = default(string);
					}
					this.SendPropertyChanged("T_AccDef1");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp2", Storage = "_T_AccDef2", ThisKey = "HouseAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef2
		{
			get
			{
				return this._T_AccDef2.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef2.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef2.Entity = null;
						previousValue.T_Emps2.Remove(this);
					}
					this._T_AccDef2.Entity = value;
					if ((value != null))
					{
						value.T_Emps2.Add(this);
						this._HouseAcc = value.AccDef_No;
					}
					else
					{
						this._HouseAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef2");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp3", Storage = "_T_AccDef3", ThisKey = "LoanAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef3
		{
			get
			{
				return this._T_AccDef3.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef3.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef3.Entity = null;
						previousValue.T_Emps3.Remove(this);
					}
					this._T_AccDef3.Entity = value;
					if ((value != null))
					{
						value.T_Emps3.Add(this);
						this._LoanAcc = value.AccDef_No;
					}
					else
					{
						this._LoanAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef3");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Emp4", Storage = "_T_AccDef4", ThisKey = "SalAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef4
		{
			get
			{
				return this._T_AccDef4.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef4.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef4.Entity = null;
						previousValue.T_Emps4.Remove(this);
					}
					this._T_AccDef4.Entity = value;
					if ((value != null))
					{
						value.T_Emps4.Add(this);
						this._SalAcc = value.AccDef_No;
					}
					else
					{
						this._SalAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef4");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Bank_T_Emp", Storage = "_T_Bank", ThisKey = "Bank", OtherKey = "Bank_No", IsForeignKey = true)]
		public T_Bank T_Bank
		{
			get
			{
				return this._T_Bank.Entity;
			}
			set
			{
				T_Bank previousValue = this._T_Bank.Entity;
				if (((previousValue != value)
							|| (this._T_Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Bank.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Bank.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._Bank = value.Bank_No;
					}
					else
					{
						this._Bank = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Bank");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_BirthPlace_T_Emp", Storage = "_T_BirthPlace", ThisKey = "BirthPlace", OtherKey = "BirthPlaceNo", IsForeignKey = true)]
		public T_BirthPlace T_BirthPlace
		{
			get
			{
				return this._T_BirthPlace.Entity;
			}
			set
			{
				T_BirthPlace previousValue = this._T_BirthPlace.Entity;
				if (((previousValue != value)
							|| (this._T_BirthPlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_BirthPlace.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_BirthPlace.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._BirthPlace = value.BirthPlaceNo;
					}
					else
					{
						this._BirthPlace = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_BirthPlace");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_BloodTyp_T_Emp", Storage = "_T_BloodTyp", ThisKey = "BloodTyp", OtherKey = "BloodTyp_No", IsForeignKey = true)]
		public T_BloodTyp T_BloodTyp
		{
			get
			{
				return this._T_BloodTyp.Entity;
			}
			set
			{
				T_BloodTyp previousValue = this._T_BloodTyp.Entity;
				if (((previousValue != value)
							|| (this._T_BloodTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_BloodTyp.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_BloodTyp.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._BloodTyp = value.BloodTyp_No;
					}
					else
					{
						this._BloodTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_BloodTyp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp", Storage = "_T_City", ThisKey = "CityNo", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City
		{
			get
			{
				return this._T_City.Entity;
			}
			set
			{
				T_City previousValue = this._T_City.Entity;
				if (((previousValue != value)
							|| (this._T_City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_City.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._CityNo = value.City_No;
					}
					else
					{
						this._CityNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp1", Storage = "_T_City1", ThisKey = "ID_From", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City1
		{
			get
			{
				return this._T_City1.Entity;
			}
			set
			{
				T_City previousValue = this._T_City1.Entity;
				if (((previousValue != value)
							|| (this._T_City1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City1.Entity = null;
						previousValue.T_Emps1.Remove(this);
					}
					this._T_City1.Entity = value;
					if ((value != null))
					{
						value.T_Emps1.Add(this);
						this._ID_From = value.City_No;
					}
					else
					{
						this._ID_From = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City1");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp2", Storage = "_T_City2", ThisKey = "Passport_From", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City2
		{
			get
			{
				return this._T_City2.Entity;
			}
			set
			{
				T_City previousValue = this._T_City2.Entity;
				if (((previousValue != value)
							|| (this._T_City2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City2.Entity = null;
						previousValue.T_Emps2.Remove(this);
					}
					this._T_City2.Entity = value;
					if ((value != null))
					{
						value.T_Emps2.Add(this);
						this._Passport_From = value.City_No;
					}
					else
					{
						this._Passport_From = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City2");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp3", Storage = "_T_City3", ThisKey = "License_From", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City3
		{
			get
			{
				return this._T_City3.Entity;
			}
			set
			{
				T_City previousValue = this._T_City3.Entity;
				if (((previousValue != value)
							|| (this._T_City3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City3.Entity = null;
						previousValue.T_Emps3.Remove(this);
					}
					this._T_City3.Entity = value;
					if ((value != null))
					{
						value.T_Emps3.Add(this);
						this._License_From = value.City_No;
					}
					else
					{
						this._License_From = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City3");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp4", Storage = "_T_City4", ThisKey = "Form_From", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City4
		{
			get
			{
				return this._T_City4.Entity;
			}
			set
			{
				T_City previousValue = this._T_City4.Entity;
				if (((previousValue != value)
							|| (this._T_City4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City4.Entity = null;
						previousValue.T_Emps4.Remove(this);
					}
					this._T_City4.Entity = value;
					if ((value != null))
					{
						value.T_Emps4.Add(this);
						this._Form_From = value.City_No;
					}
					else
					{
						this._Form_From = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City4");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_Emp5", Storage = "_T_City5", ThisKey = "Insurance_From", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City5
		{
			get
			{
				return this._T_City5.Entity;
			}
			set
			{
				T_City previousValue = this._T_City5.Entity;
				if (((previousValue != value)
							|| (this._T_City5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City5.Entity = null;
						previousValue.T_Emps5.Remove(this);
					}
					this._T_City5.Entity = value;
					if ((value != null))
					{
						value.T_Emps5.Add(this);
						this._Insurance_From = value.City_No;
					}
					else
					{
						this._Insurance_From = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City5");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Contract_T_Emp", Storage = "_T_Contract", ThisKey = "ContrTyp", OtherKey = "Contract_No", IsForeignKey = true)]
		public T_Contract T_Contract
		{
			get
			{
				return this._T_Contract.Entity;
			}
			set
			{
				T_Contract previousValue = this._T_Contract.Entity;
				if (((previousValue != value)
							|| (this._T_Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Contract.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Contract.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._ContrTyp = value.Contract_No;
					}
					else
					{
						this._ContrTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Contract");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_Emp", Storage = "_T_CstTbl", ThisKey = "CostCenterEmp", OtherKey = "Cst_ID", IsForeignKey = true)]
		public T_CstTbl T_CstTbl
		{
			get
			{
				return this._T_CstTbl.Entity;
			}
			set
			{
				T_CstTbl previousValue = this._T_CstTbl.Entity;
				if (((previousValue != value)
							|| (this._T_CstTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_CstTbl.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_CstTbl.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._CostCenterEmp = value.Cst_ID;
					}
					else
					{
						this._CostCenterEmp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_CstTbl");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Dept_T_Emp", Storage = "_T_Dept", ThisKey = "Dept", OtherKey = "Dept_No", IsForeignKey = true)]
		public T_Dept T_Dept
		{
			get
			{
				return this._T_Dept.Entity;
			}
			set
			{
				T_Dept previousValue = this._T_Dept.Entity;
				if (((previousValue != value)
							|| (this._T_Dept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Dept.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Dept.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._Dept = value.Dept_No;
					}
					else
					{
						this._Dept = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Dept");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Guarantor_T_Emp", Storage = "_T_Guarantor", ThisKey = "Guarantor", OtherKey = "Guarantor_No", IsForeignKey = true)]
		public T_Guarantor T_Guarantor
		{
			get
			{
				return this._T_Guarantor.Entity;
			}
			set
			{
				T_Guarantor previousValue = this._T_Guarantor.Entity;
				if (((previousValue != value)
							|| (this._T_Guarantor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Guarantor.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Guarantor.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._Guarantor = value.Guarantor_No;
					}
					else
					{
						this._Guarantor = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Guarantor");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Info_T_Emp", Storage = "_T_Info", ThisKey = "CompanyID", OtherKey = "Company_ID", IsForeignKey = true)]
		public T_Info T_Info
		{
			get
			{
				return this._T_Info.Entity;
			}
			set
			{
				T_Info previousValue = this._T_Info.Entity;
				if (((previousValue != value)
							|| (this._T_Info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Info.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Info.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._CompanyID = value.Company_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Info");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Job_T_Emp", Storage = "_T_Job", ThisKey = "Job", OtherKey = "Job_No", IsForeignKey = true)]
		public T_Job T_Job
		{
			get
			{
				return this._T_Job.Entity;
			}
			set
			{
				T_Job previousValue = this._T_Job.Entity;
				if (((previousValue != value)
							|| (this._T_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Job.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Job.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._Job = value.Job_No;
					}
					else
					{
						this._Job = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Job");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_MStatus_T_Emp", Storage = "_T_MStatus", ThisKey = "MaritalStatus", OtherKey = "MStatusNo", IsForeignKey = true)]
		public T_MStatus T_MStatus
		{
			get
			{
				return this._T_MStatus.Entity;
			}
			set
			{
				T_MStatus previousValue = this._T_MStatus.Entity;
				if (((previousValue != value)
							|| (this._T_MStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_MStatus.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_MStatus.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._MaritalStatus = value.MStatusNo;
					}
					else
					{
						this._MaritalStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_MStatus");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_Emp", Storage = "_T_Nationality", ThisKey = "Nationalty", OtherKey = "Nation_No", IsForeignKey = true)]
		public T_Nationality T_Nationality
		{
			get
			{
				return this._T_Nationality.Entity;
			}
			set
			{
				T_Nationality previousValue = this._T_Nationality.Entity;
				if (((previousValue != value)
							|| (this._T_Nationality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Nationality.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Nationality.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._Nationalty = value.Nation_No;
					}
					else
					{
						this._Nationalty = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Nationality");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Emp", Storage = "_T_OpMethod", ThisKey = "CalculateNo", OtherKey = "Method_No", IsForeignKey = true)]
		public T_OpMethod T_OpMethod
		{
			get
			{
				return this._T_OpMethod.Entity;
			}
			set
			{
				T_OpMethod previousValue = this._T_OpMethod.Entity;
				if (((previousValue != value)
							|| (this._T_OpMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OpMethod.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_OpMethod.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._CalculateNo = value.Method_No;
					}
					else
					{
						this._CalculateNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OpMethod");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Project_T_Emp", Storage = "_T_Project", ThisKey = "ProjectNo", OtherKey = "Project_No", IsForeignKey = true)]
		public T_Project T_Project
		{
			get
			{
				return this._T_Project.Entity;
			}
			set
			{
				T_Project previousValue = this._T_Project.Entity;
				if (((previousValue != value)
							|| (this._T_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Project.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Project.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._ProjectNo = value.Project_No;
					}
					else
					{
						this._ProjectNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Project");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Religion_T_Emp", Storage = "_T_Religion", ThisKey = "Religion", OtherKey = "Religion_No", IsForeignKey = true)]
		public T_Religion T_Religion
		{
			get
			{
				return this._T_Religion.Entity;
			}
			set
			{
				T_Religion previousValue = this._T_Religion.Entity;
				if (((previousValue != value)
							|| (this._T_Religion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Religion.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Religion.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._Religion = value.Religion_No;
					}
					else
					{
						this._Religion = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Religion");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SalStatus_T_Emp", Storage = "_T_SalStatus", ThisKey = "StatusSal", OtherKey = "SalStatusNo", IsForeignKey = true)]
		public T_SalStatus T_SalStatus
		{
			get
			{
				return this._T_SalStatus.Entity;
			}
			set
			{
				T_SalStatus previousValue = this._T_SalStatus.Entity;
				if (((previousValue != value)
							|| (this._T_SalStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SalStatus.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_SalStatus.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._StatusSal = value.SalStatusNo;
					}
					else
					{
						this._StatusSal = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SalStatus");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Section_T_Emp", Storage = "_T_Section", ThisKey = "Section", OtherKey = "Section_No", IsForeignKey = true)]
		public T_Section T_Section
		{
			get
			{
				return this._T_Section.Entity;
			}
			set
			{
				T_Section previousValue = this._T_Section.Entity;
				if (((previousValue != value)
							|| (this._T_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Section.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Section.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._Section = value.Section_No;
					}
					else
					{
						this._Section = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Section");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Sex_T_Emp", Storage = "_T_Sex", ThisKey = "Sex", OtherKey = "SexNo", IsForeignKey = true)]
		public T_Sex T_Sex
		{
			get
			{
				return this._T_Sex.Entity;
			}
			set
			{
				T_Sex previousValue = this._T_Sex.Entity;
				if (((previousValue != value)
							|| (this._T_Sex.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Sex.Entity = null;
						previousValue.T_Emps.Remove(this);
					}
					this._T_Sex.Entity = value;
					if ((value != null))
					{
						value.T_Emps.Add(this);
						this._Sex = value.SexNo;
					}
					else
					{
						this._Sex = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Sex");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Adds(T_Add entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Adds(T_Add entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Advances(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Advances(T_Advance entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Attends(T_Attend entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Attends(T_Attend entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_AttendOperats(T_AttendOperat entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_AttendOperats(T_AttendOperat entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Authorizations(T_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Authorizations(T_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_CallPhones(T_CallPhone entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_CallPhones(T_CallPhone entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Cars(T_Car entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Cars(T_Car entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Commentaries(T_Commentary entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Commentaries(T_Commentary entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_EndServices(T_EndService entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_EndServices(T_EndService entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Families(T_Family entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Families(T_Family entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Rewards(T_Reward entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Rewards(T_Reward entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Rewards1(T_Reward entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp1 = this;
		}

		private void detach_T_Rewards1(T_Reward entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp1 = null;
		}

		private void attach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_SalaryOps(T_SalaryOp entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_SalaryOps(T_SalaryOp entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_SalDiscounts(T_SalDiscount entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_SalDiscounts(T_SalDiscount entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Secretariats(T_Secretariat entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Secretariats(T_Secretariat entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Tickets(T_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Tickets(T_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_TransEmployees(T_TransEmployee entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_TransEmployees(T_TransEmployee entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_UpdateDocs(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_UpdateDocs(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Vacations(T_Vacation entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_Vacations(T_Vacation entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_Vacations1(T_Vacation entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp1 = this;
		}

		private void detach_T_Vacations1(T_Vacation entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp1 = null;
		}

		private void attach_T_VisaGoBacks(T_VisaGoBack entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_VisaGoBacks(T_VisaGoBack entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}

		private void attach_T_VisaIntroductions(T_VisaIntroduction entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = this;
		}

		private void detach_T_VisaIntroductions(T_VisaIntroduction entity)
		{
			this.SendPropertyChanging();
			entity.T_Emp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_EmpCards")]
	public partial class T_EmpCard : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _EmpCards_ID;

		private string _Employes_No;

		private System.Nullable<int> _fldFlg;

		private string _crdName;

		private string _crdNo;

		private string _crdSource;

		private string _crdIssu;

		private string _crdExp;

		private System.Nullable<int> _crdAlarm;

		private System.Nullable<int> _crdBef;

		private string _tmpStr1;

		private string _tmpStr2;

		private System.Nullable<int> _tmpNo1;

		private System.Nullable<int> _tmpNo2;

		private System.Nullable<int> _CompanyID;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnEmpCards_IDChanging(int value);
		partial void OnEmpCards_IDChanged();
		partial void OnEmployes_NoChanging(string value);
		partial void OnEmployes_NoChanged();
		partial void OnfldFlgChanging(System.Nullable<int> value);
		partial void OnfldFlgChanged();
		partial void OncrdNameChanging(string value);
		partial void OncrdNameChanged();
		partial void OncrdNoChanging(string value);
		partial void OncrdNoChanged();
		partial void OncrdSourceChanging(string value);
		partial void OncrdSourceChanged();
		partial void OncrdIssuChanging(string value);
		partial void OncrdIssuChanged();
		partial void OncrdExpChanging(string value);
		partial void OncrdExpChanged();
		partial void OncrdAlarmChanging(System.Nullable<int> value);
		partial void OncrdAlarmChanged();
		partial void OncrdBefChanging(System.Nullable<int> value);
		partial void OncrdBefChanged();
		partial void OntmpStr1Changing(string value);
		partial void OntmpStr1Changed();
		partial void OntmpStr2Changing(string value);
		partial void OntmpStr2Changed();
		partial void OntmpNo1Changing(System.Nullable<int> value);
		partial void OntmpNo1Changed();
		partial void OntmpNo2Changing(System.Nullable<int> value);
		partial void OntmpNo2Changed();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_EmpCard()
		{
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpCards_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int EmpCards_ID
		{
			get
			{
				return this._EmpCards_ID;
			}
			set
			{
				if ((this._EmpCards_ID != value))
				{
					this.OnEmpCards_IDChanging(value);
					this.SendPropertyChanging();
					this._EmpCards_ID = value;
					this.SendPropertyChanged("EmpCards_ID");
					this.OnEmpCards_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Employes_No", DbType = "VarChar(30)")]
		public string Employes_No
		{
			get
			{
				return this._Employes_No;
			}
			set
			{
				if ((this._Employes_No != value))
				{
					this.OnEmployes_NoChanging(value);
					this.SendPropertyChanging();
					this._Employes_No = value;
					this.SendPropertyChanged("Employes_No");
					this.OnEmployes_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fldFlg", DbType = "Int")]
		public System.Nullable<int> fldFlg
		{
			get
			{
				return this._fldFlg;
			}
			set
			{
				if ((this._fldFlg != value))
				{
					this.OnfldFlgChanging(value);
					this.SendPropertyChanging();
					this._fldFlg = value;
					this.SendPropertyChanged("fldFlg");
					this.OnfldFlgChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_crdName", DbType = "VarChar(40)")]
		public string crdName
		{
			get
			{
				return this._crdName;
			}
			set
			{
				if ((this._crdName != value))
				{
					this.OncrdNameChanging(value);
					this.SendPropertyChanging();
					this._crdName = value;
					this.SendPropertyChanged("crdName");
					this.OncrdNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_crdNo", DbType = "VarChar(20)")]
		public string crdNo
		{
			get
			{
				return this._crdNo;
			}
			set
			{
				if ((this._crdNo != value))
				{
					this.OncrdNoChanging(value);
					this.SendPropertyChanging();
					this._crdNo = value;
					this.SendPropertyChanged("crdNo");
					this.OncrdNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_crdSource", DbType = "VarChar(40)")]
		public string crdSource
		{
			get
			{
				return this._crdSource;
			}
			set
			{
				if ((this._crdSource != value))
				{
					this.OncrdSourceChanging(value);
					this.SendPropertyChanging();
					this._crdSource = value;
					this.SendPropertyChanged("crdSource");
					this.OncrdSourceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_crdIssu", DbType = "VarChar(10)")]
		public string crdIssu
		{
			get
			{
				return this._crdIssu;
			}
			set
			{
				if ((this._crdIssu != value))
				{
					this.OncrdIssuChanging(value);
					this.SendPropertyChanging();
					this._crdIssu = value;
					this.SendPropertyChanged("crdIssu");
					this.OncrdIssuChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_crdExp", DbType = "VarChar(10)")]
		public string crdExp
		{
			get
			{
				return this._crdExp;
			}
			set
			{
				if ((this._crdExp != value))
				{
					this.OncrdExpChanging(value);
					this.SendPropertyChanging();
					this._crdExp = value;
					this.SendPropertyChanged("crdExp");
					this.OncrdExpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_crdAlarm", DbType = "Int")]
		public System.Nullable<int> crdAlarm
		{
			get
			{
				return this._crdAlarm;
			}
			set
			{
				if ((this._crdAlarm != value))
				{
					this.OncrdAlarmChanging(value);
					this.SendPropertyChanging();
					this._crdAlarm = value;
					this.SendPropertyChanged("crdAlarm");
					this.OncrdAlarmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_crdBef", DbType = "Int")]
		public System.Nullable<int> crdBef
		{
			get
			{
				return this._crdBef;
			}
			set
			{
				if ((this._crdBef != value))
				{
					this.OncrdBefChanging(value);
					this.SendPropertyChanging();
					this._crdBef = value;
					this.SendPropertyChanged("crdBef");
					this.OncrdBefChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpStr1", DbType = "VarChar(10)")]
		public string tmpStr1
		{
			get
			{
				return this._tmpStr1;
			}
			set
			{
				if ((this._tmpStr1 != value))
				{
					this.OntmpStr1Changing(value);
					this.SendPropertyChanging();
					this._tmpStr1 = value;
					this.SendPropertyChanged("tmpStr1");
					this.OntmpStr1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpStr2", DbType = "VarChar(10)")]
		public string tmpStr2
		{
			get
			{
				return this._tmpStr2;
			}
			set
			{
				if ((this._tmpStr2 != value))
				{
					this.OntmpStr2Changing(value);
					this.SendPropertyChanging();
					this._tmpStr2 = value;
					this.SendPropertyChanged("tmpStr2");
					this.OntmpStr2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpNo1", DbType = "Int")]
		public System.Nullable<int> tmpNo1
		{
			get
			{
				return this._tmpNo1;
			}
			set
			{
				if ((this._tmpNo1 != value))
				{
					this.OntmpNo1Changing(value);
					this.SendPropertyChanging();
					this._tmpNo1 = value;
					this.SendPropertyChanged("tmpNo1");
					this.OntmpNo1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpNo2", DbType = "Int")]
		public System.Nullable<int> tmpNo2
		{
			get
			{
				return this._tmpNo2;
			}
			set
			{
				if ((this._tmpNo2 != value))
				{
					this.OntmpNo2Changing(value);
					this.SendPropertyChanging();
					this._tmpNo2 = value;
					this.SendPropertyChanged("tmpNo2");
					this.OntmpNo2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_EmpCard", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_EmpCards.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_EmpCards.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_EndService")]
	public partial class T_EndService : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _EndService_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private System.Nullable<int> _CauseLiquidation;

		private string _DateAppointment;

		private string _LastFilter;

		private System.Nullable<double> _Salary;

		private string _DateFilter;

		private System.Nullable<int> _Years;

		private System.Nullable<int> _Months;

		private System.Nullable<int> _Days;

		private System.Nullable<int> _ServLess;

		private System.Nullable<int> _LessWorth;

		private System.Nullable<int> _ServMore;

		private System.Nullable<int> _AndLess;

		private System.Nullable<int> _LessMoreWorth;

		private System.Nullable<int> _ServMoreOnly;

		private System.Nullable<int> _MoreWorth;

		private System.Nullable<bool> _IFState;

		private System.Nullable<double> _GenTotal;

		private System.Nullable<bool> _ISCalculatTicketVal;

		private System.Nullable<double> _ValueAdvances;

		private System.Nullable<double> _Paid;

		private System.Nullable<double> _Remaining;

		private string _WagesDetails;

		private string _Note;

		private System.Nullable<double> _EAdvancesRemainning;

		private System.Nullable<double> _EWagesValue;

		private System.Nullable<double> _eEndServisValue;

		private System.Nullable<double> _TicketCount;

		private System.Nullable<double> _Tickets;

		private System.Nullable<double> _TicketUsed;

		private System.Nullable<double> _TicketBalance;

		private System.Nullable<double> _TicketValue;

		private System.Nullable<double> _TicketTotal;

		private System.Nullable<int> _VacDayCount;

		private System.Nullable<double> _VacUsed;

		private System.Nullable<double> _VacAcout;

		private System.Nullable<double> _VacBalance;

		private System.Nullable<double> _VacTotal;

		private string _ExclusionDt;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_LiquidationTyp> _T_LiquidationTyp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnEndService_IDChanging(string value);
		partial void OnEndService_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnCauseLiquidationChanging(System.Nullable<int> value);
		partial void OnCauseLiquidationChanged();
		partial void OnDateAppointmentChanging(string value);
		partial void OnDateAppointmentChanged();
		partial void OnLastFilterChanging(string value);
		partial void OnLastFilterChanged();
		partial void OnSalaryChanging(System.Nullable<double> value);
		partial void OnSalaryChanged();
		partial void OnDateFilterChanging(string value);
		partial void OnDateFilterChanged();
		partial void OnYearsChanging(System.Nullable<int> value);
		partial void OnYearsChanged();
		partial void OnMonthsChanging(System.Nullable<int> value);
		partial void OnMonthsChanged();
		partial void OnDaysChanging(System.Nullable<int> value);
		partial void OnDaysChanged();
		partial void OnServLessChanging(System.Nullable<int> value);
		partial void OnServLessChanged();
		partial void OnLessWorthChanging(System.Nullable<int> value);
		partial void OnLessWorthChanged();
		partial void OnServMoreChanging(System.Nullable<int> value);
		partial void OnServMoreChanged();
		partial void OnAndLessChanging(System.Nullable<int> value);
		partial void OnAndLessChanged();
		partial void OnLessMoreWorthChanging(System.Nullable<int> value);
		partial void OnLessMoreWorthChanged();
		partial void OnServMoreOnlyChanging(System.Nullable<int> value);
		partial void OnServMoreOnlyChanged();
		partial void OnMoreWorthChanging(System.Nullable<int> value);
		partial void OnMoreWorthChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		partial void OnGenTotalChanging(System.Nullable<double> value);
		partial void OnGenTotalChanged();
		partial void OnISCalculatTicketValChanging(System.Nullable<bool> value);
		partial void OnISCalculatTicketValChanged();
		partial void OnValueAdvancesChanging(System.Nullable<double> value);
		partial void OnValueAdvancesChanged();
		partial void OnPaidChanging(System.Nullable<double> value);
		partial void OnPaidChanged();
		partial void OnRemainingChanging(System.Nullable<double> value);
		partial void OnRemainingChanged();
		partial void OnWagesDetailsChanging(string value);
		partial void OnWagesDetailsChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnEAdvancesRemainningChanging(System.Nullable<double> value);
		partial void OnEAdvancesRemainningChanged();
		partial void OnEWagesValueChanging(System.Nullable<double> value);
		partial void OnEWagesValueChanged();
		partial void OneEndServisValueChanging(System.Nullable<double> value);
		partial void OneEndServisValueChanged();
		partial void OnTicketCountChanging(System.Nullable<double> value);
		partial void OnTicketCountChanged();
		partial void OnTicketsChanging(System.Nullable<double> value);
		partial void OnTicketsChanged();
		partial void OnTicketUsedChanging(System.Nullable<double> value);
		partial void OnTicketUsedChanged();
		partial void OnTicketBalanceChanging(System.Nullable<double> value);
		partial void OnTicketBalanceChanged();
		partial void OnTicketValueChanging(System.Nullable<double> value);
		partial void OnTicketValueChanged();
		partial void OnTicketTotalChanging(System.Nullable<double> value);
		partial void OnTicketTotalChanged();
		partial void OnVacDayCountChanging(System.Nullable<int> value);
		partial void OnVacDayCountChanged();
		partial void OnVacUsedChanging(System.Nullable<double> value);
		partial void OnVacUsedChanged();
		partial void OnVacAcoutChanging(System.Nullable<double> value);
		partial void OnVacAcoutChanged();
		partial void OnVacBalanceChanging(System.Nullable<double> value);
		partial void OnVacBalanceChanged();
		partial void OnVacTotalChanging(System.Nullable<double> value);
		partial void OnVacTotalChanged();
		partial void OnExclusionDtChanging(string value);
		partial void OnExclusionDtChanged();
		#endregion

		public T_EndService()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_LiquidationTyp = default(EntityRef<T_LiquidationTyp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndService_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string EndService_ID
		{
			get
			{
				return this._EndService_ID;
			}
			set
			{
				if ((this._EndService_ID != value))
				{
					this.OnEndService_IDChanging(value);
					this.SendPropertyChanging();
					this._EndService_ID = value;
					this.SendPropertyChanged("EndService_ID");
					this.OnEndService_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CauseLiquidation", DbType = "Int")]
		public System.Nullable<int> CauseLiquidation
		{
			get
			{
				return this._CauseLiquidation;
			}
			set
			{
				if ((this._CauseLiquidation != value))
				{
					if (this._T_LiquidationTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauseLiquidationChanging(value);
					this.SendPropertyChanging();
					this._CauseLiquidation = value;
					this.SendPropertyChanged("CauseLiquidation");
					this.OnCauseLiquidationChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateAppointment", DbType = "VarChar(10)")]
		public string DateAppointment
		{
			get
			{
				return this._DateAppointment;
			}
			set
			{
				if ((this._DateAppointment != value))
				{
					this.OnDateAppointmentChanging(value);
					this.SendPropertyChanging();
					this._DateAppointment = value;
					this.SendPropertyChanged("DateAppointment");
					this.OnDateAppointmentChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastFilter", DbType = "VarChar(10)")]
		public string LastFilter
		{
			get
			{
				return this._LastFilter;
			}
			set
			{
				if ((this._LastFilter != value))
				{
					this.OnLastFilterChanging(value);
					this.SendPropertyChanging();
					this._LastFilter = value;
					this.SendPropertyChanged("LastFilter");
					this.OnLastFilterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Salary", DbType = "Float")]
		public System.Nullable<double> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateFilter", DbType = "VarChar(10)")]
		public string DateFilter
		{
			get
			{
				return this._DateFilter;
			}
			set
			{
				if ((this._DateFilter != value))
				{
					this.OnDateFilterChanging(value);
					this.SendPropertyChanging();
					this._DateFilter = value;
					this.SendPropertyChanged("DateFilter");
					this.OnDateFilterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Years", DbType = "Int")]
		public System.Nullable<int> Years
		{
			get
			{
				return this._Years;
			}
			set
			{
				if ((this._Years != value))
				{
					this.OnYearsChanging(value);
					this.SendPropertyChanging();
					this._Years = value;
					this.SendPropertyChanged("Years");
					this.OnYearsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Months", DbType = "Int")]
		public System.Nullable<int> Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Days", DbType = "Int")]
		public System.Nullable<int> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ServLess", DbType = "Int")]
		public System.Nullable<int> ServLess
		{
			get
			{
				return this._ServLess;
			}
			set
			{
				if ((this._ServLess != value))
				{
					this.OnServLessChanging(value);
					this.SendPropertyChanging();
					this._ServLess = value;
					this.SendPropertyChanged("ServLess");
					this.OnServLessChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LessWorth", DbType = "Int")]
		public System.Nullable<int> LessWorth
		{
			get
			{
				return this._LessWorth;
			}
			set
			{
				if ((this._LessWorth != value))
				{
					this.OnLessWorthChanging(value);
					this.SendPropertyChanging();
					this._LessWorth = value;
					this.SendPropertyChanged("LessWorth");
					this.OnLessWorthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ServMore", DbType = "Int")]
		public System.Nullable<int> ServMore
		{
			get
			{
				return this._ServMore;
			}
			set
			{
				if ((this._ServMore != value))
				{
					this.OnServMoreChanging(value);
					this.SendPropertyChanging();
					this._ServMore = value;
					this.SendPropertyChanged("ServMore");
					this.OnServMoreChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AndLess", DbType = "Int")]
		public System.Nullable<int> AndLess
		{
			get
			{
				return this._AndLess;
			}
			set
			{
				if ((this._AndLess != value))
				{
					this.OnAndLessChanging(value);
					this.SendPropertyChanging();
					this._AndLess = value;
					this.SendPropertyChanged("AndLess");
					this.OnAndLessChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LessMoreWorth", DbType = "Int")]
		public System.Nullable<int> LessMoreWorth
		{
			get
			{
				return this._LessMoreWorth;
			}
			set
			{
				if ((this._LessMoreWorth != value))
				{
					this.OnLessMoreWorthChanging(value);
					this.SendPropertyChanging();
					this._LessMoreWorth = value;
					this.SendPropertyChanged("LessMoreWorth");
					this.OnLessMoreWorthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ServMoreOnly", DbType = "Int")]
		public System.Nullable<int> ServMoreOnly
		{
			get
			{
				return this._ServMoreOnly;
			}
			set
			{
				if ((this._ServMoreOnly != value))
				{
					this.OnServMoreOnlyChanging(value);
					this.SendPropertyChanging();
					this._ServMoreOnly = value;
					this.SendPropertyChanged("ServMoreOnly");
					this.OnServMoreOnlyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MoreWorth", DbType = "Int")]
		public System.Nullable<int> MoreWorth
		{
			get
			{
				return this._MoreWorth;
			}
			set
			{
				if ((this._MoreWorth != value))
				{
					this.OnMoreWorthChanging(value);
					this.SendPropertyChanging();
					this._MoreWorth = value;
					this.SendPropertyChanged("MoreWorth");
					this.OnMoreWorthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GenTotal", DbType = "Float")]
		public System.Nullable<double> GenTotal
		{
			get
			{
				return this._GenTotal;
			}
			set
			{
				if ((this._GenTotal != value))
				{
					this.OnGenTotalChanging(value);
					this.SendPropertyChanging();
					this._GenTotal = value;
					this.SendPropertyChanged("GenTotal");
					this.OnGenTotalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISCalculatTicketVal", DbType = "Bit")]
		public System.Nullable<bool> ISCalculatTicketVal
		{
			get
			{
				return this._ISCalculatTicketVal;
			}
			set
			{
				if ((this._ISCalculatTicketVal != value))
				{
					this.OnISCalculatTicketValChanging(value);
					this.SendPropertyChanging();
					this._ISCalculatTicketVal = value;
					this.SendPropertyChanged("ISCalculatTicketVal");
					this.OnISCalculatTicketValChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ValueAdvances", DbType = "Float")]
		public System.Nullable<double> ValueAdvances
		{
			get
			{
				return this._ValueAdvances;
			}
			set
			{
				if ((this._ValueAdvances != value))
				{
					this.OnValueAdvancesChanging(value);
					this.SendPropertyChanging();
					this._ValueAdvances = value;
					this.SendPropertyChanged("ValueAdvances");
					this.OnValueAdvancesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Paid", DbType = "Float")]
		public System.Nullable<double> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remaining", DbType = "Float")]
		public System.Nullable<double> Remaining
		{
			get
			{
				return this._Remaining;
			}
			set
			{
				if ((this._Remaining != value))
				{
					this.OnRemainingChanging(value);
					this.SendPropertyChanging();
					this._Remaining = value;
					this.SendPropertyChanged("Remaining");
					this.OnRemainingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WagesDetails", DbType = "VarChar(MAX)")]
		public string WagesDetails
		{
			get
			{
				return this._WagesDetails;
			}
			set
			{
				if ((this._WagesDetails != value))
				{
					this.OnWagesDetailsChanging(value);
					this.SendPropertyChanging();
					this._WagesDetails = value;
					this.SendPropertyChanged("WagesDetails");
					this.OnWagesDetailsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EAdvancesRemainning", DbType = "Float")]
		public System.Nullable<double> EAdvancesRemainning
		{
			get
			{
				return this._EAdvancesRemainning;
			}
			set
			{
				if ((this._EAdvancesRemainning != value))
				{
					this.OnEAdvancesRemainningChanging(value);
					this.SendPropertyChanging();
					this._EAdvancesRemainning = value;
					this.SendPropertyChanged("EAdvancesRemainning");
					this.OnEAdvancesRemainningChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EWagesValue", DbType = "Float")]
		public System.Nullable<double> EWagesValue
		{
			get
			{
				return this._EWagesValue;
			}
			set
			{
				if ((this._EWagesValue != value))
				{
					this.OnEWagesValueChanging(value);
					this.SendPropertyChanging();
					this._EWagesValue = value;
					this.SendPropertyChanged("EWagesValue");
					this.OnEWagesValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_eEndServisValue", DbType = "Float")]
		public System.Nullable<double> eEndServisValue
		{
			get
			{
				return this._eEndServisValue;
			}
			set
			{
				if ((this._eEndServisValue != value))
				{
					this.OneEndServisValueChanging(value);
					this.SendPropertyChanging();
					this._eEndServisValue = value;
					this.SendPropertyChanged("eEndServisValue");
					this.OneEndServisValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketCount", DbType = "Float")]
		public System.Nullable<double> TicketCount
		{
			get
			{
				return this._TicketCount;
			}
			set
			{
				if ((this._TicketCount != value))
				{
					this.OnTicketCountChanging(value);
					this.SendPropertyChanging();
					this._TicketCount = value;
					this.SendPropertyChanged("TicketCount");
					this.OnTicketCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tickets", DbType = "Float")]
		public System.Nullable<double> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				if ((this._Tickets != value))
				{
					this.OnTicketsChanging(value);
					this.SendPropertyChanging();
					this._Tickets = value;
					this.SendPropertyChanged("Tickets");
					this.OnTicketsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketUsed", DbType = "Float")]
		public System.Nullable<double> TicketUsed
		{
			get
			{
				return this._TicketUsed;
			}
			set
			{
				if ((this._TicketUsed != value))
				{
					this.OnTicketUsedChanging(value);
					this.SendPropertyChanging();
					this._TicketUsed = value;
					this.SendPropertyChanged("TicketUsed");
					this.OnTicketUsedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketBalance", DbType = "Float")]
		public System.Nullable<double> TicketBalance
		{
			get
			{
				return this._TicketBalance;
			}
			set
			{
				if ((this._TicketBalance != value))
				{
					this.OnTicketBalanceChanging(value);
					this.SendPropertyChanging();
					this._TicketBalance = value;
					this.SendPropertyChanged("TicketBalance");
					this.OnTicketBalanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketValue", DbType = "Float")]
		public System.Nullable<double> TicketValue
		{
			get
			{
				return this._TicketValue;
			}
			set
			{
				if ((this._TicketValue != value))
				{
					this.OnTicketValueChanging(value);
					this.SendPropertyChanging();
					this._TicketValue = value;
					this.SendPropertyChanged("TicketValue");
					this.OnTicketValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketTotal", DbType = "Float")]
		public System.Nullable<double> TicketTotal
		{
			get
			{
				return this._TicketTotal;
			}
			set
			{
				if ((this._TicketTotal != value))
				{
					this.OnTicketTotalChanging(value);
					this.SendPropertyChanging();
					this._TicketTotal = value;
					this.SendPropertyChanged("TicketTotal");
					this.OnTicketTotalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacDayCount", DbType = "Int")]
		public System.Nullable<int> VacDayCount
		{
			get
			{
				return this._VacDayCount;
			}
			set
			{
				if ((this._VacDayCount != value))
				{
					this.OnVacDayCountChanging(value);
					this.SendPropertyChanging();
					this._VacDayCount = value;
					this.SendPropertyChanged("VacDayCount");
					this.OnVacDayCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacUsed", DbType = "Float")]
		public System.Nullable<double> VacUsed
		{
			get
			{
				return this._VacUsed;
			}
			set
			{
				if ((this._VacUsed != value))
				{
					this.OnVacUsedChanging(value);
					this.SendPropertyChanging();
					this._VacUsed = value;
					this.SendPropertyChanged("VacUsed");
					this.OnVacUsedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacAcout", DbType = "Float")]
		public System.Nullable<double> VacAcout
		{
			get
			{
				return this._VacAcout;
			}
			set
			{
				if ((this._VacAcout != value))
				{
					this.OnVacAcoutChanging(value);
					this.SendPropertyChanging();
					this._VacAcout = value;
					this.SendPropertyChanged("VacAcout");
					this.OnVacAcoutChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacBalance", DbType = "Float")]
		public System.Nullable<double> VacBalance
		{
			get
			{
				return this._VacBalance;
			}
			set
			{
				if ((this._VacBalance != value))
				{
					this.OnVacBalanceChanging(value);
					this.SendPropertyChanging();
					this._VacBalance = value;
					this.SendPropertyChanged("VacBalance");
					this.OnVacBalanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacTotal", DbType = "Float")]
		public System.Nullable<double> VacTotal
		{
			get
			{
				return this._VacTotal;
			}
			set
			{
				if ((this._VacTotal != value))
				{
					this.OnVacTotalChanging(value);
					this.SendPropertyChanging();
					this._VacTotal = value;
					this.SendPropertyChanged("VacTotal");
					this.OnVacTotalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExclusionDt", DbType = "VarChar(10)")]
		public string ExclusionDt
		{
			get
			{
				return this._ExclusionDt;
			}
			set
			{
				if ((this._ExclusionDt != value))
				{
					this.OnExclusionDtChanging(value);
					this.SendPropertyChanging();
					this._ExclusionDt = value;
					this.SendPropertyChanged("ExclusionDt");
					this.OnExclusionDtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_EndService", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_EndServices.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_EndServices.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_LiquidationTyp_T_EndService", Storage = "_T_LiquidationTyp", ThisKey = "CauseLiquidation", OtherKey = "LiquidationT_No", IsForeignKey = true)]
		public T_LiquidationTyp T_LiquidationTyp
		{
			get
			{
				return this._T_LiquidationTyp.Entity;
			}
			set
			{
				T_LiquidationTyp previousValue = this._T_LiquidationTyp.Entity;
				if (((previousValue != value)
							|| (this._T_LiquidationTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_LiquidationTyp.Entity = null;
						previousValue.T_EndServices.Remove(this);
					}
					this._T_LiquidationTyp.Entity = value;
					if ((value != null))
					{
						value.T_EndServices.Add(this);
						this._CauseLiquidation = value.LiquidationT_No;
					}
					else
					{
						this._CauseLiquidation = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_LiquidationTyp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_EqarContract")]
	public partial class T_EqarContract : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ContractID;

		private string _ContractNo;

		private int _EqarID;

		private int _AinID;

		private string _StartDate;

		private string _EndDate;

		private double _RentOfYear;

		private int _tenant;

		private string _Note;

		private EntityRef<T_AinsData> _T_AinsData;

		private EntityRef<T_EqarsData> _T_EqarsData;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnContractIDChanging(int value);
		partial void OnContractIDChanged();
		partial void OnContractNoChanging(string value);
		partial void OnContractNoChanged();
		partial void OnEqarIDChanging(int value);
		partial void OnEqarIDChanged();
		partial void OnAinIDChanging(int value);
		partial void OnAinIDChanged();
		partial void OnStartDateChanging(string value);
		partial void OnStartDateChanged();
		partial void OnEndDateChanging(string value);
		partial void OnEndDateChanged();
		partial void OnRentOfYearChanging(double value);
		partial void OnRentOfYearChanged();
		partial void OntenantChanging(int value);
		partial void OntenantChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_EqarContract()
		{
			this._T_AinsData = default(EntityRef<T_AinsData>);
			this._T_EqarsData = default(EntityRef<T_EqarsData>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContractID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContractNo", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarID", DbType = "Int NOT NULL")]
		public int EqarID
		{
			get
			{
				return this._EqarID;
			}
			set
			{
				if ((this._EqarID != value))
				{
					if (this._T_EqarsData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEqarIDChanging(value);
					this.SendPropertyChanging();
					this._EqarID = value;
					this.SendPropertyChanged("EqarID");
					this.OnEqarIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinID", DbType = "Int NOT NULL")]
		public int AinID
		{
			get
			{
				return this._AinID;
			}
			set
			{
				if ((this._AinID != value))
				{
					if (this._T_AinsData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAinIDChanging(value);
					this.SendPropertyChanging();
					this._AinID = value;
					this.SendPropertyChanged("AinID");
					this.OnAinIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDate", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDate", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RentOfYear", DbType = "Float NOT NULL")]
		public double RentOfYear
		{
			get
			{
				return this._RentOfYear;
			}
			set
			{
				if ((this._RentOfYear != value))
				{
					this.OnRentOfYearChanging(value);
					this.SendPropertyChanging();
					this._RentOfYear = value;
					this.SendPropertyChanged("RentOfYear");
					this.OnRentOfYearChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tenant", DbType = "Int NOT NULL")]
		public int tenant
		{
			get
			{
				return this._tenant;
			}
			set
			{
				if ((this._tenant != value))
				{
					this.OntenantChanging(value);
					this.SendPropertyChanging();
					this._tenant = value;
					this.SendPropertyChanged("tenant");
					this.OntenantChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinsData_T_EqarContract", Storage = "_T_AinsData", ThisKey = "AinID", OtherKey = "AinID", IsForeignKey = true)]
		public T_AinsData T_AinsData
		{
			get
			{
				return this._T_AinsData.Entity;
			}
			set
			{
				T_AinsData previousValue = this._T_AinsData.Entity;
				if (((previousValue != value)
							|| (this._T_AinsData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AinsData.Entity = null;
						previousValue.T_EqarContracts.Remove(this);
					}
					this._T_AinsData.Entity = value;
					if ((value != null))
					{
						value.T_EqarContracts.Add(this);
						this._AinID = value.AinID;
					}
					else
					{
						this._AinID = default(int);
					}
					this.SendPropertyChanged("T_AinsData");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarsData_T_EqarContract", Storage = "_T_EqarsData", ThisKey = "EqarID", OtherKey = "EqarID", IsForeignKey = true)]
		public T_EqarsData T_EqarsData
		{
			get
			{
				return this._T_EqarsData.Entity;
			}
			set
			{
				T_EqarsData previousValue = this._T_EqarsData.Entity;
				if (((previousValue != value)
							|| (this._T_EqarsData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_EqarsData.Entity = null;
						previousValue.T_EqarContracts.Remove(this);
					}
					this._T_EqarsData.Entity = value;
					if ((value != null))
					{
						value.T_EqarContracts.Add(this);
						this._EqarID = value.EqarID;
					}
					else
					{
						this._EqarID = default(int);
					}
					this.SendPropertyChanged("T_EqarsData");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_EqarNatural")]
	public partial class T_EqarNatural : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _EqarNatural_ID;

		private int _EqarNatural_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_EqarsData> _T_EqarsDatas;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnEqarNatural_IDChanging(string value);
		partial void OnEqarNatural_IDChanged();
		partial void OnEqarNatural_NoChanging(int value);
		partial void OnEqarNatural_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_EqarNatural()
		{
			this._T_EqarsDatas = new EntitySet<T_EqarsData>(new Action<T_EqarsData>(this.attach_T_EqarsDatas), new Action<T_EqarsData>(this.detach_T_EqarsDatas));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarNatural_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string EqarNatural_ID
		{
			get
			{
				return this._EqarNatural_ID;
			}
			set
			{
				if ((this._EqarNatural_ID != value))
				{
					this.OnEqarNatural_IDChanging(value);
					this.SendPropertyChanging();
					this._EqarNatural_ID = value;
					this.SendPropertyChanged("EqarNatural_ID");
					this.OnEqarNatural_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarNatural_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int EqarNatural_No
		{
			get
			{
				return this._EqarNatural_No;
			}
			set
			{
				if ((this._EqarNatural_No != value))
				{
					this.OnEqarNatural_NoChanging(value);
					this.SendPropertyChanging();
					this._EqarNatural_No = value;
					this.SendPropertyChanged("EqarNatural_No");
					this.OnEqarNatural_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarNatural_T_EqarsData", Storage = "_T_EqarsDatas", ThisKey = "EqarNatural_No", OtherKey = "EqarNatureNo")]
		public EntitySet<T_EqarsData> T_EqarsDatas
		{
			get
			{
				return this._T_EqarsDatas;
			}
			set
			{
				this._T_EqarsDatas.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarNatural = this;
		}

		private void detach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarNatural = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_EqarSale")]
	public partial class T_EqarSale : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _EqarSaleID;

		private string _EqarSaleNo;

		private int _EqarID;

		private System.Nullable<int> _AinID;

		private string _GDate;

		private string _HDate;

		private System.Nullable<double> _SaleValue;

		private string _Note;

		private EntityRef<T_AinsData> _T_AinsData;

		private EntityRef<T_EqarsData> _T_EqarsData;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnEqarSaleIDChanging(int value);
		partial void OnEqarSaleIDChanged();
		partial void OnEqarSaleNoChanging(string value);
		partial void OnEqarSaleNoChanged();
		partial void OnEqarIDChanging(int value);
		partial void OnEqarIDChanged();
		partial void OnAinIDChanging(System.Nullable<int> value);
		partial void OnAinIDChanged();
		partial void OnGDateChanging(string value);
		partial void OnGDateChanged();
		partial void OnHDateChanging(string value);
		partial void OnHDateChanged();
		partial void OnSaleValueChanging(System.Nullable<double> value);
		partial void OnSaleValueChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_EqarSale()
		{
			this._T_AinsData = default(EntityRef<T_AinsData>);
			this._T_EqarsData = default(EntityRef<T_EqarsData>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarSaleID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int EqarSaleID
		{
			get
			{
				return this._EqarSaleID;
			}
			set
			{
				if ((this._EqarSaleID != value))
				{
					this.OnEqarSaleIDChanging(value);
					this.SendPropertyChanging();
					this._EqarSaleID = value;
					this.SendPropertyChanged("EqarSaleID");
					this.OnEqarSaleIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarSaleNo", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
		public string EqarSaleNo
		{
			get
			{
				return this._EqarSaleNo;
			}
			set
			{
				if ((this._EqarSaleNo != value))
				{
					this.OnEqarSaleNoChanging(value);
					this.SendPropertyChanging();
					this._EqarSaleNo = value;
					this.SendPropertyChanged("EqarSaleNo");
					this.OnEqarSaleNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarID", DbType = "Int NOT NULL")]
		public int EqarID
		{
			get
			{
				return this._EqarID;
			}
			set
			{
				if ((this._EqarID != value))
				{
					if (this._T_EqarsData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEqarIDChanging(value);
					this.SendPropertyChanging();
					this._EqarID = value;
					this.SendPropertyChanged("EqarID");
					this.OnEqarIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AinID", DbType = "Int")]
		public System.Nullable<int> AinID
		{
			get
			{
				return this._AinID;
			}
			set
			{
				if ((this._AinID != value))
				{
					if (this._T_AinsData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAinIDChanging(value);
					this.SendPropertyChanging();
					this._AinID = value;
					this.SendPropertyChanged("AinID");
					this.OnAinIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GDate", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string GDate
		{
			get
			{
				return this._GDate;
			}
			set
			{
				if ((this._GDate != value))
				{
					this.OnGDateChanging(value);
					this.SendPropertyChanging();
					this._GDate = value;
					this.SendPropertyChanged("GDate");
					this.OnGDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HDate", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string HDate
		{
			get
			{
				return this._HDate;
			}
			set
			{
				if ((this._HDate != value))
				{
					this.OnHDateChanging(value);
					this.SendPropertyChanging();
					this._HDate = value;
					this.SendPropertyChanged("HDate");
					this.OnHDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SaleValue", DbType = "Float")]
		public System.Nullable<double> SaleValue
		{
			get
			{
				return this._SaleValue;
			}
			set
			{
				if ((this._SaleValue != value))
				{
					this.OnSaleValueChanging(value);
					this.SendPropertyChanging();
					this._SaleValue = value;
					this.SendPropertyChanged("SaleValue");
					this.OnSaleValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AinsData_T_EqarSale", Storage = "_T_AinsData", ThisKey = "AinID", OtherKey = "AinID", IsForeignKey = true)]
		public T_AinsData T_AinsData
		{
			get
			{
				return this._T_AinsData.Entity;
			}
			set
			{
				T_AinsData previousValue = this._T_AinsData.Entity;
				if (((previousValue != value)
							|| (this._T_AinsData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AinsData.Entity = null;
						previousValue.T_EqarSales.Remove(this);
					}
					this._T_AinsData.Entity = value;
					if ((value != null))
					{
						value.T_EqarSales.Add(this);
						this._AinID = value.AinID;
					}
					else
					{
						this._AinID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_AinsData");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarsData_T_EqarSale", Storage = "_T_EqarsData", ThisKey = "EqarID", OtherKey = "EqarID", IsForeignKey = true)]
		public T_EqarsData T_EqarsData
		{
			get
			{
				return this._T_EqarsData.Entity;
			}
			set
			{
				T_EqarsData previousValue = this._T_EqarsData.Entity;
				if (((previousValue != value)
							|| (this._T_EqarsData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_EqarsData.Entity = null;
						previousValue.T_EqarSales.Remove(this);
					}
					this._T_EqarsData.Entity = value;
					if ((value != null))
					{
						value.T_EqarSales.Add(this);
						this._EqarID = value.EqarID;
					}
					else
					{
						this._EqarID = default(int);
					}
					this.SendPropertyChanged("T_EqarsData");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_EqarsData")]
	public partial class T_EqarsData : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _EqarID;

		private int _EqarNo;

		private string _NameA;

		private string _NameE;

		private System.Nullable<int> _EqarStatus;

		private string _AccNo;

		private System.Nullable<int> _Nationalty;

		private System.Nullable<int> _CityNo;

		private System.Nullable<int> _EqarTypNo;

		private System.Nullable<int> _EqarNatureNo;

		private System.Nullable<int> _OwnerNo;

		private System.Nullable<double> _ContractValue;

		private System.Nullable<double> _ContractRentValue;

		private string _SQNo;

		private string _SQDate;

		private string _Neighborhood;

		private string _Street;

		private System.Nullable<int> _FloorsCount;

		private System.Nullable<int> _EyesCount;

		private string _Space;

		private string _Note;

		private EntitySet<T_AinsData> _T_AinsDatas;

		private EntitySet<T_EqarContract> _T_EqarContracts;

		private EntitySet<T_EqarSale> _T_EqarSales;

		private EntitySet<T_TenantContract> _T_TenantContracts;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_City> _T_City;

		private EntityRef<T_EqarNatural> _T_EqarNatural;

		private EntityRef<T_EqarTyp> _T_EqarTyp;

		private EntityRef<T_Nationality> _T_Nationality;

		private EntityRef<T_Owner> _T_Owner;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnEqarIDChanging(int value);
		partial void OnEqarIDChanged();
		partial void OnEqarNoChanging(int value);
		partial void OnEqarNoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnEqarStatusChanging(System.Nullable<int> value);
		partial void OnEqarStatusChanged();
		partial void OnAccNoChanging(string value);
		partial void OnAccNoChanged();
		partial void OnNationaltyChanging(System.Nullable<int> value);
		partial void OnNationaltyChanged();
		partial void OnCityNoChanging(System.Nullable<int> value);
		partial void OnCityNoChanged();
		partial void OnEqarTypNoChanging(System.Nullable<int> value);
		partial void OnEqarTypNoChanged();
		partial void OnEqarNatureNoChanging(System.Nullable<int> value);
		partial void OnEqarNatureNoChanged();
		partial void OnOwnerNoChanging(System.Nullable<int> value);
		partial void OnOwnerNoChanged();
		partial void OnContractValueChanging(System.Nullable<double> value);
		partial void OnContractValueChanged();
		partial void OnContractRentValueChanging(System.Nullable<double> value);
		partial void OnContractRentValueChanged();
		partial void OnSQNoChanging(string value);
		partial void OnSQNoChanged();
		partial void OnSQDateChanging(string value);
		partial void OnSQDateChanged();
		partial void OnNeighborhoodChanging(string value);
		partial void OnNeighborhoodChanged();
		partial void OnStreetChanging(string value);
		partial void OnStreetChanged();
		partial void OnFloorsCountChanging(System.Nullable<int> value);
		partial void OnFloorsCountChanged();
		partial void OnEyesCountChanging(System.Nullable<int> value);
		partial void OnEyesCountChanged();
		partial void OnSpaceChanging(string value);
		partial void OnSpaceChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_EqarsData()
		{
			this._T_AinsDatas = new EntitySet<T_AinsData>(new Action<T_AinsData>(this.attach_T_AinsDatas), new Action<T_AinsData>(this.detach_T_AinsDatas));
			this._T_EqarContracts = new EntitySet<T_EqarContract>(new Action<T_EqarContract>(this.attach_T_EqarContracts), new Action<T_EqarContract>(this.detach_T_EqarContracts));
			this._T_EqarSales = new EntitySet<T_EqarSale>(new Action<T_EqarSale>(this.attach_T_EqarSales), new Action<T_EqarSale>(this.detach_T_EqarSales));
			this._T_TenantContracts = new EntitySet<T_TenantContract>(new Action<T_TenantContract>(this.attach_T_TenantContracts), new Action<T_TenantContract>(this.detach_T_TenantContracts));
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_City = default(EntityRef<T_City>);
			this._T_EqarNatural = default(EntityRef<T_EqarNatural>);
			this._T_EqarTyp = default(EntityRef<T_EqarTyp>);
			this._T_Nationality = default(EntityRef<T_Nationality>);
			this._T_Owner = default(EntityRef<T_Owner>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int EqarID
		{
			get
			{
				return this._EqarID;
			}
			set
			{
				if ((this._EqarID != value))
				{
					this.OnEqarIDChanging(value);
					this.SendPropertyChanging();
					this._EqarID = value;
					this.SendPropertyChanged("EqarID");
					this.OnEqarIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarNo", DbType = "Int NOT NULL")]
		public int EqarNo
		{
			get
			{
				return this._EqarNo;
			}
			set
			{
				if ((this._EqarNo != value))
				{
					this.OnEqarNoChanging(value);
					this.SendPropertyChanging();
					this._EqarNo = value;
					this.SendPropertyChanged("EqarNo");
					this.OnEqarNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(100)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(100)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarStatus", DbType = "Int")]
		public System.Nullable<int> EqarStatus
		{
			get
			{
				return this._EqarStatus;
			}
			set
			{
				if ((this._EqarStatus != value))
				{
					this.OnEqarStatusChanging(value);
					this.SendPropertyChanging();
					this._EqarStatus = value;
					this.SendPropertyChanged("EqarStatus");
					this.OnEqarStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccNo", DbType = "VarChar(30)")]
		public string AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nationalty", DbType = "Int")]
		public System.Nullable<int> Nationalty
		{
			get
			{
				return this._Nationalty;
			}
			set
			{
				if ((this._Nationalty != value))
				{
					if (this._T_Nationality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNationaltyChanging(value);
					this.SendPropertyChanging();
					this._Nationalty = value;
					this.SendPropertyChanged("Nationalty");
					this.OnNationaltyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CityNo", DbType = "Int")]
		public System.Nullable<int> CityNo
		{
			get
			{
				return this._CityNo;
			}
			set
			{
				if ((this._CityNo != value))
				{
					if (this._T_City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityNoChanging(value);
					this.SendPropertyChanging();
					this._CityNo = value;
					this.SendPropertyChanged("CityNo");
					this.OnCityNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarTypNo", DbType = "Int")]
		public System.Nullable<int> EqarTypNo
		{
			get
			{
				return this._EqarTypNo;
			}
			set
			{
				if ((this._EqarTypNo != value))
				{
					if (this._T_EqarTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEqarTypNoChanging(value);
					this.SendPropertyChanging();
					this._EqarTypNo = value;
					this.SendPropertyChanged("EqarTypNo");
					this.OnEqarTypNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarNatureNo", DbType = "Int")]
		public System.Nullable<int> EqarNatureNo
		{
			get
			{
				return this._EqarNatureNo;
			}
			set
			{
				if ((this._EqarNatureNo != value))
				{
					if (this._T_EqarNatural.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEqarNatureNoChanging(value);
					this.SendPropertyChanging();
					this._EqarNatureNo = value;
					this.SendPropertyChanged("EqarNatureNo");
					this.OnEqarNatureNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OwnerNo", DbType = "Int")]
		public System.Nullable<int> OwnerNo
		{
			get
			{
				return this._OwnerNo;
			}
			set
			{
				if ((this._OwnerNo != value))
				{
					if (this._T_Owner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerNoChanging(value);
					this.SendPropertyChanging();
					this._OwnerNo = value;
					this.SendPropertyChanged("OwnerNo");
					this.OnOwnerNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContractValue", DbType = "Float")]
		public System.Nullable<double> ContractValue
		{
			get
			{
				return this._ContractValue;
			}
			set
			{
				if ((this._ContractValue != value))
				{
					this.OnContractValueChanging(value);
					this.SendPropertyChanging();
					this._ContractValue = value;
					this.SendPropertyChanged("ContractValue");
					this.OnContractValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContractRentValue", DbType = "Float")]
		public System.Nullable<double> ContractRentValue
		{
			get
			{
				return this._ContractRentValue;
			}
			set
			{
				if ((this._ContractRentValue != value))
				{
					this.OnContractRentValueChanging(value);
					this.SendPropertyChanging();
					this._ContractRentValue = value;
					this.SendPropertyChanged("ContractRentValue");
					this.OnContractRentValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SQNo", DbType = "VarChar(100)")]
		public string SQNo
		{
			get
			{
				return this._SQNo;
			}
			set
			{
				if ((this._SQNo != value))
				{
					this.OnSQNoChanging(value);
					this.SendPropertyChanging();
					this._SQNo = value;
					this.SendPropertyChanged("SQNo");
					this.OnSQNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SQDate", DbType = "VarChar(10)")]
		public string SQDate
		{
			get
			{
				return this._SQDate;
			}
			set
			{
				if ((this._SQDate != value))
				{
					this.OnSQDateChanging(value);
					this.SendPropertyChanging();
					this._SQDate = value;
					this.SendPropertyChanged("SQDate");
					this.OnSQDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Neighborhood", DbType = "VarChar(100)")]
		public string Neighborhood
		{
			get
			{
				return this._Neighborhood;
			}
			set
			{
				if ((this._Neighborhood != value))
				{
					this.OnNeighborhoodChanging(value);
					this.SendPropertyChanging();
					this._Neighborhood = value;
					this.SendPropertyChanged("Neighborhood");
					this.OnNeighborhoodChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Street", DbType = "VarChar(100)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FloorsCount", DbType = "Int")]
		public System.Nullable<int> FloorsCount
		{
			get
			{
				return this._FloorsCount;
			}
			set
			{
				if ((this._FloorsCount != value))
				{
					this.OnFloorsCountChanging(value);
					this.SendPropertyChanging();
					this._FloorsCount = value;
					this.SendPropertyChanged("FloorsCount");
					this.OnFloorsCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EyesCount", DbType = "Int")]
		public System.Nullable<int> EyesCount
		{
			get
			{
				return this._EyesCount;
			}
			set
			{
				if ((this._EyesCount != value))
				{
					this.OnEyesCountChanging(value);
					this.SendPropertyChanging();
					this._EyesCount = value;
					this.SendPropertyChanged("EyesCount");
					this.OnEyesCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Space", DbType = "VarChar(100)")]
		public string Space
		{
			get
			{
				return this._Space;
			}
			set
			{
				if ((this._Space != value))
				{
					this.OnSpaceChanging(value);
					this.SendPropertyChanging();
					this._Space = value;
					this.SendPropertyChanged("Space");
					this.OnSpaceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarsData_T_AinsData", Storage = "_T_AinsDatas", ThisKey = "EqarID", OtherKey = "EqarID")]
		public EntitySet<T_AinsData> T_AinsDatas
		{
			get
			{
				return this._T_AinsDatas;
			}
			set
			{
				this._T_AinsDatas.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarsData_T_EqarContract", Storage = "_T_EqarContracts", ThisKey = "EqarID", OtherKey = "EqarID")]
		public EntitySet<T_EqarContract> T_EqarContracts
		{
			get
			{
				return this._T_EqarContracts;
			}
			set
			{
				this._T_EqarContracts.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarsData_T_EqarSale", Storage = "_T_EqarSales", ThisKey = "EqarID", OtherKey = "EqarID")]
		public EntitySet<T_EqarSale> T_EqarSales
		{
			get
			{
				return this._T_EqarSales;
			}
			set
			{
				this._T_EqarSales.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarsData_T_TenantContract", Storage = "_T_TenantContracts", ThisKey = "EqarID", OtherKey = "Eqar_ID")]
		public EntitySet<T_TenantContract> T_TenantContracts
		{
			get
			{
				return this._T_TenantContracts;
			}
			set
			{
				this._T_TenantContracts.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_EqarsData", Storage = "_T_AccDef", ThisKey = "AccNo", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_EqarsDatas.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_EqarsDatas.Add(this);
						this._AccNo = value.AccDef_No;
					}
					else
					{
						this._AccNo = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_EqarsData", Storage = "_T_City", ThisKey = "CityNo", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City
		{
			get
			{
				return this._T_City.Entity;
			}
			set
			{
				T_City previousValue = this._T_City.Entity;
				if (((previousValue != value)
							|| (this._T_City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City.Entity = null;
						previousValue.T_EqarsDatas.Remove(this);
					}
					this._T_City.Entity = value;
					if ((value != null))
					{
						value.T_EqarsDatas.Add(this);
						this._CityNo = value.City_No;
					}
					else
					{
						this._CityNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarNatural_T_EqarsData", Storage = "_T_EqarNatural", ThisKey = "EqarNatureNo", OtherKey = "EqarNatural_No", IsForeignKey = true)]
		public T_EqarNatural T_EqarNatural
		{
			get
			{
				return this._T_EqarNatural.Entity;
			}
			set
			{
				T_EqarNatural previousValue = this._T_EqarNatural.Entity;
				if (((previousValue != value)
							|| (this._T_EqarNatural.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_EqarNatural.Entity = null;
						previousValue.T_EqarsDatas.Remove(this);
					}
					this._T_EqarNatural.Entity = value;
					if ((value != null))
					{
						value.T_EqarsDatas.Add(this);
						this._EqarNatureNo = value.EqarNatural_No;
					}
					else
					{
						this._EqarNatureNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_EqarNatural");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarTyp_T_EqarsData", Storage = "_T_EqarTyp", ThisKey = "EqarTypNo", OtherKey = "EqarTyp_No", IsForeignKey = true)]
		public T_EqarTyp T_EqarTyp
		{
			get
			{
				return this._T_EqarTyp.Entity;
			}
			set
			{
				T_EqarTyp previousValue = this._T_EqarTyp.Entity;
				if (((previousValue != value)
							|| (this._T_EqarTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_EqarTyp.Entity = null;
						previousValue.T_EqarsDatas.Remove(this);
					}
					this._T_EqarTyp.Entity = value;
					if ((value != null))
					{
						value.T_EqarsDatas.Add(this);
						this._EqarTypNo = value.EqarTyp_No;
					}
					else
					{
						this._EqarTypNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_EqarTyp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_EqarsData", Storage = "_T_Nationality", ThisKey = "Nationalty", OtherKey = "Nation_No", IsForeignKey = true)]
		public T_Nationality T_Nationality
		{
			get
			{
				return this._T_Nationality.Entity;
			}
			set
			{
				T_Nationality previousValue = this._T_Nationality.Entity;
				if (((previousValue != value)
							|| (this._T_Nationality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Nationality.Entity = null;
						previousValue.T_EqarsDatas.Remove(this);
					}
					this._T_Nationality.Entity = value;
					if ((value != null))
					{
						value.T_EqarsDatas.Add(this);
						this._Nationalty = value.Nation_No;
					}
					else
					{
						this._Nationalty = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Nationality");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Owner_T_EqarsData", Storage = "_T_Owner", ThisKey = "OwnerNo", OtherKey = "Owner_No", IsForeignKey = true)]
		public T_Owner T_Owner
		{
			get
			{
				return this._T_Owner.Entity;
			}
			set
			{
				T_Owner previousValue = this._T_Owner.Entity;
				if (((previousValue != value)
							|| (this._T_Owner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Owner.Entity = null;
						previousValue.T_EqarsDatas.Remove(this);
					}
					this._T_Owner.Entity = value;
					if ((value != null))
					{
						value.T_EqarsDatas.Add(this);
						this._OwnerNo = value.Owner_No;
					}
					else
					{
						this._OwnerNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Owner");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_AinsDatas(T_AinsData entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarsData = this;
		}

		private void detach_T_AinsDatas(T_AinsData entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarsData = null;
		}

		private void attach_T_EqarContracts(T_EqarContract entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarsData = this;
		}

		private void detach_T_EqarContracts(T_EqarContract entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarsData = null;
		}

		private void attach_T_EqarSales(T_EqarSale entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarsData = this;
		}

		private void detach_T_EqarSales(T_EqarSale entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarsData = null;
		}

		private void attach_T_TenantContracts(T_TenantContract entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarsData = this;
		}

		private void detach_T_TenantContracts(T_TenantContract entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarsData = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_EqarTyp")]
	public partial class T_EqarTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _EqarTyp_ID;

		private int _EqarTyp_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_EqarsData> _T_EqarsDatas;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnEqarTyp_IDChanging(string value);
		partial void OnEqarTyp_IDChanged();
		partial void OnEqarTyp_NoChanging(int value);
		partial void OnEqarTyp_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_EqarTyp()
		{
			this._T_EqarsDatas = new EntitySet<T_EqarsData>(new Action<T_EqarsData>(this.attach_T_EqarsDatas), new Action<T_EqarsData>(this.detach_T_EqarsDatas));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarTyp_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string EqarTyp_ID
		{
			get
			{
				return this._EqarTyp_ID;
			}
			set
			{
				if ((this._EqarTyp_ID != value))
				{
					this.OnEqarTyp_IDChanging(value);
					this.SendPropertyChanging();
					this._EqarTyp_ID = value;
					this.SendPropertyChanged("EqarTyp_ID");
					this.OnEqarTyp_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarTyp_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int EqarTyp_No
		{
			get
			{
				return this._EqarTyp_No;
			}
			set
			{
				if ((this._EqarTyp_No != value))
				{
					this.OnEqarTyp_NoChanging(value);
					this.SendPropertyChanging();
					this._EqarTyp_No = value;
					this.SendPropertyChanged("EqarTyp_No");
					this.OnEqarTyp_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_EqarTyp_T_EqarsData", Storage = "_T_EqarsDatas", ThisKey = "EqarTyp_No", OtherKey = "EqarTypNo")]
		public EntitySet<T_EqarsData> T_EqarsDatas
		{
			get
			{
				return this._T_EqarsDatas;
			}
			set
			{
				this._T_EqarsDatas.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarTyp = this;
		}

		private void detach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_EqarTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Family")]
	public partial class T_Family : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Family_ID;

		private int _Person_No;

		private string _EmpID;

		private string _Name;

		private string _BirthDay;

		private string _Link;

		private string _PassNo;

		private string _PassEnd;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnFamily_IDChanging(string value);
		partial void OnFamily_IDChanged();
		partial void OnPerson_NoChanging(int value);
		partial void OnPerson_NoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnNameChanging(string value);
		partial void OnNameChanged();
		partial void OnBirthDayChanging(string value);
		partial void OnBirthDayChanged();
		partial void OnLinkChanging(string value);
		partial void OnLinkChanged();
		partial void OnPassNoChanging(string value);
		partial void OnPassNoChanged();
		partial void OnPassEndChanging(string value);
		partial void OnPassEndChanged();
		#endregion

		public T_Family()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Family_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Family_ID
		{
			get
			{
				return this._Family_ID;
			}
			set
			{
				if ((this._Family_ID != value))
				{
					this.OnFamily_IDChanging(value);
					this.SendPropertyChanging();
					this._Family_ID = value;
					this.SendPropertyChanged("Family_ID");
					this.OnFamily_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Person_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Person_No
		{
			get
			{
				return this._Person_No;
			}
			set
			{
				if ((this._Person_No != value))
				{
					this.OnPerson_NoChanging(value);
					this.SendPropertyChanging();
					this._Person_No = value;
					this.SendPropertyChanged("Person_No");
					this.OnPerson_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BirthDay", DbType = "VarChar(10)")]
		public string BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Link", DbType = "VarChar(20)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PassNo", DbType = "VarChar(15)")]
		public string PassNo
		{
			get
			{
				return this._PassNo;
			}
			set
			{
				if ((this._PassNo != value))
				{
					this.OnPassNoChanging(value);
					this.SendPropertyChanging();
					this._PassNo = value;
					this.SendPropertyChanged("PassNo");
					this.OnPassNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PassEnd", DbType = "VarChar(10)")]
		public string PassEnd
		{
			get
			{
				return this._PassEnd;
			}
			set
			{
				if ((this._PassEnd != value))
				{
					this.OnPassEndChanging(value);
					this.SendPropertyChanging();
					this._PassEnd = value;
					this.SendPropertyChanged("PassEnd");
					this.OnPassEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Family", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Families.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Families.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_GdAuto")]
	public partial class T_GdAuto
	{

		private int _GdAuto_Id;

		private int _Acc0;

		private int _Acc1;

		private int _Acc2;

		private int _Acc3;

		public T_GdAuto()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GdAuto_Id", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int GdAuto_Id
		{
			get
			{
				return this._GdAuto_Id;
			}
			set
			{
				if ((this._GdAuto_Id != value))
				{
					this._GdAuto_Id = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Acc0", DbType = "Int NOT NULL")]
		public int Acc0
		{
			get
			{
				return this._Acc0;
			}
			set
			{
				if ((this._Acc0 != value))
				{
					this._Acc0 = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Acc1", DbType = "Int NOT NULL")]
		public int Acc1
		{
			get
			{
				return this._Acc1;
			}
			set
			{
				if ((this._Acc1 != value))
				{
					this._Acc1 = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Acc2", DbType = "Int NOT NULL")]
		public int Acc2
		{
			get
			{
				return this._Acc2;
			}
			set
			{
				if ((this._Acc2 != value))
				{
					this._Acc2 = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Acc3", DbType = "Int NOT NULL")]
		public int Acc3
		{
			get
			{
				return this._Acc3;
			}
			set
			{
				if ((this._Acc3 != value))
				{
					this._Acc3 = value;
				}
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_GDDET")]
	public partial class T_GDDET : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _GDDET_ID;

		private System.Nullable<int> _gdID;

		private string _gdNo;

		private string _gdDes;

		private string _recptTyp;

		private string _AccNo;

		private string _AccName;

		private System.Nullable<double> _gdValue;

		private string _recptNo;

		private System.Nullable<int> _Lin;

		private string _gdDesE;

		private string _AccNoDestruction;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_GDHEAD> _T_GDHEAD;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnGDDET_IDChanging(int value);
		partial void OnGDDET_IDChanged();
		partial void OngdIDChanging(System.Nullable<int> value);
		partial void OngdIDChanged();
		partial void OngdNoChanging(string value);
		partial void OngdNoChanged();
		partial void OngdDesChanging(string value);
		partial void OngdDesChanged();
		partial void OnrecptTypChanging(string value);
		partial void OnrecptTypChanged();
		partial void OnAccNoChanging(string value);
		partial void OnAccNoChanged();
		partial void OnAccNameChanging(string value);
		partial void OnAccNameChanged();
		partial void OngdValueChanging(System.Nullable<double> value);
		partial void OngdValueChanged();
		partial void OnrecptNoChanging(string value);
		partial void OnrecptNoChanged();
		partial void OnLinChanging(System.Nullable<int> value);
		partial void OnLinChanged();
		partial void OngdDesEChanging(string value);
		partial void OngdDesEChanged();
		partial void OnAccNoDestructionChanging(string value);
		partial void OnAccNoDestructionChanged();
		#endregion

		public T_GDDET()
		{
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_GDHEAD = default(EntityRef<T_GDHEAD>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GDDET_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int GDDET_ID
		{
			get
			{
				return this._GDDET_ID;
			}
			set
			{
				if ((this._GDDET_ID != value))
				{
					this.OnGDDET_IDChanging(value);
					this.SendPropertyChanging();
					this._GDDET_ID = value;
					this.SendPropertyChanged("GDDET_ID");
					this.OnGDDET_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdID", DbType = "Int")]
		public System.Nullable<int> gdID
		{
			get
			{
				return this._gdID;
			}
			set
			{
				if ((this._gdID != value))
				{
					if (this._T_GDHEAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngdIDChanging(value);
					this.SendPropertyChanging();
					this._gdID = value;
					this.SendPropertyChanged("gdID");
					this.OngdIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdNo", DbType = "VarChar(10)")]
		public string gdNo
		{
			get
			{
				return this._gdNo;
			}
			set
			{
				if ((this._gdNo != value))
				{
					this.OngdNoChanging(value);
					this.SendPropertyChanging();
					this._gdNo = value;
					this.SendPropertyChanged("gdNo");
					this.OngdNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdDes", DbType = "VarChar(MAX)")]
		public string gdDes
		{
			get
			{
				return this._gdDes;
			}
			set
			{
				if ((this._gdDes != value))
				{
					this.OngdDesChanging(value);
					this.SendPropertyChanging();
					this._gdDes = value;
					this.SendPropertyChanged("gdDes");
					this.OngdDesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_recptTyp", DbType = "VarChar(20)")]
		public string recptTyp
		{
			get
			{
				return this._recptTyp;
			}
			set
			{
				if ((this._recptTyp != value))
				{
					this.OnrecptTypChanging(value);
					this.SendPropertyChanging();
					this._recptTyp = value;
					this.SendPropertyChanged("recptTyp");
					this.OnrecptTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccNo", DbType = "VarChar(30)")]
		public string AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccName", DbType = "VarChar(100)")]
		public string AccName
		{
			get
			{
				return this._AccName;
			}
			set
			{
				if ((this._AccName != value))
				{
					this.OnAccNameChanging(value);
					this.SendPropertyChanging();
					this._AccName = value;
					this.SendPropertyChanged("AccName");
					this.OnAccNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdValue", DbType = "Float")]
		public System.Nullable<double> gdValue
		{
			get
			{
				return this._gdValue;
			}
			set
			{
				if ((this._gdValue != value))
				{
					this.OngdValueChanging(value);
					this.SendPropertyChanging();
					this._gdValue = value;
					this.SendPropertyChanged("gdValue");
					this.OngdValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_recptNo", DbType = "VarChar(20)")]
		public string recptNo
		{
			get
			{
				return this._recptNo;
			}
			set
			{
				if ((this._recptNo != value))
				{
					this.OnrecptNoChanging(value);
					this.SendPropertyChanging();
					this._recptNo = value;
					this.SendPropertyChanged("recptNo");
					this.OnrecptNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Lin", DbType = "Int")]
		public System.Nullable<int> Lin
		{
			get
			{
				return this._Lin;
			}
			set
			{
				if ((this._Lin != value))
				{
					this.OnLinChanging(value);
					this.SendPropertyChanging();
					this._Lin = value;
					this.SendPropertyChanged("Lin");
					this.OnLinChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdDesE", DbType = "VarChar(MAX)")]
		public string gdDesE
		{
			get
			{
				return this._gdDesE;
			}
			set
			{
				if ((this._gdDesE != value))
				{
					this.OngdDesEChanging(value);
					this.SendPropertyChanging();
					this._gdDesE = value;
					this.SendPropertyChanged("gdDesE");
					this.OngdDesEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccNoDestruction", DbType = "VarChar(30)")]
		public string AccNoDestruction
		{
			get
			{
				return this._AccNoDestruction;
			}
			set
			{
				if ((this._AccNoDestruction != value))
				{
					this.OnAccNoDestructionChanging(value);
					this.SendPropertyChanging();
					this._AccNoDestruction = value;
					this.SendPropertyChanged("AccNoDestruction");
					this.OnAccNoDestructionChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_GDDET", Storage = "_T_AccDef", ThisKey = "AccNo", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_GDDETs.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_GDDETs.Add(this);
						this._AccNo = value.AccDef_No;
					}
					else
					{
						this._AccNo = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_GDHEAD_T_GDDET", Storage = "_T_GDHEAD", ThisKey = "gdID", OtherKey = "gdhead_ID", IsForeignKey = true)]
		public T_GDHEAD T_GDHEAD
		{
			get
			{
				return this._T_GDHEAD.Entity;
			}
			set
			{
				T_GDHEAD previousValue = this._T_GDHEAD.Entity;
				if (((previousValue != value)
							|| (this._T_GDHEAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_GDHEAD.Entity = null;
						previousValue.T_GDDETs.Remove(this);
					}
					this._T_GDHEAD.Entity = value;
					if ((value != null))
					{
						value.T_GDDETs.Add(this);
						this._gdID = value.gdhead_ID;
					}
					else
					{
						this._gdID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_GDHEAD");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_GDHEAD")]
	public class T_GDHEAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private static PropertyChangingEventArgs emptyChangingEventArgs;

		private int _gdhead_ID;

		private int? _gdID;

		private int? _gdTyp;

		private string _gdNo;

		private string _gdMem;

		private double? _gdTot;

		private bool _gdLok;

		private string _gdHDate;

		private string _gdGDate;

		private int? _gdMnd;

		private int? _gdCstNo;

		private string _gdUser;

		private string _gdUserNam;

		private int? _gdTp;

		private double? _gdRcptID;

		private int? _CurTyp;

		private string _ArbTaf;

		private string _RefNo;

		private string _salMonth;

		private string _EngTaf;

		private string _ChekNo;

		private string _BName;

		private string _CREATED_BY;

		private string _MODIFIED_BY;

		private DateTime? _DATE_CREATED;

		private DateTime? _DATE_MODIFIED;

		private double? _CommMnd_Gaid;

		private int? _CompanyID;

		private bool? _AdminLock;

		private EntitySet<T_BankPeaper> _T_BankPeapers;

		private EntitySet<T_GDDET> _T_GDDETs;

		private EntitySet<T_TenantPayment> _T_TenantPayments;

		private EntityRef<Stock_Data.T_CstTbl> _T_CstTbl;

		private EntityRef<Stock_Data.T_Curency> _T_Curency;

		private EntityRef<Stock_Data.T_Mndob> _T_Mndob;

		private EntityRef<Stock_Data.T_SYSSETTING> _T_SYSSETTING;

		private EntityRef<Stock_Data.T_TenantContract> _T_TenantContract;

		[Column(Storage = "_AdminLock", DbType = "Bit")]
		public bool? AdminLock
		{
			get
			{
				return this._AdminLock;
			}
			set
			{
				bool? nullable = this._AdminLock;
				bool? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._AdminLock = value;
					this.SendPropertyChanged("AdminLock");
				}
			}
		}

		[Column(Storage = "_ArbTaf", DbType = "VarChar(150)")]
		public string ArbTaf
		{
			get
			{
				return this._ArbTaf;
			}
			set
			{
				if (this._ArbTaf != value)
				{
					this.SendPropertyChanging();
					this._ArbTaf = value;
					this.SendPropertyChanged("ArbTaf");
				}
			}
		}

		[Column(Storage = "_BName", DbType = "VarChar(50)")]
		public string BName
		{
			get
			{
				return this._BName;
			}
			set
			{
				if (this._BName != value)
				{
					this.SendPropertyChanging();
					this._BName = value;
					this.SendPropertyChanged("BName");
				}
			}
		}

		[Column(Storage = "_ChekNo", DbType = "VarChar(50)")]
		public string ChekNo
		{
			get
			{
				return this._ChekNo;
			}
			set
			{
				if (this._ChekNo != value)
				{
					this.SendPropertyChanging();
					this._ChekNo = value;
					this.SendPropertyChanged("ChekNo");
				}
			}
		}

		[Column(Storage = "_CommMnd_Gaid", DbType = "Float")]
		public double? CommMnd_Gaid
		{
			get
			{
				return this._CommMnd_Gaid;
			}
			set
			{
				double? _CommMndGaid = this._CommMnd_Gaid;
				double? nullable = value;
				if (((double)_CommMndGaid.GetValueOrDefault() != (double)nullable.GetValueOrDefault() ? 1 : (_CommMndGaid.HasValue != nullable.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._CommMnd_Gaid = value;
					this.SendPropertyChanged("CommMnd_Gaid");
				}
			}
		}

		[Column(Storage = "_CompanyID", DbType = "Int")]
		public int? CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				int? nullable = this._CompanyID;
				int? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
				}
			}
		}

		[Column(Storage = "_CREATED_BY", DbType = "VarChar(100)")]
		public string CREATED_BY
		{
			get
			{
				return this._CREATED_BY;
			}
			set
			{
				if (this._CREATED_BY != value)
				{
					this.SendPropertyChanging();
					this._CREATED_BY = value;
					this.SendPropertyChanged("CREATED_BY");
				}
			}
		}

		[Column(Storage = "_CurTyp", DbType = "Int")]
		public int? CurTyp
		{
			get
			{
				return this._CurTyp;
			}
			set
			{
				int? nullable = this._CurTyp;
				int? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					if (this._T_Curency.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.SendPropertyChanging();
					this._CurTyp = value;
					this.SendPropertyChanged("CurTyp");
				}
			}
		}

		[Column(Storage = "_DATE_CREATED", DbType = "DateTime")]
		public DateTime? DATE_CREATED
		{
			get
			{
				return this._DATE_CREATED;
			}
			set
			{
				int num;
				DateTime? _DATECREATED = this._DATE_CREATED;
				DateTime? nullable = value;
				if (_DATECREATED.HasValue != nullable.HasValue)
				{
					num = 1;
				}
				else
				{
					num = (!_DATECREATED.HasValue ? 0 : (_DATECREATED.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : 0));
				}
				if (num != 0)
				{
					this.SendPropertyChanging();
					this._DATE_CREATED = value;
					this.SendPropertyChanged("DATE_CREATED");
				}
			}
		}

		[Column(Storage = "_DATE_MODIFIED", DbType = "DateTime")]
		public DateTime? DATE_MODIFIED
		{
			get
			{
				return this._DATE_MODIFIED;
			}
			set
			{
				int num;
				DateTime? _DATEMODIFIED = this._DATE_MODIFIED;
				DateTime? nullable = value;
				if (_DATEMODIFIED.HasValue != nullable.HasValue)
				{
					num = 1;
				}
				else
				{
					num = (!_DATEMODIFIED.HasValue ? 0 : (int)(_DATEMODIFIED.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : 0));
				}
				if (num != 0)
				{
					this.SendPropertyChanging();
					this._DATE_MODIFIED = value;
					this.SendPropertyChanged("DATE_MODIFIED");
				}
			}
		}

		[Column(Storage = "_EngTaf", DbType = "VarChar(150)")]
		public string EngTaf
		{
			get
			{
				return this._EngTaf;
			}
			set
			{
				if (this._EngTaf != value)
				{
					this.SendPropertyChanging();
					this._EngTaf = value;
					this.SendPropertyChanged("EngTaf");
				}
			}
		}

		[Column(Storage = "_gdCstNo", DbType = "Int")]
		public int? gdCstNo
		{
			get
			{
				return this._gdCstNo;
			}
			set
			{
				int? nullable = this._gdCstNo;
				int? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					if (this._T_CstTbl.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.SendPropertyChanging();
					this._gdCstNo = value;
					this.SendPropertyChanged("gdCstNo");
				}
			}
		}

		[Column(Storage = "_gdGDate", DbType = "VarChar(10)")]
		public string gdGDate
		{
			get
			{
				return this._gdGDate;
			}
			set
			{
				if (this._gdGDate != value)
				{
					this.SendPropertyChanging();
					this._gdGDate = value;
					this.SendPropertyChanged("gdGDate");
				}
			}
		}

		[Column(Storage = "_gdHDate", DbType = "VarChar(10)")]
		public string gdHDate
		{
			get
			{
				return this._gdHDate;
			}
			set
			{
				if (this._gdHDate != value)
				{
					this.SendPropertyChanging();
					this._gdHDate = value;
					this.SendPropertyChanged("gdHDate");
				}
			}
		}

		[Column(Storage = "_gdhead_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int gdhead_ID
		{
			get
			{
				return this._gdhead_ID;
			}
			set
			{
				if (this._gdhead_ID != value)
				{
					this.SendPropertyChanging();
					this._gdhead_ID = value;
					this.SendPropertyChanged("gdhead_ID");
				}
			}
		}

		[Column(Storage = "_gdID", DbType = "Int")]
		public int? gdID
		{
			get
			{
				return this._gdID;
			}
			set
			{
				int? nullable = this._gdID;
				int? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._gdID = value;
					this.SendPropertyChanged("gdID");
				}
			}
		}

		[Column(Storage = "_gdLok", DbType = "Bit NOT NULL")]
		public bool gdLok
		{
			get
			{
				return this._gdLok;
			}
			set
			{
				if (this._gdLok != value)
				{
					this.SendPropertyChanging();
					this._gdLok = value;
					this.SendPropertyChanged("gdLok");
				}
			}
		}

		[Column(Storage = "_gdMem", DbType = "VarChar(MAX)")]
		public string gdMem
		{
			get
			{
				return this._gdMem;
			}
			set
			{
				if (this._gdMem != value)
				{
					this.SendPropertyChanging();
					this._gdMem = value;
					this.SendPropertyChanged("gdMem");
				}
			}
		}

		[Column(Storage = "_gdMnd", DbType = "Int")]
		public int? gdMnd
		{
			get
			{
				return this._gdMnd;
			}
			set
			{
				int? nullable = this._gdMnd;
				int? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					if (this._T_Mndob.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.SendPropertyChanging();
					this._gdMnd = value;
					this.SendPropertyChanged("gdMnd");
				}
			}
		}

		[Column(Storage = "_gdNo", DbType = "VarChar(10)")]
		public string gdNo
		{
			get
			{
				return this._gdNo;
			}
			set
			{
				if (this._gdNo != value)
				{
					this.SendPropertyChanging();
					this._gdNo = value;
					this.SendPropertyChanged("gdNo");
				}
			}
		}

		[Column(Storage = "_gdRcptID", DbType = "Float")]
		public double? gdRcptID
		{
			get
			{
				return this._gdRcptID;
			}
			set
			{
				double? nullable = this._gdRcptID;
				double? nullable1 = value;
				if (((double)nullable.GetValueOrDefault() != (double)nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._gdRcptID = value;
					this.SendPropertyChanged("gdRcptID");
				}
			}
		}

		[Column(Storage = "_gdTot", DbType = "Float")]
		public double? gdTot
		{
			get
			{
				return this._gdTot;
			}
			set
			{
				double? nullable = this._gdTot;
				double? nullable1 = value;
				if (((double)nullable.GetValueOrDefault() != (double)nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._gdTot = value;
					this.SendPropertyChanged("gdTot");
				}
			}
		}

		[Column(Storage = "_gdTp", DbType = "Int")]
		public int? gdTp
		{
			get
			{
				return this._gdTp;
			}
			set
			{
				int? nullable = this._gdTp;
				int? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					if (this._T_TenantContract.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.SendPropertyChanging();
					this._gdTp = value;
					this.SendPropertyChanged("gdTp");
				}
			}
		}

		[Column(Storage = "_gdTyp", DbType = "Int")]
		public int? gdTyp
		{
			get
			{
				return this._gdTyp;
			}
			set
			{
				int? nullable = this._gdTyp;
				int? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._gdTyp = value;
					this.SendPropertyChanged("gdTyp");
				}
			}
		}

		[Column(Storage = "_gdUser", DbType = "VarChar(3)")]
		public string gdUser
		{
			get
			{
				return this._gdUser;
			}
			set
			{
				if (this._gdUser != value)
				{
					this.SendPropertyChanging();
					this._gdUser = value;
					this.SendPropertyChanged("gdUser");
				}
			}
		}

		[Column(Storage = "_gdUserNam", DbType = "VarChar(50)")]
		public string gdUserNam
		{
			get
			{
				return this._gdUserNam;
			}
			set
			{
				if (this._gdUserNam != value)
				{
					this.SendPropertyChanging();
					this._gdUserNam = value;
					this.SendPropertyChanged("gdUserNam");
				}
			}
		}

		[Column(Storage = "_MODIFIED_BY", DbType = "VarChar(100)")]
		public string MODIFIED_BY
		{
			get
			{
				return this._MODIFIED_BY;
			}
			set
			{
				if (this._MODIFIED_BY != value)
				{
					this.SendPropertyChanging();
					this._MODIFIED_BY = value;
					this.SendPropertyChanged("MODIFIED_BY");
				}
			}
		}

		[Column(Storage = "_RefNo", DbType = "VarChar(20)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if (this._RefNo != value)
				{
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
				}
			}
		}

		[Column(Storage = "_salMonth", DbType = "VarChar(50)")]
		public string salMonth
		{
			get
			{
				return this._salMonth;
			}
			set
			{
				if (this._salMonth != value)
				{
					this.SendPropertyChanging();
					this._salMonth = value;
					this.SendPropertyChanged("salMonth");
				}
			}
		}

		[Association(Name = "T_GDHEAD_T_BankPeaper", Storage = "_T_BankPeapers", ThisKey = "gdhead_ID", OtherKey = "gdID")]
		public EntitySet<T_BankPeaper> T_BankPeapers
		{
			get
			{
				return this._T_BankPeapers;
			}
			set
			{
				this._T_BankPeapers.Assign(value);
			}
		}

		[Association(Name = "T_CstTbl_T_GDHEAD", Storage = "_T_CstTbl", ThisKey = "gdCstNo", OtherKey = "Cst_ID", IsForeignKey = true)]
		public Stock_Data.T_CstTbl T_CstTbl
		{
			get
			{
				return this._T_CstTbl.Entity;
			}
			set
			{
				Stock_Data.T_CstTbl previousValue = this._T_CstTbl.Entity;
				if ((previousValue != value ? true : !this._T_CstTbl.HasLoadedOrAssignedValue))
				{
					this.SendPropertyChanging();
					if (previousValue != null)
					{
						this._T_CstTbl.Entity = null;
						previousValue.T_GDHEADs.Remove(this);
					}
					this._T_CstTbl.Entity = value;
					if (value == null)
					{
						this._gdCstNo = null;
					}
					else
					{
						value.T_GDHEADs.Add(this);
						this._gdCstNo = new int?(value.Cst_ID);
					}
					this.SendPropertyChanged("T_CstTbl");
				}
			}
		}

		[Association(Name = "T_Curency_T_GDHEAD", Storage = "_T_Curency", ThisKey = "CurTyp", OtherKey = "Curency_ID", IsForeignKey = true)]
		public Stock_Data.T_Curency T_Curency
		{
			get
			{
				return this._T_Curency.Entity;
			}
			set
			{
				Stock_Data.T_Curency previousValue = this._T_Curency.Entity;
				if ((previousValue != value ? true : !this._T_Curency.HasLoadedOrAssignedValue))
				{
					this.SendPropertyChanging();
					if (previousValue != null)
					{
						this._T_Curency.Entity = null;
						previousValue.T_GDHEADs.Remove(this);
					}
					this._T_Curency.Entity = value;
					if (value == null)
					{
						this._CurTyp = null;
					}
					else
					{
						value.T_GDHEADs.Add(this);
						this._CurTyp = new int?(value.Curency_ID);
					}
					this.SendPropertyChanged("T_Curency");
				}
			}
		}

		[Association(Name = "T_GDHEAD_T_GDDET", Storage = "_T_GDDETs", ThisKey = "gdhead_ID", OtherKey = "gdID")]
		public EntitySet<T_GDDET> T_GDDETs
		{
			get
			{
				return this._T_GDDETs;
			}
			set
			{
				this._T_GDDETs.Assign(value);
			}
		}

		[Association(Name = "T_Mndob_T_GDHEAD", Storage = "_T_Mndob", ThisKey = "gdMnd", OtherKey = "Mnd_ID", IsForeignKey = true)]
		public Stock_Data.T_Mndob T_Mndob
		{
			get
			{
				return this._T_Mndob.Entity;
			}
			set
			{
				Stock_Data.T_Mndob previousValue = this._T_Mndob.Entity;
				if ((previousValue != value ? true : !this._T_Mndob.HasLoadedOrAssignedValue))
				{
					this.SendPropertyChanging();
					if (previousValue != null)
					{
						this._T_Mndob.Entity = null;
						previousValue.T_GDHEADs.Remove(this);
					}
					this._T_Mndob.Entity = value;
					if (value == null)
					{
						this._gdMnd = null;
					}
					else
					{
						value.T_GDHEADs.Add(this);
						this._gdMnd = new int?(value.Mnd_ID);
					}
					this.SendPropertyChanged("T_Mndob");
				}
			}
		}

		[Association(Name = "T_SYSSETTING_T_GDHEAD", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public Stock_Data.T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				Stock_Data.T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if ((previousValue != value ? true : !this._T_SYSSETTING.HasLoadedOrAssignedValue))
				{
					this.SendPropertyChanging();
					if (previousValue != null)
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_GDHEADs.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if (value == null)
					{
						this._CompanyID = null;
					}
					else
					{
						value.T_GDHEADs.Add(this);
						this._CompanyID = new int?(value.SYSSETTING_ID);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		[Association(Name = "T_TenantContract_T_GDHEAD", Storage = "_T_TenantContract", ThisKey = "gdTp", OtherKey = "ContractID", IsForeignKey = true)]
		public Stock_Data.T_TenantContract T_TenantContract
		{
			get
			{
				return this._T_TenantContract.Entity;
			}
			set
			{
				Stock_Data.T_TenantContract previousValue = this._T_TenantContract.Entity;
				if ((previousValue != value ? true : !this._T_TenantContract.HasLoadedOrAssignedValue))
				{
					this.SendPropertyChanging();
					if (previousValue != null)
					{
						this._T_TenantContract.Entity = null;
						previousValue.T_GDHEADs.Remove(this);
					}
					this._T_TenantContract.Entity = value;
					if (value == null)
					{
						this._gdTp = null;
					}
					else
					{
						value.T_GDHEADs.Add(this);
						this._gdTp = new int?(value.ContractID);
					}
					this.SendPropertyChanged("T_TenantContract");
				}
			}
		}

		[Association(Name = "T_GDHEAD_T_TenantPayment", Storage = "_T_TenantPayments", ThisKey = "gdhead_ID", OtherKey = "SndNo")]
		public EntitySet<T_TenantPayment> T_TenantPayments
		{
			get
			{
				return this._T_TenantPayments;
			}
			set
			{
				this._T_TenantPayments.Assign(value);
			}
		}

		static T_GDHEAD()
		{
			T_GDHEAD.emptyChangingEventArgs = new PropertyChangingEventArgs(string.Empty);
		}

		public T_GDHEAD()
		{
			this._T_BankPeapers = new EntitySet<T_BankPeaper>(new Action<T_BankPeaper>(this.attach_T_BankPeapers), new Action<T_BankPeaper>(this.detach_T_BankPeapers));
			this._T_GDDETs = new EntitySet<T_GDDET>(new Action<T_GDDET>(this.attach_T_GDDETs), new Action<T_GDDET>(this.detach_T_GDDETs));
			this._T_TenantPayments = new EntitySet<T_TenantPayment>(new Action<T_TenantPayment>(this.attach_T_TenantPayments), new Action<T_TenantPayment>(this.detach_T_TenantPayments));
			this._T_CstTbl = new EntityRef<Stock_Data.T_CstTbl>();
			this._T_Curency = new EntityRef<Stock_Data.T_Curency>();
			this._T_Mndob = new EntityRef<Stock_Data.T_Mndob>();
			this._T_SYSSETTING = new EntityRef<Stock_Data.T_SYSSETTING>();
			this._T_TenantContract = new EntityRef<Stock_Data.T_TenantContract>();
		}

		private void attach_T_BankPeapers(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_GDHEAD = this;
		}

		private void attach_T_GDDETs(T_GDDET entity)
		{
			this.SendPropertyChanging();
			entity.T_GDHEAD = this;
		}

		private void attach_T_TenantPayments(T_TenantPayment entity)
		{
			this.SendPropertyChanging();
			entity.T_GDHEAD = this;
		}

		private void detach_T_BankPeapers(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_GDHEAD = null;
		}

		private void detach_T_GDDETs(T_GDDET entity)
		{
			this.SendPropertyChanging();
			entity.T_GDHEAD = null;
		}

		private void detach_T_TenantPayments(T_TenantPayment entity)
		{
			this.SendPropertyChanging();
			entity.T_GDHEAD = null;
		}

		protected virtual void SendPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
			{
				this.PropertyChanging(this, T_GDHEAD.emptyChangingEventArgs);
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		public event PropertyChangingEventHandler PropertyChanging;
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Guarantor")]
	public partial class T_Guarantor : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Guarantor_ID;

		private int _Guarantor_No;

		private string _CodPc;

		private string _NameA;

		private string _NameE;

		private string _Address;

		private string _Tel;

		private string _Fax;

		private string _Mobil;

		private string _MdniNo;

		private string _MdniBeginDate;

		private string _MdniEndDate;

		private string _BusnisNo;

		private string _BusnisBeginDate;

		private string _BusnisEndDate;

		private string _BusnisFrom;

		private string _MdniFrom;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_Salary> _T_Salaries;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnGuarantor_IDChanging(string value);
		partial void OnGuarantor_IDChanged();
		partial void OnGuarantor_NoChanging(int value);
		partial void OnGuarantor_NoChanged();
		partial void OnCodPcChanging(string value);
		partial void OnCodPcChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnAddressChanging(string value);
		partial void OnAddressChanged();
		partial void OnTelChanging(string value);
		partial void OnTelChanged();
		partial void OnFaxChanging(string value);
		partial void OnFaxChanged();
		partial void OnMobilChanging(string value);
		partial void OnMobilChanged();
		partial void OnMdniNoChanging(string value);
		partial void OnMdniNoChanged();
		partial void OnMdniBeginDateChanging(string value);
		partial void OnMdniBeginDateChanged();
		partial void OnMdniEndDateChanging(string value);
		partial void OnMdniEndDateChanged();
		partial void OnBusnisNoChanging(string value);
		partial void OnBusnisNoChanged();
		partial void OnBusnisBeginDateChanging(string value);
		partial void OnBusnisBeginDateChanged();
		partial void OnBusnisEndDateChanging(string value);
		partial void OnBusnisEndDateChanged();
		partial void OnBusnisFromChanging(string value);
		partial void OnBusnisFromChanged();
		partial void OnMdniFromChanging(string value);
		partial void OnMdniFromChanged();
		#endregion

		public T_Guarantor()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_Salaries = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries), new Action<T_Salary>(this.detach_T_Salaries));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Guarantor_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Guarantor_ID
		{
			get
			{
				return this._Guarantor_ID;
			}
			set
			{
				if ((this._Guarantor_ID != value))
				{
					this.OnGuarantor_IDChanging(value);
					this.SendPropertyChanging();
					this._Guarantor_ID = value;
					this.SendPropertyChanged("Guarantor_ID");
					this.OnGuarantor_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Guarantor_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Guarantor_No
		{
			get
			{
				return this._Guarantor_No;
			}
			set
			{
				if ((this._Guarantor_No != value))
				{
					this.OnGuarantor_NoChanging(value);
					this.SendPropertyChanging();
					this._Guarantor_No = value;
					this.SendPropertyChanged("Guarantor_No");
					this.OnGuarantor_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CodPc", DbType = "VarChar(15)")]
		public string CodPc
		{
			get
			{
				return this._CodPc;
			}
			set
			{
				if ((this._CodPc != value))
				{
					this.OnCodPcChanging(value);
					this.SendPropertyChanging();
					this._CodPc = value;
					this.SendPropertyChanged("CodPc");
					this.OnCodPcChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "VarChar(30)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel", DbType = "VarChar(15)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobil", DbType = "VarChar(15)")]
		public string Mobil
		{
			get
			{
				return this._Mobil;
			}
			set
			{
				if ((this._Mobil != value))
				{
					this.OnMobilChanging(value);
					this.SendPropertyChanging();
					this._Mobil = value;
					this.SendPropertyChanged("Mobil");
					this.OnMobilChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MdniNo", DbType = "VarChar(20)")]
		public string MdniNo
		{
			get
			{
				return this._MdniNo;
			}
			set
			{
				if ((this._MdniNo != value))
				{
					this.OnMdniNoChanging(value);
					this.SendPropertyChanging();
					this._MdniNo = value;
					this.SendPropertyChanged("MdniNo");
					this.OnMdniNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MdniBeginDate", DbType = "VarChar(20)")]
		public string MdniBeginDate
		{
			get
			{
				return this._MdniBeginDate;
			}
			set
			{
				if ((this._MdniBeginDate != value))
				{
					this.OnMdniBeginDateChanging(value);
					this.SendPropertyChanging();
					this._MdniBeginDate = value;
					this.SendPropertyChanged("MdniBeginDate");
					this.OnMdniBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MdniEndDate", DbType = "VarChar(20)")]
		public string MdniEndDate
		{
			get
			{
				return this._MdniEndDate;
			}
			set
			{
				if ((this._MdniEndDate != value))
				{
					this.OnMdniEndDateChanging(value);
					this.SendPropertyChanging();
					this._MdniEndDate = value;
					this.SendPropertyChanged("MdniEndDate");
					this.OnMdniEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BusnisNo", DbType = "VarChar(20)")]
		public string BusnisNo
		{
			get
			{
				return this._BusnisNo;
			}
			set
			{
				if ((this._BusnisNo != value))
				{
					this.OnBusnisNoChanging(value);
					this.SendPropertyChanging();
					this._BusnisNo = value;
					this.SendPropertyChanged("BusnisNo");
					this.OnBusnisNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BusnisBeginDate", DbType = "VarChar(20)")]
		public string BusnisBeginDate
		{
			get
			{
				return this._BusnisBeginDate;
			}
			set
			{
				if ((this._BusnisBeginDate != value))
				{
					this.OnBusnisBeginDateChanging(value);
					this.SendPropertyChanging();
					this._BusnisBeginDate = value;
					this.SendPropertyChanged("BusnisBeginDate");
					this.OnBusnisBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BusnisEndDate", DbType = "VarChar(20)")]
		public string BusnisEndDate
		{
			get
			{
				return this._BusnisEndDate;
			}
			set
			{
				if ((this._BusnisEndDate != value))
				{
					this.OnBusnisEndDateChanging(value);
					this.SendPropertyChanging();
					this._BusnisEndDate = value;
					this.SendPropertyChanged("BusnisEndDate");
					this.OnBusnisEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BusnisFrom", DbType = "VarChar(20)")]
		public string BusnisFrom
		{
			get
			{
				return this._BusnisFrom;
			}
			set
			{
				if ((this._BusnisFrom != value))
				{
					this.OnBusnisFromChanging(value);
					this.SendPropertyChanging();
					this._BusnisFrom = value;
					this.SendPropertyChanged("BusnisFrom");
					this.OnBusnisFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MdniFrom", DbType = "VarChar(20)")]
		public string MdniFrom
		{
			get
			{
				return this._MdniFrom;
			}
			set
			{
				if ((this._MdniFrom != value))
				{
					this.OnMdniFromChanging(value);
					this.SendPropertyChanging();
					this._MdniFrom = value;
					this.SendPropertyChanged("MdniFrom");
					this.OnMdniFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Guarantor_T_Emp", Storage = "_T_Emps", ThisKey = "Guarantor_No", OtherKey = "Guarantor")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Guarantor_T_Salary", Storage = "_T_Salaries", ThisKey = "Guarantor_No", OtherKey = "DirBoss")]
		public EntitySet<T_Salary> T_Salaries
		{
			get
			{
				return this._T_Salaries;
			}
			set
			{
				this._T_Salaries.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Guarantor = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Guarantor = null;
		}

		private void attach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Guarantor = this;
		}

		private void detach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Guarantor = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_IDType")]
	public partial class T_IDType : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _IDType_ID;

		private string _Arb_Des;

		private string _Eng_Des;

		private string _Usr;

		private string _UsrNam;

		private System.Nullable<int> _CompanyID;

		private EntitySet<T_per> _T_pers;

		private EntitySet<T_per1> _T_per1s;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDType_IDChanging(int value);
		partial void OnIDType_IDChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnUsrChanging(string value);
		partial void OnUsrChanged();
		partial void OnUsrNamChanging(string value);
		partial void OnUsrNamChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_IDType()
		{
			this._T_pers = new EntitySet<T_per>(new Action<T_per>(this.attach_T_pers), new Action<T_per>(this.detach_T_pers));
			this._T_per1s = new EntitySet<T_per1>(new Action<T_per1>(this.attach_T_per1s), new Action<T_per1>(this.detach_T_per1s));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDType_ID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int IDType_ID
		{
			get
			{
				return this._IDType_ID;
			}
			set
			{
				if ((this._IDType_ID != value))
				{
					this.OnIDType_IDChanging(value);
					this.SendPropertyChanging();
					this._IDType_ID = value;
					this.SendPropertyChanged("IDType_ID");
					this.OnIDType_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr", DbType = "VarChar(3)")]
		public string Usr
		{
			get
			{
				return this._Usr;
			}
			set
			{
				if ((this._Usr != value))
				{
					this.OnUsrChanging(value);
					this.SendPropertyChanging();
					this._Usr = value;
					this.SendPropertyChanged("Usr");
					this.OnUsrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UsrNam", DbType = "VarChar(50)")]
		public string UsrNam
		{
			get
			{
				return this._UsrNam;
			}
			set
			{
				if ((this._UsrNam != value))
				{
					this.OnUsrNamChanging(value);
					this.SendPropertyChanging();
					this._UsrNam = value;
					this.SendPropertyChanged("UsrNam");
					this.OnUsrNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_IDType_T_per", Storage = "_T_pers", ThisKey = "IDType_ID", OtherKey = "pastyp")]
		public EntitySet<T_per> T_pers
		{
			get
			{
				return this._T_pers;
			}
			set
			{
				this._T_pers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_IDType_T_per1", Storage = "_T_per1s", ThisKey = "IDType_ID", OtherKey = "pastyp")]
		public EntitySet<T_per1> T_per1s
		{
			get
			{
				return this._T_per1s;
			}
			set
			{
				this._T_per1s.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_IDType = this;
		}

		private void detach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_IDType = null;
		}

		private void attach_T_per1s(T_per1 entity)
		{
			this.SendPropertyChanging();
			entity.T_IDType = this;
		}

		private void detach_T_per1s(T_per1 entity)
		{
			this.SendPropertyChanging();
			entity.T_IDType = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Info")]
	public partial class T_Info : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Company_ID;

		private string _CompName;

		private string _Address;

		private string _Tel1;

		private string _Mobile;

		private string _Fax;

		private string _PBox;

		private string _MailCode;

		private string _NaturalJob;

		private string _Note;

		private string _BannarCompNameA;

		private string _BannarCompAddressA;

		private string _BannarTelA;

		private string _BannarFaxA;

		private string _CurrA1;

		private string _CurrA2;

		private string _CurrE1;

		private string _CurrE2;

		private System.Nullable<bool> _AlarmDoc;

		private System.Nullable<int> _AlarmDocBefore;

		private System.Nullable<bool> _AutoLeave;

		private System.Nullable<int> _EmpLeaveAfter;

		private System.Nullable<bool> _AttendanceManually;

		private System.Nullable<bool> _VacationManually;

		private System.Nullable<int> _CalculateNo;

		private System.Nullable<int> _CalculatliquidNo;

		private System.Nullable<int> _Allowances;

		private System.Nullable<int> _AllowancesTime;

		private System.Nullable<int> _CleanderType;

		private System.Nullable<bool> _ShowBanner;

		private System.Nullable<bool> _ShowPageNo;

		private System.Nullable<bool> _ShowDateH;

		private System.Nullable<bool> _ShowDateG;

		private System.Data.Linq.Binary _LogoPic;

		private string _SalDate;

		private string _BackPath;

		private System.Nullable<bool> _ShowEmpNo;

		private System.Nullable<bool> _ShowSigne;

		private System.Nullable<int> _CalculateAddDis;

		private EntitySet<T_Emp> _T_Emps;

		private EntityRef<T_OpMethod> _T_OpMethod;

		private EntityRef<T_OpMethod> _T_OpMethod1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCompany_IDChanging(int value);
		partial void OnCompany_IDChanged();
		partial void OnCompNameChanging(string value);
		partial void OnCompNameChanged();
		partial void OnAddressChanging(string value);
		partial void OnAddressChanged();
		partial void OnTel1Changing(string value);
		partial void OnTel1Changed();
		partial void OnMobileChanging(string value);
		partial void OnMobileChanged();
		partial void OnFaxChanging(string value);
		partial void OnFaxChanged();
		partial void OnPBoxChanging(string value);
		partial void OnPBoxChanged();
		partial void OnMailCodeChanging(string value);
		partial void OnMailCodeChanged();
		partial void OnNaturalJobChanging(string value);
		partial void OnNaturalJobChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnBannarCompNameAChanging(string value);
		partial void OnBannarCompNameAChanged();
		partial void OnBannarCompAddressAChanging(string value);
		partial void OnBannarCompAddressAChanged();
		partial void OnBannarTelAChanging(string value);
		partial void OnBannarTelAChanged();
		partial void OnBannarFaxAChanging(string value);
		partial void OnBannarFaxAChanged();
		partial void OnCurrA1Changing(string value);
		partial void OnCurrA1Changed();
		partial void OnCurrA2Changing(string value);
		partial void OnCurrA2Changed();
		partial void OnCurrE1Changing(string value);
		partial void OnCurrE1Changed();
		partial void OnCurrE2Changing(string value);
		partial void OnCurrE2Changed();
		partial void OnAlarmDocChanging(System.Nullable<bool> value);
		partial void OnAlarmDocChanged();
		partial void OnAlarmDocBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmDocBeforeChanged();
		partial void OnAutoLeaveChanging(System.Nullable<bool> value);
		partial void OnAutoLeaveChanged();
		partial void OnEmpLeaveAfterChanging(System.Nullable<int> value);
		partial void OnEmpLeaveAfterChanged();
		partial void OnAttendanceManuallyChanging(System.Nullable<bool> value);
		partial void OnAttendanceManuallyChanged();
		partial void OnVacationManuallyChanging(System.Nullable<bool> value);
		partial void OnVacationManuallyChanged();
		partial void OnCalculateNoChanging(System.Nullable<int> value);
		partial void OnCalculateNoChanged();
		partial void OnCalculatliquidNoChanging(System.Nullable<int> value);
		partial void OnCalculatliquidNoChanged();
		partial void OnAllowancesChanging(System.Nullable<int> value);
		partial void OnAllowancesChanged();
		partial void OnAllowancesTimeChanging(System.Nullable<int> value);
		partial void OnAllowancesTimeChanged();
		partial void OnCleanderTypeChanging(System.Nullable<int> value);
		partial void OnCleanderTypeChanged();
		partial void OnShowBannerChanging(System.Nullable<bool> value);
		partial void OnShowBannerChanged();
		partial void OnShowPageNoChanging(System.Nullable<bool> value);
		partial void OnShowPageNoChanged();
		partial void OnShowDateHChanging(System.Nullable<bool> value);
		partial void OnShowDateHChanged();
		partial void OnShowDateGChanging(System.Nullable<bool> value);
		partial void OnShowDateGChanged();
		partial void OnLogoPicChanging(System.Data.Linq.Binary value);
		partial void OnLogoPicChanged();
		partial void OnSalDateChanging(string value);
		partial void OnSalDateChanged();
		partial void OnBackPathChanging(string value);
		partial void OnBackPathChanged();
		partial void OnShowEmpNoChanging(System.Nullable<bool> value);
		partial void OnShowEmpNoChanged();
		partial void OnShowSigneChanging(System.Nullable<bool> value);
		partial void OnShowSigneChanged();
		partial void OnCalculateAddDisChanging(System.Nullable<int> value);
		partial void OnCalculateAddDisChanged();
		#endregion

		public T_Info()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_OpMethod = default(EntityRef<T_OpMethod>);
			this._T_OpMethod1 = default(EntityRef<T_OpMethod>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Company_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Company_ID
		{
			get
			{
				return this._Company_ID;
			}
			set
			{
				if ((this._Company_ID != value))
				{
					this.OnCompany_IDChanging(value);
					this.SendPropertyChanging();
					this._Company_ID = value;
					this.SendPropertyChanged("Company_ID");
					this.OnCompany_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompName", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this.OnCompNameChanging(value);
					this.SendPropertyChanging();
					this._CompName = value;
					this.SendPropertyChanged("CompName");
					this.OnCompNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "VarChar(30)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel1", DbType = "VarChar(15)")]
		public string Tel1
		{
			get
			{
				return this._Tel1;
			}
			set
			{
				if ((this._Tel1 != value))
				{
					this.OnTel1Changing(value);
					this.SendPropertyChanging();
					this._Tel1 = value;
					this.SendPropertyChanged("Tel1");
					this.OnTel1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "VarChar(15)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PBox", DbType = "VarChar(15)")]
		public string PBox
		{
			get
			{
				return this._PBox;
			}
			set
			{
				if ((this._PBox != value))
				{
					this.OnPBoxChanging(value);
					this.SendPropertyChanging();
					this._PBox = value;
					this.SendPropertyChanged("PBox");
					this.OnPBoxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MailCode", DbType = "VarChar(15)")]
		public string MailCode
		{
			get
			{
				return this._MailCode;
			}
			set
			{
				if ((this._MailCode != value))
				{
					this.OnMailCodeChanging(value);
					this.SendPropertyChanging();
					this._MailCode = value;
					this.SendPropertyChanged("MailCode");
					this.OnMailCodeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NaturalJob", DbType = "VarChar(20)")]
		public string NaturalJob
		{
			get
			{
				return this._NaturalJob;
			}
			set
			{
				if ((this._NaturalJob != value))
				{
					this.OnNaturalJobChanging(value);
					this.SendPropertyChanging();
					this._NaturalJob = value;
					this.SendPropertyChanged("NaturalJob");
					this.OnNaturalJobChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BannarCompNameA", DbType = "VarChar(100)")]
		public string BannarCompNameA
		{
			get
			{
				return this._BannarCompNameA;
			}
			set
			{
				if ((this._BannarCompNameA != value))
				{
					this.OnBannarCompNameAChanging(value);
					this.SendPropertyChanging();
					this._BannarCompNameA = value;
					this.SendPropertyChanged("BannarCompNameA");
					this.OnBannarCompNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BannarCompAddressA", DbType = "VarChar(50)")]
		public string BannarCompAddressA
		{
			get
			{
				return this._BannarCompAddressA;
			}
			set
			{
				if ((this._BannarCompAddressA != value))
				{
					this.OnBannarCompAddressAChanging(value);
					this.SendPropertyChanging();
					this._BannarCompAddressA = value;
					this.SendPropertyChanged("BannarCompAddressA");
					this.OnBannarCompAddressAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BannarTelA", DbType = "VarChar(15)")]
		public string BannarTelA
		{
			get
			{
				return this._BannarTelA;
			}
			set
			{
				if ((this._BannarTelA != value))
				{
					this.OnBannarTelAChanging(value);
					this.SendPropertyChanging();
					this._BannarTelA = value;
					this.SendPropertyChanged("BannarTelA");
					this.OnBannarTelAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BannarFaxA", DbType = "VarChar(15)")]
		public string BannarFaxA
		{
			get
			{
				return this._BannarFaxA;
			}
			set
			{
				if ((this._BannarFaxA != value))
				{
					this.OnBannarFaxAChanging(value);
					this.SendPropertyChanging();
					this._BannarFaxA = value;
					this.SendPropertyChanged("BannarFaxA");
					this.OnBannarFaxAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrA1", DbType = "VarChar(10)")]
		public string CurrA1
		{
			get
			{
				return this._CurrA1;
			}
			set
			{
				if ((this._CurrA1 != value))
				{
					this.OnCurrA1Changing(value);
					this.SendPropertyChanging();
					this._CurrA1 = value;
					this.SendPropertyChanged("CurrA1");
					this.OnCurrA1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrA2", DbType = "VarChar(10)")]
		public string CurrA2
		{
			get
			{
				return this._CurrA2;
			}
			set
			{
				if ((this._CurrA2 != value))
				{
					this.OnCurrA2Changing(value);
					this.SendPropertyChanging();
					this._CurrA2 = value;
					this.SendPropertyChanged("CurrA2");
					this.OnCurrA2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrE1", DbType = "VarChar(10)")]
		public string CurrE1
		{
			get
			{
				return this._CurrE1;
			}
			set
			{
				if ((this._CurrE1 != value))
				{
					this.OnCurrE1Changing(value);
					this.SendPropertyChanging();
					this._CurrE1 = value;
					this.SendPropertyChanged("CurrE1");
					this.OnCurrE1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrE2", DbType = "VarChar(10)")]
		public string CurrE2
		{
			get
			{
				return this._CurrE2;
			}
			set
			{
				if ((this._CurrE2 != value))
				{
					this.OnCurrE2Changing(value);
					this.SendPropertyChanging();
					this._CurrE2 = value;
					this.SendPropertyChanged("CurrE2");
					this.OnCurrE2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDoc", DbType = "Bit")]
		public System.Nullable<bool> AlarmDoc
		{
			get
			{
				return this._AlarmDoc;
			}
			set
			{
				if ((this._AlarmDoc != value))
				{
					this.OnAlarmDocChanging(value);
					this.SendPropertyChanging();
					this._AlarmDoc = value;
					this.SendPropertyChanged("AlarmDoc");
					this.OnAlarmDocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDocBefore", DbType = "Int")]
		public System.Nullable<int> AlarmDocBefore
		{
			get
			{
				return this._AlarmDocBefore;
			}
			set
			{
				if ((this._AlarmDocBefore != value))
				{
					this.OnAlarmDocBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmDocBefore = value;
					this.SendPropertyChanged("AlarmDocBefore");
					this.OnAlarmDocBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoLeave", DbType = "Bit")]
		public System.Nullable<bool> AutoLeave
		{
			get
			{
				return this._AutoLeave;
			}
			set
			{
				if ((this._AutoLeave != value))
				{
					this.OnAutoLeaveChanging(value);
					this.SendPropertyChanging();
					this._AutoLeave = value;
					this.SendPropertyChanged("AutoLeave");
					this.OnAutoLeaveChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpLeaveAfter", DbType = "Int")]
		public System.Nullable<int> EmpLeaveAfter
		{
			get
			{
				return this._EmpLeaveAfter;
			}
			set
			{
				if ((this._EmpLeaveAfter != value))
				{
					this.OnEmpLeaveAfterChanging(value);
					this.SendPropertyChanging();
					this._EmpLeaveAfter = value;
					this.SendPropertyChanged("EmpLeaveAfter");
					this.OnEmpLeaveAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AttendanceManually", DbType = "Bit")]
		public System.Nullable<bool> AttendanceManually
		{
			get
			{
				return this._AttendanceManually;
			}
			set
			{
				if ((this._AttendanceManually != value))
				{
					this.OnAttendanceManuallyChanging(value);
					this.SendPropertyChanging();
					this._AttendanceManually = value;
					this.SendPropertyChanged("AttendanceManually");
					this.OnAttendanceManuallyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacationManually", DbType = "Bit")]
		public System.Nullable<bool> VacationManually
		{
			get
			{
				return this._VacationManually;
			}
			set
			{
				if ((this._VacationManually != value))
				{
					this.OnVacationManuallyChanging(value);
					this.SendPropertyChanging();
					this._VacationManually = value;
					this.SendPropertyChanged("VacationManually");
					this.OnVacationManuallyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculateNo", DbType = "Int")]
		public System.Nullable<int> CalculateNo
		{
			get
			{
				return this._CalculateNo;
			}
			set
			{
				if ((this._CalculateNo != value))
				{
					if (this._T_OpMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalculateNoChanging(value);
					this.SendPropertyChanging();
					this._CalculateNo = value;
					this.SendPropertyChanged("CalculateNo");
					this.OnCalculateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculatliquidNo", DbType = "Int")]
		public System.Nullable<int> CalculatliquidNo
		{
			get
			{
				return this._CalculatliquidNo;
			}
			set
			{
				if ((this._CalculatliquidNo != value))
				{
					if (this._T_OpMethod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalculatliquidNoChanging(value);
					this.SendPropertyChanging();
					this._CalculatliquidNo = value;
					this.SendPropertyChanged("CalculatliquidNo");
					this.OnCalculatliquidNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Allowances", DbType = "Int")]
		public System.Nullable<int> Allowances
		{
			get
			{
				return this._Allowances;
			}
			set
			{
				if ((this._Allowances != value))
				{
					this.OnAllowancesChanging(value);
					this.SendPropertyChanging();
					this._Allowances = value;
					this.SendPropertyChanged("Allowances");
					this.OnAllowancesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowancesTime", DbType = "Int")]
		public System.Nullable<int> AllowancesTime
		{
			get
			{
				return this._AllowancesTime;
			}
			set
			{
				if ((this._AllowancesTime != value))
				{
					this.OnAllowancesTimeChanging(value);
					this.SendPropertyChanging();
					this._AllowancesTime = value;
					this.SendPropertyChanged("AllowancesTime");
					this.OnAllowancesTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CleanderType", DbType = "Int")]
		public System.Nullable<int> CleanderType
		{
			get
			{
				return this._CleanderType;
			}
			set
			{
				if ((this._CleanderType != value))
				{
					this.OnCleanderTypeChanging(value);
					this.SendPropertyChanging();
					this._CleanderType = value;
					this.SendPropertyChanged("CleanderType");
					this.OnCleanderTypeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowBanner", DbType = "Bit")]
		public System.Nullable<bool> ShowBanner
		{
			get
			{
				return this._ShowBanner;
			}
			set
			{
				if ((this._ShowBanner != value))
				{
					this.OnShowBannerChanging(value);
					this.SendPropertyChanging();
					this._ShowBanner = value;
					this.SendPropertyChanged("ShowBanner");
					this.OnShowBannerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowPageNo", DbType = "Bit")]
		public System.Nullable<bool> ShowPageNo
		{
			get
			{
				return this._ShowPageNo;
			}
			set
			{
				if ((this._ShowPageNo != value))
				{
					this.OnShowPageNoChanging(value);
					this.SendPropertyChanging();
					this._ShowPageNo = value;
					this.SendPropertyChanged("ShowPageNo");
					this.OnShowPageNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowDateH", DbType = "Bit")]
		public System.Nullable<bool> ShowDateH
		{
			get
			{
				return this._ShowDateH;
			}
			set
			{
				if ((this._ShowDateH != value))
				{
					this.OnShowDateHChanging(value);
					this.SendPropertyChanging();
					this._ShowDateH = value;
					this.SendPropertyChanged("ShowDateH");
					this.OnShowDateHChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowDateG", DbType = "Bit")]
		public System.Nullable<bool> ShowDateG
		{
			get
			{
				return this._ShowDateG;
			}
			set
			{
				if ((this._ShowDateG != value))
				{
					this.OnShowDateGChanging(value);
					this.SendPropertyChanging();
					this._ShowDateG = value;
					this.SendPropertyChanged("ShowDateG");
					this.OnShowDateGChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LogoPic", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary LogoPic
		{
			get
			{
				return this._LogoPic;
			}
			set
			{
				if ((this._LogoPic != value))
				{
					this.OnLogoPicChanging(value);
					this.SendPropertyChanging();
					this._LogoPic = value;
					this.SendPropertyChanged("LogoPic");
					this.OnLogoPicChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalDate", DbType = "VarChar(10)")]
		public string SalDate
		{
			get
			{
				return this._SalDate;
			}
			set
			{
				if ((this._SalDate != value))
				{
					this.OnSalDateChanging(value);
					this.SendPropertyChanging();
					this._SalDate = value;
					this.SendPropertyChanged("SalDate");
					this.OnSalDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BackPath", DbType = "VarChar(MAX)")]
		public string BackPath
		{
			get
			{
				return this._BackPath;
			}
			set
			{
				if ((this._BackPath != value))
				{
					this.OnBackPathChanging(value);
					this.SendPropertyChanging();
					this._BackPath = value;
					this.SendPropertyChanged("BackPath");
					this.OnBackPathChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowEmpNo", DbType = "Bit")]
		public System.Nullable<bool> ShowEmpNo
		{
			get
			{
				return this._ShowEmpNo;
			}
			set
			{
				if ((this._ShowEmpNo != value))
				{
					this.OnShowEmpNoChanging(value);
					this.SendPropertyChanging();
					this._ShowEmpNo = value;
					this.SendPropertyChanged("ShowEmpNo");
					this.OnShowEmpNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowSigne", DbType = "Bit")]
		public System.Nullable<bool> ShowSigne
		{
			get
			{
				return this._ShowSigne;
			}
			set
			{
				if ((this._ShowSigne != value))
				{
					this.OnShowSigneChanging(value);
					this.SendPropertyChanging();
					this._ShowSigne = value;
					this.SendPropertyChanged("ShowSigne");
					this.OnShowSigneChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculateAddDis", DbType = "Int")]
		public System.Nullable<int> CalculateAddDis
		{
			get
			{
				return this._CalculateAddDis;
			}
			set
			{
				if ((this._CalculateAddDis != value))
				{
					this.OnCalculateAddDisChanging(value);
					this.SendPropertyChanging();
					this._CalculateAddDis = value;
					this.SendPropertyChanged("CalculateAddDis");
					this.OnCalculateAddDisChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Info_T_Emp", Storage = "_T_Emps", ThisKey = "Company_ID", OtherKey = "CompanyID")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Info", Storage = "_T_OpMethod", ThisKey = "CalculateNo", OtherKey = "Method_No", IsForeignKey = true)]
		public T_OpMethod T_OpMethod
		{
			get
			{
				return this._T_OpMethod.Entity;
			}
			set
			{
				T_OpMethod previousValue = this._T_OpMethod.Entity;
				if (((previousValue != value)
							|| (this._T_OpMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OpMethod.Entity = null;
						previousValue.T_Infos.Remove(this);
					}
					this._T_OpMethod.Entity = value;
					if ((value != null))
					{
						value.T_Infos.Add(this);
						this._CalculateNo = value.Method_No;
					}
					else
					{
						this._CalculateNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OpMethod");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Info1", Storage = "_T_OpMethod1", ThisKey = "CalculatliquidNo", OtherKey = "Method_No", IsForeignKey = true)]
		public T_OpMethod T_OpMethod1
		{
			get
			{
				return this._T_OpMethod1.Entity;
			}
			set
			{
				T_OpMethod previousValue = this._T_OpMethod1.Entity;
				if (((previousValue != value)
							|| (this._T_OpMethod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OpMethod1.Entity = null;
						previousValue.T_Infos1.Remove(this);
					}
					this._T_OpMethod1.Entity = value;
					if ((value != null))
					{
						value.T_Infos1.Add(this);
						this._CalculatliquidNo = value.Method_No;
					}
					else
					{
						this._CalculatliquidNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OpMethod1");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Info = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Info = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_InfoTb")]
	public partial class T_InfoTb
	{

		private int _InfoTb_ID;

		private string _fldFlag;

		private string _fldValue;

		private string _grpFlag;

		private string _emptFld1;

		private string _emptFld2;

		private string _emptFld3;

		private string _FontN;

		private System.Nullable<double> _FontS;

		private System.Nullable<int> _FontB;

		private System.Nullable<int> _FontI;

		private System.Nullable<int> _CompanyID;

		public T_InfoTb()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InfoTb_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int InfoTb_ID
		{
			get
			{
				return this._InfoTb_ID;
			}
			set
			{
				if ((this._InfoTb_ID != value))
				{
					this._InfoTb_ID = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fldFlag", DbType = "VarChar(10)")]
		public string fldFlag
		{
			get
			{
				return this._fldFlag;
			}
			set
			{
				if ((this._fldFlag != value))
				{
					this._fldFlag = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fldValue", DbType = "VarChar(200)")]
		public string fldValue
		{
			get
			{
				return this._fldValue;
			}
			set
			{
				if ((this._fldValue != value))
				{
					this._fldValue = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_grpFlag", DbType = "VarChar(20)")]
		public string grpFlag
		{
			get
			{
				return this._grpFlag;
			}
			set
			{
				if ((this._grpFlag != value))
				{
					this._grpFlag = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_emptFld1", DbType = "VarChar(50)")]
		public string emptFld1
		{
			get
			{
				return this._emptFld1;
			}
			set
			{
				if ((this._emptFld1 != value))
				{
					this._emptFld1 = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_emptFld2", DbType = "VarChar(50)")]
		public string emptFld2
		{
			get
			{
				return this._emptFld2;
			}
			set
			{
				if ((this._emptFld2 != value))
				{
					this._emptFld2 = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_emptFld3", DbType = "VarChar(50)")]
		public string emptFld3
		{
			get
			{
				return this._emptFld3;
			}
			set
			{
				if ((this._emptFld3 != value))
				{
					this._emptFld3 = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FontN", DbType = "VarChar(50)")]
		public string FontN
		{
			get
			{
				return this._FontN;
			}
			set
			{
				if ((this._FontN != value))
				{
					this._FontN = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FontS", DbType = "Float")]
		public System.Nullable<double> FontS
		{
			get
			{
				return this._FontS;
			}
			set
			{
				if ((this._FontS != value))
				{
					this._FontS = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FontB", DbType = "Int")]
		public System.Nullable<int> FontB
		{
			get
			{
				return this._FontB;
			}
			set
			{
				if ((this._FontB != value))
				{
					this._FontB = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FontI", DbType = "Int")]
		public System.Nullable<int> FontI
		{
			get
			{
				return this._FontI;
			}
			set
			{
				if ((this._FontI != value))
				{
					this._FontI = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Insurance")]
	public partial class T_Insurance : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Insurance_ID;

		private int _Insurance_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_UpdateDoc> _T_UpdateDocs;

		private EntitySet<T_UpdateDoc> _T_UpdateDocs1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnInsurance_IDChanging(string value);
		partial void OnInsurance_IDChanged();
		partial void OnInsurance_NoChanging(int value);
		partial void OnInsurance_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_Insurance()
		{
			this._T_UpdateDocs = new EntitySet<T_UpdateDoc>(new Action<T_UpdateDoc>(this.attach_T_UpdateDocs), new Action<T_UpdateDoc>(this.detach_T_UpdateDocs));
			this._T_UpdateDocs1 = new EntitySet<T_UpdateDoc>(new Action<T_UpdateDoc>(this.attach_T_UpdateDocs1), new Action<T_UpdateDoc>(this.detach_T_UpdateDocs1));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Insurance_ID
		{
			get
			{
				return this._Insurance_ID;
			}
			set
			{
				if ((this._Insurance_ID != value))
				{
					this.OnInsurance_IDChanging(value);
					this.SendPropertyChanging();
					this._Insurance_ID = value;
					this.SendPropertyChanged("Insurance_ID");
					this.OnInsurance_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Insurance_No
		{
			get
			{
				return this._Insurance_No;
			}
			set
			{
				if ((this._Insurance_No != value))
				{
					this.OnInsurance_NoChanging(value);
					this.SendPropertyChanging();
					this._Insurance_No = value;
					this.SendPropertyChanged("Insurance_No");
					this.OnInsurance_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Insurance_T_UpdateDoc", Storage = "_T_UpdateDocs", ThisKey = "Insurance_No", OtherKey = "InsuranceNoAfter")]
		public EntitySet<T_UpdateDoc> T_UpdateDocs
		{
			get
			{
				return this._T_UpdateDocs;
			}
			set
			{
				this._T_UpdateDocs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Insurance_T_UpdateDoc1", Storage = "_T_UpdateDocs1", ThisKey = "Insurance_No", OtherKey = "InsuranceNoBefor")]
		public EntitySet<T_UpdateDoc> T_UpdateDocs1
		{
			get
			{
				return this._T_UpdateDocs1;
			}
			set
			{
				this._T_UpdateDocs1.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_UpdateDocs(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_Insurance = this;
		}

		private void detach_T_UpdateDocs(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_Insurance = null;
		}

		private void attach_T_UpdateDocs1(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_Insurance1 = this;
		}

		private void detach_T_UpdateDocs1(T_UpdateDoc entity)
		{
			this.SendPropertyChanging();
			entity.T_Insurance1 = null;
		}
	}
	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_INVDET")]
	public partial class T_INVDET : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _InvDet_ID;

		private string _InvNo;

		private System.Nullable<int> _InvId;

		private System.Nullable<int> _InvSer;

		private string _ItmNo;

		private System.Nullable<double> _Cost;

		private System.Nullable<double> _Qty;

		private string _ItmDes;

		private string _ItmUnt;

		private string _ItmDesE;

		private string _ItmUntE;

		private System.Nullable<double> _ItmUntPak;

		private System.Nullable<int> _StoreNo;

		private System.Nullable<double> _Price;

		private System.Nullable<double> _Amount;

		private System.Nullable<double> _RealQty;

		private System.Nullable<double> _itmInvDsc;

		private string _DatExper;

		private System.Nullable<double> _ItmDis;

		private System.Nullable<int> _ItmTyp;

		private System.Nullable<int> _ItmIndex;

		private System.Nullable<double> _ItmWight;

		private System.Nullable<double> _ItmWight_T;

		private System.Nullable<double> _ItmAddCost;
#pragma warning disable CS0169 // The field 'T_INVDET._RetQty' is never used
		private System.Nullable<double> _RetQty;
#pragma warning restore CS0169 // The field 'T_INVDET._RetQty' is never used
		private string _RunCod;

		private string _LineDetails;

		private string _Serial_Key;

		private System.Nullable<double> _ItmTax;

		private System.Nullable<int> _OfferTyp;

		private System.Nullable<int> _CInvType;

		private System.Nullable<int> _CaExState;

		private EntitySet<T_SINVDET> _T_SINVDETs;

		private EntityRef<T_INVHED> _T_INVHED;

		private EntityRef<T_Item> _T_Item;

		private EntityRef<T_Store> _T_Store;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnInvDet_IDChanging(int value);
		partial void OnInvDet_IDChanged();
		partial void OnInvNoChanging(string value);
		partial void OnInvNoChanged();
		partial void OnInvIdChanging(System.Nullable<int> value);
		partial void OnInvIdChanged();
		partial void OnInvSerChanging(System.Nullable<int> value);
		partial void OnInvSerChanged();
		partial void OnItmNoChanging(string value);
		partial void OnItmNoChanged();
		partial void OnCostChanging(System.Nullable<double> value);
		partial void OnCostChanged();
		partial void OnQtyChanging(System.Nullable<double> value);
		partial void OnQtyChanged();
		partial void OnItmDesChanging(string value);
		partial void OnItmDesChanged();
		partial void OnItmUntChanging(string value);
		partial void OnItmUntChanged();
		partial void OnItmDesEChanging(string value);
		partial void OnItmDesEChanged();
		partial void OnItmUntEChanging(string value);
		partial void OnItmUntEChanged();
		partial void OnItmUntPakChanging(System.Nullable<double> value);
		partial void OnItmUntPakChanged();
		partial void OnStoreNoChanging(System.Nullable<int> value);
		partial void OnStoreNoChanged();
		partial void OnPriceChanging(System.Nullable<double> value);
		partial void OnPriceChanged();
		partial void OnAmountChanging(System.Nullable<double> value);
		partial void OnAmountChanged();
		partial void OnRealQtyChanging(System.Nullable<double> value);
		partial void OnRealQtyChanged();
		partial void OnitmInvDscChanging(System.Nullable<double> value);
		partial void OnitmInvDscChanged();
		partial void OnDatExperChanging(string value);
		partial void OnDatExperChanged();
		partial void OnItmDisChanging(System.Nullable<double> value);
		partial void OnItmDisChanged();
		partial void OnItmTypChanging(System.Nullable<int> value);
		partial void OnItmTypChanged();
		partial void OnItmIndexChanging(System.Nullable<int> value);
		partial void OnItmIndexChanged();
		partial void OnItmWightChanging(System.Nullable<double> value);
		partial void OnItmWightChanged();
		partial void OnItmWight_TChanging(System.Nullable<double> value);
		partial void OnItmWight_TChanged();
		partial void OnItmAddCostChanging(System.Nullable<double> value);
		partial void OnItmAddCostChanged();
		partial void OnRunCodChanging(string value);
		partial void OnRunCodChanged();
		partial void OnLineDetailsChanging(string value);
		partial void OnLineDetailsChanged();
		partial void OnSerial_KeyChanging(string value);
		partial void OnSerial_KeyChanged();
		partial void OnItmTaxChanging(System.Nullable<double> value);
		partial void OnItmTaxChanged();
		partial void OnOfferTypChanging(System.Nullable<int> value);
		partial void OnOfferTypChanged();
		partial void OnCInvTypeChanging(System.Nullable<int> value);
		partial void OnCInvTypeChanged();
		partial void OnCaExStateChanging(System.Nullable<int> value);
		partial void OnCaExStateChanged();
		#endregion

		public T_INVDET()
		{
			this._T_SINVDETs = new EntitySet<T_SINVDET>(new Action<T_SINVDET>(this.attach_T_SINVDETs), new Action<T_SINVDET>(this.detach_T_SINVDETs));
			this._T_INVHED = default(EntityRef<T_INVHED>);
			this._T_Item = default(EntityRef<T_Item>);
			this._T_Store = default(EntityRef<T_Store>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvDet_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int InvDet_ID
		{
			get
			{
				return this._InvDet_ID;
			}
			set
			{
				if ((this._InvDet_ID != value))
				{
					this.OnInvDet_IDChanging(value);
					this.SendPropertyChanging();
					this._InvDet_ID = value;
					this.SendPropertyChanged("InvDet_ID");
					this.OnInvDet_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNo", DbType = "VarChar(10)")]
		public string InvNo
		{
			get
			{
				return this._InvNo;
			}
			set
			{
				if ((this._InvNo != value))
				{
					this.OnInvNoChanging(value);
					this.SendPropertyChanging();
					this._InvNo = value;
					this.SendPropertyChanged("InvNo");
					this.OnInvNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvId", DbType = "Int")]
		public System.Nullable<int> InvId
		{
			get
			{
				return this._InvId;
			}
			set
			{
				if ((this._InvId != value))
				{
					if (this._T_INVHED.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvIdChanging(value);
					this.SendPropertyChanging();
					this._InvId = value;
					this.SendPropertyChanged("InvId");
					this.OnInvIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvSer", DbType = "Int")]
		public System.Nullable<int> InvSer
		{
			get
			{
				return this._InvSer;
			}
			set
			{
				if ((this._InvSer != value))
				{
					this.OnInvSerChanging(value);
					this.SendPropertyChanging();
					this._InvSer = value;
					this.SendPropertyChanged("InvSer");
					this.OnInvSerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmNo", DbType = "VarChar(50)")]
		public string ItmNo
		{
			get
			{
				return this._ItmNo;
			}
			set
			{
				if ((this._ItmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmNoChanging(value);
					this.SendPropertyChanging();
					this._ItmNo = value;
					this.SendPropertyChanged("ItmNo");
					this.OnItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cost", DbType = "Float")]
		public System.Nullable<double> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Qty", DbType = "Float")]
		public System.Nullable<double> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmDes", DbType = "VarChar(100)")]
		public string ItmDes
		{
			get
			{
				return this._ItmDes;
			}
			set
			{
				if ((this._ItmDes != value))
				{
					this.OnItmDesChanging(value);
					this.SendPropertyChanging();
					this._ItmDes = value;
					this.SendPropertyChanged("ItmDes");
					this.OnItmDesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmUnt", DbType = "VarChar(100)")]
		public string ItmUnt
		{
			get
			{
				return this._ItmUnt;
			}
			set
			{
				if ((this._ItmUnt != value))
				{
					this.OnItmUntChanging(value);
					this.SendPropertyChanging();
					this._ItmUnt = value;
					this.SendPropertyChanged("ItmUnt");
					this.OnItmUntChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmDesE", DbType = "VarChar(100)")]
		public string ItmDesE
		{
			get
			{
				return this._ItmDesE;
			}
			set
			{
				if ((this._ItmDesE != value))
				{
					this.OnItmDesEChanging(value);
					this.SendPropertyChanging();
					this._ItmDesE = value;
					this.SendPropertyChanged("ItmDesE");
					this.OnItmDesEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmUntE", DbType = "VarChar(100)")]
		public string ItmUntE
		{
			get
			{
				return this._ItmUntE;
			}
			set
			{
				if ((this._ItmUntE != value))
				{
					this.OnItmUntEChanging(value);
					this.SendPropertyChanging();
					this._ItmUntE = value;
					this.SendPropertyChanged("ItmUntE");
					this.OnItmUntEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmUntPak", DbType = "Float")]
		public System.Nullable<double> ItmUntPak
		{
			get
			{
				return this._ItmUntPak;
			}
			set
			{
				if ((this._ItmUntPak != value))
				{
					this.OnItmUntPakChanging(value);
					this.SendPropertyChanging();
					this._ItmUntPak = value;
					this.SendPropertyChanged("ItmUntPak");
					this.OnItmUntPakChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StoreNo", DbType = "Int")]
		public System.Nullable<int> StoreNo
		{
			get
			{
				return this._StoreNo;
			}
			set
			{
				if ((this._StoreNo != value))
				{
					if (this._T_Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreNoChanging(value);
					this.SendPropertyChanging();
					this._StoreNo = value;
					this.SendPropertyChanged("StoreNo");
					this.OnStoreNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price", DbType = "Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Amount", DbType = "Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RealQty", DbType = "Float")]
		public System.Nullable<double> RealQty
		{
			get
			{
				return this._RealQty;
			}
			set
			{
				if ((this._RealQty != value))
				{
					this.OnRealQtyChanging(value);
					this.SendPropertyChanging();
					this._RealQty = value;
					this.SendPropertyChanged("RealQty");
					this.OnRealQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_itmInvDsc", DbType = "Float")]
		public System.Nullable<double> itmInvDsc
		{
			get
			{
				return this._itmInvDsc;
			}
			set
			{
				if ((this._itmInvDsc != value))
				{
					this.OnitmInvDscChanging(value);
					this.SendPropertyChanging();
					this._itmInvDsc = value;
					this.SendPropertyChanged("itmInvDsc");
					this.OnitmInvDscChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DatExper", DbType = "VarChar(11)")]
		public string DatExper
		{
			get
			{
				return this._DatExper;
			}
			set
			{
				if ((this._DatExper != value))
				{
					this.OnDatExperChanging(value);
					this.SendPropertyChanging();
					this._DatExper = value;
					this.SendPropertyChanged("DatExper");
					this.OnDatExperChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmDis", DbType = "Float")]
		public System.Nullable<double> ItmDis
		{
			get
			{
				return this._ItmDis;
			}
			set
			{
				if ((this._ItmDis != value))
				{
					this.OnItmDisChanging(value);
					this.SendPropertyChanging();
					this._ItmDis = value;
					this.SendPropertyChanged("ItmDis");
					this.OnItmDisChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmTyp", DbType = "Int")]
		public System.Nullable<int> ItmTyp
		{
			get
			{
				return this._ItmTyp;
			}
			set
			{
				if ((this._ItmTyp != value))
				{
					this.OnItmTypChanging(value);
					this.SendPropertyChanging();
					this._ItmTyp = value;
					this.SendPropertyChanged("ItmTyp");
					this.OnItmTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmIndex", DbType = "Int")]
		public System.Nullable<int> ItmIndex
		{
			get
			{
				return this._ItmIndex;
			}
			set
			{
				if ((this._ItmIndex != value))
				{
					this.OnItmIndexChanging(value);
					this.SendPropertyChanging();
					this._ItmIndex = value;
					this.SendPropertyChanged("ItmIndex");
					this.OnItmIndexChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmWight", DbType = "Float")]
		public System.Nullable<double> ItmWight
		{
			get
			{
				return this._ItmWight;
			}
			set
			{
				if ((this._ItmWight != value))
				{
					this.OnItmWightChanging(value);
					this.SendPropertyChanging();
					this._ItmWight = value;
					this.SendPropertyChanged("ItmWight");
					this.OnItmWightChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmWight_T", DbType = "Float")]
		public System.Nullable<double> ItmWight_T
		{
			get
			{
				return this._ItmWight_T;
			}
			set
			{
				if ((this._ItmWight_T != value))
				{
					this.OnItmWight_TChanging(value);
					this.SendPropertyChanging();
					this._ItmWight_T = value;
					this.SendPropertyChanged("ItmWight_T");
					this.OnItmWight_TChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmAddCost", DbType = "Float")]
		public System.Nullable<double> ItmAddCost
		{
			get
			{
				return this._ItmAddCost;
			}
			set
			{
				if ((this._ItmAddCost != value))
				{
					this.OnItmAddCostChanging(value);
					this.SendPropertyChanging();
					this._ItmAddCost = value;
					this.SendPropertyChanged("ItmAddCost");
					this.OnItmAddCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RunCod", DbType = "VarChar(100)")]
		public string RunCod
		{
			get
			{
				return this._RunCod;
			}
			set
			{
				if ((this._RunCod != value))
				{
					this.OnRunCodChanging(value);
					this.SendPropertyChanging();
					this._RunCod = value;
					this.SendPropertyChanged("RunCod");
					this.OnRunCodChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineDetails", DbType = "VarChar(250)")]
		public string LineDetails
		{
			get
			{
				return this._LineDetails;
			}
			set
			{
				if ((this._LineDetails != value))
				{
					this.OnLineDetailsChanging(value);
					this.SendPropertyChanging();
					this._LineDetails = value;
					this.SendPropertyChanged("LineDetails");
					this.OnLineDetailsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Serial_Key", DbType = "VarChar(100)")]
		public string Serial_Key
		{
			get
			{
				return this._Serial_Key;
			}
			set
			{
				if ((this._Serial_Key != value))
				{
					this.OnSerial_KeyChanging(value);
					this.SendPropertyChanging();
					this._Serial_Key = value;
					this.SendPropertyChanged("Serial_Key");
					this.OnSerial_KeyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmTax", DbType = "Float")]
		public System.Nullable<double> ItmTax
		{
			get
			{
				return this._ItmTax;
			}
			set
			{
				if ((this._ItmTax != value))
				{
					this.OnItmTaxChanging(value);
					this.SendPropertyChanging();
					this._ItmTax = value;
					this.SendPropertyChanged("ItmTax");
					this.OnItmTaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferTyp", DbType = "Int")]
		public System.Nullable<int> OfferTyp
		{
			get
			{
				return this._OfferTyp;
			}
			set
			{
				if ((this._OfferTyp != value))
				{
					this.OnOfferTypChanging(value);
					this.SendPropertyChanging();
					this._OfferTyp = value;
					this.SendPropertyChanged("OfferTyp");
					this.OnOfferTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CInvType", DbType = "Int")]
		public System.Nullable<int> CInvType
		{
			get
			{
				return this._CInvType;
			}
			set
			{
				if ((this._CInvType != value))
				{
					this.OnCInvTypeChanging(value);
					this.SendPropertyChanging();
					this._CInvType = value;
					this.SendPropertyChanged("CInvType");
					this.OnCInvTypeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CaExState", DbType = "Int")]
		public System.Nullable<int> CaExState
		{
			get
			{
				return this._CaExState;
			}
			set
			{
				if ((this._CaExState != value))
				{
					this.OnCaExStateChanging(value);
					this.SendPropertyChanging();
					this._CaExState = value;
					this.SendPropertyChanged("CaExState");
					this.OnCaExStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVDET_T_SINVDET", Storage = "_T_SINVDETs", ThisKey = "InvDet_ID", OtherKey = "SInvId")]
		public EntitySet<T_SINVDET> T_SINVDETs
		{
			get
			{
				return this._T_SINVDETs;
			}
			set
			{
				this._T_SINVDETs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVHED_T_INVDET", Storage = "_T_INVHED", ThisKey = "InvId", OtherKey = "InvHed_ID", IsForeignKey = true)]
		public T_INVHED T_INVHED
		{
			get
			{
				return this._T_INVHED.Entity;
			}
			set
			{
				T_INVHED previousValue = this._T_INVHED.Entity;
				if (((previousValue != value)
							|| (this._T_INVHED.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_INVHED.Entity = null;
						previousValue.T_INVDETs.Remove(this);
					}
					this._T_INVHED.Entity = value;
					if ((value != null))
					{
						value.T_INVDETs.Add(this);
						this._InvId = value.InvHed_ID;
					}
					else
					{
						this._InvId = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_INVHED");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_INVDET", Storage = "_T_Item", ThisKey = "ItmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_INVDETs.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_INVDETs.Add(this);
						this._ItmNo = value.Itm_No;
					}
					else
					{
						this._ItmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_INVDET", Storage = "_T_Store", ThisKey = "StoreNo", OtherKey = "Stor_ID", IsForeignKey = true)]
		public T_Store T_Store
		{
			get
			{
				return this._T_Store.Entity;
			}
			set
			{
				T_Store previousValue = this._T_Store.Entity;
				if (((previousValue != value)
							|| (this._T_Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Store.Entity = null;
						previousValue.T_INVDETs.Remove(this);
					}
					this._T_Store.Entity = value;
					if ((value != null))
					{
						value.T_INVDETs.Add(this);
						this._StoreNo = value.Stor_ID;
					}
					else
					{
						this._StoreNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Store");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_SINVDETs(T_SINVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_INVDET = this;
		}

		private void detach_T_SINVDETs(T_SINVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_INVDET = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_INVDET_Repair")]
	public partial class T_INVDET_Repair : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _InvDet_ID_Repair;

		private string _InvNo_Repair;

		private System.Nullable<int> _InvId_Repair;

		private System.Nullable<int> _InvSer_Repair;

		private string _ItmNo_Repair;

		private System.Nullable<double> _Cost_Repair;

		private System.Nullable<double> _Qty_Repair;

		private string _ItmDes_Repair;

		private string _ItmUnt_Repair;

		private string _ItmDesE_Repair;

		private string _ItmUntE_Repair;

		private System.Nullable<double> _ItmUntPak_Repair;

		private System.Nullable<int> _StoreNo_Repair;

		private System.Nullable<double> _Price_Repair;

		private System.Nullable<double> _Amount_Repair;

		private System.Nullable<double> _RealQty_Repair;

		private System.Nullable<double> _itmInvDsc_Repair;

		private string _DatExper_Repair;

		private System.Nullable<double> _ItmDis_Repair;

		private System.Nullable<int> _ItmTyp_Repair;

		private System.Nullable<int> _ItmIndex_Repair;

		private System.Nullable<double> _ItmWight_Repair;

		private System.Nullable<double> _ItmWight_T_Repair;

		private System.Nullable<double> _ItmAddCost_Repair;

		private string _RunCod_Repair;

		private string _LineDetails_Repair;

		private int _InvDet_ID;

		private System.Nullable<int> _TypeRepair;

		private string _Serial_Key_Repair;

		private System.Nullable<double> _ItmTax_Repair;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnInvDet_ID_RepairChanging(int value);
		partial void OnInvDet_ID_RepairChanged();
		partial void OnInvNo_RepairChanging(string value);
		partial void OnInvNo_RepairChanged();
		partial void OnInvId_RepairChanging(System.Nullable<int> value);
		partial void OnInvId_RepairChanged();
		partial void OnInvSer_RepairChanging(System.Nullable<int> value);
		partial void OnInvSer_RepairChanged();
		partial void OnItmNo_RepairChanging(string value);
		partial void OnItmNo_RepairChanged();
		partial void OnCost_RepairChanging(System.Nullable<double> value);
		partial void OnCost_RepairChanged();
		partial void OnQty_RepairChanging(System.Nullable<double> value);
		partial void OnQty_RepairChanged();
		partial void OnItmDes_RepairChanging(string value);
		partial void OnItmDes_RepairChanged();
		partial void OnItmUnt_RepairChanging(string value);
		partial void OnItmUnt_RepairChanged();
		partial void OnItmDesE_RepairChanging(string value);
		partial void OnItmDesE_RepairChanged();
		partial void OnItmUntE_RepairChanging(string value);
		partial void OnItmUntE_RepairChanged();
		partial void OnItmUntPak_RepairChanging(System.Nullable<double> value);
		partial void OnItmUntPak_RepairChanged();
		partial void OnStoreNo_RepairChanging(System.Nullable<int> value);
		partial void OnStoreNo_RepairChanged();
		partial void OnPrice_RepairChanging(System.Nullable<double> value);
		partial void OnPrice_RepairChanged();
		partial void OnAmount_RepairChanging(System.Nullable<double> value);
		partial void OnAmount_RepairChanged();
		partial void OnRealQty_RepairChanging(System.Nullable<double> value);
		partial void OnRealQty_RepairChanged();
		partial void OnitmInvDsc_RepairChanging(System.Nullable<double> value);
		partial void OnitmInvDsc_RepairChanged();
		partial void OnDatExper_RepairChanging(string value);
		partial void OnDatExper_RepairChanged();
		partial void OnItmDis_RepairChanging(System.Nullable<double> value);
		partial void OnItmDis_RepairChanged();
		partial void OnItmTyp_RepairChanging(System.Nullable<int> value);
		partial void OnItmTyp_RepairChanged();
		partial void OnItmIndex_RepairChanging(System.Nullable<int> value);
		partial void OnItmIndex_RepairChanged();
		partial void OnItmWight_RepairChanging(System.Nullable<double> value);
		partial void OnItmWight_RepairChanged();
		partial void OnItmWight_T_RepairChanging(System.Nullable<double> value);
		partial void OnItmWight_T_RepairChanged();
		partial void OnItmAddCost_RepairChanging(System.Nullable<double> value);
		partial void OnItmAddCost_RepairChanged();
		partial void OnRunCod_RepairChanging(string value);
		partial void OnRunCod_RepairChanged();
		partial void OnLineDetails_RepairChanging(string value);
		partial void OnLineDetails_RepairChanged();
		partial void OnInvDet_IDChanging(int value);
		partial void OnInvDet_IDChanged();
		partial void OnTypeRepairChanging(System.Nullable<int> value);
		partial void OnTypeRepairChanged();
		partial void OnSerial_Key_RepairChanging(string value);
		partial void OnSerial_Key_RepairChanged();
		partial void OnItmTax_RepairChanging(System.Nullable<double> value);
		partial void OnItmTax_RepairChanged();
		#endregion

		public T_INVDET_Repair()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvDet_ID_Repair", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int InvDet_ID_Repair
		{
			get
			{
				return this._InvDet_ID_Repair;
			}
			set
			{
				if ((this._InvDet_ID_Repair != value))
				{
					this.OnInvDet_ID_RepairChanging(value);
					this.SendPropertyChanging();
					this._InvDet_ID_Repair = value;
					this.SendPropertyChanged("InvDet_ID_Repair");
					this.OnInvDet_ID_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNo_Repair", DbType = "VarChar(10)")]
		public string InvNo_Repair
		{
			get
			{
				return this._InvNo_Repair;
			}
			set
			{
				if ((this._InvNo_Repair != value))
				{
					this.OnInvNo_RepairChanging(value);
					this.SendPropertyChanging();
					this._InvNo_Repair = value;
					this.SendPropertyChanged("InvNo_Repair");
					this.OnInvNo_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvId_Repair", DbType = "Int")]
		public System.Nullable<int> InvId_Repair
		{
			get
			{
				return this._InvId_Repair;
			}
			set
			{
				if ((this._InvId_Repair != value))
				{
					this.OnInvId_RepairChanging(value);
					this.SendPropertyChanging();
					this._InvId_Repair = value;
					this.SendPropertyChanged("InvId_Repair");
					this.OnInvId_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvSer_Repair", DbType = "Int")]
		public System.Nullable<int> InvSer_Repair
		{
			get
			{
				return this._InvSer_Repair;
			}
			set
			{
				if ((this._InvSer_Repair != value))
				{
					this.OnInvSer_RepairChanging(value);
					this.SendPropertyChanging();
					this._InvSer_Repair = value;
					this.SendPropertyChanged("InvSer_Repair");
					this.OnInvSer_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmNo_Repair", DbType = "VarChar(50)")]
		public string ItmNo_Repair
		{
			get
			{
				return this._ItmNo_Repair;
			}
			set
			{
				if ((this._ItmNo_Repair != value))
				{
					this.OnItmNo_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmNo_Repair = value;
					this.SendPropertyChanged("ItmNo_Repair");
					this.OnItmNo_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cost_Repair", DbType = "Float")]
		public System.Nullable<double> Cost_Repair
		{
			get
			{
				return this._Cost_Repair;
			}
			set
			{
				if ((this._Cost_Repair != value))
				{
					this.OnCost_RepairChanging(value);
					this.SendPropertyChanging();
					this._Cost_Repair = value;
					this.SendPropertyChanged("Cost_Repair");
					this.OnCost_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Qty_Repair", DbType = "Float")]
		public System.Nullable<double> Qty_Repair
		{
			get
			{
				return this._Qty_Repair;
			}
			set
			{
				if ((this._Qty_Repair != value))
				{
					this.OnQty_RepairChanging(value);
					this.SendPropertyChanging();
					this._Qty_Repair = value;
					this.SendPropertyChanged("Qty_Repair");
					this.OnQty_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmDes_Repair", DbType = "VarChar(100)")]
		public string ItmDes_Repair
		{
			get
			{
				return this._ItmDes_Repair;
			}
			set
			{
				if ((this._ItmDes_Repair != value))
				{
					this.OnItmDes_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmDes_Repair = value;
					this.SendPropertyChanged("ItmDes_Repair");
					this.OnItmDes_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmUnt_Repair", DbType = "VarChar(15)")]
		public string ItmUnt_Repair
		{
			get
			{
				return this._ItmUnt_Repair;
			}
			set
			{
				if ((this._ItmUnt_Repair != value))
				{
					this.OnItmUnt_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmUnt_Repair = value;
					this.SendPropertyChanged("ItmUnt_Repair");
					this.OnItmUnt_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmDesE_Repair", DbType = "VarChar(100)")]
		public string ItmDesE_Repair
		{
			get
			{
				return this._ItmDesE_Repair;
			}
			set
			{
				if ((this._ItmDesE_Repair != value))
				{
					this.OnItmDesE_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmDesE_Repair = value;
					this.SendPropertyChanged("ItmDesE_Repair");
					this.OnItmDesE_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmUntE_Repair", DbType = "VarChar(15)")]
		public string ItmUntE_Repair
		{
			get
			{
				return this._ItmUntE_Repair;
			}
			set
			{
				if ((this._ItmUntE_Repair != value))
				{
					this.OnItmUntE_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmUntE_Repair = value;
					this.SendPropertyChanged("ItmUntE_Repair");
					this.OnItmUntE_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmUntPak_Repair", DbType = "Float")]
		public System.Nullable<double> ItmUntPak_Repair
		{
			get
			{
				return this._ItmUntPak_Repair;
			}
			set
			{
				if ((this._ItmUntPak_Repair != value))
				{
					this.OnItmUntPak_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmUntPak_Repair = value;
					this.SendPropertyChanged("ItmUntPak_Repair");
					this.OnItmUntPak_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StoreNo_Repair", DbType = "Int")]
		public System.Nullable<int> StoreNo_Repair
		{
			get
			{
				return this._StoreNo_Repair;
			}
			set
			{
				if ((this._StoreNo_Repair != value))
				{
					this.OnStoreNo_RepairChanging(value);
					this.SendPropertyChanging();
					this._StoreNo_Repair = value;
					this.SendPropertyChanged("StoreNo_Repair");
					this.OnStoreNo_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price_Repair", DbType = "Float")]
		public System.Nullable<double> Price_Repair
		{
			get
			{
				return this._Price_Repair;
			}
			set
			{
				if ((this._Price_Repair != value))
				{
					this.OnPrice_RepairChanging(value);
					this.SendPropertyChanging();
					this._Price_Repair = value;
					this.SendPropertyChanged("Price_Repair");
					this.OnPrice_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Amount_Repair", DbType = "Float")]
		public System.Nullable<double> Amount_Repair
		{
			get
			{
				return this._Amount_Repair;
			}
			set
			{
				if ((this._Amount_Repair != value))
				{
					this.OnAmount_RepairChanging(value);
					this.SendPropertyChanging();
					this._Amount_Repair = value;
					this.SendPropertyChanged("Amount_Repair");
					this.OnAmount_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RealQty_Repair", DbType = "Float")]
		public System.Nullable<double> RealQty_Repair
		{
			get
			{
				return this._RealQty_Repair;
			}
			set
			{
				if ((this._RealQty_Repair != value))
				{
					this.OnRealQty_RepairChanging(value);
					this.SendPropertyChanging();
					this._RealQty_Repair = value;
					this.SendPropertyChanged("RealQty_Repair");
					this.OnRealQty_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_itmInvDsc_Repair", DbType = "Float")]
		public System.Nullable<double> itmInvDsc_Repair
		{
			get
			{
				return this._itmInvDsc_Repair;
			}
			set
			{
				if ((this._itmInvDsc_Repair != value))
				{
					this.OnitmInvDsc_RepairChanging(value);
					this.SendPropertyChanging();
					this._itmInvDsc_Repair = value;
					this.SendPropertyChanged("itmInvDsc_Repair");
					this.OnitmInvDsc_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DatExper_Repair", DbType = "VarChar(11)")]
		public string DatExper_Repair
		{
			get
			{
				return this._DatExper_Repair;
			}
			set
			{
				if ((this._DatExper_Repair != value))
				{
					this.OnDatExper_RepairChanging(value);
					this.SendPropertyChanging();
					this._DatExper_Repair = value;
					this.SendPropertyChanged("DatExper_Repair");
					this.OnDatExper_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmDis_Repair", DbType = "Float")]
		public System.Nullable<double> ItmDis_Repair
		{
			get
			{
				return this._ItmDis_Repair;
			}
			set
			{
				if ((this._ItmDis_Repair != value))
				{
					this.OnItmDis_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmDis_Repair = value;
					this.SendPropertyChanged("ItmDis_Repair");
					this.OnItmDis_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmTyp_Repair", DbType = "Int")]
		public System.Nullable<int> ItmTyp_Repair
		{
			get
			{
				return this._ItmTyp_Repair;
			}
			set
			{
				if ((this._ItmTyp_Repair != value))
				{
					this.OnItmTyp_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmTyp_Repair = value;
					this.SendPropertyChanged("ItmTyp_Repair");
					this.OnItmTyp_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmIndex_Repair", DbType = "Int")]
		public System.Nullable<int> ItmIndex_Repair
		{
			get
			{
				return this._ItmIndex_Repair;
			}
			set
			{
				if ((this._ItmIndex_Repair != value))
				{
					this.OnItmIndex_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmIndex_Repair = value;
					this.SendPropertyChanged("ItmIndex_Repair");
					this.OnItmIndex_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmWight_Repair", DbType = "Float")]
		public System.Nullable<double> ItmWight_Repair
		{
			get
			{
				return this._ItmWight_Repair;
			}
			set
			{
				if ((this._ItmWight_Repair != value))
				{
					this.OnItmWight_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmWight_Repair = value;
					this.SendPropertyChanged("ItmWight_Repair");
					this.OnItmWight_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmWight_T_Repair", DbType = "Float")]
		public System.Nullable<double> ItmWight_T_Repair
		{
			get
			{
				return this._ItmWight_T_Repair;
			}
			set
			{
				if ((this._ItmWight_T_Repair != value))
				{
					this.OnItmWight_T_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmWight_T_Repair = value;
					this.SendPropertyChanged("ItmWight_T_Repair");
					this.OnItmWight_T_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmAddCost_Repair", DbType = "Float")]
		public System.Nullable<double> ItmAddCost_Repair
		{
			get
			{
				return this._ItmAddCost_Repair;
			}
			set
			{
				if ((this._ItmAddCost_Repair != value))
				{
					this.OnItmAddCost_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmAddCost_Repair = value;
					this.SendPropertyChanged("ItmAddCost_Repair");
					this.OnItmAddCost_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RunCod_Repair", DbType = "VarChar(100)")]
		public string RunCod_Repair
		{
			get
			{
				return this._RunCod_Repair;
			}
			set
			{
				if ((this._RunCod_Repair != value))
				{
					this.OnRunCod_RepairChanging(value);
					this.SendPropertyChanging();
					this._RunCod_Repair = value;
					this.SendPropertyChanged("RunCod_Repair");
					this.OnRunCod_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineDetails_Repair", DbType = "VarChar(250)")]
		public string LineDetails_Repair
		{
			get
			{
				return this._LineDetails_Repair;
			}
			set
			{
				if ((this._LineDetails_Repair != value))
				{
					this.OnLineDetails_RepairChanging(value);
					this.SendPropertyChanging();
					this._LineDetails_Repair = value;
					this.SendPropertyChanged("LineDetails_Repair");
					this.OnLineDetails_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvDet_ID", DbType = "Int NOT NULL")]
		public int InvDet_ID
		{
			get
			{
				return this._InvDet_ID;
			}
			set
			{
				if ((this._InvDet_ID != value))
				{
					this.OnInvDet_IDChanging(value);
					this.SendPropertyChanging();
					this._InvDet_ID = value;
					this.SendPropertyChanged("InvDet_ID");
					this.OnInvDet_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TypeRepair", DbType = "Int")]
		public System.Nullable<int> TypeRepair
		{
			get
			{
				return this._TypeRepair;
			}
			set
			{
				if ((this._TypeRepair != value))
				{
					this.OnTypeRepairChanging(value);
					this.SendPropertyChanging();
					this._TypeRepair = value;
					this.SendPropertyChanged("TypeRepair");
					this.OnTypeRepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Serial_Key_Repair", DbType = "VarChar(100)")]
		public string Serial_Key_Repair
		{
			get
			{
				return this._Serial_Key_Repair;
			}
			set
			{
				if ((this._Serial_Key_Repair != value))
				{
					this.OnSerial_Key_RepairChanging(value);
					this.SendPropertyChanging();
					this._Serial_Key_Repair = value;
					this.SendPropertyChanged("Serial_Key_Repair");
					this.OnSerial_Key_RepairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmTax_Repair", DbType = "Float")]
		public System.Nullable<double> ItmTax_Repair
		{
			get
			{
				return this._ItmTax_Repair;
			}
			set
			{
				if ((this._ItmTax_Repair != value))
				{
					this.OnItmTax_RepairChanging(value);
					this.SendPropertyChanging();
					this._ItmTax_Repair = value;
					this.SendPropertyChanged("ItmTax_Repair");
					this.OnItmTax_RepairChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_InvDetNote")]
	public partial class T_InvDetNote : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _InvDetNote_ID;

		private string _InvDetNote_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<double> _Price;

		private System.Nullable<int> _BrNo;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnInvDetNote_IDChanging(int value);
		partial void OnInvDetNote_IDChanged();
		partial void OnInvDetNote_NoChanging(string value);
		partial void OnInvDetNote_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnPriceChanging(System.Nullable<double> value);
		partial void OnPriceChanged();
		partial void OnBrNoChanging(System.Nullable<int> value);
		partial void OnBrNoChanged();
		#endregion

		public T_InvDetNote()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvDetNote_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int InvDetNote_ID
		{
			get
			{
				return this._InvDetNote_ID;
			}
			set
			{
				if ((this._InvDetNote_ID != value))
				{
					this.OnInvDetNote_IDChanging(value);
					this.SendPropertyChanging();
					this._InvDetNote_ID = value;
					this.SendPropertyChanged("InvDetNote_ID");
					this.OnInvDetNote_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvDetNote_No", DbType = "VarChar(30)")]
		public string InvDetNote_No
		{
			get
			{
				return this._InvDetNote_No;
			}
			set
			{
				if ((this._InvDetNote_No != value))
				{
					this.OnInvDetNote_NoChanging(value);
					this.SendPropertyChanging();
					this._InvDetNote_No = value;
					this.SendPropertyChanged("InvDetNote_No");
					this.OnInvDetNote_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(MAX)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(MAX)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price", DbType = "Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BrNo", DbType = "Int")]
		public System.Nullable<int> BrNo
		{
			get
			{
				return this._BrNo;
			}
			set
			{
				if ((this._BrNo != value))
				{
					this.OnBrNoChanging(value);
					this.SendPropertyChanging();
					this._BrNo = value;
					this.SendPropertyChanged("BrNo");
					this.OnBrNoChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_INVHED")]
	public partial class T_INVHED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private string _Hash_Value;
		partial void OnHash_ValueChanging(string value);
		partial void OnHash_ValueChanged();
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Hash_Value", DbType = "VarChar(MAX)")]
		public string Hash_Value
		{
			get
			{
				return this._Hash_Value;
			}
			set
			{
				if ((this._Hash_Value != value))
				{
					this.OnHash_ValueChanging(value);
					this.SendPropertyChanging();
					this._Hash_Value = value;
					this.SendPropertyChanged("Hash_Value");
					this.OnHash_ValueChanged();
				}
			}
		}

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _InvHed_ID;

		private System.Nullable<double> _InvId;

		private string _InvNo;

		private System.Nullable<int> _InvTyp;

		private System.Nullable<int> _InvCashPay;

		private string _CusVenNo;

		private string _CusVenNm;

		private string _CusVenAdd;

		private string _CusVenTel;

		private string _Remark;

		private string _HDat;

		private string _GDat;

		private System.Nullable<int> _MndNo;

		private string _SalsManNo;

		private string _SalsManNam;

		private System.Nullable<double> _InvTot;

		private System.Nullable<double> _InvTotLocCur;

		private System.Nullable<double> _InvDisPrs;

		private System.Nullable<double> _InvDisVal;

		private System.Nullable<double> _InvDisValLocCur;

		private System.Nullable<double> _InvNet;

		private System.Nullable<double> _InvNetLocCur;

		private System.Nullable<double> _CashPay;

		private System.Nullable<double> _CashPayLocCur;

		private System.Nullable<int> _IfRet;

		private System.Nullable<double> _GadeNo;

		private System.Nullable<double> _GadeId;

		private System.Nullable<int> _IfDel;

		private string _RetNo;

		private System.Nullable<double> _RetId;

		private System.Nullable<int> _InvCstNo;

		private string _InvCashPayNm;

		private string _RefNo;

		private System.Nullable<double> _InvCost;

		private string _EstDat;

		private System.Nullable<int> _CustPri;

		private string _ArbTaf;

		private System.Nullable<int> _CurTyp;

		private string _InvCash;

		private string _ToStore;

		private string _ToStoreNm;

		private System.Nullable<double> _InvQty;

		private string _EngTaf;

		private System.Nullable<int> _IfTrans;

		private System.Nullable<double> _CustRep;

		private System.Nullable<double> _CustNet;

		private System.Nullable<double> _InvWight_T;

		private System.Nullable<int> _IfPrint;

		private string _LTim;

		private string _CREATED_BY;

		private System.Nullable<System.DateTime> _DATE_CREATED;

		private string _MODIFIED_BY;

		private System.Nullable<System.DateTime> _DATE_MODIFIED;

		private System.Nullable<double> _CreditPay;

		private System.Nullable<double> _CreditPayLocCur;

		private System.Nullable<double> _NetworkPay;

		private System.Nullable<double> _NetworkPayLocCur;

		private System.Nullable<double> _CommMnd_Inv;

		private System.Nullable<bool> _MndExtrnal;

		private System.Nullable<int> _CompanyID;

		private System.Nullable<double> _InvAddCost;

		private System.Nullable<double> _InvAddCostLoc;

		private System.Nullable<double> _InvAddCostExtrnal;

		private System.Nullable<double> _InvAddCostExtrnalLoc;

		private System.Nullable<bool> _IsExtrnalGaid;

		private System.Nullable<double> _ExtrnalCostGaidID;

		private System.Nullable<double> _Puyaid;

		private System.Nullable<double> _Remming;

		private System.Nullable<int> _RoomNo;

		private System.Nullable<int> _OrderTyp;

		private System.Nullable<bool> _RoomSts;

		private System.Nullable<int> _chauffeurNo;

		private System.Nullable<int> _RoomPerson;

		private System.Nullable<double> _ServiceValue;

		private System.Nullable<bool> _Sts;

		private System.Nullable<int> _PaymentOrderTyp;

		private System.Nullable<bool> _AdminLock;

		private string _DeleteDate;

		private string _DeleteTime;

		private string _UserNew;

		private System.Nullable<int> _IfEnter;

		private System.Nullable<double> _InvAddTax;

		private System.Nullable<double> _InvAddTaxlLoc;

		private System.Nullable<bool> _IsTaxGaid;

		private System.Nullable<double> _TaxGaidID;

		private System.Nullable<bool> _IsTaxUse;

		private System.Nullable<double> _InvValGaidDis;

		private System.Nullable<double> _InvValGaidDislLoc;

		private System.Nullable<bool> _IsDisGaid;

		private System.Nullable<double> _DisGaidID1;

		private System.Nullable<bool> _IsDisUse1;

		private System.Nullable<double> _InvComm;

		private System.Nullable<double> _InvCommLoc;

		private System.Nullable<bool> _IsCommGaid;

		private System.Nullable<double> _CommGaidID;

		private System.Nullable<bool> _IsCommUse;

		private System.Nullable<bool> _IsTaxLines;

		private System.Nullable<bool> _IsTaxByTotal;

		private System.Nullable<bool> _IsTaxByNet;

		private System.Nullable<double> _TaxByNetValue;

		private System.Nullable<double> _DesPointsValue;

		private System.Nullable<double> _DesPointsValueLocCur;

		private System.Nullable<double> _PointsCount;

		private System.Nullable<bool> _IsPoints;

		private string _tailor1;

		private string _tailor2;

		private string _tailor3;

		private string _tailor4;

		private string _tailor5;

		private string _tailor6;

		private string _tailor7;

		private string _tailor8;

		private string _tailor9;

		private string _tailor10;

		private string _tailor11;

		private string _tailor12;

		private string _tailor13;

		private string _tailor14;

		private string _tailor15;

		private string _tailor16;

		private string _tailor17;

		private string _tailor18;

		private string _tailor19;

		private string _tailor20;

		private System.Data.Linq.Binary _InvImg;

		private System.Nullable<bool> _PriceIncludTax;

		private string _CusVenMob;

		private System.Nullable<int> _CInvType;

		private System.Nullable<int> _OrderStatus;

		private string _VehiclechassisNumber;

		private System.Nullable<int> _Car_ID;

		private string _Car_TypeNameA;

		private string _Car_TypeNameE;

		private string _Car_NameA;

		private string _Car_NameE;

		private string _PlateNo;

		private string _Color;

		private string _ModelNo;

		private System.Nullable<System.DateTime> _Delevery_Date;

		private EntitySet<T_INVDET> _T_INVDETs;

		private EntitySet<T_SINVDET> _T_SINVDETs;

		private EntityRef<T_Chauffeur> _T_Chauffeur;

		private EntityRef<T_CstTbl> _T_CstTbl;

		private EntityRef<T_Curency> _T_Curency;

		private EntityRef<T_INVSETTING> _T_INVSETTING;

		private EntityRef<T_Mndob> _T_Mndob;

		private EntityRef<T_Room> _T_Room;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnInvHed_IDChanging(int value);
		partial void OnInvHed_IDChanged();
		partial void OnInvIdChanging(System.Nullable<double> value);
		partial void OnInvIdChanged();
		partial void OnInvNoChanging(string value);
		partial void OnInvNoChanged();
		partial void OnInvTypChanging(System.Nullable<int> value);
		partial void OnInvTypChanged();
		partial void OnInvCashPayChanging(System.Nullable<int> value);
		partial void OnInvCashPayChanged();
		partial void OnCusVenNoChanging(string value);
		partial void OnCusVenNoChanged();
		partial void OnCusVenNmChanging(string value);
		partial void OnCusVenNmChanged();
		partial void OnCusVenAddChanging(string value);
		partial void OnCusVenAddChanged();
		partial void OnCusVenTelChanging(string value);
		partial void OnCusVenTelChanged();
		partial void OnRemarkChanging(string value);
		partial void OnRemarkChanged();
		partial void OnHDatChanging(string value);
		partial void OnHDatChanged();
		partial void OnGDatChanging(string value);
		partial void OnGDatChanged();
		partial void OnMndNoChanging(System.Nullable<int> value);
		partial void OnMndNoChanged();
		partial void OnSalsManNoChanging(string value);
		partial void OnSalsManNoChanged();
		partial void OnSalsManNamChanging(string value);
		partial void OnSalsManNamChanged();
		partial void OnInvTotChanging(System.Nullable<double> value);
		partial void OnInvTotChanged();
		partial void OnInvTotLocCurChanging(System.Nullable<double> value);
		partial void OnInvTotLocCurChanged();
		partial void OnInvDisPrsChanging(System.Nullable<double> value);
		partial void OnInvDisPrsChanged();
		partial void OnInvDisValChanging(System.Nullable<double> value);
		partial void OnInvDisValChanged();
		partial void OnInvDisValLocCurChanging(System.Nullable<double> value);
		partial void OnInvDisValLocCurChanged();
		partial void OnInvNetChanging(System.Nullable<double> value);
		partial void OnInvNetChanged();
		partial void OnInvNetLocCurChanging(System.Nullable<double> value);
		partial void OnInvNetLocCurChanged();
		partial void OnCashPayChanging(System.Nullable<double> value);
		partial void OnCashPayChanged();
		partial void OnCashPayLocCurChanging(System.Nullable<double> value);
		partial void OnCashPayLocCurChanged();
		partial void OnIfRetChanging(System.Nullable<int> value);
		partial void OnIfRetChanged();
		partial void OnGadeNoChanging(System.Nullable<double> value);
		partial void OnGadeNoChanged();
		partial void OnGadeIdChanging(System.Nullable<double> value);
		partial void OnGadeIdChanged();
		partial void OnIfDelChanging(System.Nullable<int> value);
		partial void OnIfDelChanged();
		partial void OnRetNoChanging(string value);
		partial void OnRetNoChanged();
		partial void OnRetIdChanging(System.Nullable<double> value);
		partial void OnRetIdChanged();
		partial void OnInvCstNoChanging(System.Nullable<int> value);
		partial void OnInvCstNoChanged();
		partial void OnInvCashPayNmChanging(string value);
		partial void OnInvCashPayNmChanged();
		partial void OnRefNoChanging(string value);
		partial void OnRefNoChanged();
		partial void OnInvCostChanging(System.Nullable<double> value);
		partial void OnInvCostChanged();
		partial void OnEstDatChanging(string value);
		partial void OnEstDatChanged();
		partial void OnCustPriChanging(System.Nullable<int> value);
		partial void OnCustPriChanged();
		partial void OnArbTafChanging(string value);
		partial void OnArbTafChanged();
		partial void OnCurTypChanging(System.Nullable<int> value);
		partial void OnCurTypChanged();
		partial void OnInvCashChanging(string value);
		partial void OnInvCashChanged();
		partial void OnToStoreChanging(string value);
		partial void OnToStoreChanged();
		partial void OnToStoreNmChanging(string value);
		partial void OnToStoreNmChanged();
		partial void OnInvQtyChanging(System.Nullable<double> value);
		partial void OnInvQtyChanged();
		partial void OnEngTafChanging(string value);
		partial void OnEngTafChanged();
		partial void OnIfTransChanging(System.Nullable<int> value);
		partial void OnIfTransChanged();
		partial void OnCustRepChanging(System.Nullable<double> value);
		partial void OnCustRepChanged();
		partial void OnCustNetChanging(System.Nullable<double> value);
		partial void OnCustNetChanged();
		partial void OnInvWight_TChanging(System.Nullable<double> value);
		partial void OnInvWight_TChanged();
		partial void OnIfPrintChanging(System.Nullable<int> value);
		partial void OnIfPrintChanged();
		partial void OnLTimChanging(string value);
		partial void OnLTimChanged();
		partial void OnCREATED_BYChanging(string value);
		partial void OnCREATED_BYChanged();
		partial void OnDATE_CREATEDChanging(System.Nullable<System.DateTime> value);
		partial void OnDATE_CREATEDChanged();
		partial void OnMODIFIED_BYChanging(string value);
		partial void OnMODIFIED_BYChanged();
		partial void OnDATE_MODIFIEDChanging(System.Nullable<System.DateTime> value);
		partial void OnDATE_MODIFIEDChanged();
		partial void OnCreditPayChanging(System.Nullable<double> value);
		partial void OnCreditPayChanged();
		partial void OnCreditPayLocCurChanging(System.Nullable<double> value);
		partial void OnCreditPayLocCurChanged();
		partial void OnNetworkPayChanging(System.Nullable<double> value);
		partial void OnNetworkPayChanged();
		partial void OnNetworkPayLocCurChanging(System.Nullable<double> value);
		partial void OnNetworkPayLocCurChanged();
		partial void OnCommMnd_InvChanging(System.Nullable<double> value);
		partial void OnCommMnd_InvChanged();
		partial void OnMndExtrnalChanging(System.Nullable<bool> value);
		partial void OnMndExtrnalChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnInvAddCostChanging(System.Nullable<double> value);
		partial void OnInvAddCostChanged();
		partial void OnInvAddCostLocChanging(System.Nullable<double> value);
		partial void OnInvAddCostLocChanged();
		partial void OnInvAddCostExtrnalChanging(System.Nullable<double> value);
		partial void OnInvAddCostExtrnalChanged();
		partial void OnInvAddCostExtrnalLocChanging(System.Nullable<double> value);
		partial void OnInvAddCostExtrnalLocChanged();
		partial void OnIsExtrnalGaidChanging(System.Nullable<bool> value);
		partial void OnIsExtrnalGaidChanged();
		partial void OnExtrnalCostGaidIDChanging(System.Nullable<double> value);
		partial void OnExtrnalCostGaidIDChanged();
		partial void OnPuyaidChanging(System.Nullable<double> value);
		partial void OnPuyaidChanged();
		partial void OnRemmingChanging(System.Nullable<double> value);
		partial void OnRemmingChanged();
		partial void OnRoomNoChanging(System.Nullable<int> value);
		partial void OnRoomNoChanged();
		partial void OnOrderTypChanging(System.Nullable<int> value);
		partial void OnOrderTypChanged();
		partial void OnRoomStsChanging(System.Nullable<bool> value);
		partial void OnRoomStsChanged();
		partial void OnchauffeurNoChanging(System.Nullable<int> value);
		partial void OnchauffeurNoChanged();
		partial void OnRoomPersonChanging(System.Nullable<int> value);
		partial void OnRoomPersonChanged();
		partial void OnServiceValueChanging(System.Nullable<double> value);
		partial void OnServiceValueChanged();
		partial void OnStsChanging(System.Nullable<bool> value);
		partial void OnStsChanged();
		partial void OnPaymentOrderTypChanging(System.Nullable<int> value);
		partial void OnPaymentOrderTypChanged();
		partial void OnAdminLockChanging(System.Nullable<bool> value);
		partial void OnAdminLockChanged();
		partial void OnDeleteDateChanging(string value);
		partial void OnDeleteDateChanged();
		partial void OnDeleteTimeChanging(string value);
		partial void OnDeleteTimeChanged();
		partial void OnUserNewChanging(string value);
		partial void OnUserNewChanged();
		partial void OnIfEnterChanging(System.Nullable<int> value);
		partial void OnIfEnterChanged();
		partial void OnInvAddTaxChanging(System.Nullable<double> value);
		partial void OnInvAddTaxChanged();
		partial void OnInvAddTaxlLocChanging(System.Nullable<double> value);
		partial void OnInvAddTaxlLocChanged();
		partial void OnIsTaxGaidChanging(System.Nullable<bool> value);
		partial void OnIsTaxGaidChanged();
		partial void OnTaxGaidIDChanging(System.Nullable<double> value);
		partial void OnTaxGaidIDChanged();
		partial void OnIsTaxUseChanging(System.Nullable<bool> value);
		partial void OnIsTaxUseChanged();
		partial void OnInvValGaidDisChanging(System.Nullable<double> value);
		partial void OnInvValGaidDisChanged();
		partial void OnInvValGaidDislLocChanging(System.Nullable<double> value);
		partial void OnInvValGaidDislLocChanged();
		partial void OnIsDisGaidChanging(System.Nullable<bool> value);
		partial void OnIsDisGaidChanged();
		partial void OnDisGaidID1Changing(System.Nullable<double> value);
		partial void OnDisGaidID1Changed();
		partial void OnIsDisUse1Changing(System.Nullable<bool> value);
		partial void OnIsDisUse1Changed();
		partial void OnInvCommChanging(System.Nullable<double> value);
		partial void OnInvCommChanged();
		partial void OnInvCommLocChanging(System.Nullable<double> value);
		partial void OnInvCommLocChanged();
		partial void OnIsCommGaidChanging(System.Nullable<bool> value);
		partial void OnIsCommGaidChanged();
		partial void OnCommGaidIDChanging(System.Nullable<double> value);
		partial void OnCommGaidIDChanged();
		partial void OnIsCommUseChanging(System.Nullable<bool> value);
		partial void OnIsCommUseChanged();
		partial void OnIsTaxLinesChanging(System.Nullable<bool> value);
		partial void OnIsTaxLinesChanged();
		partial void OnIsTaxByTotalChanging(System.Nullable<bool> value);
		partial void OnIsTaxByTotalChanged();
		partial void OnIsTaxByNetChanging(System.Nullable<bool> value);
		partial void OnIsTaxByNetChanged();
		partial void OnTaxByNetValueChanging(System.Nullable<double> value);
		partial void OnTaxByNetValueChanged();
		partial void OnDesPointsValueChanging(System.Nullable<double> value);
		partial void OnDesPointsValueChanged();
		partial void OnDesPointsValueLocCurChanging(System.Nullable<double> value);
		partial void OnDesPointsValueLocCurChanged();
		partial void OnPointsCountChanging(System.Nullable<double> value);
		partial void OnPointsCountChanged();
		partial void OnIsPointsChanging(System.Nullable<bool> value);
		partial void OnIsPointsChanged();
		partial void Ontailor1Changing(string value);
		partial void Ontailor1Changed();
		partial void Ontailor2Changing(string value);
		partial void Ontailor2Changed();
		partial void Ontailor3Changing(string value);
		partial void Ontailor3Changed();
		partial void Ontailor4Changing(string value);
		partial void Ontailor4Changed();
		partial void Ontailor5Changing(string value);
		partial void Ontailor5Changed();
		partial void Ontailor6Changing(string value);
		partial void Ontailor6Changed();
		partial void Ontailor7Changing(string value);
		partial void Ontailor7Changed();
		partial void Ontailor8Changing(string value);
		partial void Ontailor8Changed();
		partial void Ontailor9Changing(string value);
		partial void Ontailor9Changed();
		partial void Ontailor10Changing(string value);
		partial void Ontailor10Changed();
		partial void Ontailor11Changing(string value);
		partial void Ontailor11Changed();
		partial void Ontailor12Changing(string value);
		partial void Ontailor12Changed();
		partial void Ontailor13Changing(string value);
		partial void Ontailor13Changed();
		partial void Ontailor14Changing(string value);
		partial void Ontailor14Changed();
		partial void Ontailor15Changing(string value);
		partial void Ontailor15Changed();
		partial void Ontailor16Changing(string value);
		partial void Ontailor16Changed();
		partial void Ontailor17Changing(string value);
		partial void Ontailor17Changed();
		partial void Ontailor18Changing(string value);
		partial void Ontailor18Changed();
		partial void Ontailor19Changing(string value);
		partial void Ontailor19Changed();
		partial void Ontailor20Changing(string value);
		partial void Ontailor20Changed();
		partial void OnInvImgChanging(System.Data.Linq.Binary value);
		partial void OnInvImgChanged();
		partial void OnPriceIncludTaxChanging(System.Nullable<bool> value);
		partial void OnPriceIncludTaxChanged();
		partial void OnCusVenMobChanging(string value);
		partial void OnCusVenMobChanged();
		partial void OnCInvTypeChanging(System.Nullable<int> value);
		partial void OnCInvTypeChanged();
		partial void OnOrderStatusChanging(System.Nullable<int> value);
		partial void OnOrderStatusChanged();
		partial void OnVehiclechassisNumberChanging(string value);
		partial void OnVehiclechassisNumberChanged();
		partial void OnCar_IDChanging(System.Nullable<int> value);
		partial void OnCar_IDChanged();
		partial void OnCar_TypeNameAChanging(string value);
		partial void OnCar_TypeNameAChanged();
		partial void OnCar_TypeNameEChanging(string value);
		partial void OnCar_TypeNameEChanged();
		partial void OnCar_NameAChanging(string value);
		partial void OnCar_NameAChanged();
		partial void OnCar_NameEChanging(string value);
		partial void OnCar_NameEChanged();
		partial void OnPlateNoChanging(string value);
		partial void OnPlateNoChanged();
		partial void OnColorChanging(string value);
		partial void OnColorChanged();
		partial void OnModelNoChanging(string value);
		partial void OnModelNoChanged();
		partial void OnDelevery_DateChanging(System.Nullable<System.DateTime> value);
		partial void OnDelevery_DateChanged();
		#endregion

		public T_INVHED()
		{
			this._T_INVDETs = new EntitySet<T_INVDET>(new Action<T_INVDET>(this.attach_T_INVDETs), new Action<T_INVDET>(this.detach_T_INVDETs));
			this._T_SINVDETs = new EntitySet<T_SINVDET>(new Action<T_SINVDET>(this.attach_T_SINVDETs), new Action<T_SINVDET>(this.detach_T_SINVDETs));
			this._T_Chauffeur = default(EntityRef<T_Chauffeur>);
			this._T_CstTbl = default(EntityRef<T_CstTbl>);
			this._T_Curency = default(EntityRef<T_Curency>);
			this._T_INVSETTING = default(EntityRef<T_INVSETTING>);
			this._T_Mndob = default(EntityRef<T_Mndob>);
			this._T_Room = default(EntityRef<T_Room>);
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvHed_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int InvHed_ID
		{
			get
			{
				return this._InvHed_ID;
			}
			set
			{
				if ((this._InvHed_ID != value))
				{
					this.OnInvHed_IDChanging(value);
					this.SendPropertyChanging();
					this._InvHed_ID = value;
					this.SendPropertyChanged("InvHed_ID");
					this.OnInvHed_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvId", DbType = "Float")]
		public System.Nullable<double> InvId
		{
			get
			{
				return this._InvId;
			}
			set
			{
				if ((this._InvId != value))
				{
					this.OnInvIdChanging(value);
					this.SendPropertyChanging();
					this._InvId = value;
					this.SendPropertyChanged("InvId");
					this.OnInvIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNo", DbType = "VarChar(10)")]
		public string InvNo
		{
			get
			{
				return this._InvNo;
			}
			set
			{
				if ((this._InvNo != value))
				{
					this.OnInvNoChanging(value);
					this.SendPropertyChanging();
					this._InvNo = value;
					this.SendPropertyChanged("InvNo");
					this.OnInvNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTyp", DbType = "Int")]
		public System.Nullable<int> InvTyp
		{
			get
			{
				return this._InvTyp;
			}
			set
			{
				if ((this._InvTyp != value))
				{
					if (this._T_INVSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvTypChanging(value);
					this.SendPropertyChanging();
					this._InvTyp = value;
					this.SendPropertyChanged("InvTyp");
					this.OnInvTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvCashPay", DbType = "Int")]
		public System.Nullable<int> InvCashPay
		{
			get
			{
				return this._InvCashPay;
			}
			set
			{
				if ((this._InvCashPay != value))
				{
					this.OnInvCashPayChanging(value);
					this.SendPropertyChanging();
					this._InvCashPay = value;
					this.SendPropertyChanged("InvCashPay");
					this.OnInvCashPayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CusVenNo", DbType = "VarChar(20)")]
		public string CusVenNo
		{
			get
			{
				return this._CusVenNo;
			}
			set
			{
				if ((this._CusVenNo != value))
				{
					this.OnCusVenNoChanging(value);
					this.SendPropertyChanging();
					this._CusVenNo = value;
					this.SendPropertyChanged("CusVenNo");
					this.OnCusVenNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CusVenNm", DbType = "VarChar(50)")]
		public string CusVenNm
		{
			get
			{
				return this._CusVenNm;
			}
			set
			{
				if ((this._CusVenNm != value))
				{
					this.OnCusVenNmChanging(value);
					this.SendPropertyChanging();
					this._CusVenNm = value;
					this.SendPropertyChanged("CusVenNm");
					this.OnCusVenNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CusVenAdd", DbType = "VarChar(100)")]
		public string CusVenAdd
		{
			get
			{
				return this._CusVenAdd;
			}
			set
			{
				if ((this._CusVenAdd != value))
				{
					this.OnCusVenAddChanging(value);
					this.SendPropertyChanging();
					this._CusVenAdd = value;
					this.SendPropertyChanged("CusVenAdd");
					this.OnCusVenAddChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CusVenTel", DbType = "VarChar(30)")]
		public string CusVenTel
		{
			get
			{
				return this._CusVenTel;
			}
			set
			{
				if ((this._CusVenTel != value))
				{
					this.OnCusVenTelChanging(value);
					this.SendPropertyChanging();
					this._CusVenTel = value;
					this.SendPropertyChanged("CusVenTel");
					this.OnCusVenTelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remark", DbType = "VarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HDat", DbType = "VarChar(10)")]
		public string HDat
		{
			get
			{
				return this._HDat;
			}
			set
			{
				if ((this._HDat != value))
				{
					this.OnHDatChanging(value);
					this.SendPropertyChanging();
					this._HDat = value;
					this.SendPropertyChanged("HDat");
					this.OnHDatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GDat", DbType = "VarChar(10)")]
		public string GDat
		{
			get
			{
				return this._GDat;
			}
			set
			{
				if ((this._GDat != value))
				{
					this.OnGDatChanging(value);
					this.SendPropertyChanging();
					this._GDat = value;
					this.SendPropertyChanged("GDat");
					this.OnGDatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MndNo", DbType = "Int")]
		public System.Nullable<int> MndNo
		{
			get
			{
				return this._MndNo;
			}
			set
			{
				if ((this._MndNo != value))
				{
					if (this._T_Mndob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMndNoChanging(value);
					this.SendPropertyChanging();
					this._MndNo = value;
					this.SendPropertyChanged("MndNo");
					this.OnMndNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalsManNo", DbType = "VarChar(3)")]
		public string SalsManNo
		{
			get
			{
				return this._SalsManNo;
			}
			set
			{
				if ((this._SalsManNo != value))
				{
					this.OnSalsManNoChanging(value);
					this.SendPropertyChanging();
					this._SalsManNo = value;
					this.SendPropertyChanged("SalsManNo");
					this.OnSalsManNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalsManNam", DbType = "VarChar(50)")]
		public string SalsManNam
		{
			get
			{
				return this._SalsManNam;
			}
			set
			{
				if ((this._SalsManNam != value))
				{
					this.OnSalsManNamChanging(value);
					this.SendPropertyChanging();
					this._SalsManNam = value;
					this.SendPropertyChanged("SalsManNam");
					this.OnSalsManNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTot", DbType = "Float")]
		public System.Nullable<double> InvTot
		{
			get
			{
				return this._InvTot;
			}
			set
			{
				if ((this._InvTot != value))
				{
					this.OnInvTotChanging(value);
					this.SendPropertyChanging();
					this._InvTot = value;
					this.SendPropertyChanged("InvTot");
					this.OnInvTotChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTotLocCur", DbType = "Float")]
		public System.Nullable<double> InvTotLocCur
		{
			get
			{
				return this._InvTotLocCur;
			}
			set
			{
				if ((this._InvTotLocCur != value))
				{
					this.OnInvTotLocCurChanging(value);
					this.SendPropertyChanging();
					this._InvTotLocCur = value;
					this.SendPropertyChanged("InvTotLocCur");
					this.OnInvTotLocCurChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvDisPrs", DbType = "Float")]
		public System.Nullable<double> InvDisPrs
		{
			get
			{
				return this._InvDisPrs;
			}
			set
			{
				if ((this._InvDisPrs != value))
				{
					this.OnInvDisPrsChanging(value);
					this.SendPropertyChanging();
					this._InvDisPrs = value;
					this.SendPropertyChanged("InvDisPrs");
					this.OnInvDisPrsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvDisVal", DbType = "Float")]
		public System.Nullable<double> InvDisVal
		{
			get
			{
				return this._InvDisVal;
			}
			set
			{
				if ((this._InvDisVal != value))
				{
					this.OnInvDisValChanging(value);
					this.SendPropertyChanging();
					this._InvDisVal = value;
					this.SendPropertyChanged("InvDisVal");
					this.OnInvDisValChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvDisValLocCur", DbType = "Float")]
		public System.Nullable<double> InvDisValLocCur
		{
			get
			{
				return this._InvDisValLocCur;
			}
			set
			{
				if ((this._InvDisValLocCur != value))
				{
					this.OnInvDisValLocCurChanging(value);
					this.SendPropertyChanging();
					this._InvDisValLocCur = value;
					this.SendPropertyChanged("InvDisValLocCur");
					this.OnInvDisValLocCurChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNet", DbType = "Float")]
		public System.Nullable<double> InvNet
		{
			get
			{
				return this._InvNet;
			}
			set
			{
				if ((this._InvNet != value))
				{
					this.OnInvNetChanging(value);
					this.SendPropertyChanging();
					this._InvNet = value;
					this.SendPropertyChanged("InvNet");
					this.OnInvNetChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNetLocCur", DbType = "Float")]
		public System.Nullable<double> InvNetLocCur
		{
			get
			{
				return this._InvNetLocCur;
			}
			set
			{
				if ((this._InvNetLocCur != value))
				{
					this.OnInvNetLocCurChanging(value);
					this.SendPropertyChanging();
					this._InvNetLocCur = value;
					this.SendPropertyChanged("InvNetLocCur");
					this.OnInvNetLocCurChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CashPay", DbType = "Float")]
		public System.Nullable<double> CashPay
		{
			get
			{
				return this._CashPay;
			}
			set
			{
				if ((this._CashPay != value))
				{
					this.OnCashPayChanging(value);
					this.SendPropertyChanging();
					this._CashPay = value;
					this.SendPropertyChanged("CashPay");
					this.OnCashPayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CashPayLocCur", DbType = "Float")]
		public System.Nullable<double> CashPayLocCur
		{
			get
			{
				return this._CashPayLocCur;
			}
			set
			{
				if ((this._CashPayLocCur != value))
				{
					this.OnCashPayLocCurChanging(value);
					this.SendPropertyChanging();
					this._CashPayLocCur = value;
					this.SendPropertyChanged("CashPayLocCur");
					this.OnCashPayLocCurChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IfRet", DbType = "Int")]
		public System.Nullable<int> IfRet
		{
			get
			{
				return this._IfRet;
			}
			set
			{
				if ((this._IfRet != value))
				{
					this.OnIfRetChanging(value);
					this.SendPropertyChanging();
					this._IfRet = value;
					this.SendPropertyChanged("IfRet");
					this.OnIfRetChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeNo", DbType = "Float")]
		public System.Nullable<double> GadeNo
		{
			get
			{
				return this._GadeNo;
			}
			set
			{
				if ((this._GadeNo != value))
				{
					this.OnGadeNoChanging(value);
					this.SendPropertyChanging();
					this._GadeNo = value;
					this.SendPropertyChanged("GadeNo");
					this.OnGadeNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId", DbType = "Float")]
		public System.Nullable<double> GadeId
		{
			get
			{
				return this._GadeId;
			}
			set
			{
				if ((this._GadeId != value))
				{
					this.OnGadeIdChanging(value);
					this.SendPropertyChanging();
					this._GadeId = value;
					this.SendPropertyChanged("GadeId");
					this.OnGadeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IfDel", DbType = "Int")]
		public System.Nullable<int> IfDel
		{
			get
			{
				return this._IfDel;
			}
			set
			{
				if ((this._IfDel != value))
				{
					this.OnIfDelChanging(value);
					this.SendPropertyChanging();
					this._IfDel = value;
					this.SendPropertyChanged("IfDel");
					this.OnIfDelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RetNo", DbType = "VarChar(10)")]
		public string RetNo
		{
			get
			{
				return this._RetNo;
			}
			set
			{
				if ((this._RetNo != value))
				{
					this.OnRetNoChanging(value);
					this.SendPropertyChanging();
					this._RetNo = value;
					this.SendPropertyChanged("RetNo");
					this.OnRetNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RetId", DbType = "Float")]
		public System.Nullable<double> RetId
		{
			get
			{
				return this._RetId;
			}
			set
			{
				if ((this._RetId != value))
				{
					this.OnRetIdChanging(value);
					this.SendPropertyChanging();
					this._RetId = value;
					this.SendPropertyChanged("RetId");
					this.OnRetIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvCstNo", DbType = "Int")]
		public System.Nullable<int> InvCstNo
		{
			get
			{
				return this._InvCstNo;
			}
			set
			{
				if ((this._InvCstNo != value))
				{
					if (this._T_CstTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvCstNoChanging(value);
					this.SendPropertyChanging();
					this._InvCstNo = value;
					this.SendPropertyChanged("InvCstNo");
					this.OnInvCstNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvCashPayNm", DbType = "VarChar(100)")]
		public string InvCashPayNm
		{
			get
			{
				return this._InvCashPayNm;
			}
			set
			{
				if ((this._InvCashPayNm != value))
				{
					this.OnInvCashPayNmChanging(value);
					this.SendPropertyChanging();
					this._InvCashPayNm = value;
					this.SendPropertyChanged("InvCashPayNm");
					this.OnInvCashPayNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RefNo", DbType = "VarChar(20)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvCost", DbType = "Float")]
		public System.Nullable<double> InvCost
		{
			get
			{
				return this._InvCost;
			}
			set
			{
				if ((this._InvCost != value))
				{
					this.OnInvCostChanging(value);
					this.SendPropertyChanging();
					this._InvCost = value;
					this.SendPropertyChanged("InvCost");
					this.OnInvCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EstDat", DbType = "VarChar(10)")]
		public string EstDat
		{
			get
			{
				return this._EstDat;
			}
			set
			{
				if ((this._EstDat != value))
				{
					this.OnEstDatChanging(value);
					this.SendPropertyChanging();
					this._EstDat = value;
					this.SendPropertyChanged("EstDat");
					this.OnEstDatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustPri", DbType = "Int")]
		public System.Nullable<int> CustPri
		{
			get
			{
				return this._CustPri;
			}
			set
			{
				if ((this._CustPri != value))
				{
					this.OnCustPriChanging(value);
					this.SendPropertyChanging();
					this._CustPri = value;
					this.SendPropertyChanged("CustPri");
					this.OnCustPriChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ArbTaf", DbType = "VarChar(150)")]
		public string ArbTaf
		{
			get
			{
				return this._ArbTaf;
			}
			set
			{
				if ((this._ArbTaf != value))
				{
					this.OnArbTafChanging(value);
					this.SendPropertyChanging();
					this._ArbTaf = value;
					this.SendPropertyChanged("ArbTaf");
					this.OnArbTafChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurTyp", DbType = "Int")]
		public System.Nullable<int> CurTyp
		{
			get
			{
				return this._CurTyp;
			}
			set
			{
				if ((this._CurTyp != value))
				{
					if (this._T_Curency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurTypChanging(value);
					this.SendPropertyChanging();
					this._CurTyp = value;
					this.SendPropertyChanged("CurTyp");
					this.OnCurTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvCash", DbType = "VarChar(20)")]
		public string InvCash
		{
			get
			{
				return this._InvCash;
			}
			set
			{
				if ((this._InvCash != value))
				{
					this.OnInvCashChanging(value);
					this.SendPropertyChanging();
					this._InvCash = value;
					this.SendPropertyChanged("InvCash");
					this.OnInvCashChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ToStore", DbType = "VarChar(3)")]
		public string ToStore
		{
			get
			{
				return this._ToStore;
			}
			set
			{
				if ((this._ToStore != value))
				{
					this.OnToStoreChanging(value);
					this.SendPropertyChanging();
					this._ToStore = value;
					this.SendPropertyChanged("ToStore");
					this.OnToStoreChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ToStoreNm", DbType = "VarChar(50)")]
		public string ToStoreNm
		{
			get
			{
				return this._ToStoreNm;
			}
			set
			{
				if ((this._ToStoreNm != value))
				{
					this.OnToStoreNmChanging(value);
					this.SendPropertyChanging();
					this._ToStoreNm = value;
					this.SendPropertyChanged("ToStoreNm");
					this.OnToStoreNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvQty", DbType = "Float")]
		public System.Nullable<double> InvQty
		{
			get
			{
				return this._InvQty;
			}
			set
			{
				if ((this._InvQty != value))
				{
					this.OnInvQtyChanging(value);
					this.SendPropertyChanging();
					this._InvQty = value;
					this.SendPropertyChanged("InvQty");
					this.OnInvQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EngTaf", DbType = "VarChar(150)")]
		public string EngTaf
		{
			get
			{
				return this._EngTaf;
			}
			set
			{
				if ((this._EngTaf != value))
				{
					this.OnEngTafChanging(value);
					this.SendPropertyChanging();
					this._EngTaf = value;
					this.SendPropertyChanged("EngTaf");
					this.OnEngTafChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IfTrans", DbType = "Int")]
		public System.Nullable<int> IfTrans
		{
			get
			{
				return this._IfTrans;
			}
			set
			{
				if ((this._IfTrans != value))
				{
					this.OnIfTransChanging(value);
					this.SendPropertyChanging();
					this._IfTrans = value;
					this.SendPropertyChanged("IfTrans");
					this.OnIfTransChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustRep", DbType = "Float")]
		public System.Nullable<double> CustRep
		{
			get
			{
				return this._CustRep;
			}
			set
			{
				if ((this._CustRep != value))
				{
					this.OnCustRepChanging(value);
					this.SendPropertyChanging();
					this._CustRep = value;
					this.SendPropertyChanged("CustRep");
					this.OnCustRepChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustNet", DbType = "Float")]
		public System.Nullable<double> CustNet
		{
			get
			{
				return this._CustNet;
			}
			set
			{
				if ((this._CustNet != value))
				{
					this.OnCustNetChanging(value);
					this.SendPropertyChanging();
					this._CustNet = value;
					this.SendPropertyChanged("CustNet");
					this.OnCustNetChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvWight_T", DbType = "Float")]
		public System.Nullable<double> InvWight_T
		{
			get
			{
				return this._InvWight_T;
			}
			set
			{
				if ((this._InvWight_T != value))
				{
					this.OnInvWight_TChanging(value);
					this.SendPropertyChanging();
					this._InvWight_T = value;
					this.SendPropertyChanged("InvWight_T");
					this.OnInvWight_TChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IfPrint", DbType = "Int")]
		public System.Nullable<int> IfPrint
		{
			get
			{
				return this._IfPrint;
			}
			set
			{
				if ((this._IfPrint != value))
				{
					this.OnIfPrintChanging(value);
					this.SendPropertyChanging();
					this._IfPrint = value;
					this.SendPropertyChanged("IfPrint");
					this.OnIfPrintChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LTim", DbType = "VarChar(10)")]
		public string LTim
		{
			get
			{
				return this._LTim;
			}
			set
			{
				if ((this._LTim != value))
				{
					this.OnLTimChanging(value);
					this.SendPropertyChanging();
					this._LTim = value;
					this.SendPropertyChanged("LTim");
					this.OnLTimChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CREATED_BY", DbType = "VarChar(100)")]
		public string CREATED_BY
		{
			get
			{
				return this._CREATED_BY;
			}
			set
			{
				if ((this._CREATED_BY != value))
				{
					this.OnCREATED_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATED_BY = value;
					this.SendPropertyChanged("CREATED_BY");
					this.OnCREATED_BYChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DATE_CREATED", DbType = "DateTime")]
		public System.Nullable<System.DateTime> DATE_CREATED
		{
			get
			{
				return this._DATE_CREATED;
			}
			set
			{
				if ((this._DATE_CREATED != value))
				{
					this.OnDATE_CREATEDChanging(value);
					this.SendPropertyChanging();
					this._DATE_CREATED = value;
					this.SendPropertyChanged("DATE_CREATED");
					this.OnDATE_CREATEDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MODIFIED_BY", DbType = "VarChar(100)")]
		public string MODIFIED_BY
		{
			get
			{
				return this._MODIFIED_BY;
			}
			set
			{
				if ((this._MODIFIED_BY != value))
				{
					this.OnMODIFIED_BYChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_BY = value;
					this.SendPropertyChanged("MODIFIED_BY");
					this.OnMODIFIED_BYChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DATE_MODIFIED", DbType = "DateTime")]
		public System.Nullable<System.DateTime> DATE_MODIFIED
		{
			get
			{
				return this._DATE_MODIFIED;
			}
			set
			{
				if ((this._DATE_MODIFIED != value))
				{
					this.OnDATE_MODIFIEDChanging(value);
					this.SendPropertyChanging();
					this._DATE_MODIFIED = value;
					this.SendPropertyChanged("DATE_MODIFIED");
					this.OnDATE_MODIFIEDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreditPay", DbType = "Float")]
		public System.Nullable<double> CreditPay
		{
			get
			{
				return this._CreditPay;
			}
			set
			{
				if ((this._CreditPay != value))
				{
					this.OnCreditPayChanging(value);
					this.SendPropertyChanging();
					this._CreditPay = value;
					this.SendPropertyChanged("CreditPay");
					this.OnCreditPayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreditPayLocCur", DbType = "Float")]
		public System.Nullable<double> CreditPayLocCur
		{
			get
			{
				return this._CreditPayLocCur;
			}
			set
			{
				if ((this._CreditPayLocCur != value))
				{
					this.OnCreditPayLocCurChanging(value);
					this.SendPropertyChanging();
					this._CreditPayLocCur = value;
					this.SendPropertyChanged("CreditPayLocCur");
					this.OnCreditPayLocCurChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NetworkPay", DbType = "Float")]
		public System.Nullable<double> NetworkPay
		{
			get
			{
				return this._NetworkPay;
			}
			set
			{
				if ((this._NetworkPay != value))
				{
					this.OnNetworkPayChanging(value);
					this.SendPropertyChanging();
					this._NetworkPay = value;
					this.SendPropertyChanged("NetworkPay");
					this.OnNetworkPayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NetworkPayLocCur", DbType = "Float")]
		public System.Nullable<double> NetworkPayLocCur
		{
			get
			{
				return this._NetworkPayLocCur;
			}
			set
			{
				if ((this._NetworkPayLocCur != value))
				{
					this.OnNetworkPayLocCurChanging(value);
					this.SendPropertyChanging();
					this._NetworkPayLocCur = value;
					this.SendPropertyChanged("NetworkPayLocCur");
					this.OnNetworkPayLocCurChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CommMnd_Inv", DbType = "Float")]
		public System.Nullable<double> CommMnd_Inv
		{
			get
			{
				return this._CommMnd_Inv;
			}
			set
			{
				if ((this._CommMnd_Inv != value))
				{
					this.OnCommMnd_InvChanging(value);
					this.SendPropertyChanging();
					this._CommMnd_Inv = value;
					this.SendPropertyChanged("CommMnd_Inv");
					this.OnCommMnd_InvChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MndExtrnal", DbType = "Bit")]
		public System.Nullable<bool> MndExtrnal
		{
			get
			{
				return this._MndExtrnal;
			}
			set
			{
				if ((this._MndExtrnal != value))
				{
					this.OnMndExtrnalChanging(value);
					this.SendPropertyChanging();
					this._MndExtrnal = value;
					this.SendPropertyChanged("MndExtrnal");
					this.OnMndExtrnalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvAddCost", DbType = "Float")]
		public System.Nullable<double> InvAddCost
		{
			get
			{
				return this._InvAddCost;
			}
			set
			{
				if ((this._InvAddCost != value))
				{
					this.OnInvAddCostChanging(value);
					this.SendPropertyChanging();
					this._InvAddCost = value;
					this.SendPropertyChanged("InvAddCost");
					this.OnInvAddCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvAddCostLoc", DbType = "Float")]
		public System.Nullable<double> InvAddCostLoc
		{
			get
			{
				return this._InvAddCostLoc;
			}
			set
			{
				if ((this._InvAddCostLoc != value))
				{
					this.OnInvAddCostLocChanging(value);
					this.SendPropertyChanging();
					this._InvAddCostLoc = value;
					this.SendPropertyChanged("InvAddCostLoc");
					this.OnInvAddCostLocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvAddCostExtrnal", DbType = "Float")]
		public System.Nullable<double> InvAddCostExtrnal
		{
			get
			{
				return this._InvAddCostExtrnal;
			}
			set
			{
				if ((this._InvAddCostExtrnal != value))
				{
					this.OnInvAddCostExtrnalChanging(value);
					this.SendPropertyChanging();
					this._InvAddCostExtrnal = value;
					this.SendPropertyChanged("InvAddCostExtrnal");
					this.OnInvAddCostExtrnalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvAddCostExtrnalLoc", DbType = "Float")]
		public System.Nullable<double> InvAddCostExtrnalLoc
		{
			get
			{
				return this._InvAddCostExtrnalLoc;
			}
			set
			{
				if ((this._InvAddCostExtrnalLoc != value))
				{
					this.OnInvAddCostExtrnalLocChanging(value);
					this.SendPropertyChanging();
					this._InvAddCostExtrnalLoc = value;
					this.SendPropertyChanged("InvAddCostExtrnalLoc");
					this.OnInvAddCostExtrnalLocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsExtrnalGaid", DbType = "Bit")]
		public System.Nullable<bool> IsExtrnalGaid
		{
			get
			{
				return this._IsExtrnalGaid;
			}
			set
			{
				if ((this._IsExtrnalGaid != value))
				{
					this.OnIsExtrnalGaidChanging(value);
					this.SendPropertyChanging();
					this._IsExtrnalGaid = value;
					this.SendPropertyChanged("IsExtrnalGaid");
					this.OnIsExtrnalGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExtrnalCostGaidID", DbType = "Float")]
		public System.Nullable<double> ExtrnalCostGaidID
		{
			get
			{
				return this._ExtrnalCostGaidID;
			}
			set
			{
				if ((this._ExtrnalCostGaidID != value))
				{
					this.OnExtrnalCostGaidIDChanging(value);
					this.SendPropertyChanging();
					this._ExtrnalCostGaidID = value;
					this.SendPropertyChanged("ExtrnalCostGaidID");
					this.OnExtrnalCostGaidIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Puyaid", DbType = "Float")]
		public System.Nullable<double> Puyaid
		{
			get
			{
				return this._Puyaid;
			}
			set
			{
				if ((this._Puyaid != value))
				{
					this.OnPuyaidChanging(value);
					this.SendPropertyChanging();
					this._Puyaid = value;
					this.SendPropertyChanged("Puyaid");
					this.OnPuyaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remming", DbType = "Float")]
		public System.Nullable<double> Remming
		{
			get
			{
				return this._Remming;
			}
			set
			{
				if ((this._Remming != value))
				{
					this.OnRemmingChanging(value);
					this.SendPropertyChanging();
					this._Remming = value;
					this.SendPropertyChanged("Remming");
					this.OnRemmingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoomNo", DbType = "Int")]
		public System.Nullable<int> RoomNo
		{
			get
			{
				return this._RoomNo;
			}
			set
			{
				if ((this._RoomNo != value))
				{
					if (this._T_Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomNoChanging(value);
					this.SendPropertyChanging();
					this._RoomNo = value;
					this.SendPropertyChanged("RoomNo");
					this.OnRoomNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderTyp", DbType = "Int")]
		public System.Nullable<int> OrderTyp
		{
			get
			{
				return this._OrderTyp;
			}
			set
			{
				if ((this._OrderTyp != value))
				{
					this.OnOrderTypChanging(value);
					this.SendPropertyChanging();
					this._OrderTyp = value;
					this.SendPropertyChanged("OrderTyp");
					this.OnOrderTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoomSts", DbType = "Bit")]
		public System.Nullable<bool> RoomSts
		{
			get
			{
				return this._RoomSts;
			}
			set
			{
				if ((this._RoomSts != value))
				{
					this.OnRoomStsChanging(value);
					this.SendPropertyChanging();
					this._RoomSts = value;
					this.SendPropertyChanged("RoomSts");
					this.OnRoomStsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_chauffeurNo", DbType = "Int")]
		public System.Nullable<int> chauffeurNo
		{
			get
			{
				return this._chauffeurNo;
			}
			set
			{
				if ((this._chauffeurNo != value))
				{
					if (this._T_Chauffeur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchauffeurNoChanging(value);
					this.SendPropertyChanging();
					this._chauffeurNo = value;
					this.SendPropertyChanged("chauffeurNo");
					this.OnchauffeurNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoomPerson", DbType = "Int")]
		public System.Nullable<int> RoomPerson
		{
			get
			{
				return this._RoomPerson;
			}
			set
			{
				if ((this._RoomPerson != value))
				{
					this.OnRoomPersonChanging(value);
					this.SendPropertyChanging();
					this._RoomPerson = value;
					this.SendPropertyChanged("RoomPerson");
					this.OnRoomPersonChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ServiceValue", DbType = "Float")]
		public System.Nullable<double> ServiceValue
		{
			get
			{
				return this._ServiceValue;
			}
			set
			{
				if ((this._ServiceValue != value))
				{
					this.OnServiceValueChanging(value);
					this.SendPropertyChanging();
					this._ServiceValue = value;
					this.SendPropertyChanged("ServiceValue");
					this.OnServiceValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sts", DbType = "Bit")]
		public System.Nullable<bool> Sts
		{
			get
			{
				return this._Sts;
			}
			set
			{
				if ((this._Sts != value))
				{
					this.OnStsChanging(value);
					this.SendPropertyChanging();
					this._Sts = value;
					this.SendPropertyChanged("Sts");
					this.OnStsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentOrderTyp", DbType = "Int")]
		public System.Nullable<int> PaymentOrderTyp
		{
			get
			{
				return this._PaymentOrderTyp;
			}
			set
			{
				if ((this._PaymentOrderTyp != value))
				{
					this.OnPaymentOrderTypChanging(value);
					this.SendPropertyChanging();
					this._PaymentOrderTyp = value;
					this.SendPropertyChanged("PaymentOrderTyp");
					this.OnPaymentOrderTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminLock", DbType = "Bit")]
		public System.Nullable<bool> AdminLock
		{
			get
			{
				return this._AdminLock;
			}
			set
			{
				if ((this._AdminLock != value))
				{
					this.OnAdminLockChanging(value);
					this.SendPropertyChanging();
					this._AdminLock = value;
					this.SendPropertyChanged("AdminLock");
					this.OnAdminLockChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DeleteDate", DbType = "VarChar(10)")]
		public string DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DeleteTime", DbType = "VarChar(10)")]
		public string DeleteTime
		{
			get
			{
				return this._DeleteTime;
			}
			set
			{
				if ((this._DeleteTime != value))
				{
					this.OnDeleteTimeChanging(value);
					this.SendPropertyChanging();
					this._DeleteTime = value;
					this.SendPropertyChanged("DeleteTime");
					this.OnDeleteTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserNew", DbType = "VarChar(3)")]
		public string UserNew
		{
			get
			{
				return this._UserNew;
			}
			set
			{
				if ((this._UserNew != value))
				{
					this.OnUserNewChanging(value);
					this.SendPropertyChanging();
					this._UserNew = value;
					this.SendPropertyChanged("UserNew");
					this.OnUserNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IfEnter", DbType = "Int")]
		public System.Nullable<int> IfEnter
		{
			get
			{
				return this._IfEnter;
			}
			set
			{
				if ((this._IfEnter != value))
				{
					this.OnIfEnterChanging(value);
					this.SendPropertyChanging();
					this._IfEnter = value;
					this.SendPropertyChanged("IfEnter");
					this.OnIfEnterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvAddTax", DbType = "Float")]
		public System.Nullable<double> InvAddTax
		{
			get
			{
				return this._InvAddTax;
			}
			set
			{
				if ((this._InvAddTax != value))
				{
					this.OnInvAddTaxChanging(value);
					this.SendPropertyChanging();
					this._InvAddTax = value;
					this.SendPropertyChanged("InvAddTax");
					this.OnInvAddTaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvAddTaxlLoc", DbType = "Float")]
		public System.Nullable<double> InvAddTaxlLoc
		{
			get
			{
				return this._InvAddTaxlLoc;
			}
			set
			{
				if ((this._InvAddTaxlLoc != value))
				{
					this.OnInvAddTaxlLocChanging(value);
					this.SendPropertyChanging();
					this._InvAddTaxlLoc = value;
					this.SendPropertyChanged("InvAddTaxlLoc");
					this.OnInvAddTaxlLocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsTaxGaid", DbType = "Bit")]
		public System.Nullable<bool> IsTaxGaid
		{
			get
			{
				return this._IsTaxGaid;
			}
			set
			{
				if ((this._IsTaxGaid != value))
				{
					this.OnIsTaxGaidChanging(value);
					this.SendPropertyChanging();
					this._IsTaxGaid = value;
					this.SendPropertyChanged("IsTaxGaid");
					this.OnIsTaxGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxGaidID", DbType = "Float")]
		public System.Nullable<double> TaxGaidID
		{
			get
			{
				return this._TaxGaidID;
			}
			set
			{
				if ((this._TaxGaidID != value))
				{
					this.OnTaxGaidIDChanging(value);
					this.SendPropertyChanging();
					this._TaxGaidID = value;
					this.SendPropertyChanged("TaxGaidID");
					this.OnTaxGaidIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsTaxUse", DbType = "Bit")]
		public System.Nullable<bool> IsTaxUse
		{
			get
			{
				return this._IsTaxUse;
			}
			set
			{
				if ((this._IsTaxUse != value))
				{
					this.OnIsTaxUseChanging(value);
					this.SendPropertyChanging();
					this._IsTaxUse = value;
					this.SendPropertyChanged("IsTaxUse");
					this.OnIsTaxUseChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvValGaidDis", DbType = "Float")]
		public System.Nullable<double> InvValGaidDis
		{
			get
			{
				return this._InvValGaidDis;
			}
			set
			{
				if ((this._InvValGaidDis != value))
				{
					this.OnInvValGaidDisChanging(value);
					this.SendPropertyChanging();
					this._InvValGaidDis = value;
					this.SendPropertyChanged("InvValGaidDis");
					this.OnInvValGaidDisChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvValGaidDislLoc", DbType = "Float")]
		public System.Nullable<double> InvValGaidDislLoc
		{
			get
			{
				return this._InvValGaidDislLoc;
			}
			set
			{
				if ((this._InvValGaidDislLoc != value))
				{
					this.OnInvValGaidDislLocChanging(value);
					this.SendPropertyChanging();
					this._InvValGaidDislLoc = value;
					this.SendPropertyChanged("InvValGaidDislLoc");
					this.OnInvValGaidDislLocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDisGaid", DbType = "Bit")]
		public System.Nullable<bool> IsDisGaid
		{
			get
			{
				return this._IsDisGaid;
			}
			set
			{
				if ((this._IsDisGaid != value))
				{
					this.OnIsDisGaidChanging(value);
					this.SendPropertyChanging();
					this._IsDisGaid = value;
					this.SendPropertyChanged("IsDisGaid");
					this.OnIsDisGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DisGaidID1", DbType = "Float")]
		public System.Nullable<double> DisGaidID1
		{
			get
			{
				return this._DisGaidID1;
			}
			set
			{
				if ((this._DisGaidID1 != value))
				{
					this.OnDisGaidID1Changing(value);
					this.SendPropertyChanging();
					this._DisGaidID1 = value;
					this.SendPropertyChanged("DisGaidID1");
					this.OnDisGaidID1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDisUse1", DbType = "Bit")]
		public System.Nullable<bool> IsDisUse1
		{
			get
			{
				return this._IsDisUse1;
			}
			set
			{
				if ((this._IsDisUse1 != value))
				{
					this.OnIsDisUse1Changing(value);
					this.SendPropertyChanging();
					this._IsDisUse1 = value;
					this.SendPropertyChanged("IsDisUse1");
					this.OnIsDisUse1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvComm", DbType = "Float")]
		public System.Nullable<double> InvComm
		{
			get
			{
				return this._InvComm;
			}
			set
			{
				if ((this._InvComm != value))
				{
					this.OnInvCommChanging(value);
					this.SendPropertyChanging();
					this._InvComm = value;
					this.SendPropertyChanged("InvComm");
					this.OnInvCommChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvCommLoc", DbType = "Float")]
		public System.Nullable<double> InvCommLoc
		{
			get
			{
				return this._InvCommLoc;
			}
			set
			{
				if ((this._InvCommLoc != value))
				{
					this.OnInvCommLocChanging(value);
					this.SendPropertyChanging();
					this._InvCommLoc = value;
					this.SendPropertyChanged("InvCommLoc");
					this.OnInvCommLocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsCommGaid", DbType = "Bit")]
		public System.Nullable<bool> IsCommGaid
		{
			get
			{
				return this._IsCommGaid;
			}
			set
			{
				if ((this._IsCommGaid != value))
				{
					this.OnIsCommGaidChanging(value);
					this.SendPropertyChanging();
					this._IsCommGaid = value;
					this.SendPropertyChanged("IsCommGaid");
					this.OnIsCommGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CommGaidID", DbType = "Float")]
		public System.Nullable<double> CommGaidID
		{
			get
			{
				return this._CommGaidID;
			}
			set
			{
				if ((this._CommGaidID != value))
				{
					this.OnCommGaidIDChanging(value);
					this.SendPropertyChanging();
					this._CommGaidID = value;
					this.SendPropertyChanged("CommGaidID");
					this.OnCommGaidIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsCommUse", DbType = "Bit")]
		public System.Nullable<bool> IsCommUse
		{
			get
			{
				return this._IsCommUse;
			}
			set
			{
				if ((this._IsCommUse != value))
				{
					this.OnIsCommUseChanging(value);
					this.SendPropertyChanging();
					this._IsCommUse = value;
					this.SendPropertyChanged("IsCommUse");
					this.OnIsCommUseChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsTaxLines", DbType = "Bit")]
		public System.Nullable<bool> IsTaxLines
		{
			get
			{
				return this._IsTaxLines;
			}
			set
			{
				if ((this._IsTaxLines != value))
				{
					this.OnIsTaxLinesChanging(value);
					this.SendPropertyChanging();
					this._IsTaxLines = value;
					this.SendPropertyChanged("IsTaxLines");
					this.OnIsTaxLinesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsTaxByTotal", DbType = "Bit")]
		public System.Nullable<bool> IsTaxByTotal
		{
			get
			{
				return this._IsTaxByTotal;
			}
			set
			{
				if ((this._IsTaxByTotal != value))
				{
					this.OnIsTaxByTotalChanging(value);
					this.SendPropertyChanging();
					this._IsTaxByTotal = value;
					this.SendPropertyChanged("IsTaxByTotal");
					this.OnIsTaxByTotalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsTaxByNet", DbType = "Bit")]
		public System.Nullable<bool> IsTaxByNet
		{
			get
			{
				return this._IsTaxByNet;
			}
			set
			{
				if ((this._IsTaxByNet != value))
				{
					this.OnIsTaxByNetChanging(value);
					this.SendPropertyChanging();
					this._IsTaxByNet = value;
					this.SendPropertyChanged("IsTaxByNet");
					this.OnIsTaxByNetChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxByNetValue", DbType = "Float")]
		public System.Nullable<double> TaxByNetValue
		{
			get
			{
				return this._TaxByNetValue;
			}
			set
			{
				if ((this._TaxByNetValue != value))
				{
					this.OnTaxByNetValueChanging(value);
					this.SendPropertyChanging();
					this._TaxByNetValue = value;
					this.SendPropertyChanged("TaxByNetValue");
					this.OnTaxByNetValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DesPointsValue", DbType = "Float")]
		public System.Nullable<double> DesPointsValue
		{
			get
			{
				return this._DesPointsValue;
			}
			set
			{
				if ((this._DesPointsValue != value))
				{
					this.OnDesPointsValueChanging(value);
					this.SendPropertyChanging();
					this._DesPointsValue = value;
					this.SendPropertyChanged("DesPointsValue");
					this.OnDesPointsValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DesPointsValueLocCur", DbType = "Float")]
		public System.Nullable<double> DesPointsValueLocCur
		{
			get
			{
				return this._DesPointsValueLocCur;
			}
			set
			{
				if ((this._DesPointsValueLocCur != value))
				{
					this.OnDesPointsValueLocCurChanging(value);
					this.SendPropertyChanging();
					this._DesPointsValueLocCur = value;
					this.SendPropertyChanged("DesPointsValueLocCur");
					this.OnDesPointsValueLocCurChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PointsCount", DbType = "Float")]
		public System.Nullable<double> PointsCount
		{
			get
			{
				return this._PointsCount;
			}
			set
			{
				if ((this._PointsCount != value))
				{
					this.OnPointsCountChanging(value);
					this.SendPropertyChanging();
					this._PointsCount = value;
					this.SendPropertyChanged("PointsCount");
					this.OnPointsCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPoints", DbType = "Bit")]
		public System.Nullable<bool> IsPoints
		{
			get
			{
				return this._IsPoints;
			}
			set
			{
				if ((this._IsPoints != value))
				{
					this.OnIsPointsChanging(value);
					this.SendPropertyChanging();
					this._IsPoints = value;
					this.SendPropertyChanged("IsPoints");
					this.OnIsPointsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor1", DbType = "VarChar(100)")]
		public string tailor1
		{
			get
			{
				return this._tailor1;
			}
			set
			{
				if ((this._tailor1 != value))
				{
					this.Ontailor1Changing(value);
					this.SendPropertyChanging();
					this._tailor1 = value;
					this.SendPropertyChanged("tailor1");
					this.Ontailor1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor2", DbType = "VarChar(100)")]
		public string tailor2
		{
			get
			{
				return this._tailor2;
			}
			set
			{
				if ((this._tailor2 != value))
				{
					this.Ontailor2Changing(value);
					this.SendPropertyChanging();
					this._tailor2 = value;
					this.SendPropertyChanged("tailor2");
					this.Ontailor2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor3", DbType = "VarChar(100)")]
		public string tailor3
		{
			get
			{
				return this._tailor3;
			}
			set
			{
				if ((this._tailor3 != value))
				{
					this.Ontailor3Changing(value);
					this.SendPropertyChanging();
					this._tailor3 = value;
					this.SendPropertyChanged("tailor3");
					this.Ontailor3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor4", DbType = "VarChar(100)")]
		public string tailor4
		{
			get
			{
				return this._tailor4;
			}
			set
			{
				if ((this._tailor4 != value))
				{
					this.Ontailor4Changing(value);
					this.SendPropertyChanging();
					this._tailor4 = value;
					this.SendPropertyChanged("tailor4");
					this.Ontailor4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor5", DbType = "VarChar(100)")]
		public string tailor5
		{
			get
			{
				return this._tailor5;
			}
			set
			{
				if ((this._tailor5 != value))
				{
					this.Ontailor5Changing(value);
					this.SendPropertyChanging();
					this._tailor5 = value;
					this.SendPropertyChanged("tailor5");
					this.Ontailor5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor6", DbType = "VarChar(100)")]
		public string tailor6
		{
			get
			{
				return this._tailor6;
			}
			set
			{
				if ((this._tailor6 != value))
				{
					this.Ontailor6Changing(value);
					this.SendPropertyChanging();
					this._tailor6 = value;
					this.SendPropertyChanged("tailor6");
					this.Ontailor6Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor7", DbType = "VarChar(100)")]
		public string tailor7
		{
			get
			{
				return this._tailor7;
			}
			set
			{
				if ((this._tailor7 != value))
				{
					this.Ontailor7Changing(value);
					this.SendPropertyChanging();
					this._tailor7 = value;
					this.SendPropertyChanged("tailor7");
					this.Ontailor7Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor8", DbType = "VarChar(100)")]
		public string tailor8
		{
			get
			{
				return this._tailor8;
			}
			set
			{
				if ((this._tailor8 != value))
				{
					this.Ontailor8Changing(value);
					this.SendPropertyChanging();
					this._tailor8 = value;
					this.SendPropertyChanged("tailor8");
					this.Ontailor8Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor9", DbType = "VarChar(100)")]
		public string tailor9
		{
			get
			{
				return this._tailor9;
			}
			set
			{
				if ((this._tailor9 != value))
				{
					this.Ontailor9Changing(value);
					this.SendPropertyChanging();
					this._tailor9 = value;
					this.SendPropertyChanged("tailor9");
					this.Ontailor9Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor10", DbType = "VarChar(100)")]
		public string tailor10
		{
			get
			{
				return this._tailor10;
			}
			set
			{
				if ((this._tailor10 != value))
				{
					this.Ontailor10Changing(value);
					this.SendPropertyChanging();
					this._tailor10 = value;
					this.SendPropertyChanged("tailor10");
					this.Ontailor10Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor11", DbType = "VarChar(100)")]
		public string tailor11
		{
			get
			{
				return this._tailor11;
			}
			set
			{
				if ((this._tailor11 != value))
				{
					this.Ontailor11Changing(value);
					this.SendPropertyChanging();
					this._tailor11 = value;
					this.SendPropertyChanged("tailor11");
					this.Ontailor11Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor12", DbType = "VarChar(100)")]
		public string tailor12
		{
			get
			{
				return this._tailor12;
			}
			set
			{
				if ((this._tailor12 != value))
				{
					this.Ontailor12Changing(value);
					this.SendPropertyChanging();
					this._tailor12 = value;
					this.SendPropertyChanged("tailor12");
					this.Ontailor12Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor13", DbType = "VarChar(100)")]
		public string tailor13
		{
			get
			{
				return this._tailor13;
			}
			set
			{
				if ((this._tailor13 != value))
				{
					this.Ontailor13Changing(value);
					this.SendPropertyChanging();
					this._tailor13 = value;
					this.SendPropertyChanged("tailor13");
					this.Ontailor13Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor14", DbType = "VarChar(100)")]
		public string tailor14
		{
			get
			{
				return this._tailor14;
			}
			set
			{
				if ((this._tailor14 != value))
				{
					this.Ontailor14Changing(value);
					this.SendPropertyChanging();
					this._tailor14 = value;
					this.SendPropertyChanged("tailor14");
					this.Ontailor14Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor15", DbType = "VarChar(100)")]
		public string tailor15
		{
			get
			{
				return this._tailor15;
			}
			set
			{
				if ((this._tailor15 != value))
				{
					this.Ontailor15Changing(value);
					this.SendPropertyChanging();
					this._tailor15 = value;
					this.SendPropertyChanged("tailor15");
					this.Ontailor15Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor16", DbType = "VarChar(100)")]
		public string tailor16
		{
			get
			{
				return this._tailor16;
			}
			set
			{
				if ((this._tailor16 != value))
				{
					this.Ontailor16Changing(value);
					this.SendPropertyChanging();
					this._tailor16 = value;
					this.SendPropertyChanged("tailor16");
					this.Ontailor16Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor17", DbType = "VarChar(100)")]
		public string tailor17
		{
			get
			{
				return this._tailor17;
			}
			set
			{
				if ((this._tailor17 != value))
				{
					this.Ontailor17Changing(value);
					this.SendPropertyChanging();
					this._tailor17 = value;
					this.SendPropertyChanged("tailor17");
					this.Ontailor17Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor18", DbType = "VarChar(100)")]
		public string tailor18
		{
			get
			{
				return this._tailor18;
			}
			set
			{
				if ((this._tailor18 != value))
				{
					this.Ontailor18Changing(value);
					this.SendPropertyChanging();
					this._tailor18 = value;
					this.SendPropertyChanged("tailor18");
					this.Ontailor18Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor19", DbType = "VarChar(100)")]
		public string tailor19
		{
			get
			{
				return this._tailor19;
			}
			set
			{
				if ((this._tailor19 != value))
				{
					this.Ontailor19Changing(value);
					this.SendPropertyChanging();
					this._tailor19 = value;
					this.SendPropertyChanged("tailor19");
					this.Ontailor19Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tailor20", DbType = "VarChar(100)")]
		public string tailor20
		{
			get
			{
				return this._tailor20;
			}
			set
			{
				if ((this._tailor20 != value))
				{
					this.Ontailor20Changing(value);
					this.SendPropertyChanging();
					this._tailor20 = value;
					this.SendPropertyChanged("tailor20");
					this.Ontailor20Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvImg", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary InvImg
		{
			get
			{
				return this._InvImg;
			}
			set
			{
				if ((this._InvImg != value))
				{
					this.OnInvImgChanging(value);
					this.SendPropertyChanging();
					this._InvImg = value;
					this.SendPropertyChanged("InvImg");
					this.OnInvImgChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PriceIncludTax", DbType = "Bit")]
		public System.Nullable<bool> PriceIncludTax
		{
			get
			{
				return this._PriceIncludTax;
			}
			set
			{
				if ((this._PriceIncludTax != value))
				{
					this.OnPriceIncludTaxChanging(value);
					this.SendPropertyChanging();
					this._PriceIncludTax = value;
					this.SendPropertyChanged("PriceIncludTax");
					this.OnPriceIncludTaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CusVenMob", DbType = "VarChar(50)")]
		public string CusVenMob
		{
			get
			{
				return this._CusVenMob;
			}
			set
			{
				if ((this._CusVenMob != value))
				{
					this.OnCusVenMobChanging(value);
					this.SendPropertyChanging();
					this._CusVenMob = value;
					this.SendPropertyChanged("CusVenMob");
					this.OnCusVenMobChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CInvType", DbType = "Int")]
		public System.Nullable<int> CInvType
		{
			get
			{
				return this._CInvType;
			}
			set
			{
				if ((this._CInvType != value))
				{
					this.OnCInvTypeChanging(value);
					this.SendPropertyChanging();
					this._CInvType = value;
					this.SendPropertyChanged("CInvType");
					this.OnCInvTypeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderStatus", DbType = "Int")]
		public System.Nullable<int> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VehiclechassisNumber", DbType = "VarChar(100)")]
		public string VehiclechassisNumber
		{
			get
			{
				return this._VehiclechassisNumber;
			}
			set
			{
				if ((this._VehiclechassisNumber != value))
				{
					this.OnVehiclechassisNumberChanging(value);
					this.SendPropertyChanging();
					this._VehiclechassisNumber = value;
					this.SendPropertyChanged("VehiclechassisNumber");
					this.OnVehiclechassisNumberChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_ID", DbType = "Int")]
		public System.Nullable<int> Car_ID
		{
			get
			{
				return this._Car_ID;
			}
			set
			{
				if ((this._Car_ID != value))
				{
					this.OnCar_IDChanging(value);
					this.SendPropertyChanging();
					this._Car_ID = value;
					this.SendPropertyChanged("Car_ID");
					this.OnCar_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_TypeNameA", DbType = "VarChar(50)")]
		public string Car_TypeNameA
		{
			get
			{
				return this._Car_TypeNameA;
			}
			set
			{
				if ((this._Car_TypeNameA != value))
				{
					this.OnCar_TypeNameAChanging(value);
					this.SendPropertyChanging();
					this._Car_TypeNameA = value;
					this.SendPropertyChanged("Car_TypeNameA");
					this.OnCar_TypeNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_TypeNameE", DbType = "VarChar(50)")]
		public string Car_TypeNameE
		{
			get
			{
				return this._Car_TypeNameE;
			}
			set
			{
				if ((this._Car_TypeNameE != value))
				{
					this.OnCar_TypeNameEChanging(value);
					this.SendPropertyChanging();
					this._Car_TypeNameE = value;
					this.SendPropertyChanged("Car_TypeNameE");
					this.OnCar_TypeNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_NameA", DbType = "VarChar(50)")]
		public string Car_NameA
		{
			get
			{
				return this._Car_NameA;
			}
			set
			{
				if ((this._Car_NameA != value))
				{
					this.OnCar_NameAChanging(value);
					this.SendPropertyChanging();
					this._Car_NameA = value;
					this.SendPropertyChanged("Car_NameA");
					this.OnCar_NameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Car_NameE", DbType = "VarChar(50)")]
		public string Car_NameE
		{
			get
			{
				return this._Car_NameE;
			}
			set
			{
				if ((this._Car_NameE != value))
				{
					this.OnCar_NameEChanging(value);
					this.SendPropertyChanging();
					this._Car_NameE = value;
					this.SendPropertyChanged("Car_NameE");
					this.OnCar_NameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PlateNo", DbType = "VarChar(50)")]
		public string PlateNo
		{
			get
			{
				return this._PlateNo;
			}
			set
			{
				if ((this._PlateNo != value))
				{
					this.OnPlateNoChanging(value);
					this.SendPropertyChanging();
					this._PlateNo = value;
					this.SendPropertyChanged("PlateNo");
					this.OnPlateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Color", DbType = "VarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModelNo", DbType = "VarChar(50)")]
		public string ModelNo
		{
			get
			{
				return this._ModelNo;
			}
			set
			{
				if ((this._ModelNo != value))
				{
					this.OnModelNoChanging(value);
					this.SendPropertyChanging();
					this._ModelNo = value;
					this.SendPropertyChanged("ModelNo");
					this.OnModelNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Delevery_Date", DbType = "Date")]
		public System.Nullable<System.DateTime> Delevery_Date
		{
			get
			{
				return this._Delevery_Date;
			}
			set
			{
				if ((this._Delevery_Date != value))
				{
					this.OnDelevery_DateChanging(value);
					this.SendPropertyChanging();
					this._Delevery_Date = value;
					this.SendPropertyChanged("Delevery_Date");
					this.OnDelevery_DateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVHED_T_INVDET", Storage = "_T_INVDETs", ThisKey = "InvHed_ID", OtherKey = "InvId")]
		public EntitySet<T_INVDET> T_INVDETs
		{
			get
			{
				return this._T_INVDETs;
			}
			set
			{
				this._T_INVDETs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVHED_T_SINVDET", Storage = "_T_SINVDETs", ThisKey = "InvHed_ID", OtherKey = "SInvIdHEAD")]
		public EntitySet<T_SINVDET> T_SINVDETs
		{
			get
			{
				return this._T_SINVDETs;
			}
			set
			{
				this._T_SINVDETs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Chauffeur_T_INVHED", Storage = "_T_Chauffeur", ThisKey = "chauffeurNo", OtherKey = "chauffeur_ID", IsForeignKey = true)]
		public T_Chauffeur T_Chauffeur
		{
			get
			{
				return this._T_Chauffeur.Entity;
			}
			set
			{
				T_Chauffeur previousValue = this._T_Chauffeur.Entity;
				if (((previousValue != value)
							|| (this._T_Chauffeur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Chauffeur.Entity = null;
						previousValue.T_INVHEDs.Remove(this);
					}
					this._T_Chauffeur.Entity = value;
					if ((value != null))
					{
						value.T_INVHEDs.Add(this);
						this._chauffeurNo = value.chauffeur_ID;
					}
					else
					{
						this._chauffeurNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Chauffeur");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_INVHED", Storage = "_T_CstTbl", ThisKey = "InvCstNo", OtherKey = "Cst_ID", IsForeignKey = true)]
		public T_CstTbl T_CstTbl
		{
			get
			{
				return this._T_CstTbl.Entity;
			}
			set
			{
				T_CstTbl previousValue = this._T_CstTbl.Entity;
				if (((previousValue != value)
							|| (this._T_CstTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_CstTbl.Entity = null;
						previousValue.T_INVHEDs.Remove(this);
					}
					this._T_CstTbl.Entity = value;
					if ((value != null))
					{
						value.T_INVHEDs.Add(this);
						this._InvCstNo = value.Cst_ID;
					}
					else
					{
						this._InvCstNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_CstTbl");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Curency_T_INVHED", Storage = "_T_Curency", ThisKey = "CurTyp", OtherKey = "Curency_ID", IsForeignKey = true)]
		public T_Curency T_Curency
		{
			get
			{
				return this._T_Curency.Entity;
			}
			set
			{
				T_Curency previousValue = this._T_Curency.Entity;
				if (((previousValue != value)
							|| (this._T_Curency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Curency.Entity = null;
						previousValue.T_INVHEDs.Remove(this);
					}
					this._T_Curency.Entity = value;
					if ((value != null))
					{
						value.T_INVHEDs.Add(this);
						this._CurTyp = value.Curency_ID;
					}
					else
					{
						this._CurTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Curency");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVSETTING_T_INVHED", Storage = "_T_INVSETTING", ThisKey = "InvTyp", OtherKey = "InvID", IsForeignKey = true)]
		public T_INVSETTING T_INVSETTING
		{
			get
			{
				return this._T_INVSETTING.Entity;
			}
			set
			{
				T_INVSETTING previousValue = this._T_INVSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_INVSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_INVSETTING.Entity = null;
						previousValue.T_INVHEDs.Remove(this);
					}
					this._T_INVSETTING.Entity = value;
					if ((value != null))
					{
						value.T_INVHEDs.Add(this);
						this._InvTyp = value.InvID;
					}
					else
					{
						this._InvTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_INVSETTING");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Mndob_T_INVHED", Storage = "_T_Mndob", ThisKey = "MndNo", OtherKey = "Mnd_ID", IsForeignKey = true)]
		public T_Mndob T_Mndob
		{
			get
			{
				return this._T_Mndob.Entity;
			}
			set
			{
				T_Mndob previousValue = this._T_Mndob.Entity;
				if (((previousValue != value)
							|| (this._T_Mndob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Mndob.Entity = null;
						previousValue.T_INVHEDs.Remove(this);
					}
					this._T_Mndob.Entity = value;
					if ((value != null))
					{
						value.T_INVHEDs.Add(this);
						this._MndNo = value.Mnd_ID;
					}
					else
					{
						this._MndNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Mndob");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Room_T_INVHED", Storage = "_T_Room", ThisKey = "RoomNo", OtherKey = "ID", IsForeignKey = true)]
		public T_Room T_Room
		{
			get
			{
				return this._T_Room.Entity;
			}
			set
			{
				T_Room previousValue = this._T_Room.Entity;
				if (((previousValue != value)
							|| (this._T_Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Room.Entity = null;
						previousValue.T_INVHEDs.Remove(this);
					}
					this._T_Room.Entity = value;
					if ((value != null))
					{
						value.T_INVHEDs.Add(this);
						this._RoomNo = value.ID;
					}
					else
					{
						this._RoomNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Room");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_INVHED", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_INVHEDs.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_INVHEDs.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_INVDETs(T_INVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_INVHED = this;
		}

		private void detach_T_INVDETs(T_INVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_INVHED = null;
		}

		private void attach_T_SINVDETs(T_SINVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_INVHED = this;
		}

		private void detach_T_SINVDETs(T_SINVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_INVHED = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_INVSETTING")]
	public partial class T_INVSETTING : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		T_Printer _InvpRINTERInfo = null;
		public T_Printer InvpRINTERInfo
		{
			get
			{
				if (_InvpRINTERInfo == null)

				{
					Stock_DataDataContext db = new Stock_DataDataContext(VarGeneral.BranchCS);
					var q = from i in db.T_Printers
							where i.InvID == InvID && i.User_ID == VarGeneral.UserID
							select i;
					if (q.Count() == 1)
						_InvpRINTERInfo = q.ToList()[0];

				}
				return _InvpRINTERInfo;

			}
		}

		private int _InvSet_ID;

		private int _InvID;

		private string _InvNamA;

		private string _InvNamE;

		private string _InvSetting;

		private string _InvStartNo;

		private string _InvTypA0;

		private string _InvTypA1;

		private string _InvTypA2;

		private string _InvTypA3;

		private string _InvTypA4;

		private string _InvTypE0;

		private string _InvTypE1;

		private string _InvTypE2;

		private string _InvTypE3;

		private string _InvTypE4;

		private System.Nullable<double> _InvColorH;

		private System.Nullable<double> _InvColorD;

		private System.Nullable<int> _InvPrice;

		private string _FldA1;

		private string _FldA2;

		private string _FldA3;

		private string _FldA4;

		private string _FldA5;

		private string _FldE1;

		private string _FldE2;

		private string _FldE3;

		private string _FldE4;

		private string _FldE5;

		private string _AccCredit0;

		private string _AccDebit0;

		private string _invALogo;

		private string _invELogo;

		private string _invGdADesc;

		private string _invGdEDesc;

		private string _invGdStng;

		private string _AccCredit1;

		private string _AccDebit1;

		private string _AccCredit2;

		private string _AccDebit2;

		private string _AccCredit3;

		private string _AccDebit3;

		private string _AccCredit4;

		private string _AccDebit4;

		private System.Nullable<double> _hAl;

		private System.Nullable<double> _hAs;

		private System.Nullable<double> _hYm;

		private System.Nullable<double> _hYs;

		private System.Nullable<double> _lnPg;

		private System.Nullable<double> _lnSpc;

		private string _defPrn;

		private string _nTyp;

		private string _ItmTyp;

		private System.Nullable<int> _InvNum;

		private System.Nullable<int> _InvNum1;

		private System.Nullable<int> _DefLines;

		private string _defSizePaper;

		private System.Nullable<int> _Orientation;

		private System.Nullable<int> _CatID;

		private System.Nullable<bool> _PrintCat;

		private string _TaxOptions;

		private System.Nullable<bool> _autoTaxGaid;

		private string _TaxDebit;

		private string _TaxCredit;

		private System.Nullable<bool> _autoDisGaid;

		private string _DisDebit;

		private string _DisCredit;

		private string _CommOptions;

		private System.Nullable<bool> _autoCommGaid;

		private string _CommDebit;

		private string _CommCredit;

		private string _TaxDebitCredit;

		private string _TaxCreditCredit;

		private EntitySet<T_BankPeaper> _T_BankPeapers;

		private EntitySet<T_INVHED> _T_INVHEDs;

		private EntityRef<T_CATEGORY> _T_CATEGORY;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnInvSet_IDChanging(int value);
		partial void OnInvSet_IDChanged();
		partial void OnInvIDChanging(int value);
		partial void OnInvIDChanged();
		partial void OnInvNamAChanging(string value);
		partial void OnInvNamAChanged();
		partial void OnInvNamEChanging(string value);
		partial void OnInvNamEChanged();
		partial void OnInvSettingChanging(string value);
		partial void OnInvSettingChanged();
		partial void OnInvStartNoChanging(string value);
		partial void OnInvStartNoChanged();
		partial void OnInvTypA0Changing(string value);
		partial void OnInvTypA0Changed();
		partial void OnInvTypA1Changing(string value);
		partial void OnInvTypA1Changed();
		partial void OnInvTypA2Changing(string value);
		partial void OnInvTypA2Changed();
		partial void OnInvTypA3Changing(string value);
		partial void OnInvTypA3Changed();
		partial void OnInvTypA4Changing(string value);
		partial void OnInvTypA4Changed();
		partial void OnInvTypE0Changing(string value);
		partial void OnInvTypE0Changed();
		partial void OnInvTypE1Changing(string value);
		partial void OnInvTypE1Changed();
		partial void OnInvTypE2Changing(string value);
		partial void OnInvTypE2Changed();
		partial void OnInvTypE3Changing(string value);
		partial void OnInvTypE3Changed();
		partial void OnInvTypE4Changing(string value);
		partial void OnInvTypE4Changed();
		partial void OnInvColorHChanging(System.Nullable<double> value);
		partial void OnInvColorHChanged();
		partial void OnInvColorDChanging(System.Nullable<double> value);
		partial void OnInvColorDChanged();
		partial void OnInvPriceChanging(System.Nullable<int> value);
		partial void OnInvPriceChanged();
		partial void OnFldA1Changing(string value);
		partial void OnFldA1Changed();
		partial void OnFldA2Changing(string value);
		partial void OnFldA2Changed();
		partial void OnFldA3Changing(string value);
		partial void OnFldA3Changed();
		partial void OnFldA4Changing(string value);
		partial void OnFldA4Changed();
		partial void OnFldA5Changing(string value);
		partial void OnFldA5Changed();
		partial void OnFldE1Changing(string value);
		partial void OnFldE1Changed();
		partial void OnFldE2Changing(string value);
		partial void OnFldE2Changed();
		partial void OnFldE3Changing(string value);
		partial void OnFldE3Changed();
		partial void OnFldE4Changing(string value);
		partial void OnFldE4Changed();
		partial void OnFldE5Changing(string value);
		partial void OnFldE5Changed();
		partial void OnAccCredit0Changing(string value);
		partial void OnAccCredit0Changed();
		partial void OnAccDebit0Changing(string value);
		partial void OnAccDebit0Changed();
		partial void OninvALogoChanging(string value);
		partial void OninvALogoChanged();
		partial void OninvELogoChanging(string value);
		partial void OninvELogoChanged();
		partial void OninvGdADescChanging(string value);
		partial void OninvGdADescChanged();
		partial void OninvGdEDescChanging(string value);
		partial void OninvGdEDescChanged();
		partial void OninvGdStngChanging(string value);
		partial void OninvGdStngChanged();
		partial void OnAccCredit1Changing(string value);
		partial void OnAccCredit1Changed();
		partial void OnAccDebit1Changing(string value);
		partial void OnAccDebit1Changed();
		partial void OnAccCredit2Changing(string value);
		partial void OnAccCredit2Changed();
		partial void OnAccDebit2Changing(string value);
		partial void OnAccDebit2Changed();
		partial void OnAccCredit3Changing(string value);
		partial void OnAccCredit3Changed();
		partial void OnAccDebit3Changing(string value);
		partial void OnAccDebit3Changed();
		partial void OnAccCredit4Changing(string value);
		partial void OnAccCredit4Changed();
		partial void OnAccDebit4Changing(string value);
		partial void OnAccDebit4Changed();
		partial void OnhAlChanging(System.Nullable<double> value);
		partial void OnhAlChanged();
		partial void OnhAsChanging(System.Nullable<double> value);
		partial void OnhAsChanged();
		partial void OnhYmChanging(System.Nullable<double> value);
		partial void OnhYmChanged();
		partial void OnhYsChanging(System.Nullable<double> value);
		partial void OnhYsChanged();
		partial void OnlnPgChanging(System.Nullable<double> value);
		partial void OnlnPgChanged();
		partial void OnlnSpcChanging(System.Nullable<double> value);
		partial void OnlnSpcChanged();
		partial void OndefPrnChanging(string value);
		partial void OndefPrnChanged();
		partial void OnnTypChanging(string value);
		partial void OnnTypChanged();
		partial void OnItmTypChanging(string value);
		partial void OnItmTypChanged();
		partial void OnInvNumChanging(System.Nullable<int> value);
		partial void OnInvNumChanged();
		partial void OnInvNum1Changing(System.Nullable<int> value);
		partial void OnInvNum1Changed();
		partial void OnDefLinesChanging(System.Nullable<int> value);
		partial void OnDefLinesChanged();
		partial void OndefSizePaperChanging(string value);
		partial void OndefSizePaperChanged();
		partial void OnOrientationChanging(System.Nullable<int> value);
		partial void OnOrientationChanged();
		partial void OnCatIDChanging(System.Nullable<int> value);
		partial void OnCatIDChanged();
		partial void OnPrintCatChanging(System.Nullable<bool> value);
		partial void OnPrintCatChanged();
		partial void OnTaxOptionsChanging(string value);
		partial void OnTaxOptionsChanged();
		partial void OnautoTaxGaidChanging(System.Nullable<bool> value);
		partial void OnautoTaxGaidChanged();
		partial void OnTaxDebitChanging(string value);
		partial void OnTaxDebitChanged();
		partial void OnTaxCreditChanging(string value);
		partial void OnTaxCreditChanged();
		partial void OnautoDisGaidChanging(System.Nullable<bool> value);
		partial void OnautoDisGaidChanged();
		partial void OnDisDebitChanging(string value);
		partial void OnDisDebitChanged();
		partial void OnDisCreditChanging(string value);
		partial void OnDisCreditChanged();
		partial void OnCommOptionsChanging(string value);
		partial void OnCommOptionsChanged();
		partial void OnautoCommGaidChanging(System.Nullable<bool> value);
		partial void OnautoCommGaidChanged();
		partial void OnCommDebitChanging(string value);
		partial void OnCommDebitChanged();
		partial void OnCommCreditChanging(string value);
		partial void OnCommCreditChanged();
		partial void OnTaxDebitCreditChanging(string value);
		partial void OnTaxDebitCreditChanged();
		partial void OnTaxCreditCreditChanging(string value);
		partial void OnTaxCreditCreditChanged();
		#endregion

		public T_INVSETTING()
		{
			this._T_BankPeapers = new EntitySet<T_BankPeaper>(new Action<T_BankPeaper>(this.attach_T_BankPeapers), new Action<T_BankPeaper>(this.detach_T_BankPeapers));
			this._T_INVHEDs = new EntitySet<T_INVHED>(new Action<T_INVHED>(this.attach_T_INVHEDs), new Action<T_INVHED>(this.detach_T_INVHEDs));
			this._T_CATEGORY = default(EntityRef<T_CATEGORY>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvSet_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int InvSet_ID
		{
			get
			{
				return this._InvSet_ID;
			}
			set
			{
				if ((this._InvSet_ID != value))
				{
					this.OnInvSet_IDChanging(value);
					this.SendPropertyChanging();
					this._InvSet_ID = value;
					this.SendPropertyChanged("InvSet_ID");
					this.OnInvSet_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int InvID
		{
			get
			{
				return this._InvID;
			}
			set
			{
				if ((this._InvID != value))
				{
					this.OnInvIDChanging(value);
					this.SendPropertyChanging();
					this._InvID = value;
					this.SendPropertyChanged("InvID");
					this.OnInvIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNamA", DbType = "VarChar(50)")]
		public string InvNamA
		{
			get
			{
				return this._InvNamA;
			}
			set
			{
				if ((this._InvNamA != value))
				{
					this.OnInvNamAChanging(value);
					this.SendPropertyChanging();
					this._InvNamA = value;
					this.SendPropertyChanged("InvNamA");
					this.OnInvNamAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNamE", DbType = "VarChar(50)")]
		public string InvNamE
		{
			get
			{
				return this._InvNamE;
			}
			set
			{
				if ((this._InvNamE != value))
				{
					this.OnInvNamEChanging(value);
					this.SendPropertyChanging();
					this._InvNamE = value;
					this.SendPropertyChanged("InvNamE");
					this.OnInvNamEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvSetting", DbType = "VarChar(50)")]
		public string InvSetting
		{
			get
			{
				return this._InvSetting;
			}
			set
			{
				if ((this._InvSetting != value))
				{
					this.OnInvSettingChanging(value);
					this.SendPropertyChanging();
					this._InvSetting = value;
					this.SendPropertyChanged("InvSetting");
					this.OnInvSettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvStartNo", DbType = "VarChar(10)")]
		public string InvStartNo
		{
			get
			{
				return this._InvStartNo;
			}
			set
			{
				if ((this._InvStartNo != value))
				{
					this.OnInvStartNoChanging(value);
					this.SendPropertyChanging();
					this._InvStartNo = value;
					this.SendPropertyChanged("InvStartNo");
					this.OnInvStartNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypA0", DbType = "VarChar(50)")]
		public string InvTypA0
		{
			get
			{
				return this._InvTypA0;
			}
			set
			{
				if ((this._InvTypA0 != value))
				{
					this.OnInvTypA0Changing(value);
					this.SendPropertyChanging();
					this._InvTypA0 = value;
					this.SendPropertyChanged("InvTypA0");
					this.OnInvTypA0Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypA1", DbType = "VarChar(10)")]
		public string InvTypA1
		{
			get
			{
				return this._InvTypA1;
			}
			set
			{
				if ((this._InvTypA1 != value))
				{
					this.OnInvTypA1Changing(value);
					this.SendPropertyChanging();
					this._InvTypA1 = value;
					this.SendPropertyChanged("InvTypA1");
					this.OnInvTypA1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypA2", DbType = "VarChar(10)")]
		public string InvTypA2
		{
			get
			{
				return this._InvTypA2;
			}
			set
			{
				if ((this._InvTypA2 != value))
				{
					this.OnInvTypA2Changing(value);
					this.SendPropertyChanging();
					this._InvTypA2 = value;
					this.SendPropertyChanged("InvTypA2");
					this.OnInvTypA2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypA3", DbType = "VarChar(10)")]
		public string InvTypA3
		{
			get
			{
				return this._InvTypA3;
			}
			set
			{
				if ((this._InvTypA3 != value))
				{
					this.OnInvTypA3Changing(value);
					this.SendPropertyChanging();
					this._InvTypA3 = value;
					this.SendPropertyChanged("InvTypA3");
					this.OnInvTypA3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypA4", DbType = "VarChar(10)")]
		public string InvTypA4
		{
			get
			{
				return this._InvTypA4;
			}
			set
			{
				if ((this._InvTypA4 != value))
				{
					this.OnInvTypA4Changing(value);
					this.SendPropertyChanging();
					this._InvTypA4 = value;
					this.SendPropertyChanged("InvTypA4");
					this.OnInvTypA4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypE0", DbType = "VarChar(10)")]
		public string InvTypE0
		{
			get
			{
				return this._InvTypE0;
			}
			set
			{
				if ((this._InvTypE0 != value))
				{
					this.OnInvTypE0Changing(value);
					this.SendPropertyChanging();
					this._InvTypE0 = value;
					this.SendPropertyChanged("InvTypE0");
					this.OnInvTypE0Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypE1", DbType = "VarChar(10)")]
		public string InvTypE1
		{
			get
			{
				return this._InvTypE1;
			}
			set
			{
				if ((this._InvTypE1 != value))
				{
					this.OnInvTypE1Changing(value);
					this.SendPropertyChanging();
					this._InvTypE1 = value;
					this.SendPropertyChanged("InvTypE1");
					this.OnInvTypE1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypE2", DbType = "VarChar(10)")]
		public string InvTypE2
		{
			get
			{
				return this._InvTypE2;
			}
			set
			{
				if ((this._InvTypE2 != value))
				{
					this.OnInvTypE2Changing(value);
					this.SendPropertyChanging();
					this._InvTypE2 = value;
					this.SendPropertyChanged("InvTypE2");
					this.OnInvTypE2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypE3", DbType = "VarChar(10)")]
		public string InvTypE3
		{
			get
			{
				return this._InvTypE3;
			}
			set
			{
				if ((this._InvTypE3 != value))
				{
					this.OnInvTypE3Changing(value);
					this.SendPropertyChanging();
					this._InvTypE3 = value;
					this.SendPropertyChanged("InvTypE3");
					this.OnInvTypE3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvTypE4", DbType = "VarChar(10)")]
		public string InvTypE4
		{
			get
			{
				return this._InvTypE4;
			}
			set
			{
				if ((this._InvTypE4 != value))
				{
					this.OnInvTypE4Changing(value);
					this.SendPropertyChanging();
					this._InvTypE4 = value;
					this.SendPropertyChanged("InvTypE4");
					this.OnInvTypE4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvColorH", DbType = "Float")]
		public System.Nullable<double> InvColorH
		{
			get
			{
				return this._InvColorH;
			}
			set
			{
				if ((this._InvColorH != value))
				{
					this.OnInvColorHChanging(value);
					this.SendPropertyChanging();
					this._InvColorH = value;
					this.SendPropertyChanged("InvColorH");
					this.OnInvColorHChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvColorD", DbType = "Float")]
		public System.Nullable<double> InvColorD
		{
			get
			{
				return this._InvColorD;
			}
			set
			{
				if ((this._InvColorD != value))
				{
					this.OnInvColorDChanging(value);
					this.SendPropertyChanging();
					this._InvColorD = value;
					this.SendPropertyChanged("InvColorD");
					this.OnInvColorDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvPrice", DbType = "Int")]
		public System.Nullable<int> InvPrice
		{
			get
			{
				return this._InvPrice;
			}
			set
			{
				if ((this._InvPrice != value))
				{
					this.OnInvPriceChanging(value);
					this.SendPropertyChanging();
					this._InvPrice = value;
					this.SendPropertyChanged("InvPrice");
					this.OnInvPriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldA1", DbType = "VarChar(20)")]
		public string FldA1
		{
			get
			{
				return this._FldA1;
			}
			set
			{
				if ((this._FldA1 != value))
				{
					this.OnFldA1Changing(value);
					this.SendPropertyChanging();
					this._FldA1 = value;
					this.SendPropertyChanged("FldA1");
					this.OnFldA1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldA2", DbType = "VarChar(20)")]
		public string FldA2
		{
			get
			{
				return this._FldA2;
			}
			set
			{
				if ((this._FldA2 != value))
				{
					this.OnFldA2Changing(value);
					this.SendPropertyChanging();
					this._FldA2 = value;
					this.SendPropertyChanged("FldA2");
					this.OnFldA2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldA3", DbType = "VarChar(20)")]
		public string FldA3
		{
			get
			{
				return this._FldA3;
			}
			set
			{
				if ((this._FldA3 != value))
				{
					this.OnFldA3Changing(value);
					this.SendPropertyChanging();
					this._FldA3 = value;
					this.SendPropertyChanged("FldA3");
					this.OnFldA3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldA4", DbType = "VarChar(20)")]
		public string FldA4
		{
			get
			{
				return this._FldA4;
			}
			set
			{
				if ((this._FldA4 != value))
				{
					this.OnFldA4Changing(value);
					this.SendPropertyChanging();
					this._FldA4 = value;
					this.SendPropertyChanged("FldA4");
					this.OnFldA4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldA5", DbType = "VarChar(20)")]
		public string FldA5
		{
			get
			{
				return this._FldA5;
			}
			set
			{
				if ((this._FldA5 != value))
				{
					this.OnFldA5Changing(value);
					this.SendPropertyChanging();
					this._FldA5 = value;
					this.SendPropertyChanged("FldA5");
					this.OnFldA5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldE1", DbType = "VarChar(20)")]
		public string FldE1
		{
			get
			{
				return this._FldE1;
			}
			set
			{
				if ((this._FldE1 != value))
				{
					this.OnFldE1Changing(value);
					this.SendPropertyChanging();
					this._FldE1 = value;
					this.SendPropertyChanged("FldE1");
					this.OnFldE1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldE2", DbType = "VarChar(20)")]
		public string FldE2
		{
			get
			{
				return this._FldE2;
			}
			set
			{
				if ((this._FldE2 != value))
				{
					this.OnFldE2Changing(value);
					this.SendPropertyChanging();
					this._FldE2 = value;
					this.SendPropertyChanged("FldE2");
					this.OnFldE2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldE3", DbType = "VarChar(20)")]
		public string FldE3
		{
			get
			{
				return this._FldE3;
			}
			set
			{
				if ((this._FldE3 != value))
				{
					this.OnFldE3Changing(value);
					this.SendPropertyChanging();
					this._FldE3 = value;
					this.SendPropertyChanged("FldE3");
					this.OnFldE3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldE4", DbType = "VarChar(20)")]
		public string FldE4
		{
			get
			{
				return this._FldE4;
			}
			set
			{
				if ((this._FldE4 != value))
				{
					this.OnFldE4Changing(value);
					this.SendPropertyChanging();
					this._FldE4 = value;
					this.SendPropertyChanged("FldE4");
					this.OnFldE4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FldE5", DbType = "VarChar(20)")]
		public string FldE5
		{
			get
			{
				return this._FldE5;
			}
			set
			{
				if ((this._FldE5 != value))
				{
					this.OnFldE5Changing(value);
					this.SendPropertyChanging();
					this._FldE5 = value;
					this.SendPropertyChanged("FldE5");
					this.OnFldE5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCredit0", DbType = "VarChar(15)")]
		public string AccCredit0
		{
			get
			{
				return this._AccCredit0;
			}
			set
			{
				if ((this._AccCredit0 != value))
				{
					this.OnAccCredit0Changing(value);
					this.SendPropertyChanging();
					this._AccCredit0 = value;
					this.SendPropertyChanged("AccCredit0");
					this.OnAccCredit0Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccDebit0", DbType = "VarChar(15)")]
		public string AccDebit0
		{
			get
			{
				return this._AccDebit0;
			}
			set
			{
				if ((this._AccDebit0 != value))
				{
					this.OnAccDebit0Changing(value);
					this.SendPropertyChanging();
					this._AccDebit0 = value;
					this.SendPropertyChanged("AccDebit0");
					this.OnAccDebit0Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_invALogo", DbType = "VarChar(20)")]
		public string invALogo
		{
			get
			{
				return this._invALogo;
			}
			set
			{
				if ((this._invALogo != value))
				{
					this.OninvALogoChanging(value);
					this.SendPropertyChanging();
					this._invALogo = value;
					this.SendPropertyChanged("invALogo");
					this.OninvALogoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_invELogo", DbType = "VarChar(20)")]
		public string invELogo
		{
			get
			{
				return this._invELogo;
			}
			set
			{
				if ((this._invELogo != value))
				{
					this.OninvELogoChanging(value);
					this.SendPropertyChanging();
					this._invELogo = value;
					this.SendPropertyChanged("invELogo");
					this.OninvELogoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_invGdADesc", DbType = "VarChar(MAX)")]
		public string invGdADesc
		{
			get
			{
				return this._invGdADesc;
			}
			set
			{
				if ((this._invGdADesc != value))
				{
					this.OninvGdADescChanging(value);
					this.SendPropertyChanging();
					this._invGdADesc = value;
					this.SendPropertyChanged("invGdADesc");
					this.OninvGdADescChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_invGdEDesc", DbType = "VarChar(MAX)")]
		public string invGdEDesc
		{
			get
			{
				return this._invGdEDesc;
			}
			set
			{
				if ((this._invGdEDesc != value))
				{
					this.OninvGdEDescChanging(value);
					this.SendPropertyChanging();
					this._invGdEDesc = value;
					this.SendPropertyChanged("invGdEDesc");
					this.OninvGdEDescChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_invGdStng", DbType = "VarChar(10)")]
		public string invGdStng
		{
			get
			{
				return this._invGdStng;
			}
			set
			{
				if ((this._invGdStng != value))
				{
					this.OninvGdStngChanging(value);
					this.SendPropertyChanging();
					this._invGdStng = value;
					this.SendPropertyChanged("invGdStng");
					this.OninvGdStngChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCredit1", DbType = "VarChar(15)")]
		public string AccCredit1
		{
			get
			{
				return this._AccCredit1;
			}
			set
			{
				if ((this._AccCredit1 != value))
				{
					this.OnAccCredit1Changing(value);
					this.SendPropertyChanging();
					this._AccCredit1 = value;
					this.SendPropertyChanged("AccCredit1");
					this.OnAccCredit1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccDebit1", DbType = "VarChar(15)")]
		public string AccDebit1
		{
			get
			{
				return this._AccDebit1;
			}
			set
			{
				if ((this._AccDebit1 != value))
				{
					this.OnAccDebit1Changing(value);
					this.SendPropertyChanging();
					this._AccDebit1 = value;
					this.SendPropertyChanged("AccDebit1");
					this.OnAccDebit1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCredit2", DbType = "VarChar(15)")]
		public string AccCredit2
		{
			get
			{
				return this._AccCredit2;
			}
			set
			{
				if ((this._AccCredit2 != value))
				{
					this.OnAccCredit2Changing(value);
					this.SendPropertyChanging();
					this._AccCredit2 = value;
					this.SendPropertyChanged("AccCredit2");
					this.OnAccCredit2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccDebit2", DbType = "VarChar(15)")]
		public string AccDebit2
		{
			get
			{
				return this._AccDebit2;
			}
			set
			{
				if ((this._AccDebit2 != value))
				{
					this.OnAccDebit2Changing(value);
					this.SendPropertyChanging();
					this._AccDebit2 = value;
					this.SendPropertyChanged("AccDebit2");
					this.OnAccDebit2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCredit3", DbType = "VarChar(15)")]
		public string AccCredit3
		{
			get
			{
				return this._AccCredit3;
			}
			set
			{
				if ((this._AccCredit3 != value))
				{
					this.OnAccCredit3Changing(value);
					this.SendPropertyChanging();
					this._AccCredit3 = value;
					this.SendPropertyChanged("AccCredit3");
					this.OnAccCredit3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccDebit3", DbType = "VarChar(15)")]
		public string AccDebit3
		{
			get
			{
				return this._AccDebit3;
			}
			set
			{
				if ((this._AccDebit3 != value))
				{
					this.OnAccDebit3Changing(value);
					this.SendPropertyChanging();
					this._AccDebit3 = value;
					this.SendPropertyChanged("AccDebit3");
					this.OnAccDebit3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCredit4", DbType = "VarChar(15)")]
		public string AccCredit4
		{
			get
			{
				return this._AccCredit4;
			}
			set
			{
				if ((this._AccCredit4 != value))
				{
					this.OnAccCredit4Changing(value);
					this.SendPropertyChanging();
					this._AccCredit4 = value;
					this.SendPropertyChanged("AccCredit4");
					this.OnAccCredit4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccDebit4", DbType = "VarChar(15)")]
		public string AccDebit4
		{
			get
			{
				return this._AccDebit4;
			}
			set
			{
				if ((this._AccDebit4 != value))
				{
					this.OnAccDebit4Changing(value);
					this.SendPropertyChanging();
					this._AccDebit4 = value;
					this.SendPropertyChanged("AccDebit4");
					this.OnAccDebit4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hAl", DbType = "Float")]
		public System.Nullable<double> hAl
		{
			get
			{
				return this._hAl;
			}
			set
			{
				if ((this._hAl != value))
				{
					this.OnhAlChanging(value);
					this.SendPropertyChanging();
					this._hAl = value;
					this.SendPropertyChanged("hAl");
					this.OnhAlChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hAs", DbType = "Float")]
		public System.Nullable<double> hAs
		{
			get
			{
				return this._hAs;
			}
			set
			{
				if ((this._hAs != value))
				{
					this.OnhAsChanging(value);
					this.SendPropertyChanging();
					this._hAs = value;
					this.SendPropertyChanged("hAs");
					this.OnhAsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hYm", DbType = "Float")]
		public System.Nullable<double> hYm
		{
			get
			{
				return this._hYm;
			}
			set
			{
				if ((this._hYm != value))
				{
					this.OnhYmChanging(value);
					this.SendPropertyChanging();
					this._hYm = value;
					this.SendPropertyChanged("hYm");
					this.OnhYmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hYs", DbType = "Float")]
		public System.Nullable<double> hYs
		{
			get
			{
				return this._hYs;
			}
			set
			{
				if ((this._hYs != value))
				{
					this.OnhYsChanging(value);
					this.SendPropertyChanging();
					this._hYs = value;
					this.SendPropertyChanged("hYs");
					this.OnhYsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lnPg", DbType = "Float")]
		public System.Nullable<double> lnPg
		{
			get
			{
				return this._lnPg;
			}
			set
			{
				if ((this._lnPg != value))
				{
					this.OnlnPgChanging(value);
					this.SendPropertyChanging();
					this._lnPg = value;
					this.SendPropertyChanged("lnPg");
					this.OnlnPgChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lnSpc", DbType = "Float")]
		public System.Nullable<double> lnSpc
		{
			get
			{
				return this._lnSpc;
			}
			set
			{
				if ((this._lnSpc != value))
				{
					this.OnlnSpcChanging(value);
					this.SendPropertyChanging();
					this._lnSpc = value;
					this.SendPropertyChanged("lnSpc");
					this.OnlnSpcChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_defPrn", DbType = "VarChar(100)")]
		public string defPrn
		{
			get
			{
				return this._defPrn;
			}
			set
			{
				if ((this._defPrn != value))
				{
					this.OndefPrnChanging(value);
					this.SendPropertyChanging();
					this._defPrn = value;
					this.SendPropertyChanged("defPrn");
					this.OndefPrnChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nTyp", DbType = "VarChar(3)")]
		public string nTyp
		{
			get
			{
				return this._nTyp;
			}
			set
			{
				if ((this._nTyp != value))
				{
					this.OnnTypChanging(value);
					this.SendPropertyChanging();
					this._nTyp = value;
					this.SendPropertyChanged("nTyp");
					this.OnnTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmTyp", DbType = "VarChar(10)")]
		public string ItmTyp
		{
			get
			{
				return this._ItmTyp;
			}
			set
			{
				if ((this._ItmTyp != value))
				{
					this.OnItmTypChanging(value);
					this.SendPropertyChanging();
					this._ItmTyp = value;
					this.SendPropertyChanged("ItmTyp");
					this.OnItmTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNum", DbType = "Int")]
		public System.Nullable<int> InvNum
		{
			get
			{
				return this._InvNum;
			}
			set
			{
				if ((this._InvNum != value))
				{
					this.OnInvNumChanging(value);
					this.SendPropertyChanging();
					this._InvNum = value;
					this.SendPropertyChanged("InvNum");
					this.OnInvNumChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvNum1", DbType = "Int")]
		public System.Nullable<int> InvNum1
		{
			get
			{
				return this._InvNum1;
			}
			set
			{
				if ((this._InvNum1 != value))
				{
					this.OnInvNum1Changing(value);
					this.SendPropertyChanging();
					this._InvNum1 = value;
					this.SendPropertyChanged("InvNum1");
					this.OnInvNum1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefLines", DbType = "Int")]
		public System.Nullable<int> DefLines
		{
			get
			{
				return this._DefLines;
			}
			set
			{
				if ((this._DefLines != value))
				{
					this.OnDefLinesChanging(value);
					this.SendPropertyChanging();
					this._DefLines = value;
					this.SendPropertyChanged("DefLines");
					this.OnDefLinesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_defSizePaper", DbType = "VarChar(100)")]
		public string defSizePaper
		{
			get
			{
				return this._defSizePaper;
			}
			set
			{
				if ((this._defSizePaper != value))
				{
					this.OndefSizePaperChanging(value);
					this.SendPropertyChanging();
					this._defSizePaper = value;
					this.SendPropertyChanged("defSizePaper");
					this.OndefSizePaperChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Orientation", DbType = "Int")]
		public System.Nullable<int> Orientation
		{
			get
			{
				return this._Orientation;
			}
			set
			{
				if ((this._Orientation != value))
				{
					this.OnOrientationChanging(value);
					this.SendPropertyChanging();
					this._Orientation = value;
					this.SendPropertyChanged("Orientation");
					this.OnOrientationChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CatID", DbType = "Int")]
		public System.Nullable<int> CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					if (this._T_CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIDChanging(value);
					this.SendPropertyChanging();
					this._CatID = value;
					this.SendPropertyChanged("CatID");
					this.OnCatIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PrintCat", DbType = "Bit")]
		public System.Nullable<bool> PrintCat
		{
			get
			{
				return this._PrintCat;
			}
			set
			{
				if ((this._PrintCat != value))
				{
					this.OnPrintCatChanging(value);
					this.SendPropertyChanging();
					this._PrintCat = value;
					this.SendPropertyChanged("PrintCat");
					this.OnPrintCatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxOptions", DbType = "VarChar(100)")]
		public string TaxOptions
		{
			get
			{
				return this._TaxOptions;
			}
			set
			{
				if ((this._TaxOptions != value))
				{
					this.OnTaxOptionsChanging(value);
					this.SendPropertyChanging();
					this._TaxOptions = value;
					this.SendPropertyChanged("TaxOptions");
					this.OnTaxOptionsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_autoTaxGaid", DbType = "Bit")]
		public System.Nullable<bool> autoTaxGaid
		{
			get
			{
				return this._autoTaxGaid;
			}
			set
			{
				if ((this._autoTaxGaid != value))
				{
					this.OnautoTaxGaidChanging(value);
					this.SendPropertyChanging();
					this._autoTaxGaid = value;
					this.SendPropertyChanged("autoTaxGaid");
					this.OnautoTaxGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxDebit", DbType = "VarChar(15)")]
		public string TaxDebit
		{
			get
			{
				return this._TaxDebit;
			}
			set
			{
				if ((this._TaxDebit != value))
				{
					this.OnTaxDebitChanging(value);
					this.SendPropertyChanging();
					this._TaxDebit = value;
					this.SendPropertyChanged("TaxDebit");
					this.OnTaxDebitChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxCredit", DbType = "VarChar(15)")]
		public string TaxCredit
		{
			get
			{
				return this._TaxCredit;
			}
			set
			{
				if ((this._TaxCredit != value))
				{
					this.OnTaxCreditChanging(value);
					this.SendPropertyChanging();
					this._TaxCredit = value;
					this.SendPropertyChanged("TaxCredit");
					this.OnTaxCreditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_autoDisGaid", DbType = "Bit")]
		public System.Nullable<bool> autoDisGaid
		{
			get
			{
				return this._autoDisGaid;
			}
			set
			{
				if ((this._autoDisGaid != value))
				{
					this.OnautoDisGaidChanging(value);
					this.SendPropertyChanging();
					this._autoDisGaid = value;
					this.SendPropertyChanged("autoDisGaid");
					this.OnautoDisGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DisDebit", DbType = "VarChar(15)")]
		public string DisDebit
		{
			get
			{
				return this._DisDebit;
			}
			set
			{
				if ((this._DisDebit != value))
				{
					this.OnDisDebitChanging(value);
					this.SendPropertyChanging();
					this._DisDebit = value;
					this.SendPropertyChanged("DisDebit");
					this.OnDisDebitChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DisCredit", DbType = "VarChar(15)")]
		public string DisCredit
		{
			get
			{
				return this._DisCredit;
			}
			set
			{
				if ((this._DisCredit != value))
				{
					this.OnDisCreditChanging(value);
					this.SendPropertyChanging();
					this._DisCredit = value;
					this.SendPropertyChanged("DisCredit");
					this.OnDisCreditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CommOptions", DbType = "VarChar(100)")]
		public string CommOptions
		{
			get
			{
				return this._CommOptions;
			}
			set
			{
				if ((this._CommOptions != value))
				{
					this.OnCommOptionsChanging(value);
					this.SendPropertyChanging();
					this._CommOptions = value;
					this.SendPropertyChanged("CommOptions");
					this.OnCommOptionsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_autoCommGaid", DbType = "Bit")]
		public System.Nullable<bool> autoCommGaid
		{
			get
			{
				return this._autoCommGaid;
			}
			set
			{
				if ((this._autoCommGaid != value))
				{
					this.OnautoCommGaidChanging(value);
					this.SendPropertyChanging();
					this._autoCommGaid = value;
					this.SendPropertyChanged("autoCommGaid");
					this.OnautoCommGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CommDebit", DbType = "VarChar(15)")]
		public string CommDebit
		{
			get
			{
				return this._CommDebit;
			}
			set
			{
				if ((this._CommDebit != value))
				{
					this.OnCommDebitChanging(value);
					this.SendPropertyChanging();
					this._CommDebit = value;
					this.SendPropertyChanged("CommDebit");
					this.OnCommDebitChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CommCredit", DbType = "VarChar(15)")]
		public string CommCredit
		{
			get
			{
				return this._CommCredit;
			}
			set
			{
				if ((this._CommCredit != value))
				{
					this.OnCommCreditChanging(value);
					this.SendPropertyChanging();
					this._CommCredit = value;
					this.SendPropertyChanged("CommCredit");
					this.OnCommCreditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxDebitCredit", DbType = "VarChar(15)")]
		public string TaxDebitCredit
		{
			get
			{
				return this._TaxDebitCredit;
			}
			set
			{
				if ((this._TaxDebitCredit != value))
				{
					this.OnTaxDebitCreditChanging(value);
					this.SendPropertyChanging();
					this._TaxDebitCredit = value;
					this.SendPropertyChanged("TaxDebitCredit");
					this.OnTaxDebitCreditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxCreditCredit", DbType = "VarChar(15)")]
		public string TaxCreditCredit
		{
			get
			{
				return this._TaxCreditCredit;
			}
			set
			{
				if ((this._TaxCreditCredit != value))
				{
					this.OnTaxCreditCreditChanging(value);
					this.SendPropertyChanging();
					this._TaxCreditCredit = value;
					this.SendPropertyChanged("TaxCreditCredit");
					this.OnTaxCreditCreditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVSETTING_T_BankPeaper", Storage = "_T_BankPeapers", ThisKey = "InvID", OtherKey = "gdTyp")]
		public EntitySet<T_BankPeaper> T_BankPeapers
		{
			get
			{
				return this._T_BankPeapers;
			}
			set
			{
				this._T_BankPeapers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVSETTING_T_INVHED", Storage = "_T_INVHEDs", ThisKey = "InvID", OtherKey = "InvTyp")]
		public EntitySet<T_INVHED> T_INVHEDs
		{
			get
			{
				return this._T_INVHEDs;
			}
			set
			{
				this._T_INVHEDs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CATEGORY_T_INVSETTING", Storage = "_T_CATEGORY", ThisKey = "CatID", OtherKey = "CAT_ID", IsForeignKey = true)]
		public T_CATEGORY T_CATEGORY
		{
			get
			{
				return this._T_CATEGORY.Entity;
			}
			set
			{
				T_CATEGORY previousValue = this._T_CATEGORY.Entity;
				if (((previousValue != value)
							|| (this._T_CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_CATEGORY.Entity = null;
						previousValue.T_INVSETTINGs.Remove(this);
					}
					this._T_CATEGORY.Entity = value;
					if ((value != null))
					{
						value.T_INVSETTINGs.Add(this);
						this._CatID = value.CAT_ID;
					}
					else
					{
						this._CatID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_CATEGORY");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_BankPeapers(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_INVSETTING = this;
		}

		private void detach_T_BankPeapers(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_INVSETTING = null;
		}

		private void attach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_INVSETTING = this;
		}

		private void detach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_INVSETTING = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_ItemDet")]
	public partial class T_ItemDet : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _ItmNo;

		private System.Nullable<double> _Qty;

		private string _GItmNo;

		private System.Nullable<int> _Unit_;

		private System.Nullable<double> _Price;

		private System.Nullable<int> _StoreNo;

		private EntityRef<T_Item> _T_Item;

		private EntityRef<T_Store> _T_Store;

		private EntityRef<T_Unit> _T_Unit;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnItmNoChanging(string value);
		partial void OnItmNoChanged();
		partial void OnQtyChanging(System.Nullable<double> value);
		partial void OnQtyChanged();
		partial void OnGItmNoChanging(string value);
		partial void OnGItmNoChanged();
		partial void OnUnit_Changing(System.Nullable<int> value);
		partial void OnUnit_Changed();
		partial void OnPriceChanging(System.Nullable<double> value);
		partial void OnPriceChanged();
		partial void OnStoreNoChanging(System.Nullable<int> value);
		partial void OnStoreNoChanged();
		#endregion

		public T_ItemDet()
		{
			this._T_Item = default(EntityRef<T_Item>);
			this._T_Store = default(EntityRef<T_Store>);
			this._T_Unit = default(EntityRef<T_Unit>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmNo", DbType = "VarChar(50)")]
		public string ItmNo
		{
			get
			{
				return this._ItmNo;
			}
			set
			{
				if ((this._ItmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmNoChanging(value);
					this.SendPropertyChanging();
					this._ItmNo = value;
					this.SendPropertyChanged("ItmNo");
					this.OnItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Qty", DbType = "Float")]
		public System.Nullable<double> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GItmNo", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
		public string GItmNo
		{
			get
			{
				return this._GItmNo;
			}
			set
			{
				if ((this._GItmNo != value))
				{
					this.OnGItmNoChanging(value);
					this.SendPropertyChanging();
					this._GItmNo = value;
					this.SendPropertyChanged("GItmNo");
					this.OnGItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit_", DbType = "Int")]
		public System.Nullable<int> Unit_
		{
			get
			{
				return this._Unit_;
			}
			set
			{
				if ((this._Unit_ != value))
				{
					if (this._T_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnit_Changing(value);
					this.SendPropertyChanging();
					this._Unit_ = value;
					this.SendPropertyChanged("Unit_");
					this.OnUnit_Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price", DbType = "Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StoreNo", DbType = "Int")]
		public System.Nullable<int> StoreNo
		{
			get
			{
				return this._StoreNo;
			}
			set
			{
				if ((this._StoreNo != value))
				{
					if (this._T_Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreNoChanging(value);
					this.SendPropertyChanging();
					this._StoreNo = value;
					this.SendPropertyChanged("StoreNo");
					this.OnStoreNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_ItemDet", Storage = "_T_Item", ThisKey = "ItmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_ItemDets.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_ItemDets.Add(this);
						this._ItmNo = value.Itm_No;
					}
					else
					{
						this._ItmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_ItemDet", Storage = "_T_Store", ThisKey = "StoreNo", OtherKey = "Stor_ID", IsForeignKey = true)]
		public T_Store T_Store
		{
			get
			{
				return this._T_Store.Entity;
			}
			set
			{
				T_Store previousValue = this._T_Store.Entity;
				if (((previousValue != value)
							|| (this._T_Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Store.Entity = null;
						previousValue.T_ItemDets.Remove(this);
					}
					this._T_Store.Entity = value;
					if ((value != null))
					{
						value.T_ItemDets.Add(this);
						this._StoreNo = value.Stor_ID;
					}
					else
					{
						this._StoreNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Store");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_ItemDet", Storage = "_T_Unit", ThisKey = "Unit_", OtherKey = "Unit_ID", IsForeignKey = true)]
		public T_Unit T_Unit
		{
			get
			{
				return this._T_Unit.Entity;
			}
			set
			{
				T_Unit previousValue = this._T_Unit.Entity;
				if (((previousValue != value)
							|| (this._T_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Unit.Entity = null;
						previousValue.T_ItemDets.Remove(this);
					}
					this._T_Unit.Entity = value;
					if ((value != null))
					{
						value.T_ItemDets.Add(this);
						this._Unit_ = value.Unit_ID;
					}
					else
					{
						this._Unit_ = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Unit");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Items")]
	public partial class T_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Itm_ID;

		private string _Itm_No;

		private System.Nullable<int> _ItmCat;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<double> _StartCost;

		private System.Nullable<double> _AvrageCost;

		private System.Nullable<double> _LastCost;

		private System.Nullable<double> _Price1;

		private System.Nullable<double> _Price2;

		private System.Nullable<double> _Price3;

		private System.Nullable<double> _Price4;

		private System.Nullable<double> _Price5;

		private System.Nullable<double> _Price6;

		private System.Nullable<int> _Unit1;

		private System.Nullable<double> _UntPri1;

		private System.Nullable<double> _Pack1;

		private System.Nullable<int> _Unit2;

		private System.Nullable<double> _UntPri2;

		private System.Nullable<double> _Pack2;

		private System.Nullable<int> _Unit3;

		private System.Nullable<double> _UntPri3;

		private System.Nullable<double> _Pack3;

		private System.Nullable<int> _Unit4;

		private System.Nullable<double> _UntPri4;

		private System.Nullable<double> _Pack4;

		private System.Nullable<int> _Unit5;

		private System.Nullable<double> _UntPri5;

		private System.Nullable<double> _Pack5;

		private System.Nullable<int> _DefultUnit;

		private System.Nullable<int> _DefultVendor;

		private System.Nullable<double> _OpenQty;

		private System.Nullable<double> _QtyLvl;

		private string _ItmLoc;

		private string _BarCod1;

		private string _BarCod2;

		private string _BarCod3;

		private string _BarCod4;

		private string _BarCod5;

		private System.Nullable<int> _Lot;

		private System.Nullable<double> _QtyMax;

		private System.Nullable<int> _LrnExp;

		private System.Nullable<int> _DMY;

		private System.Nullable<int> _ItmTyp;

		private System.Nullable<double> _DefPack;

		private System.Data.Linq.Binary _ItmImg;

		private System.Nullable<bool> _InvSaleStoped;

		private System.Nullable<bool> _InvSaleReturnStoped;

		private System.Nullable<bool> _InvPaymentStoped;

		private System.Nullable<bool> _InvPaymentReturnStoped;

		private System.Nullable<int> _CompanyID;

		private System.Nullable<double> _FirstCost;

		private string _SerialKey;

		private System.Nullable<double> _ItemComm;

		private System.Nullable<double> _TaxSales;

		private System.Nullable<double> _TaxPurchas;

		private System.Nullable<bool> _InvEnterStoped;

		private System.Nullable<bool> _InvOutStoped;

		private System.Nullable<double> _ItemDis;

		private string _SecriptCeramicCombo;

		private string _SecriptCeramic;

		private System.Nullable<bool> _IsBalance;

		private System.Nullable<bool> _IsPoints;

		private string _vSize1;

		private string _vSize2;

		private string _vSize3;

		private string _vSize4;

		private string _vSize5;

		private string _vSize6;

		private string _ProductionDate;

		private string _ExpirationDate;

		private EntitySet<T_EditItemPrice> _T_EditItemPrices;

		private EntitySet<T_INVDET> _T_INVDETs;

		private EntitySet<T_ItemDet> _T_ItemDets;

		private EntitySet<T_ItemSerial> _T_ItemSerials;

		private EntitySet<T_OfferDet> _T_OfferDets;

		private EntitySet<T_OfferQFree> _T_OfferQFrees;

		private EntitySet<T_PatientCout> _T_PatientCouts;

		private EntitySet<T_QTYEXP> _T_QTYEXPs;

		private EntitySet<T_SINVDET> _T_SINVDETs;

		private EntitySet<T_STKSQTY> _T_STKSQTies;

		private EntitySet<T_StoreMnd> _T_StoreMnds;

		private EntityRef<T_CATEGORY> _T_CATEGORY;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		private EntityRef<T_Unit> _T_Unit;

		private EntityRef<T_Unit> _T_Unit1;

		private EntityRef<T_Unit> _T_Unit2;

		private EntityRef<T_Unit> _T_Unit3;

		private EntityRef<T_Unit> _T_Unit4;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnItm_IDChanging(int value);
		partial void OnItm_IDChanged();
		partial void OnItm_NoChanging(string value);
		partial void OnItm_NoChanged();
		partial void OnItmCatChanging(System.Nullable<int> value);
		partial void OnItmCatChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnStartCostChanging(System.Nullable<double> value);
		partial void OnStartCostChanged();
		partial void OnAvrageCostChanging(System.Nullable<double> value);
		partial void OnAvrageCostChanged();
		partial void OnLastCostChanging(System.Nullable<double> value);
		partial void OnLastCostChanged();
		partial void OnPrice1Changing(System.Nullable<double> value);
		partial void OnPrice1Changed();
		partial void OnPrice2Changing(System.Nullable<double> value);
		partial void OnPrice2Changed();
		partial void OnPrice3Changing(System.Nullable<double> value);
		partial void OnPrice3Changed();
		partial void OnPrice4Changing(System.Nullable<double> value);
		partial void OnPrice4Changed();
		partial void OnPrice5Changing(System.Nullable<double> value);
		partial void OnPrice5Changed();
		partial void OnPrice6Changing(System.Nullable<double> value);
		partial void OnPrice6Changed();
		partial void OnUnit1Changing(System.Nullable<int> value);
		partial void OnUnit1Changed();
		partial void OnUntPri1Changing(System.Nullable<double> value);
		partial void OnUntPri1Changed();
		partial void OnPack1Changing(System.Nullable<double> value);
		partial void OnPack1Changed();
		partial void OnUnit2Changing(System.Nullable<int> value);
		partial void OnUnit2Changed();
		partial void OnUntPri2Changing(System.Nullable<double> value);
		partial void OnUntPri2Changed();
		partial void OnPack2Changing(System.Nullable<double> value);
		partial void OnPack2Changed();
		partial void OnUnit3Changing(System.Nullable<int> value);
		partial void OnUnit3Changed();
		partial void OnUntPri3Changing(System.Nullable<double> value);
		partial void OnUntPri3Changed();
		partial void OnPack3Changing(System.Nullable<double> value);
		partial void OnPack3Changed();
		partial void OnUnit4Changing(System.Nullable<int> value);
		partial void OnUnit4Changed();
		partial void OnUntPri4Changing(System.Nullable<double> value);
		partial void OnUntPri4Changed();
		partial void OnPack4Changing(System.Nullable<double> value);
		partial void OnPack4Changed();
		partial void OnUnit5Changing(System.Nullable<int> value);
		partial void OnUnit5Changed();
		partial void OnUntPri5Changing(System.Nullable<double> value);
		partial void OnUntPri5Changed();
		partial void OnPack5Changing(System.Nullable<double> value);
		partial void OnPack5Changed();
		partial void OnDefultUnitChanging(System.Nullable<int> value);
		partial void OnDefultUnitChanged();
		partial void OnDefultVendorChanging(System.Nullable<int> value);
		partial void OnDefultVendorChanged();
		partial void OnOpenQtyChanging(System.Nullable<double> value);
		partial void OnOpenQtyChanged();
		partial void OnQtyLvlChanging(System.Nullable<double> value);
		partial void OnQtyLvlChanged();
		partial void OnItmLocChanging(string value);
		partial void OnItmLocChanged();
		partial void OnBarCod1Changing(string value);
		partial void OnBarCod1Changed();
		partial void OnBarCod2Changing(string value);
		partial void OnBarCod2Changed();
		partial void OnBarCod3Changing(string value);
		partial void OnBarCod3Changed();
		partial void OnBarCod4Changing(string value);
		partial void OnBarCod4Changed();
		partial void OnBarCod5Changing(string value);
		partial void OnBarCod5Changed();
		partial void OnLotChanging(System.Nullable<int> value);
		partial void OnLotChanged();
		partial void OnQtyMaxChanging(System.Nullable<double> value);
		partial void OnQtyMaxChanged();
		partial void OnLrnExpChanging(System.Nullable<int> value);
		partial void OnLrnExpChanged();
		partial void OnDMYChanging(System.Nullable<int> value);
		partial void OnDMYChanged();
		partial void OnItmTypChanging(System.Nullable<int> value);
		partial void OnItmTypChanged();
		partial void OnDefPackChanging(System.Nullable<double> value);
		partial void OnDefPackChanged();
		partial void OnItmImgChanging(System.Data.Linq.Binary value);
		partial void OnItmImgChanged();
		partial void OnInvSaleStopedChanging(System.Nullable<bool> value);
		partial void OnInvSaleStopedChanged();
		partial void OnInvSaleReturnStopedChanging(System.Nullable<bool> value);
		partial void OnInvSaleReturnStopedChanged();
		partial void OnInvPaymentStopedChanging(System.Nullable<bool> value);
		partial void OnInvPaymentStopedChanged();
		partial void OnInvPaymentReturnStopedChanging(System.Nullable<bool> value);
		partial void OnInvPaymentReturnStopedChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnFirstCostChanging(System.Nullable<double> value);
		partial void OnFirstCostChanged();
		partial void OnSerialKeyChanging(string value);
		partial void OnSerialKeyChanged();
		partial void OnItemCommChanging(System.Nullable<double> value);
		partial void OnItemCommChanged();
		partial void OnTaxSalesChanging(System.Nullable<double> value);
		partial void OnTaxSalesChanged();
		partial void OnTaxPurchasChanging(System.Nullable<double> value);
		partial void OnTaxPurchasChanged();
		partial void OnInvEnterStopedChanging(System.Nullable<bool> value);
		partial void OnInvEnterStopedChanged();
		partial void OnInvOutStopedChanging(System.Nullable<bool> value);
		partial void OnInvOutStopedChanged();
		partial void OnItemDisChanging(System.Nullable<double> value);
		partial void OnItemDisChanged();
		partial void OnSecriptCeramicComboChanging(string value);
		partial void OnSecriptCeramicComboChanged();
		partial void OnSecriptCeramicChanging(string value);
		partial void OnSecriptCeramicChanged();
		partial void OnIsBalanceChanging(System.Nullable<bool> value);
		partial void OnIsBalanceChanged();
		partial void OnIsPointsChanging(System.Nullable<bool> value);
		partial void OnIsPointsChanged();
		partial void OnvSize1Changing(string value);
		partial void OnvSize1Changed();
		partial void OnvSize2Changing(string value);
		partial void OnvSize2Changed();
		partial void OnvSize3Changing(string value);
		partial void OnvSize3Changed();
		partial void OnvSize4Changing(string value);
		partial void OnvSize4Changed();
		partial void OnvSize5Changing(string value);
		partial void OnvSize5Changed();
		partial void OnvSize6Changing(string value);
		partial void OnvSize6Changed();
		partial void OnProductionDateChanging(string value);
		partial void OnProductionDateChanged();
		partial void OnExpirationDateChanging(string value);
		partial void OnExpirationDateChanged();
		#endregion

		public T_Item()
		{
			this._T_EditItemPrices = new EntitySet<T_EditItemPrice>(new Action<T_EditItemPrice>(this.attach_T_EditItemPrices), new Action<T_EditItemPrice>(this.detach_T_EditItemPrices));
			this._T_INVDETs = new EntitySet<T_INVDET>(new Action<T_INVDET>(this.attach_T_INVDETs), new Action<T_INVDET>(this.detach_T_INVDETs));
			this._T_ItemDets = new EntitySet<T_ItemDet>(new Action<T_ItemDet>(this.attach_T_ItemDets), new Action<T_ItemDet>(this.detach_T_ItemDets));
			this._T_ItemSerials = new EntitySet<T_ItemSerial>(new Action<T_ItemSerial>(this.attach_T_ItemSerials), new Action<T_ItemSerial>(this.detach_T_ItemSerials));
			this._T_OfferDets = new EntitySet<T_OfferDet>(new Action<T_OfferDet>(this.attach_T_OfferDets), new Action<T_OfferDet>(this.detach_T_OfferDets));
			this._T_OfferQFrees = new EntitySet<T_OfferQFree>(new Action<T_OfferQFree>(this.attach_T_OfferQFrees), new Action<T_OfferQFree>(this.detach_T_OfferQFrees));
			this._T_PatientCouts = new EntitySet<T_PatientCout>(new Action<T_PatientCout>(this.attach_T_PatientCouts), new Action<T_PatientCout>(this.detach_T_PatientCouts));
			this._T_QTYEXPs = new EntitySet<T_QTYEXP>(new Action<T_QTYEXP>(this.attach_T_QTYEXPs), new Action<T_QTYEXP>(this.detach_T_QTYEXPs));
			this._T_SINVDETs = new EntitySet<T_SINVDET>(new Action<T_SINVDET>(this.attach_T_SINVDETs), new Action<T_SINVDET>(this.detach_T_SINVDETs));
			this._T_STKSQTies = new EntitySet<T_STKSQTY>(new Action<T_STKSQTY>(this.attach_T_STKSQTies), new Action<T_STKSQTY>(this.detach_T_STKSQTies));
			this._T_StoreMnds = new EntitySet<T_StoreMnd>(new Action<T_StoreMnd>(this.attach_T_StoreMnds), new Action<T_StoreMnd>(this.detach_T_StoreMnds));
			this._T_CATEGORY = default(EntityRef<T_CATEGORY>);
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			this._T_Unit = default(EntityRef<T_Unit>);
			this._T_Unit1 = default(EntityRef<T_Unit>);
			this._T_Unit2 = default(EntityRef<T_Unit>);
			this._T_Unit3 = default(EntityRef<T_Unit>);
			this._T_Unit4 = default(EntityRef<T_Unit>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Itm_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int Itm_ID
		{
			get
			{
				return this._Itm_ID;
			}
			set
			{
				if ((this._Itm_ID != value))
				{
					this.OnItm_IDChanging(value);
					this.SendPropertyChanging();
					this._Itm_ID = value;
					this.SendPropertyChanged("Itm_ID");
					this.OnItm_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Itm_No", DbType = "VarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string Itm_No
		{
			get
			{
				return this._Itm_No;
			}
			set
			{
				if ((this._Itm_No != value))
				{
					this.OnItm_NoChanging(value);
					this.SendPropertyChanging();
					this._Itm_No = value;
					this.SendPropertyChanged("Itm_No");
					this.OnItm_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmCat", DbType = "Int")]
		public System.Nullable<int> ItmCat
		{
			get
			{
				return this._ItmCat;
			}
			set
			{
				if ((this._ItmCat != value))
				{
					if (this._T_CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmCatChanging(value);
					this.SendPropertyChanging();
					this._ItmCat = value;
					this.SendPropertyChanged("ItmCat");
					this.OnItmCatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(200)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(200)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartCost", DbType = "Float")]
		public System.Nullable<double> StartCost
		{
			get
			{
				return this._StartCost;
			}
			set
			{
				if ((this._StartCost != value))
				{
					this.OnStartCostChanging(value);
					this.SendPropertyChanging();
					this._StartCost = value;
					this.SendPropertyChanged("StartCost");
					this.OnStartCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AvrageCost", DbType = "Float")]
		public System.Nullable<double> AvrageCost
		{
			get
			{
				return this._AvrageCost;
			}
			set
			{
				if ((this._AvrageCost != value))
				{
					this.OnAvrageCostChanging(value);
					this.SendPropertyChanging();
					this._AvrageCost = value;
					this.SendPropertyChanged("AvrageCost");
					this.OnAvrageCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastCost", DbType = "Float")]
		public System.Nullable<double> LastCost
		{
			get
			{
				return this._LastCost;
			}
			set
			{
				if ((this._LastCost != value))
				{
					this.OnLastCostChanging(value);
					this.SendPropertyChanging();
					this._LastCost = value;
					this.SendPropertyChanged("LastCost");
					this.OnLastCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price1", DbType = "Float")]
		public System.Nullable<double> Price1
		{
			get
			{
				return this._Price1;
			}
			set
			{
				if ((this._Price1 != value))
				{
					this.OnPrice1Changing(value);
					this.SendPropertyChanging();
					this._Price1 = value;
					this.SendPropertyChanged("Price1");
					this.OnPrice1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price2", DbType = "Float")]
		public System.Nullable<double> Price2
		{
			get
			{
				return this._Price2;
			}
			set
			{
				if ((this._Price2 != value))
				{
					this.OnPrice2Changing(value);
					this.SendPropertyChanging();
					this._Price2 = value;
					this.SendPropertyChanged("Price2");
					this.OnPrice2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price3", DbType = "Float")]
		public System.Nullable<double> Price3
		{
			get
			{
				return this._Price3;
			}
			set
			{
				if ((this._Price3 != value))
				{
					this.OnPrice3Changing(value);
					this.SendPropertyChanging();
					this._Price3 = value;
					this.SendPropertyChanged("Price3");
					this.OnPrice3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price4", DbType = "Float")]
		public System.Nullable<double> Price4
		{
			get
			{
				return this._Price4;
			}
			set
			{
				if ((this._Price4 != value))
				{
					this.OnPrice4Changing(value);
					this.SendPropertyChanging();
					this._Price4 = value;
					this.SendPropertyChanged("Price4");
					this.OnPrice4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price5", DbType = "Float")]
		public System.Nullable<double> Price5
		{
			get
			{
				return this._Price5;
			}
			set
			{
				if ((this._Price5 != value))
				{
					this.OnPrice5Changing(value);
					this.SendPropertyChanging();
					this._Price5 = value;
					this.SendPropertyChanged("Price5");
					this.OnPrice5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price6", DbType = "Float")]
		public System.Nullable<double> Price6
		{
			get
			{
				return this._Price6;
			}
			set
			{
				if ((this._Price6 != value))
				{
					this.OnPrice6Changing(value);
					this.SendPropertyChanging();
					this._Price6 = value;
					this.SendPropertyChanged("Price6");
					this.OnPrice6Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit1", DbType = "Int")]
		public System.Nullable<int> Unit1
		{
			get
			{
				return this._Unit1;
			}
			set
			{
				if ((this._Unit1 != value))
				{
					if (this._T_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnit1Changing(value);
					this.SendPropertyChanging();
					this._Unit1 = value;
					this.SendPropertyChanged("Unit1");
					this.OnUnit1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UntPri1", DbType = "Float")]
		public System.Nullable<double> UntPri1
		{
			get
			{
				return this._UntPri1;
			}
			set
			{
				if ((this._UntPri1 != value))
				{
					this.OnUntPri1Changing(value);
					this.SendPropertyChanging();
					this._UntPri1 = value;
					this.SendPropertyChanged("UntPri1");
					this.OnUntPri1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pack1", DbType = "Float")]
		public System.Nullable<double> Pack1
		{
			get
			{
				return this._Pack1;
			}
			set
			{
				if ((this._Pack1 != value))
				{
					this.OnPack1Changing(value);
					this.SendPropertyChanging();
					this._Pack1 = value;
					this.SendPropertyChanged("Pack1");
					this.OnPack1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit2", DbType = "Int")]
		public System.Nullable<int> Unit2
		{
			get
			{
				return this._Unit2;
			}
			set
			{
				if ((this._Unit2 != value))
				{
					if (this._T_Unit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnit2Changing(value);
					this.SendPropertyChanging();
					this._Unit2 = value;
					this.SendPropertyChanged("Unit2");
					this.OnUnit2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UntPri2", DbType = "Float")]
		public System.Nullable<double> UntPri2
		{
			get
			{
				return this._UntPri2;
			}
			set
			{
				if ((this._UntPri2 != value))
				{
					this.OnUntPri2Changing(value);
					this.SendPropertyChanging();
					this._UntPri2 = value;
					this.SendPropertyChanged("UntPri2");
					this.OnUntPri2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pack2", DbType = "Float")]
		public System.Nullable<double> Pack2
		{
			get
			{
				return this._Pack2;
			}
			set
			{
				if ((this._Pack2 != value))
				{
					this.OnPack2Changing(value);
					this.SendPropertyChanging();
					this._Pack2 = value;
					this.SendPropertyChanged("Pack2");
					this.OnPack2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit3", DbType = "Int")]
		public System.Nullable<int> Unit3
		{
			get
			{
				return this._Unit3;
			}
			set
			{
				if ((this._Unit3 != value))
				{
					if (this._T_Unit2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnit3Changing(value);
					this.SendPropertyChanging();
					this._Unit3 = value;
					this.SendPropertyChanged("Unit3");
					this.OnUnit3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UntPri3", DbType = "Float")]
		public System.Nullable<double> UntPri3
		{
			get
			{
				return this._UntPri3;
			}
			set
			{
				if ((this._UntPri3 != value))
				{
					this.OnUntPri3Changing(value);
					this.SendPropertyChanging();
					this._UntPri3 = value;
					this.SendPropertyChanged("UntPri3");
					this.OnUntPri3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pack3", DbType = "Float")]
		public System.Nullable<double> Pack3
		{
			get
			{
				return this._Pack3;
			}
			set
			{
				if ((this._Pack3 != value))
				{
					this.OnPack3Changing(value);
					this.SendPropertyChanging();
					this._Pack3 = value;
					this.SendPropertyChanged("Pack3");
					this.OnPack3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit4", DbType = "Int")]
		public System.Nullable<int> Unit4
		{
			get
			{
				return this._Unit4;
			}
			set
			{
				if ((this._Unit4 != value))
				{
					if (this._T_Unit3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnit4Changing(value);
					this.SendPropertyChanging();
					this._Unit4 = value;
					this.SendPropertyChanged("Unit4");
					this.OnUnit4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UntPri4", DbType = "Float")]
		public System.Nullable<double> UntPri4
		{
			get
			{
				return this._UntPri4;
			}
			set
			{
				if ((this._UntPri4 != value))
				{
					this.OnUntPri4Changing(value);
					this.SendPropertyChanging();
					this._UntPri4 = value;
					this.SendPropertyChanged("UntPri4");
					this.OnUntPri4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pack4", DbType = "Float")]
		public System.Nullable<double> Pack4
		{
			get
			{
				return this._Pack4;
			}
			set
			{
				if ((this._Pack4 != value))
				{
					this.OnPack4Changing(value);
					this.SendPropertyChanging();
					this._Pack4 = value;
					this.SendPropertyChanged("Pack4");
					this.OnPack4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit5", DbType = "Int")]
		public System.Nullable<int> Unit5
		{
			get
			{
				return this._Unit5;
			}
			set
			{
				if ((this._Unit5 != value))
				{
					if (this._T_Unit4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnit5Changing(value);
					this.SendPropertyChanging();
					this._Unit5 = value;
					this.SendPropertyChanged("Unit5");
					this.OnUnit5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UntPri5", DbType = "Float")]
		public System.Nullable<double> UntPri5
		{
			get
			{
				return this._UntPri5;
			}
			set
			{
				if ((this._UntPri5 != value))
				{
					this.OnUntPri5Changing(value);
					this.SendPropertyChanging();
					this._UntPri5 = value;
					this.SendPropertyChanged("UntPri5");
					this.OnUntPri5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pack5", DbType = "Float")]
		public System.Nullable<double> Pack5
		{
			get
			{
				return this._Pack5;
			}
			set
			{
				if ((this._Pack5 != value))
				{
					this.OnPack5Changing(value);
					this.SendPropertyChanging();
					this._Pack5 = value;
					this.SendPropertyChanged("Pack5");
					this.OnPack5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefultUnit", DbType = "Int")]
		public System.Nullable<int> DefultUnit
		{
			get
			{
				return this._DefultUnit;
			}
			set
			{
				if ((this._DefultUnit != value))
				{
					this.OnDefultUnitChanging(value);
					this.SendPropertyChanging();
					this._DefultUnit = value;
					this.SendPropertyChanged("DefultUnit");
					this.OnDefultUnitChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefultVendor", DbType = "Int")]
		public System.Nullable<int> DefultVendor
		{
			get
			{
				return this._DefultVendor;
			}
			set
			{
				if ((this._DefultVendor != value))
				{
					this.OnDefultVendorChanging(value);
					this.SendPropertyChanging();
					this._DefultVendor = value;
					this.SendPropertyChanged("DefultVendor");
					this.OnDefultVendorChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OpenQty", DbType = "Float")]
		public System.Nullable<double> OpenQty
		{
			get
			{
				return this._OpenQty;
			}
			set
			{
				if ((this._OpenQty != value))
				{
					this.OnOpenQtyChanging(value);
					this.SendPropertyChanging();
					this._OpenQty = value;
					this.SendPropertyChanged("OpenQty");
					this.OnOpenQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QtyLvl", DbType = "Float")]
		public System.Nullable<double> QtyLvl
		{
			get
			{
				return this._QtyLvl;
			}
			set
			{
				if ((this._QtyLvl != value))
				{
					this.OnQtyLvlChanging(value);
					this.SendPropertyChanging();
					this._QtyLvl = value;
					this.SendPropertyChanged("QtyLvl");
					this.OnQtyLvlChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmLoc", DbType = "VarChar(40)")]
		public string ItmLoc
		{
			get
			{
				return this._ItmLoc;
			}
			set
			{
				if ((this._ItmLoc != value))
				{
					this.OnItmLocChanging(value);
					this.SendPropertyChanging();
					this._ItmLoc = value;
					this.SendPropertyChanged("ItmLoc");
					this.OnItmLocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BarCod1", DbType = "VarChar(250)")]
		public string BarCod1
		{
			get
			{
				return this._BarCod1;
			}
			set
			{
				if ((this._BarCod1 != value))
				{
					this.OnBarCod1Changing(value);
					this.SendPropertyChanging();
					this._BarCod1 = value;
					this.SendPropertyChanged("BarCod1");
					this.OnBarCod1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BarCod2", DbType = "VarChar(250)")]
		public string BarCod2
		{
			get
			{
				return this._BarCod2;
			}
			set
			{
				if ((this._BarCod2 != value))
				{
					this.OnBarCod2Changing(value);
					this.SendPropertyChanging();
					this._BarCod2 = value;
					this.SendPropertyChanged("BarCod2");
					this.OnBarCod2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BarCod3", DbType = "VarChar(250)")]
		public string BarCod3
		{
			get
			{
				return this._BarCod3;
			}
			set
			{
				if ((this._BarCod3 != value))
				{
					this.OnBarCod3Changing(value);
					this.SendPropertyChanging();
					this._BarCod3 = value;
					this.SendPropertyChanged("BarCod3");
					this.OnBarCod3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BarCod4", DbType = "VarChar(250)")]
		public string BarCod4
		{
			get
			{
				return this._BarCod4;
			}
			set
			{
				if ((this._BarCod4 != value))
				{
					this.OnBarCod4Changing(value);
					this.SendPropertyChanging();
					this._BarCod4 = value;
					this.SendPropertyChanged("BarCod4");
					this.OnBarCod4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BarCod5", DbType = "VarChar(250)")]
		public string BarCod5
		{
			get
			{
				return this._BarCod5;
			}
			set
			{
				if ((this._BarCod5 != value))
				{
					this.OnBarCod5Changing(value);
					this.SendPropertyChanging();
					this._BarCod5 = value;
					this.SendPropertyChanged("BarCod5");
					this.OnBarCod5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Lot", DbType = "Int")]
		public System.Nullable<int> Lot
		{
			get
			{
				return this._Lot;
			}
			set
			{
				if ((this._Lot != value))
				{
					this.OnLotChanging(value);
					this.SendPropertyChanging();
					this._Lot = value;
					this.SendPropertyChanged("Lot");
					this.OnLotChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QtyMax", DbType = "Float")]
		public System.Nullable<double> QtyMax
		{
			get
			{
				return this._QtyMax;
			}
			set
			{
				if ((this._QtyMax != value))
				{
					this.OnQtyMaxChanging(value);
					this.SendPropertyChanging();
					this._QtyMax = value;
					this.SendPropertyChanged("QtyMax");
					this.OnQtyMaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LrnExp", DbType = "Int")]
		public System.Nullable<int> LrnExp
		{
			get
			{
				return this._LrnExp;
			}
			set
			{
				if ((this._LrnExp != value))
				{
					this.OnLrnExpChanging(value);
					this.SendPropertyChanging();
					this._LrnExp = value;
					this.SendPropertyChanged("LrnExp");
					this.OnLrnExpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DMY", DbType = "Int")]
		public System.Nullable<int> DMY
		{
			get
			{
				return this._DMY;
			}
			set
			{
				if ((this._DMY != value))
				{
					this.OnDMYChanging(value);
					this.SendPropertyChanging();
					this._DMY = value;
					this.SendPropertyChanged("DMY");
					this.OnDMYChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmTyp", DbType = "Int")]
		public System.Nullable<int> ItmTyp
		{
			get
			{
				return this._ItmTyp;
			}
			set
			{
				if ((this._ItmTyp != value))
				{
					this.OnItmTypChanging(value);
					this.SendPropertyChanging();
					this._ItmTyp = value;
					this.SendPropertyChanged("ItmTyp");
					this.OnItmTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefPack", DbType = "Float")]
		public System.Nullable<double> DefPack
		{
			get
			{
				return this._DefPack;
			}
			set
			{
				if ((this._DefPack != value))
				{
					this.OnDefPackChanging(value);
					this.SendPropertyChanging();
					this._DefPack = value;
					this.SendPropertyChanged("DefPack");
					this.OnDefPackChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmImg", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary ItmImg
		{
			get
			{
				return this._ItmImg;
			}
			set
			{
				if ((this._ItmImg != value))
				{
					this.OnItmImgChanging(value);
					this.SendPropertyChanging();
					this._ItmImg = value;
					this.SendPropertyChanged("ItmImg");
					this.OnItmImgChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvSaleStoped", DbType = "Bit")]
		public System.Nullable<bool> InvSaleStoped
		{
			get
			{
				return this._InvSaleStoped;
			}
			set
			{
				if ((this._InvSaleStoped != value))
				{
					this.OnInvSaleStopedChanging(value);
					this.SendPropertyChanging();
					this._InvSaleStoped = value;
					this.SendPropertyChanged("InvSaleStoped");
					this.OnInvSaleStopedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvSaleReturnStoped", DbType = "Bit")]
		public System.Nullable<bool> InvSaleReturnStoped
		{
			get
			{
				return this._InvSaleReturnStoped;
			}
			set
			{
				if ((this._InvSaleReturnStoped != value))
				{
					this.OnInvSaleReturnStopedChanging(value);
					this.SendPropertyChanging();
					this._InvSaleReturnStoped = value;
					this.SendPropertyChanged("InvSaleReturnStoped");
					this.OnInvSaleReturnStopedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvPaymentStoped", DbType = "Bit")]
		public System.Nullable<bool> InvPaymentStoped
		{
			get
			{
				return this._InvPaymentStoped;
			}
			set
			{
				if ((this._InvPaymentStoped != value))
				{
					this.OnInvPaymentStopedChanging(value);
					this.SendPropertyChanging();
					this._InvPaymentStoped = value;
					this.SendPropertyChanged("InvPaymentStoped");
					this.OnInvPaymentStopedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvPaymentReturnStoped", DbType = "Bit")]
		public System.Nullable<bool> InvPaymentReturnStoped
		{
			get
			{
				return this._InvPaymentReturnStoped;
			}
			set
			{
				if ((this._InvPaymentReturnStoped != value))
				{
					this.OnInvPaymentReturnStopedChanging(value);
					this.SendPropertyChanging();
					this._InvPaymentReturnStoped = value;
					this.SendPropertyChanged("InvPaymentReturnStoped");
					this.OnInvPaymentReturnStopedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstCost", DbType = "Float")]
		public System.Nullable<double> FirstCost
		{
			get
			{
				return this._FirstCost;
			}
			set
			{
				if ((this._FirstCost != value))
				{
					this.OnFirstCostChanging(value);
					this.SendPropertyChanging();
					this._FirstCost = value;
					this.SendPropertyChanged("FirstCost");
					this.OnFirstCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SerialKey", DbType = "VarChar(100)")]
		public string SerialKey
		{
			get
			{
				return this._SerialKey;
			}
			set
			{
				if ((this._SerialKey != value))
				{
					this.OnSerialKeyChanging(value);
					this.SendPropertyChanging();
					this._SerialKey = value;
					this.SendPropertyChanged("SerialKey");
					this.OnSerialKeyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemComm", DbType = "Float")]
		public System.Nullable<double> ItemComm
		{
			get
			{
				return this._ItemComm;
			}
			set
			{
				if ((this._ItemComm != value))
				{
					this.OnItemCommChanging(value);
					this.SendPropertyChanging();
					this._ItemComm = value;
					this.SendPropertyChanged("ItemComm");
					this.OnItemCommChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxSales", DbType = "Float")]
		public System.Nullable<double> TaxSales
		{
			get
			{
				return this._TaxSales;
			}
			set
			{
				if ((this._TaxSales != value))
				{
					this.OnTaxSalesChanging(value);
					this.SendPropertyChanging();
					this._TaxSales = value;
					this.SendPropertyChanged("TaxSales");
					this.OnTaxSalesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxPurchas", DbType = "Float")]
		public System.Nullable<double> TaxPurchas
		{
			get
			{
				return this._TaxPurchas;
			}
			set
			{
				if ((this._TaxPurchas != value))
				{
					this.OnTaxPurchasChanging(value);
					this.SendPropertyChanging();
					this._TaxPurchas = value;
					this.SendPropertyChanged("TaxPurchas");
					this.OnTaxPurchasChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvEnterStoped", DbType = "Bit")]
		public System.Nullable<bool> InvEnterStoped
		{
			get
			{
				return this._InvEnterStoped;
			}
			set
			{
				if ((this._InvEnterStoped != value))
				{
					this.OnInvEnterStopedChanging(value);
					this.SendPropertyChanging();
					this._InvEnterStoped = value;
					this.SendPropertyChanged("InvEnterStoped");
					this.OnInvEnterStopedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvOutStoped", DbType = "Bit")]
		public System.Nullable<bool> InvOutStoped
		{
			get
			{
				return this._InvOutStoped;
			}
			set
			{
				if ((this._InvOutStoped != value))
				{
					this.OnInvOutStopedChanging(value);
					this.SendPropertyChanging();
					this._InvOutStoped = value;
					this.SendPropertyChanged("InvOutStoped");
					this.OnInvOutStopedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemDis", DbType = "Float")]
		public System.Nullable<double> ItemDis
		{
			get
			{
				return this._ItemDis;
			}
			set
			{
				if ((this._ItemDis != value))
				{
					this.OnItemDisChanging(value);
					this.SendPropertyChanging();
					this._ItemDis = value;
					this.SendPropertyChanged("ItemDis");
					this.OnItemDisChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecriptCeramicCombo", DbType = "VarChar(100)")]
		public string SecriptCeramicCombo
		{
			get
			{
				return this._SecriptCeramicCombo;
			}
			set
			{
				if ((this._SecriptCeramicCombo != value))
				{
					this.OnSecriptCeramicComboChanging(value);
					this.SendPropertyChanging();
					this._SecriptCeramicCombo = value;
					this.SendPropertyChanged("SecriptCeramicCombo");
					this.OnSecriptCeramicComboChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecriptCeramic", DbType = "VarChar(100)")]
		public string SecriptCeramic
		{
			get
			{
				return this._SecriptCeramic;
			}
			set
			{
				if ((this._SecriptCeramic != value))
				{
					this.OnSecriptCeramicChanging(value);
					this.SendPropertyChanging();
					this._SecriptCeramic = value;
					this.SendPropertyChanged("SecriptCeramic");
					this.OnSecriptCeramicChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsBalance", DbType = "Bit")]
		public System.Nullable<bool> IsBalance
		{
			get
			{
				return this._IsBalance;
			}
			set
			{
				if ((this._IsBalance != value))
				{
					this.OnIsBalanceChanging(value);
					this.SendPropertyChanging();
					this._IsBalance = value;
					this.SendPropertyChanged("IsBalance");
					this.OnIsBalanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPoints", DbType = "Bit")]
		public System.Nullable<bool> IsPoints
		{
			get
			{
				return this._IsPoints;
			}
			set
			{
				if ((this._IsPoints != value))
				{
					this.OnIsPointsChanging(value);
					this.SendPropertyChanging();
					this._IsPoints = value;
					this.SendPropertyChanged("IsPoints");
					this.OnIsPointsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vSize1", DbType = "VarChar(100)")]
		public string vSize1
		{
			get
			{
				return this._vSize1;
			}
			set
			{
				if ((this._vSize1 != value))
				{
					this.OnvSize1Changing(value);
					this.SendPropertyChanging();
					this._vSize1 = value;
					this.SendPropertyChanged("vSize1");
					this.OnvSize1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vSize2", DbType = "VarChar(100)")]
		public string vSize2
		{
			get
			{
				return this._vSize2;
			}
			set
			{
				if ((this._vSize2 != value))
				{
					this.OnvSize2Changing(value);
					this.SendPropertyChanging();
					this._vSize2 = value;
					this.SendPropertyChanged("vSize2");
					this.OnvSize2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vSize3", DbType = "VarChar(100)")]
		public string vSize3
		{
			get
			{
				return this._vSize3;
			}
			set
			{
				if ((this._vSize3 != value))
				{
					this.OnvSize3Changing(value);
					this.SendPropertyChanging();
					this._vSize3 = value;
					this.SendPropertyChanged("vSize3");
					this.OnvSize3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vSize4", DbType = "VarChar(100)")]
		public string vSize4
		{
			get
			{
				return this._vSize4;
			}
			set
			{
				if ((this._vSize4 != value))
				{
					this.OnvSize4Changing(value);
					this.SendPropertyChanging();
					this._vSize4 = value;
					this.SendPropertyChanged("vSize4");
					this.OnvSize4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vSize5", DbType = "VarChar(100)")]
		public string vSize5
		{
			get
			{
				return this._vSize5;
			}
			set
			{
				if ((this._vSize5 != value))
				{
					this.OnvSize5Changing(value);
					this.SendPropertyChanging();
					this._vSize5 = value;
					this.SendPropertyChanged("vSize5");
					this.OnvSize5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vSize6", DbType = "VarChar(100)")]
		public string vSize6
		{
			get
			{
				return this._vSize6;
			}
			set
			{
				if ((this._vSize6 != value))
				{
					this.OnvSize6Changing(value);
					this.SendPropertyChanging();
					this._vSize6 = value;
					this.SendPropertyChanged("vSize6");
					this.OnvSize6Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProductionDate", DbType = "VarChar(MAX)")]
		public string ProductionDate
		{
			get
			{
				return this._ProductionDate;
			}
			set
			{
				if ((this._ProductionDate != value))
				{
					this.OnProductionDateChanging(value);
					this.SendPropertyChanging();
					this._ProductionDate = value;
					this.SendPropertyChanged("ProductionDate");
					this.OnProductionDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExpirationDate", DbType = "VarChar(MAX)")]
		public string ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_EditItemPrice", Storage = "_T_EditItemPrices", ThisKey = "Itm_No", OtherKey = "ItmNo")]
		public EntitySet<T_EditItemPrice> T_EditItemPrices
		{
			get
			{
				return this._T_EditItemPrices;
			}
			set
			{
				this._T_EditItemPrices.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_INVDET", Storage = "_T_INVDETs", ThisKey = "Itm_No", OtherKey = "ItmNo")]
		public EntitySet<T_INVDET> T_INVDETs
		{
			get
			{
				return this._T_INVDETs;
			}
			set
			{
				this._T_INVDETs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_ItemDet", Storage = "_T_ItemDets", ThisKey = "Itm_No", OtherKey = "ItmNo")]
		public EntitySet<T_ItemDet> T_ItemDets
		{
			get
			{
				return this._T_ItemDets;
			}
			set
			{
				this._T_ItemDets.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_ItemSerial", Storage = "_T_ItemSerials", ThisKey = "Itm_No", OtherKey = "ItmNo")]
		public EntitySet<T_ItemSerial> T_ItemSerials
		{
			get
			{
				return this._T_ItemSerials;
			}
			set
			{
				this._T_ItemSerials.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_OfferDet", Storage = "_T_OfferDets", ThisKey = "Itm_No", OtherKey = "ItmNo")]
		public EntitySet<T_OfferDet> T_OfferDets
		{
			get
			{
				return this._T_OfferDets;
			}
			set
			{
				this._T_OfferDets.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_OfferQFree", Storage = "_T_OfferQFrees", ThisKey = "Itm_No", OtherKey = "OfferQFreeItmNo")]
		public EntitySet<T_OfferQFree> T_OfferQFrees
		{
			get
			{
				return this._T_OfferQFrees;
			}
			set
			{
				this._T_OfferQFrees.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_PatientCout", Storage = "_T_PatientCouts", ThisKey = "Itm_No", OtherKey = "ItmNo")]
		public EntitySet<T_PatientCout> T_PatientCouts
		{
			get
			{
				return this._T_PatientCouts;
			}
			set
			{
				this._T_PatientCouts.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_QTYEXP", Storage = "_T_QTYEXPs", ThisKey = "Itm_No", OtherKey = "itmNo")]
		public EntitySet<T_QTYEXP> T_QTYEXPs
		{
			get
			{
				return this._T_QTYEXPs;
			}
			set
			{
				this._T_QTYEXPs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_SINVDET", Storage = "_T_SINVDETs", ThisKey = "Itm_No", OtherKey = "SItmNo")]
		public EntitySet<T_SINVDET> T_SINVDETs
		{
			get
			{
				return this._T_SINVDETs;
			}
			set
			{
				this._T_SINVDETs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_STKSQTY", Storage = "_T_STKSQTies", ThisKey = "Itm_No", OtherKey = "itmNo")]
		public EntitySet<T_STKSQTY> T_STKSQTies
		{
			get
			{
				return this._T_STKSQTies;
			}
			set
			{
				this._T_STKSQTies.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_StoreMnd", Storage = "_T_StoreMnds", ThisKey = "Itm_No", OtherKey = "itmNo")]
		public EntitySet<T_StoreMnd> T_StoreMnds
		{
			get
			{
				return this._T_StoreMnds;
			}
			set
			{
				this._T_StoreMnds.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CATEGORY_T_Item", Storage = "_T_CATEGORY", ThisKey = "ItmCat", OtherKey = "CAT_ID", IsForeignKey = true)]
		public T_CATEGORY T_CATEGORY
		{
			get
			{
				return this._T_CATEGORY.Entity;
			}
			set
			{
				T_CATEGORY previousValue = this._T_CATEGORY.Entity;
				if (((previousValue != value)
							|| (this._T_CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_CATEGORY.Entity = null;
						previousValue.T_Items.Remove(this);
					}
					this._T_CATEGORY.Entity = value;
					if ((value != null))
					{
						value.T_Items.Add(this);
						this._ItmCat = value.CAT_ID;
					}
					else
					{
						this._ItmCat = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_CATEGORY");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Item", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_Items.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_Items.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item", Storage = "_T_Unit", ThisKey = "Unit1", OtherKey = "Unit_ID", IsForeignKey = true)]
		public T_Unit T_Unit
		{
			get
			{
				return this._T_Unit.Entity;
			}
			set
			{
				T_Unit previousValue = this._T_Unit.Entity;
				if (((previousValue != value)
							|| (this._T_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Unit.Entity = null;
						previousValue.T_Items.Remove(this);
					}
					this._T_Unit.Entity = value;
					if ((value != null))
					{
						value.T_Items.Add(this);
						this._Unit1 = value.Unit_ID;
					}
					else
					{
						this._Unit1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Unit");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item1", Storage = "_T_Unit1", ThisKey = "Unit2", OtherKey = "Unit_ID", IsForeignKey = true)]
		public T_Unit T_Unit1
		{
			get
			{
				return this._T_Unit1.Entity;
			}
			set
			{
				T_Unit previousValue = this._T_Unit1.Entity;
				if (((previousValue != value)
							|| (this._T_Unit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Unit1.Entity = null;
						previousValue.T_Items1.Remove(this);
					}
					this._T_Unit1.Entity = value;
					if ((value != null))
					{
						value.T_Items1.Add(this);
						this._Unit2 = value.Unit_ID;
					}
					else
					{
						this._Unit2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Unit1");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item2", Storage = "_T_Unit2", ThisKey = "Unit3", OtherKey = "Unit_ID", IsForeignKey = true)]
		public T_Unit T_Unit2
		{
			get
			{
				return this._T_Unit2.Entity;
			}
			set
			{
				T_Unit previousValue = this._T_Unit2.Entity;
				if (((previousValue != value)
							|| (this._T_Unit2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Unit2.Entity = null;
						previousValue.T_Items2.Remove(this);
					}
					this._T_Unit2.Entity = value;
					if ((value != null))
					{
						value.T_Items2.Add(this);
						this._Unit3 = value.Unit_ID;
					}
					else
					{
						this._Unit3 = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Unit2");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item3", Storage = "_T_Unit3", ThisKey = "Unit4", OtherKey = "Unit_ID", IsForeignKey = true)]
		public T_Unit T_Unit3
		{
			get
			{
				return this._T_Unit3.Entity;
			}
			set
			{
				T_Unit previousValue = this._T_Unit3.Entity;
				if (((previousValue != value)
							|| (this._T_Unit3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Unit3.Entity = null;
						previousValue.T_Items3.Remove(this);
					}
					this._T_Unit3.Entity = value;
					if ((value != null))
					{
						value.T_Items3.Add(this);
						this._Unit4 = value.Unit_ID;
					}
					else
					{
						this._Unit4 = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Unit3");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item4", Storage = "_T_Unit4", ThisKey = "Unit5", OtherKey = "Unit_ID", IsForeignKey = true)]
		public T_Unit T_Unit4
		{
			get
			{
				return this._T_Unit4.Entity;
			}
			set
			{
				T_Unit previousValue = this._T_Unit4.Entity;
				if (((previousValue != value)
							|| (this._T_Unit4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Unit4.Entity = null;
						previousValue.T_Items4.Remove(this);
					}
					this._T_Unit4.Entity = value;
					if ((value != null))
					{
						value.T_Items4.Add(this);
						this._Unit5 = value.Unit_ID;
					}
					else
					{
						this._Unit5 = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Unit4");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_EditItemPrices(T_EditItemPrice entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_EditItemPrices(T_EditItemPrice entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_INVDETs(T_INVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_INVDETs(T_INVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_ItemDets(T_ItemDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_ItemDets(T_ItemDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_ItemSerials(T_ItemSerial entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_ItemSerials(T_ItemSerial entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_OfferDets(T_OfferDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_OfferDets(T_OfferDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_OfferQFrees(T_OfferQFree entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_OfferQFrees(T_OfferQFree entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_PatientCouts(T_PatientCout entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_PatientCouts(T_PatientCout entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_QTYEXPs(T_QTYEXP entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_QTYEXPs(T_QTYEXP entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_SINVDETs(T_SINVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_SINVDETs(T_SINVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_STKSQTies(T_STKSQTY entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_STKSQTies(T_STKSQTY entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}

		private void attach_T_StoreMnds(T_StoreMnd entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = this;
		}

		private void detach_T_StoreMnds(T_StoreMnd entity)
		{
			this.SendPropertyChanging();
			entity.T_Item = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_ItemSerial")]
	public partial class T_ItemSerial : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _id;

		private string _SerialKey;

		private string _ItmNo;

		private System.Nullable<bool> _SerialStatus;

		private EntityRef<T_Item> _T_Item;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(int value);
		partial void OnidChanged();
		partial void OnSerialKeyChanging(string value);
		partial void OnSerialKeyChanged();
		partial void OnItmNoChanging(string value);
		partial void OnItmNoChanged();
		partial void OnSerialStatusChanging(System.Nullable<bool> value);
		partial void OnSerialStatusChanged();
		#endregion

		public T_ItemSerial()
		{
			this._T_Item = default(EntityRef<T_Item>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SerialKey", DbType = "VarChar(100) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string SerialKey
		{
			get
			{
				return this._SerialKey;
			}
			set
			{
				if ((this._SerialKey != value))
				{
					this.OnSerialKeyChanging(value);
					this.SendPropertyChanging();
					this._SerialKey = value;
					this.SendPropertyChanged("SerialKey");
					this.OnSerialKeyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmNo", DbType = "VarChar(50)")]
		public string ItmNo
		{
			get
			{
				return this._ItmNo;
			}
			set
			{
				if ((this._ItmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmNoChanging(value);
					this.SendPropertyChanging();
					this._ItmNo = value;
					this.SendPropertyChanged("ItmNo");
					this.OnItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SerialStatus", DbType = "Bit")]
		public System.Nullable<bool> SerialStatus
		{
			get
			{
				return this._SerialStatus;
			}
			set
			{
				if ((this._SerialStatus != value))
				{
					this.OnSerialStatusChanging(value);
					this.SendPropertyChanging();
					this._SerialStatus = value;
					this.SendPropertyChanged("SerialStatus");
					this.OnSerialStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_ItemSerial", Storage = "_T_Item", ThisKey = "ItmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_ItemSerials.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_ItemSerials.Add(this);
						this._ItmNo = value.Itm_No;
					}
					else
					{
						this._ItmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Job")]
	public partial class T_Job : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Job_ID;

		private int _Job_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_per> _T_pers;

		private EntitySet<T_per1> _T_per1s;

		private EntitySet<T_Salary> _T_Salaries;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnJob_IDChanging(string value);
		partial void OnJob_IDChanged();
		partial void OnJob_NoChanging(int value);
		partial void OnJob_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_Job()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_pers = new EntitySet<T_per>(new Action<T_per>(this.attach_T_pers), new Action<T_per>(this.detach_T_pers));
			this._T_per1s = new EntitySet<T_per1>(new Action<T_per1>(this.attach_T_per1s), new Action<T_per1>(this.detach_T_per1s));
			this._T_Salaries = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries), new Action<T_Salary>(this.detach_T_Salaries));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Job_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Job_ID
		{
			get
			{
				return this._Job_ID;
			}
			set
			{
				if ((this._Job_ID != value))
				{
					this.OnJob_IDChanging(value);
					this.SendPropertyChanging();
					this._Job_ID = value;
					this.SendPropertyChanged("Job_ID");
					this.OnJob_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Job_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Job_No
		{
			get
			{
				return this._Job_No;
			}
			set
			{
				if ((this._Job_No != value))
				{
					this.OnJob_NoChanging(value);
					this.SendPropertyChanging();
					this._Job_No = value;
					this.SendPropertyChanged("Job_No");
					this.OnJob_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Job_T_Emp", Storage = "_T_Emps", ThisKey = "Job_No", OtherKey = "Job")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Job_T_per", Storage = "_T_pers", ThisKey = "Job_No", OtherKey = "job")]
		public EntitySet<T_per> T_pers
		{
			get
			{
				return this._T_pers;
			}
			set
			{
				this._T_pers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Job_T_per1", Storage = "_T_per1s", ThisKey = "Job_No", OtherKey = "job")]
		public EntitySet<T_per1> T_per1s
		{
			get
			{
				return this._T_per1s;
			}
			set
			{
				this._T_per1s.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Job_T_Salary", Storage = "_T_Salaries", ThisKey = "Job_No", OtherKey = "Job")]
		public EntitySet<T_Salary> T_Salaries
		{
			get
			{
				return this._T_Salaries;
			}
			set
			{
				this._T_Salaries.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Job = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Job = null;
		}

		private void attach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_Job = this;
		}

		private void detach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_Job = null;
		}

		private void attach_T_per1s(T_per1 entity)
		{
			this.SendPropertyChanging();
			entity.T_Job = this;
		}

		private void detach_T_per1s(T_per1 entity)
		{
			this.SendPropertyChanging();
			entity.T_Job = null;
		}

		private void attach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Job = this;
		}

		private void detach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Job = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_LiquidationTyp")]
	public partial class T_LiquidationTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _LiquidationT_ID;

		private int _LiquidationT_No;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_EndService> _T_EndServices;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnLiquidationT_IDChanging(string value);
		partial void OnLiquidationT_IDChanged();
		partial void OnLiquidationT_NoChanging(int value);
		partial void OnLiquidationT_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_LiquidationTyp()
		{
			this._T_EndServices = new EntitySet<T_EndService>(new Action<T_EndService>(this.attach_T_EndServices), new Action<T_EndService>(this.detach_T_EndServices));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LiquidationT_ID", DbType = "VarChar(40)")]
		public string LiquidationT_ID
		{
			get
			{
				return this._LiquidationT_ID;
			}
			set
			{
				if ((this._LiquidationT_ID != value))
				{
					this.OnLiquidationT_IDChanging(value);
					this.SendPropertyChanging();
					this._LiquidationT_ID = value;
					this.SendPropertyChanged("LiquidationT_ID");
					this.OnLiquidationT_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LiquidationT_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int LiquidationT_No
		{
			get
			{
				return this._LiquidationT_No;
			}
			set
			{
				if ((this._LiquidationT_No != value))
				{
					this.OnLiquidationT_NoChanging(value);
					this.SendPropertyChanging();
					this._LiquidationT_No = value;
					this.SendPropertyChanged("LiquidationT_No");
					this.OnLiquidationT_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(20)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(20)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_LiquidationTyp_T_EndService", Storage = "_T_EndServices", ThisKey = "LiquidationT_No", OtherKey = "CauseLiquidation")]
		public EntitySet<T_EndService> T_EndServices
		{
			get
			{
				return this._T_EndServices;
			}
			set
			{
				this._T_EndServices.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_EndServices(T_EndService entity)
		{
			this.SendPropertyChanging();
			entity.T_LiquidationTyp = this;
		}

		private void detach_T_EndServices(T_EndService entity)
		{
			this.SendPropertyChanging();
			entity.T_LiquidationTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Loc")]
	public partial class T_Loc : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Loc_ID;

		private string _Loc_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<int> _CompanyID;

		private EntitySet<T_Rom> _T_Roms;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnLoc_IDChanging(int value);
		partial void OnLoc_IDChanged();
		partial void OnLoc_NoChanging(string value);
		partial void OnLoc_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_Loc()
		{
			this._T_Roms = new EntitySet<T_Rom>(new Action<T_Rom>(this.attach_T_Roms), new Action<T_Rom>(this.detach_T_Roms));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Loc_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Loc_ID
		{
			get
			{
				return this._Loc_ID;
			}
			set
			{
				if ((this._Loc_ID != value))
				{
					this.OnLoc_IDChanging(value);
					this.SendPropertyChanging();
					this._Loc_ID = value;
					this.SendPropertyChanged("Loc_ID");
					this.OnLoc_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Loc_No", DbType = "VarChar(30)")]
		public string Loc_No
		{
			get
			{
				return this._Loc_No;
			}
			set
			{
				if ((this._Loc_No != value))
				{
					this.OnLoc_NoChanging(value);
					this.SendPropertyChanging();
					this._Loc_No = value;
					this.SendPropertyChanged("Loc_No");
					this.OnLoc_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Loc_T_Rom", Storage = "_T_Roms", ThisKey = "Loc_ID", OtherKey = "aline")]
		public EntitySet<T_Rom> T_Roms
		{
			get
			{
				return this._T_Roms;
			}
			set
			{
				this._T_Roms.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Roms(T_Rom entity)
		{
			this.SendPropertyChanging();
			entity.T_Loc = this;
		}

		private void detach_T_Roms(T_Rom entity)
		{
			this.SendPropertyChanging();
			entity.T_Loc = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_mInvPrint")]
	public partial class T_mInvPrint : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _mInvPrint_ID;

		private System.Nullable<int> _InvSndNo;

		private System.Nullable<int> _nTyp;

		private System.Nullable<int> _IsPrint;

		private string _pField;

		private System.Nullable<int> _vCol;

		private System.Nullable<int> _vRow;

		private string _vFont;

		private System.Nullable<int> _vEt;

		private System.Nullable<int> _vBold;

		private System.Nullable<int> _vFldNo;

		private System.Nullable<int> _vSize;

		private System.Nullable<int> _MaxW;

		private System.Nullable<int> _IsPrntHd;

		private string _fldName;

		private System.Nullable<int> _inRows;

		private System.Nullable<int> _IsSum;

		private System.Nullable<int> _repNum;

		private System.Nullable<int> _repTyp;

		private string _uChr;

		private System.Nullable<int> _vWer;

		private System.Nullable<int> _BarcodeTyp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnmInvPrint_IDChanging(int value);
		partial void OnmInvPrint_IDChanged();
		partial void OnInvSndNoChanging(System.Nullable<int> value);
		partial void OnInvSndNoChanged();
		partial void OnnTypChanging(System.Nullable<int> value);
		partial void OnnTypChanged();
		partial void OnIsPrintChanging(System.Nullable<int> value);
		partial void OnIsPrintChanged();
		partial void OnpFieldChanging(string value);
		partial void OnpFieldChanged();
		partial void OnvColChanging(System.Nullable<int> value);
		partial void OnvColChanged();
		partial void OnvRowChanging(System.Nullable<int> value);
		partial void OnvRowChanged();
		partial void OnvFontChanging(string value);
		partial void OnvFontChanged();
		partial void OnvEtChanging(System.Nullable<int> value);
		partial void OnvEtChanged();
		partial void OnvBoldChanging(System.Nullable<int> value);
		partial void OnvBoldChanged();
		partial void OnvFldNoChanging(System.Nullable<int> value);
		partial void OnvFldNoChanged();
		partial void OnvSizeChanging(System.Nullable<int> value);
		partial void OnvSizeChanged();
		partial void OnMaxWChanging(System.Nullable<int> value);
		partial void OnMaxWChanged();
		partial void OnIsPrntHdChanging(System.Nullable<int> value);
		partial void OnIsPrntHdChanged();
		partial void OnfldNameChanging(string value);
		partial void OnfldNameChanged();
		partial void OninRowsChanging(System.Nullable<int> value);
		partial void OninRowsChanged();
		partial void OnIsSumChanging(System.Nullable<int> value);
		partial void OnIsSumChanged();
		partial void OnrepNumChanging(System.Nullable<int> value);
		partial void OnrepNumChanged();
		partial void OnrepTypChanging(System.Nullable<int> value);
		partial void OnrepTypChanged();
		partial void OnuChrChanging(string value);
		partial void OnuChrChanged();
		partial void OnvWerChanging(System.Nullable<int> value);
		partial void OnvWerChanged();
		partial void OnBarcodeTypChanging(System.Nullable<int> value);
		partial void OnBarcodeTypChanged();
		#endregion

		public T_mInvPrint()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_mInvPrint_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int mInvPrint_ID
		{
			get
			{
				return this._mInvPrint_ID;
			}
			set
			{
				if ((this._mInvPrint_ID != value))
				{
					this.OnmInvPrint_IDChanging(value);
					this.SendPropertyChanging();
					this._mInvPrint_ID = value;
					this.SendPropertyChanged("mInvPrint_ID");
					this.OnmInvPrint_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvSndNo", DbType = "Int")]
		public System.Nullable<int> InvSndNo
		{
			get
			{
				return this._InvSndNo;
			}
			set
			{
				if ((this._InvSndNo != value))
				{
					this.OnInvSndNoChanging(value);
					this.SendPropertyChanging();
					this._InvSndNo = value;
					this.SendPropertyChanged("InvSndNo");
					this.OnInvSndNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nTyp", DbType = "Int")]
		public System.Nullable<int> nTyp
		{
			get
			{
				return this._nTyp;
			}
			set
			{
				if ((this._nTyp != value))
				{
					this.OnnTypChanging(value);
					this.SendPropertyChanging();
					this._nTyp = value;
					this.SendPropertyChanged("nTyp");
					this.OnnTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPrint", DbType = "Int")]
		public System.Nullable<int> IsPrint
		{
			get
			{
				return this._IsPrint;
			}
			set
			{
				if ((this._IsPrint != value))
				{
					this.OnIsPrintChanging(value);
					this.SendPropertyChanging();
					this._IsPrint = value;
					this.SendPropertyChanged("IsPrint");
					this.OnIsPrintChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pField", DbType = "VarChar(50)")]
		public string pField
		{
			get
			{
				return this._pField;
			}
			set
			{
				if ((this._pField != value))
				{
					this.OnpFieldChanging(value);
					this.SendPropertyChanging();
					this._pField = value;
					this.SendPropertyChanged("pField");
					this.OnpFieldChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vCol", DbType = "Int")]
		public System.Nullable<int> vCol
		{
			get
			{
				return this._vCol;
			}
			set
			{
				if ((this._vCol != value))
				{
					this.OnvColChanging(value);
					this.SendPropertyChanging();
					this._vCol = value;
					this.SendPropertyChanged("vCol");
					this.OnvColChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vRow", DbType = "Int")]
		public System.Nullable<int> vRow
		{
			get
			{
				return this._vRow;
			}
			set
			{
				if ((this._vRow != value))
				{
					this.OnvRowChanging(value);
					this.SendPropertyChanging();
					this._vRow = value;
					this.SendPropertyChanged("vRow");
					this.OnvRowChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vFont", DbType = "VarChar(50)")]
		public string vFont
		{
			get
			{
				return this._vFont;
			}
			set
			{
				if ((this._vFont != value))
				{
					this.OnvFontChanging(value);
					this.SendPropertyChanging();
					this._vFont = value;
					this.SendPropertyChanged("vFont");
					this.OnvFontChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vEt", DbType = "Int")]
		public System.Nullable<int> vEt
		{
			get
			{
				return this._vEt;
			}
			set
			{
				if ((this._vEt != value))
				{
					this.OnvEtChanging(value);
					this.SendPropertyChanging();
					this._vEt = value;
					this.SendPropertyChanged("vEt");
					this.OnvEtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vBold", DbType = "Int")]
		public System.Nullable<int> vBold
		{
			get
			{
				return this._vBold;
			}
			set
			{
				if ((this._vBold != value))
				{
					this.OnvBoldChanging(value);
					this.SendPropertyChanging();
					this._vBold = value;
					this.SendPropertyChanged("vBold");
					this.OnvBoldChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vFldNo", DbType = "Int")]
		public System.Nullable<int> vFldNo
		{
			get
			{
				return this._vFldNo;
			}
			set
			{
				if ((this._vFldNo != value))
				{
					this.OnvFldNoChanging(value);
					this.SendPropertyChanging();
					this._vFldNo = value;
					this.SendPropertyChanged("vFldNo");
					this.OnvFldNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vSize", DbType = "Int")]
		public System.Nullable<int> vSize
		{
			get
			{
				return this._vSize;
			}
			set
			{
				if ((this._vSize != value))
				{
					this.OnvSizeChanging(value);
					this.SendPropertyChanging();
					this._vSize = value;
					this.SendPropertyChanged("vSize");
					this.OnvSizeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaxW", DbType = "Int")]
		public System.Nullable<int> MaxW
		{
			get
			{
				return this._MaxW;
			}
			set
			{
				if ((this._MaxW != value))
				{
					this.OnMaxWChanging(value);
					this.SendPropertyChanging();
					this._MaxW = value;
					this.SendPropertyChanged("MaxW");
					this.OnMaxWChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPrntHd", DbType = "Int")]
		public System.Nullable<int> IsPrntHd
		{
			get
			{
				return this._IsPrntHd;
			}
			set
			{
				if ((this._IsPrntHd != value))
				{
					this.OnIsPrntHdChanging(value);
					this.SendPropertyChanging();
					this._IsPrntHd = value;
					this.SendPropertyChanged("IsPrntHd");
					this.OnIsPrntHdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fldName", DbType = "VarChar(50)")]
		public string fldName
		{
			get
			{
				return this._fldName;
			}
			set
			{
				if ((this._fldName != value))
				{
					this.OnfldNameChanging(value);
					this.SendPropertyChanging();
					this._fldName = value;
					this.SendPropertyChanged("fldName");
					this.OnfldNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_inRows", DbType = "Int")]
		public System.Nullable<int> inRows
		{
			get
			{
				return this._inRows;
			}
			set
			{
				if ((this._inRows != value))
				{
					this.OninRowsChanging(value);
					this.SendPropertyChanging();
					this._inRows = value;
					this.SendPropertyChanged("inRows");
					this.OninRowsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSum", DbType = "Int")]
		public System.Nullable<int> IsSum
		{
			get
			{
				return this._IsSum;
			}
			set
			{
				if ((this._IsSum != value))
				{
					this.OnIsSumChanging(value);
					this.SendPropertyChanging();
					this._IsSum = value;
					this.SendPropertyChanged("IsSum");
					this.OnIsSumChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_repNum", DbType = "Int")]
		public System.Nullable<int> repNum
		{
			get
			{
				return this._repNum;
			}
			set
			{
				if ((this._repNum != value))
				{
					this.OnrepNumChanging(value);
					this.SendPropertyChanging();
					this._repNum = value;
					this.SendPropertyChanged("repNum");
					this.OnrepNumChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_repTyp", DbType = "Int")]
		public System.Nullable<int> repTyp
		{
			get
			{
				return this._repTyp;
			}
			set
			{
				if ((this._repTyp != value))
				{
					this.OnrepTypChanging(value);
					this.SendPropertyChanging();
					this._repTyp = value;
					this.SendPropertyChanged("repTyp");
					this.OnrepTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_uChr", DbType = "VarChar(50)")]
		public string uChr
		{
			get
			{
				return this._uChr;
			}
			set
			{
				if ((this._uChr != value))
				{
					this.OnuChrChanging(value);
					this.SendPropertyChanging();
					this._uChr = value;
					this.SendPropertyChanged("uChr");
					this.OnuChrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vWer", DbType = "Int")]
		public System.Nullable<int> vWer
		{
			get
			{
				return this._vWer;
			}
			set
			{
				if ((this._vWer != value))
				{
					this.OnvWerChanging(value);
					this.SendPropertyChanging();
					this._vWer = value;
					this.SendPropertyChanged("vWer");
					this.OnvWerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BarcodeTyp", DbType = "Int")]
		public System.Nullable<int> BarcodeTyp
		{
			get
			{
				return this._BarcodeTyp;
			}
			set
			{
				if ((this._BarcodeTyp != value))
				{
					this.OnBarcodeTypChanging(value);
					this.SendPropertyChanging();
					this._BarcodeTyp = value;
					this.SendPropertyChanged("BarcodeTyp");
					this.OnBarcodeTypChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Mndob")]
	public partial class T_Mndob : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Mnd_ID;

		private string _Mnd_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<int> _MndPri;

		private System.Nullable<int> _Mnd_Typ;

		private System.Nullable<double> _Comm_Inv;

		private System.Nullable<double> _Comm_Gaid;

		private System.Nullable<int> _CompanyID;

		private System.Nullable<double> _PriceDoctor;

		private string _DoctorJob;

		private string _MndFlied1;

		private string _MndFlied2;

		private string _MndFlied3;

		private string _MndFlied4;

		private EntitySet<T_AccDef> _T_AccDefs;

		private EntitySet<T_GDHEAD> _T_GDHEADs;

		private EntitySet<T_INVHED> _T_INVHEDs;

		private EntitySet<T_StoreMnd> _T_StoreMnds;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnMnd_IDChanging(int value);
		partial void OnMnd_IDChanged();
		partial void OnMnd_NoChanging(string value);
		partial void OnMnd_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnMndPriChanging(System.Nullable<int> value);
		partial void OnMndPriChanged();
		partial void OnMnd_TypChanging(System.Nullable<int> value);
		partial void OnMnd_TypChanged();
		partial void OnComm_InvChanging(System.Nullable<double> value);
		partial void OnComm_InvChanged();
		partial void OnComm_GaidChanging(System.Nullable<double> value);
		partial void OnComm_GaidChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnPriceDoctorChanging(System.Nullable<double> value);
		partial void OnPriceDoctorChanged();
		partial void OnDoctorJobChanging(string value);
		partial void OnDoctorJobChanged();
		partial void OnMndFlied1Changing(string value);
		partial void OnMndFlied1Changed();
		partial void OnMndFlied2Changing(string value);
		partial void OnMndFlied2Changed();
		partial void OnMndFlied3Changing(string value);
		partial void OnMndFlied3Changed();
		partial void OnMndFlied4Changing(string value);
		partial void OnMndFlied4Changed();
		#endregion

		public T_Mndob()
		{
			this._T_AccDefs = new EntitySet<T_AccDef>(new Action<T_AccDef>(this.attach_T_AccDefs), new Action<T_AccDef>(this.detach_T_AccDefs));
			this._T_GDHEADs = new EntitySet<T_GDHEAD>(new Action<T_GDHEAD>(this.attach_T_GDHEADs), new Action<T_GDHEAD>(this.detach_T_GDHEADs));
			this._T_INVHEDs = new EntitySet<T_INVHED>(new Action<T_INVHED>(this.attach_T_INVHEDs), new Action<T_INVHED>(this.detach_T_INVHEDs));
			this._T_StoreMnds = new EntitySet<T_StoreMnd>(new Action<T_StoreMnd>(this.attach_T_StoreMnds), new Action<T_StoreMnd>(this.detach_T_StoreMnds));
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mnd_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Mnd_ID
		{
			get
			{
				return this._Mnd_ID;
			}
			set
			{
				if ((this._Mnd_ID != value))
				{
					this.OnMnd_IDChanging(value);
					this.SendPropertyChanging();
					this._Mnd_ID = value;
					this.SendPropertyChanged("Mnd_ID");
					this.OnMnd_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mnd_No", DbType = "VarChar(30)")]
		public string Mnd_No
		{
			get
			{
				return this._Mnd_No;
			}
			set
			{
				if ((this._Mnd_No != value))
				{
					this.OnMnd_NoChanging(value);
					this.SendPropertyChanging();
					this._Mnd_No = value;
					this.SendPropertyChanged("Mnd_No");
					this.OnMnd_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MndPri", DbType = "Int")]
		public System.Nullable<int> MndPri
		{
			get
			{
				return this._MndPri;
			}
			set
			{
				if ((this._MndPri != value))
				{
					this.OnMndPriChanging(value);
					this.SendPropertyChanging();
					this._MndPri = value;
					this.SendPropertyChanged("MndPri");
					this.OnMndPriChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mnd_Typ", DbType = "Int")]
		public System.Nullable<int> Mnd_Typ
		{
			get
			{
				return this._Mnd_Typ;
			}
			set
			{
				if ((this._Mnd_Typ != value))
				{
					this.OnMnd_TypChanging(value);
					this.SendPropertyChanging();
					this._Mnd_Typ = value;
					this.SendPropertyChanged("Mnd_Typ");
					this.OnMnd_TypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Comm_Inv", DbType = "Float")]
		public System.Nullable<double> Comm_Inv
		{
			get
			{
				return this._Comm_Inv;
			}
			set
			{
				if ((this._Comm_Inv != value))
				{
					this.OnComm_InvChanging(value);
					this.SendPropertyChanging();
					this._Comm_Inv = value;
					this.SendPropertyChanged("Comm_Inv");
					this.OnComm_InvChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Comm_Gaid", DbType = "Float")]
		public System.Nullable<double> Comm_Gaid
		{
			get
			{
				return this._Comm_Gaid;
			}
			set
			{
				if ((this._Comm_Gaid != value))
				{
					this.OnComm_GaidChanging(value);
					this.SendPropertyChanging();
					this._Comm_Gaid = value;
					this.SendPropertyChanged("Comm_Gaid");
					this.OnComm_GaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PriceDoctor", DbType = "Float")]
		public System.Nullable<double> PriceDoctor
		{
			get
			{
				return this._PriceDoctor;
			}
			set
			{
				if ((this._PriceDoctor != value))
				{
					this.OnPriceDoctorChanging(value);
					this.SendPropertyChanging();
					this._PriceDoctor = value;
					this.SendPropertyChanged("PriceDoctor");
					this.OnPriceDoctorChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DoctorJob", DbType = "VarChar(100)")]
		public string DoctorJob
		{
			get
			{
				return this._DoctorJob;
			}
			set
			{
				if ((this._DoctorJob != value))
				{
					this.OnDoctorJobChanging(value);
					this.SendPropertyChanging();
					this._DoctorJob = value;
					this.SendPropertyChanged("DoctorJob");
					this.OnDoctorJobChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MndFlied1", DbType = "VarChar(250)")]
		public string MndFlied1
		{
			get
			{
				return this._MndFlied1;
			}
			set
			{
				if ((this._MndFlied1 != value))
				{
					this.OnMndFlied1Changing(value);
					this.SendPropertyChanging();
					this._MndFlied1 = value;
					this.SendPropertyChanged("MndFlied1");
					this.OnMndFlied1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MndFlied2", DbType = "VarChar(250)")]
		public string MndFlied2
		{
			get
			{
				return this._MndFlied2;
			}
			set
			{
				if ((this._MndFlied2 != value))
				{
					this.OnMndFlied2Changing(value);
					this.SendPropertyChanging();
					this._MndFlied2 = value;
					this.SendPropertyChanged("MndFlied2");
					this.OnMndFlied2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MndFlied3", DbType = "VarChar(250)")]
		public string MndFlied3
		{
			get
			{
				return this._MndFlied3;
			}
			set
			{
				if ((this._MndFlied3 != value))
				{
					this.OnMndFlied3Changing(value);
					this.SendPropertyChanging();
					this._MndFlied3 = value;
					this.SendPropertyChanged("MndFlied3");
					this.OnMndFlied3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MndFlied4", DbType = "VarChar(250)")]
		public string MndFlied4
		{
			get
			{
				return this._MndFlied4;
			}
			set
			{
				if ((this._MndFlied4 != value))
				{
					this.OnMndFlied4Changing(value);
					this.SendPropertyChanging();
					this._MndFlied4 = value;
					this.SendPropertyChanged("MndFlied4");
					this.OnMndFlied4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Mndob_T_AccDef", Storage = "_T_AccDefs", ThisKey = "Mnd_ID", OtherKey = "Mnd")]
		public EntitySet<T_AccDef> T_AccDefs
		{
			get
			{
				return this._T_AccDefs;
			}
			set
			{
				this._T_AccDefs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Mndob_T_GDHEAD", Storage = "_T_GDHEADs", ThisKey = "Mnd_ID", OtherKey = "gdMnd")]
		public EntitySet<T_GDHEAD> T_GDHEADs
		{
			get
			{
				return this._T_GDHEADs;
			}
			set
			{
				this._T_GDHEADs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Mndob_T_INVHED", Storage = "_T_INVHEDs", ThisKey = "Mnd_ID", OtherKey = "MndNo")]
		public EntitySet<T_INVHED> T_INVHEDs
		{
			get
			{
				return this._T_INVHEDs;
			}
			set
			{
				this._T_INVHEDs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Mndob_T_StoreMnd", Storage = "_T_StoreMnds", ThisKey = "Mnd_ID", OtherKey = "MndNo")]
		public EntitySet<T_StoreMnd> T_StoreMnds
		{
			get
			{
				return this._T_StoreMnds;
			}
			set
			{
				this._T_StoreMnds.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Mndob", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_Mndobs.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_Mndobs.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_AccDefs(T_AccDef entity)
		{
			this.SendPropertyChanging();
			entity.T_Mndob = this;
		}

		private void detach_T_AccDefs(T_AccDef entity)
		{
			this.SendPropertyChanging();
			entity.T_Mndob = null;
		}

		private void attach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_Mndob = this;
		}

		private void detach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_Mndob = null;
		}

		private void attach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_Mndob = this;
		}

		private void detach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_Mndob = null;
		}

		private void attach_T_StoreMnds(T_StoreMnd entity)
		{
			this.SendPropertyChanging();
			entity.T_Mndob = this;
		}

		private void detach_T_StoreMnds(T_StoreMnd entity)
		{
			this.SendPropertyChanging();
			entity.T_Mndob = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_MStatus")]
	public partial class T_MStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _MStatusNo;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_Emp> _T_Emps;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnMStatusNoChanging(int value);
		partial void OnMStatusNoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_MStatus()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MStatusNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int MStatusNo
		{
			get
			{
				return this._MStatusNo;
			}
			set
			{
				if ((this._MStatusNo != value))
				{
					this.OnMStatusNoChanging(value);
					this.SendPropertyChanging();
					this._MStatusNo = value;
					this.SendPropertyChanged("MStatusNo");
					this.OnMStatusNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(20)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(20)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_MStatus_T_Emp", Storage = "_T_Emps", ThisKey = "MStatusNo", OtherKey = "MaritalStatus")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_MStatus = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_MStatus = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_MTemplates")]
	public partial class T_MTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _TemplateNo;

		private string _Tamplate_Name;

		private string _Message;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnTemplateNoChanging(string value);
		partial void OnTemplateNoChanged();
		partial void OnTamplate_NameChanging(string value);
		partial void OnTamplate_NameChanged();
		partial void OnMessageChanging(string value);
		partial void OnMessageChanged();
		#endregion

		public T_MTemplate()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TemplateNo", DbType = "VarChar(50)")]
		public string TemplateNo
		{
			get
			{
				return this._TemplateNo;
			}
			set
			{
				if ((this._TemplateNo != value))
				{
					this.OnTemplateNoChanging(value);
					this.SendPropertyChanging();
					this._TemplateNo = value;
					this.SendPropertyChanged("TemplateNo");
					this.OnTemplateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tamplate_Name", DbType = "VarChar(50)")]
		public string Tamplate_Name
		{
			get
			{
				return this._Tamplate_Name;
			}
			set
			{
				if ((this._Tamplate_Name != value))
				{
					this.OnTamplate_NameChanging(value);
					this.SendPropertyChanging();
					this._Tamplate_Name = value;
					this.SendPropertyChanged("Tamplate_Name");
					this.OnTamplate_NameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Message", DbType = "VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Nationalities")]
	public partial class T_Nationality : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Nation_ID;

		private int _Nation_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private System.Nullable<double> _SalSubtract;

		private System.Nullable<double> _CompPaying;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_EqarsData> _T_EqarsDatas;

		private EntitySet<T_Owner> _T_Owners;

		private EntitySet<T_per> _T_pers;

		private EntitySet<T_per1> _T_per1s;

		private EntitySet<T_Reserv> _T_Reservs;

		private EntitySet<T_Tenant> _T_Tenants;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnNation_IDChanging(string value);
		partial void OnNation_IDChanged();
		partial void OnNation_NoChanging(int value);
		partial void OnNation_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnSalSubtractChanging(System.Nullable<double> value);
		partial void OnSalSubtractChanged();
		partial void OnCompPayingChanging(System.Nullable<double> value);
		partial void OnCompPayingChanged();
		#endregion

		public T_Nationality()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_EqarsDatas = new EntitySet<T_EqarsData>(new Action<T_EqarsData>(this.attach_T_EqarsDatas), new Action<T_EqarsData>(this.detach_T_EqarsDatas));
			this._T_Owners = new EntitySet<T_Owner>(new Action<T_Owner>(this.attach_T_Owners), new Action<T_Owner>(this.detach_T_Owners));
			this._T_pers = new EntitySet<T_per>(new Action<T_per>(this.attach_T_pers), new Action<T_per>(this.detach_T_pers));
			this._T_per1s = new EntitySet<T_per1>(new Action<T_per1>(this.attach_T_per1s), new Action<T_per1>(this.detach_T_per1s));
			this._T_Reservs = new EntitySet<T_Reserv>(new Action<T_Reserv>(this.attach_T_Reservs), new Action<T_Reserv>(this.detach_T_Reservs));
			this._T_Tenants = new EntitySet<T_Tenant>(new Action<T_Tenant>(this.attach_T_Tenants), new Action<T_Tenant>(this.detach_T_Tenants));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nation_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Nation_ID
		{
			get
			{
				return this._Nation_ID;
			}
			set
			{
				if ((this._Nation_ID != value))
				{
					this.OnNation_IDChanging(value);
					this.SendPropertyChanging();
					this._Nation_ID = value;
					this.SendPropertyChanged("Nation_ID");
					this.OnNation_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nation_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Nation_No
		{
			get
			{
				return this._Nation_No;
			}
			set
			{
				if ((this._Nation_No != value))
				{
					this.OnNation_NoChanging(value);
					this.SendPropertyChanging();
					this._Nation_No = value;
					this.SendPropertyChanged("Nation_No");
					this.OnNation_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalSubtract", DbType = "Float")]
		public System.Nullable<double> SalSubtract
		{
			get
			{
				return this._SalSubtract;
			}
			set
			{
				if ((this._SalSubtract != value))
				{
					this.OnSalSubtractChanging(value);
					this.SendPropertyChanging();
					this._SalSubtract = value;
					this.SendPropertyChanged("SalSubtract");
					this.OnSalSubtractChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompPaying", DbType = "Float")]
		public System.Nullable<double> CompPaying
		{
			get
			{
				return this._CompPaying;
			}
			set
			{
				if ((this._CompPaying != value))
				{
					this.OnCompPayingChanging(value);
					this.SendPropertyChanging();
					this._CompPaying = value;
					this.SendPropertyChanged("CompPaying");
					this.OnCompPayingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_Emp", Storage = "_T_Emps", ThisKey = "Nation_No", OtherKey = "Nationalty")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_EqarsData", Storage = "_T_EqarsDatas", ThisKey = "Nation_No", OtherKey = "Nationalty")]
		public EntitySet<T_EqarsData> T_EqarsDatas
		{
			get
			{
				return this._T_EqarsDatas;
			}
			set
			{
				this._T_EqarsDatas.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_Owner", Storage = "_T_Owners", ThisKey = "Nation_No", OtherKey = "Nationalty")]
		public EntitySet<T_Owner> T_Owners
		{
			get
			{
				return this._T_Owners;
			}
			set
			{
				this._T_Owners.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_per", Storage = "_T_pers", ThisKey = "Nation_No", OtherKey = "nath")]
		public EntitySet<T_per> T_pers
		{
			get
			{
				return this._T_pers;
			}
			set
			{
				this._T_pers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_per1", Storage = "_T_per1s", ThisKey = "Nation_No", OtherKey = "nat")]
		public EntitySet<T_per1> T_per1s
		{
			get
			{
				return this._T_per1s;
			}
			set
			{
				this._T_per1s.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_Reserv", Storage = "_T_Reservs", ThisKey = "Nation_No", OtherKey = "Nat")]
		public EntitySet<T_Reserv> T_Reservs
		{
			get
			{
				return this._T_Reservs;
			}
			set
			{
				this._T_Reservs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_Tenant", Storage = "_T_Tenants", ThisKey = "Nation_No", OtherKey = "Nationalty")]
		public EntitySet<T_Tenant> T_Tenants
		{
			get
			{
				return this._T_Tenants;
			}
			set
			{
				this._T_Tenants.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = null;
		}

		private void attach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = this;
		}

		private void detach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = null;
		}

		private void attach_T_Owners(T_Owner entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = this;
		}

		private void detach_T_Owners(T_Owner entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = null;
		}

		private void attach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = this;
		}

		private void detach_T_pers(T_per entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = null;
		}

		private void attach_T_per1s(T_per1 entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = this;
		}

		private void detach_T_per1s(T_per1 entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = null;
		}

		private void attach_T_Reservs(T_Reserv entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = this;
		}

		private void detach_T_Reservs(T_Reserv entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = null;
		}

		private void attach_T_Tenants(T_Tenant entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = this;
		}

		private void detach_T_Tenants(T_Tenant entity)
		{
			this.SendPropertyChanging();
			entity.T_Nationality = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Offer")]
	public partial class T_Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _OfferHeadID;

		private string _OfferHeadNo;

		private string _OfferHeadName;

		private System.Nullable<int> _OfferHeadTyp;

		private string _StartDat;

		private string _EndDat;

		private System.Nullable<int> _OfferHeadCashCredit;

		private System.Nullable<int> _CustPri;

		private string _CusVenNo;

		private string _OfferSalsManNo;

		private string _OfferRemark;

		private EntitySet<T_OfferDet> _T_OfferDets;

		private EntitySet<T_OfferQFree> _T_OfferQFrees;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnOfferHeadIDChanging(int value);
		partial void OnOfferHeadIDChanged();
		partial void OnOfferHeadNoChanging(string value);
		partial void OnOfferHeadNoChanged();
		partial void OnOfferHeadNameChanging(string value);
		partial void OnOfferHeadNameChanged();
		partial void OnOfferHeadTypChanging(System.Nullable<int> value);
		partial void OnOfferHeadTypChanged();
		partial void OnStartDatChanging(string value);
		partial void OnStartDatChanged();
		partial void OnEndDatChanging(string value);
		partial void OnEndDatChanged();
		partial void OnOfferHeadCashCreditChanging(System.Nullable<int> value);
		partial void OnOfferHeadCashCreditChanged();
		partial void OnCustPriChanging(System.Nullable<int> value);
		partial void OnCustPriChanged();
		partial void OnCusVenNoChanging(string value);
		partial void OnCusVenNoChanged();
		partial void OnOfferSalsManNoChanging(string value);
		partial void OnOfferSalsManNoChanged();
		partial void OnOfferRemarkChanging(string value);
		partial void OnOfferRemarkChanged();
		#endregion

		public T_Offer()
		{
			this._T_OfferDets = new EntitySet<T_OfferDet>(new Action<T_OfferDet>(this.attach_T_OfferDets), new Action<T_OfferDet>(this.detach_T_OfferDets));
			this._T_OfferQFrees = new EntitySet<T_OfferQFree>(new Action<T_OfferQFree>(this.attach_T_OfferQFrees), new Action<T_OfferQFree>(this.detach_T_OfferQFrees));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferHeadID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int OfferHeadID
		{
			get
			{
				return this._OfferHeadID;
			}
			set
			{
				if ((this._OfferHeadID != value))
				{
					this.OnOfferHeadIDChanging(value);
					this.SendPropertyChanging();
					this._OfferHeadID = value;
					this.SendPropertyChanged("OfferHeadID");
					this.OnOfferHeadIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferHeadNo", DbType = "VarChar(10)")]
		public string OfferHeadNo
		{
			get
			{
				return this._OfferHeadNo;
			}
			set
			{
				if ((this._OfferHeadNo != value))
				{
					this.OnOfferHeadNoChanging(value);
					this.SendPropertyChanging();
					this._OfferHeadNo = value;
					this.SendPropertyChanged("OfferHeadNo");
					this.OnOfferHeadNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferHeadName", DbType = "VarChar(250)")]
		public string OfferHeadName
		{
			get
			{
				return this._OfferHeadName;
			}
			set
			{
				if ((this._OfferHeadName != value))
				{
					this.OnOfferHeadNameChanging(value);
					this.SendPropertyChanging();
					this._OfferHeadName = value;
					this.SendPropertyChanged("OfferHeadName");
					this.OnOfferHeadNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferHeadTyp", DbType = "Int")]
		public System.Nullable<int> OfferHeadTyp
		{
			get
			{
				return this._OfferHeadTyp;
			}
			set
			{
				if ((this._OfferHeadTyp != value))
				{
					this.OnOfferHeadTypChanging(value);
					this.SendPropertyChanging();
					this._OfferHeadTyp = value;
					this.SendPropertyChanged("OfferHeadTyp");
					this.OnOfferHeadTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDat", DbType = "VarChar(10)")]
		public string StartDat
		{
			get
			{
				return this._StartDat;
			}
			set
			{
				if ((this._StartDat != value))
				{
					this.OnStartDatChanging(value);
					this.SendPropertyChanging();
					this._StartDat = value;
					this.SendPropertyChanged("StartDat");
					this.OnStartDatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDat", DbType = "VarChar(10)")]
		public string EndDat
		{
			get
			{
				return this._EndDat;
			}
			set
			{
				if ((this._EndDat != value))
				{
					this.OnEndDatChanging(value);
					this.SendPropertyChanging();
					this._EndDat = value;
					this.SendPropertyChanged("EndDat");
					this.OnEndDatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferHeadCashCredit", DbType = "Int")]
		public System.Nullable<int> OfferHeadCashCredit
		{
			get
			{
				return this._OfferHeadCashCredit;
			}
			set
			{
				if ((this._OfferHeadCashCredit != value))
				{
					this.OnOfferHeadCashCreditChanging(value);
					this.SendPropertyChanging();
					this._OfferHeadCashCredit = value;
					this.SendPropertyChanged("OfferHeadCashCredit");
					this.OnOfferHeadCashCreditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustPri", DbType = "Int")]
		public System.Nullable<int> CustPri
		{
			get
			{
				return this._CustPri;
			}
			set
			{
				if ((this._CustPri != value))
				{
					this.OnCustPriChanging(value);
					this.SendPropertyChanging();
					this._CustPri = value;
					this.SendPropertyChanged("CustPri");
					this.OnCustPriChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CusVenNo", DbType = "VarChar(20)")]
		public string CusVenNo
		{
			get
			{
				return this._CusVenNo;
			}
			set
			{
				if ((this._CusVenNo != value))
				{
					this.OnCusVenNoChanging(value);
					this.SendPropertyChanging();
					this._CusVenNo = value;
					this.SendPropertyChanged("CusVenNo");
					this.OnCusVenNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferSalsManNo", DbType = "VarChar(3)")]
		public string OfferSalsManNo
		{
			get
			{
				return this._OfferSalsManNo;
			}
			set
			{
				if ((this._OfferSalsManNo != value))
				{
					this.OnOfferSalsManNoChanging(value);
					this.SendPropertyChanging();
					this._OfferSalsManNo = value;
					this.SendPropertyChanged("OfferSalsManNo");
					this.OnOfferSalsManNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferRemark", DbType = "VarChar(MAX)")]
		public string OfferRemark
		{
			get
			{
				return this._OfferRemark;
			}
			set
			{
				if ((this._OfferRemark != value))
				{
					this.OnOfferRemarkChanging(value);
					this.SendPropertyChanging();
					this._OfferRemark = value;
					this.SendPropertyChanged("OfferRemark");
					this.OnOfferRemarkChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Offer_T_OfferDet", Storage = "_T_OfferDets", ThisKey = "OfferHeadID", OtherKey = "OfferID")]
		public EntitySet<T_OfferDet> T_OfferDets
		{
			get
			{
				return this._T_OfferDets;
			}
			set
			{
				this._T_OfferDets.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Offer_T_OfferQFree", Storage = "_T_OfferQFrees", ThisKey = "OfferHeadID", OtherKey = "OfferIDQ")]
		public EntitySet<T_OfferQFree> T_OfferQFrees
		{
			get
			{
				return this._T_OfferQFrees;
			}
			set
			{
				this._T_OfferQFrees.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_OfferDets(T_OfferDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Offer = this;
		}

		private void detach_T_OfferDets(T_OfferDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Offer = null;
		}

		private void attach_T_OfferQFrees(T_OfferQFree entity)
		{
			this.SendPropertyChanging();
			entity.T_Offer = this;
		}

		private void detach_T_OfferQFrees(T_OfferQFree entity)
		{
			this.SendPropertyChanging();
			entity.T_Offer = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_OfferDet")]
	public partial class T_OfferDet : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _OfferDet_ID;

		private string _OfferDetNo;

		private System.Nullable<int> _OfferID;

		private System.Nullable<int> _OfferDetSer;

		private string _ItmNo;

		private System.Nullable<int> _ItmUnt;

		private System.Nullable<double> _Price;

		private System.Nullable<double> _DisVal;

		private System.Nullable<double> _UnitPriVal;

		private System.Nullable<double> _Qty;

		private System.Nullable<double> _QtyTo;

		private EntitySet<T_OfferQFree> _T_OfferQFrees;

		private EntityRef<T_Item> _T_Item;

		private EntityRef<T_Offer> _T_Offer;

		private EntityRef<T_Unit> _T_Unit;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnOfferDet_IDChanging(int value);
		partial void OnOfferDet_IDChanged();
		partial void OnOfferDetNoChanging(string value);
		partial void OnOfferDetNoChanged();
		partial void OnOfferIDChanging(System.Nullable<int> value);
		partial void OnOfferIDChanged();
		partial void OnOfferDetSerChanging(System.Nullable<int> value);
		partial void OnOfferDetSerChanged();
		partial void OnItmNoChanging(string value);
		partial void OnItmNoChanged();
		partial void OnItmUntChanging(System.Nullable<int> value);
		partial void OnItmUntChanged();
		partial void OnPriceChanging(System.Nullable<double> value);
		partial void OnPriceChanged();
		partial void OnDisValChanging(System.Nullable<double> value);
		partial void OnDisValChanged();
		partial void OnUnitPriValChanging(System.Nullable<double> value);
		partial void OnUnitPriValChanged();
		partial void OnQtyChanging(System.Nullable<double> value);
		partial void OnQtyChanged();
		partial void OnQtyToChanging(System.Nullable<double> value);
		partial void OnQtyToChanged();
		#endregion

		public T_OfferDet()
		{
			this._T_OfferQFrees = new EntitySet<T_OfferQFree>(new Action<T_OfferQFree>(this.attach_T_OfferQFrees), new Action<T_OfferQFree>(this.detach_T_OfferQFrees));
			this._T_Item = default(EntityRef<T_Item>);
			this._T_Offer = default(EntityRef<T_Offer>);
			this._T_Unit = default(EntityRef<T_Unit>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferDet_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int OfferDet_ID
		{
			get
			{
				return this._OfferDet_ID;
			}
			set
			{
				if ((this._OfferDet_ID != value))
				{
					this.OnOfferDet_IDChanging(value);
					this.SendPropertyChanging();
					this._OfferDet_ID = value;
					this.SendPropertyChanged("OfferDet_ID");
					this.OnOfferDet_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferDetNo", DbType = "VarChar(10)")]
		public string OfferDetNo
		{
			get
			{
				return this._OfferDetNo;
			}
			set
			{
				if ((this._OfferDetNo != value))
				{
					this.OnOfferDetNoChanging(value);
					this.SendPropertyChanging();
					this._OfferDetNo = value;
					this.SendPropertyChanged("OfferDetNo");
					this.OnOfferDetNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferID", DbType = "Int")]
		public System.Nullable<int> OfferID
		{
			get
			{
				return this._OfferID;
			}
			set
			{
				if ((this._OfferID != value))
				{
					if (this._T_Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIDChanging(value);
					this.SendPropertyChanging();
					this._OfferID = value;
					this.SendPropertyChanged("OfferID");
					this.OnOfferIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferDetSer", DbType = "Int")]
		public System.Nullable<int> OfferDetSer
		{
			get
			{
				return this._OfferDetSer;
			}
			set
			{
				if ((this._OfferDetSer != value))
				{
					this.OnOfferDetSerChanging(value);
					this.SendPropertyChanging();
					this._OfferDetSer = value;
					this.SendPropertyChanged("OfferDetSer");
					this.OnOfferDetSerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmNo", DbType = "VarChar(50)")]
		public string ItmNo
		{
			get
			{
				return this._ItmNo;
			}
			set
			{
				if ((this._ItmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmNoChanging(value);
					this.SendPropertyChanging();
					this._ItmNo = value;
					this.SendPropertyChanged("ItmNo");
					this.OnItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmUnt", DbType = "Int")]
		public System.Nullable<int> ItmUnt
		{
			get
			{
				return this._ItmUnt;
			}
			set
			{
				if ((this._ItmUnt != value))
				{
					if (this._T_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmUntChanging(value);
					this.SendPropertyChanging();
					this._ItmUnt = value;
					this.SendPropertyChanged("ItmUnt");
					this.OnItmUntChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price", DbType = "Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DisVal", DbType = "Float")]
		public System.Nullable<double> DisVal
		{
			get
			{
				return this._DisVal;
			}
			set
			{
				if ((this._DisVal != value))
				{
					this.OnDisValChanging(value);
					this.SendPropertyChanging();
					this._DisVal = value;
					this.SendPropertyChanged("DisVal");
					this.OnDisValChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UnitPriVal", DbType = "Float")]
		public System.Nullable<double> UnitPriVal
		{
			get
			{
				return this._UnitPriVal;
			}
			set
			{
				if ((this._UnitPriVal != value))
				{
					this.OnUnitPriValChanging(value);
					this.SendPropertyChanging();
					this._UnitPriVal = value;
					this.SendPropertyChanged("UnitPriVal");
					this.OnUnitPriValChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Qty", DbType = "Float")]
		public System.Nullable<double> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QtyTo", DbType = "Float")]
		public System.Nullable<double> QtyTo
		{
			get
			{
				return this._QtyTo;
			}
			set
			{
				if ((this._QtyTo != value))
				{
					this.OnQtyToChanging(value);
					this.SendPropertyChanging();
					this._QtyTo = value;
					this.SendPropertyChanged("QtyTo");
					this.OnQtyToChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OfferDet_T_OfferQFree", Storage = "_T_OfferQFrees", ThisKey = "OfferDet_ID", OtherKey = "OfferQFreeID")]
		public EntitySet<T_OfferQFree> T_OfferQFrees
		{
			get
			{
				return this._T_OfferQFrees;
			}
			set
			{
				this._T_OfferQFrees.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_OfferDet", Storage = "_T_Item", ThisKey = "ItmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_OfferDets.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_OfferDets.Add(this);
						this._ItmNo = value.Itm_No;
					}
					else
					{
						this._ItmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Offer_T_OfferDet", Storage = "_T_Offer", ThisKey = "OfferID", OtherKey = "OfferHeadID", IsForeignKey = true)]
		public T_Offer T_Offer
		{
			get
			{
				return this._T_Offer.Entity;
			}
			set
			{
				T_Offer previousValue = this._T_Offer.Entity;
				if (((previousValue != value)
							|| (this._T_Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Offer.Entity = null;
						previousValue.T_OfferDets.Remove(this);
					}
					this._T_Offer.Entity = value;
					if ((value != null))
					{
						value.T_OfferDets.Add(this);
						this._OfferID = value.OfferHeadID;
					}
					else
					{
						this._OfferID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Offer");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_OfferDet", Storage = "_T_Unit", ThisKey = "ItmUnt", OtherKey = "Unit_ID", IsForeignKey = true)]
		public T_Unit T_Unit
		{
			get
			{
				return this._T_Unit.Entity;
			}
			set
			{
				T_Unit previousValue = this._T_Unit.Entity;
				if (((previousValue != value)
							|| (this._T_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Unit.Entity = null;
						previousValue.T_OfferDets.Remove(this);
					}
					this._T_Unit.Entity = value;
					if ((value != null))
					{
						value.T_OfferDets.Add(this);
						this._ItmUnt = value.Unit_ID;
					}
					else
					{
						this._ItmUnt = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Unit");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_OfferQFrees(T_OfferQFree entity)
		{
			this.SendPropertyChanging();
			entity.T_OfferDet = this;
		}

		private void detach_T_OfferQFrees(T_OfferQFree entity)
		{
			this.SendPropertyChanging();
			entity.T_OfferDet = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_OfferQFree")]
	public partial class T_OfferQFree : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _OfferQFree_ID;

		private string _OfferQFreeNo;

		private System.Nullable<int> _OfferQFreeID;

		private System.Nullable<int> _OfferQFreeSer;

		private string _OfferQFreeItmNo;

		private System.Nullable<int> _OfferQFreeItmUnt;

		private System.Nullable<double> _OfferQFreePrice;

		private System.Nullable<double> _OfferQFreeDisVal;

		private System.Nullable<double> _OfferQFreeUnitPriVal;

		private System.Nullable<int> _OfferIDQ;

		private System.Nullable<double> _OfferQFreeQty;

		private System.Nullable<int> _OfferQFreeStoreNo;

		private System.Nullable<double> _OfferQFreeItmTax;

		private string _OfferQFreeRunCod;

		private string _OfferQFreeDatExper;

		private EntityRef<T_Item> _T_Item;

		private EntityRef<T_Offer> _T_Offer;

		private EntityRef<T_OfferDet> _T_OfferDet;

		private EntityRef<T_Unit> _T_Unit;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnOfferQFree_IDChanging(int value);
		partial void OnOfferQFree_IDChanged();
		partial void OnOfferQFreeNoChanging(string value);
		partial void OnOfferQFreeNoChanged();
		partial void OnOfferQFreeIDChanging(System.Nullable<int> value);
		partial void OnOfferQFreeIDChanged();
		partial void OnOfferQFreeSerChanging(System.Nullable<int> value);
		partial void OnOfferQFreeSerChanged();
		partial void OnOfferQFreeItmNoChanging(string value);
		partial void OnOfferQFreeItmNoChanged();
		partial void OnOfferQFreeItmUntChanging(System.Nullable<int> value);
		partial void OnOfferQFreeItmUntChanged();
		partial void OnOfferQFreePriceChanging(System.Nullable<double> value);
		partial void OnOfferQFreePriceChanged();
		partial void OnOfferQFreeDisValChanging(System.Nullable<double> value);
		partial void OnOfferQFreeDisValChanged();
		partial void OnOfferQFreeUnitPriValChanging(System.Nullable<double> value);
		partial void OnOfferQFreeUnitPriValChanged();
		partial void OnOfferIDQChanging(System.Nullable<int> value);
		partial void OnOfferIDQChanged();
		partial void OnOfferQFreeQtyChanging(System.Nullable<double> value);
		partial void OnOfferQFreeQtyChanged();
		partial void OnOfferQFreeStoreNoChanging(System.Nullable<int> value);
		partial void OnOfferQFreeStoreNoChanged();
		partial void OnOfferQFreeItmTaxChanging(System.Nullable<double> value);
		partial void OnOfferQFreeItmTaxChanged();
		partial void OnOfferQFreeRunCodChanging(string value);
		partial void OnOfferQFreeRunCodChanged();
		partial void OnOfferQFreeDatExperChanging(string value);
		partial void OnOfferQFreeDatExperChanged();
		#endregion

		public T_OfferQFree()
		{
			this._T_Item = default(EntityRef<T_Item>);
			this._T_Offer = default(EntityRef<T_Offer>);
			this._T_OfferDet = default(EntityRef<T_OfferDet>);
			this._T_Unit = default(EntityRef<T_Unit>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFree_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int OfferQFree_ID
		{
			get
			{
				return this._OfferQFree_ID;
			}
			set
			{
				if ((this._OfferQFree_ID != value))
				{
					this.OnOfferQFree_IDChanging(value);
					this.SendPropertyChanging();
					this._OfferQFree_ID = value;
					this.SendPropertyChanged("OfferQFree_ID");
					this.OnOfferQFree_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeNo", DbType = "VarChar(10)")]
		public string OfferQFreeNo
		{
			get
			{
				return this._OfferQFreeNo;
			}
			set
			{
				if ((this._OfferQFreeNo != value))
				{
					this.OnOfferQFreeNoChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeNo = value;
					this.SendPropertyChanged("OfferQFreeNo");
					this.OnOfferQFreeNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeID", DbType = "Int")]
		public System.Nullable<int> OfferQFreeID
		{
			get
			{
				return this._OfferQFreeID;
			}
			set
			{
				if ((this._OfferQFreeID != value))
				{
					if (this._T_OfferDet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferQFreeIDChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeID = value;
					this.SendPropertyChanged("OfferQFreeID");
					this.OnOfferQFreeIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeSer", DbType = "Int")]
		public System.Nullable<int> OfferQFreeSer
		{
			get
			{
				return this._OfferQFreeSer;
			}
			set
			{
				if ((this._OfferQFreeSer != value))
				{
					this.OnOfferQFreeSerChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeSer = value;
					this.SendPropertyChanged("OfferQFreeSer");
					this.OnOfferQFreeSerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeItmNo", DbType = "VarChar(50)")]
		public string OfferQFreeItmNo
		{
			get
			{
				return this._OfferQFreeItmNo;
			}
			set
			{
				if ((this._OfferQFreeItmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferQFreeItmNoChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeItmNo = value;
					this.SendPropertyChanged("OfferQFreeItmNo");
					this.OnOfferQFreeItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeItmUnt", DbType = "Int")]
		public System.Nullable<int> OfferQFreeItmUnt
		{
			get
			{
				return this._OfferQFreeItmUnt;
			}
			set
			{
				if ((this._OfferQFreeItmUnt != value))
				{
					if (this._T_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferQFreeItmUntChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeItmUnt = value;
					this.SendPropertyChanged("OfferQFreeItmUnt");
					this.OnOfferQFreeItmUntChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreePrice", DbType = "Float")]
		public System.Nullable<double> OfferQFreePrice
		{
			get
			{
				return this._OfferQFreePrice;
			}
			set
			{
				if ((this._OfferQFreePrice != value))
				{
					this.OnOfferQFreePriceChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreePrice = value;
					this.SendPropertyChanged("OfferQFreePrice");
					this.OnOfferQFreePriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeDisVal", DbType = "Float")]
		public System.Nullable<double> OfferQFreeDisVal
		{
			get
			{
				return this._OfferQFreeDisVal;
			}
			set
			{
				if ((this._OfferQFreeDisVal != value))
				{
					this.OnOfferQFreeDisValChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeDisVal = value;
					this.SendPropertyChanged("OfferQFreeDisVal");
					this.OnOfferQFreeDisValChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeUnitPriVal", DbType = "Float")]
		public System.Nullable<double> OfferQFreeUnitPriVal
		{
			get
			{
				return this._OfferQFreeUnitPriVal;
			}
			set
			{
				if ((this._OfferQFreeUnitPriVal != value))
				{
					this.OnOfferQFreeUnitPriValChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeUnitPriVal = value;
					this.SendPropertyChanged("OfferQFreeUnitPriVal");
					this.OnOfferQFreeUnitPriValChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferIDQ", DbType = "Int")]
		public System.Nullable<int> OfferIDQ
		{
			get
			{
				return this._OfferIDQ;
			}
			set
			{
				if ((this._OfferIDQ != value))
				{
					if (this._T_Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIDQChanging(value);
					this.SendPropertyChanging();
					this._OfferIDQ = value;
					this.SendPropertyChanged("OfferIDQ");
					this.OnOfferIDQChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeQty", DbType = "Float")]
		public System.Nullable<double> OfferQFreeQty
		{
			get
			{
				return this._OfferQFreeQty;
			}
			set
			{
				if ((this._OfferQFreeQty != value))
				{
					this.OnOfferQFreeQtyChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeQty = value;
					this.SendPropertyChanged("OfferQFreeQty");
					this.OnOfferQFreeQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeStoreNo", DbType = "Int")]
		public System.Nullable<int> OfferQFreeStoreNo
		{
			get
			{
				return this._OfferQFreeStoreNo;
			}
			set
			{
				if ((this._OfferQFreeStoreNo != value))
				{
					this.OnOfferQFreeStoreNoChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeStoreNo = value;
					this.SendPropertyChanged("OfferQFreeStoreNo");
					this.OnOfferQFreeStoreNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeItmTax", DbType = "Float")]
		public System.Nullable<double> OfferQFreeItmTax
		{
			get
			{
				return this._OfferQFreeItmTax;
			}
			set
			{
				if ((this._OfferQFreeItmTax != value))
				{
					this.OnOfferQFreeItmTaxChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeItmTax = value;
					this.SendPropertyChanged("OfferQFreeItmTax");
					this.OnOfferQFreeItmTaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeRunCod", DbType = "VarChar(100)")]
		public string OfferQFreeRunCod
		{
			get
			{
				return this._OfferQFreeRunCod;
			}
			set
			{
				if ((this._OfferQFreeRunCod != value))
				{
					this.OnOfferQFreeRunCodChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeRunCod = value;
					this.SendPropertyChanged("OfferQFreeRunCod");
					this.OnOfferQFreeRunCodChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OfferQFreeDatExper", DbType = "VarChar(11)")]
		public string OfferQFreeDatExper
		{
			get
			{
				return this._OfferQFreeDatExper;
			}
			set
			{
				if ((this._OfferQFreeDatExper != value))
				{
					this.OnOfferQFreeDatExperChanging(value);
					this.SendPropertyChanging();
					this._OfferQFreeDatExper = value;
					this.SendPropertyChanged("OfferQFreeDatExper");
					this.OnOfferQFreeDatExperChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_OfferQFree", Storage = "_T_Item", ThisKey = "OfferQFreeItmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_OfferQFrees.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_OfferQFrees.Add(this);
						this._OfferQFreeItmNo = value.Itm_No;
					}
					else
					{
						this._OfferQFreeItmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Offer_T_OfferQFree", Storage = "_T_Offer", ThisKey = "OfferIDQ", OtherKey = "OfferHeadID", IsForeignKey = true)]
		public T_Offer T_Offer
		{
			get
			{
				return this._T_Offer.Entity;
			}
			set
			{
				T_Offer previousValue = this._T_Offer.Entity;
				if (((previousValue != value)
							|| (this._T_Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Offer.Entity = null;
						previousValue.T_OfferQFrees.Remove(this);
					}
					this._T_Offer.Entity = value;
					if ((value != null))
					{
						value.T_OfferQFrees.Add(this);
						this._OfferIDQ = value.OfferHeadID;
					}
					else
					{
						this._OfferIDQ = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Offer");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OfferDet_T_OfferQFree", Storage = "_T_OfferDet", ThisKey = "OfferQFreeID", OtherKey = "OfferDet_ID", IsForeignKey = true)]
		public T_OfferDet T_OfferDet
		{
			get
			{
				return this._T_OfferDet.Entity;
			}
			set
			{
				T_OfferDet previousValue = this._T_OfferDet.Entity;
				if (((previousValue != value)
							|| (this._T_OfferDet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OfferDet.Entity = null;
						previousValue.T_OfferQFrees.Remove(this);
					}
					this._T_OfferDet.Entity = value;
					if ((value != null))
					{
						value.T_OfferQFrees.Add(this);
						this._OfferQFreeID = value.OfferDet_ID;
					}
					else
					{
						this._OfferQFreeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OfferDet");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_OfferQFree", Storage = "_T_Unit", ThisKey = "OfferQFreeItmUnt", OtherKey = "Unit_ID", IsForeignKey = true)]
		public T_Unit T_Unit
		{
			get
			{
				return this._T_Unit.Entity;
			}
			set
			{
				T_Unit previousValue = this._T_Unit.Entity;
				if (((previousValue != value)
							|| (this._T_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Unit.Entity = null;
						previousValue.T_OfferQFrees.Remove(this);
					}
					this._T_Unit.Entity = value;
					if ((value != null))
					{
						value.T_OfferQFrees.Add(this);
						this._OfferQFreeItmUnt = value.Unit_ID;
					}
					else
					{
						this._OfferQFreeItmUnt = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Unit");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_OpMethod")]
	public partial class T_OpMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Method_No;

		private string _Name;

		private string _NameE;

		private EntitySet<T_Add> _T_Adds;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_Info> _T_Infos;

		private EntitySet<T_Info> _T_Infos1;

		private EntitySet<T_SalaryOp> _T_SalaryOps;

		private EntitySet<T_SalaryOp> _T_SalaryOps1;

		private EntitySet<T_SalDiscount> _T_SalDiscounts;

		private EntitySet<T_Vacation> _T_Vacations;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnMethod_NoChanging(int value);
		partial void OnMethod_NoChanged();
		partial void OnNameChanging(string value);
		partial void OnNameChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_OpMethod()
		{
			this._T_Adds = new EntitySet<T_Add>(new Action<T_Add>(this.attach_T_Adds), new Action<T_Add>(this.detach_T_Adds));
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_Infos = new EntitySet<T_Info>(new Action<T_Info>(this.attach_T_Infos), new Action<T_Info>(this.detach_T_Infos));
			this._T_Infos1 = new EntitySet<T_Info>(new Action<T_Info>(this.attach_T_Infos1), new Action<T_Info>(this.detach_T_Infos1));
			this._T_SalaryOps = new EntitySet<T_SalaryOp>(new Action<T_SalaryOp>(this.attach_T_SalaryOps), new Action<T_SalaryOp>(this.detach_T_SalaryOps));
			this._T_SalaryOps1 = new EntitySet<T_SalaryOp>(new Action<T_SalaryOp>(this.attach_T_SalaryOps1), new Action<T_SalaryOp>(this.detach_T_SalaryOps1));
			this._T_SalDiscounts = new EntitySet<T_SalDiscount>(new Action<T_SalDiscount>(this.attach_T_SalDiscounts), new Action<T_SalDiscount>(this.detach_T_SalDiscounts));
			this._T_Vacations = new EntitySet<T_Vacation>(new Action<T_Vacation>(this.attach_T_Vacations), new Action<T_Vacation>(this.detach_T_Vacations));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Method_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Method_No
		{
			get
			{
				return this._Method_No;
			}
			set
			{
				if ((this._Method_No != value))
				{
					this.OnMethod_NoChanging(value);
					this.SendPropertyChanging();
					this._Method_No = value;
					this.SendPropertyChanged("Method_No");
					this.OnMethod_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(50)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Add", Storage = "_T_Adds", ThisKey = "Method_No", OtherKey = "CalculateNo")]
		public EntitySet<T_Add> T_Adds
		{
			get
			{
				return this._T_Adds;
			}
			set
			{
				this._T_Adds.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Emp", Storage = "_T_Emps", ThisKey = "Method_No", OtherKey = "CalculateNo")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Info", Storage = "_T_Infos", ThisKey = "Method_No", OtherKey = "CalculateNo")]
		public EntitySet<T_Info> T_Infos
		{
			get
			{
				return this._T_Infos;
			}
			set
			{
				this._T_Infos.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Info1", Storage = "_T_Infos1", ThisKey = "Method_No", OtherKey = "CalculatliquidNo")]
		public EntitySet<T_Info> T_Infos1
		{
			get
			{
				return this._T_Infos1;
			}
			set
			{
				this._T_Infos1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_SalaryOp", Storage = "_T_SalaryOps", ThisKey = "Method_No", OtherKey = "opCalc")]
		public EntitySet<T_SalaryOp> T_SalaryOps
		{
			get
			{
				return this._T_SalaryOps;
			}
			set
			{
				this._T_SalaryOps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_SalaryOp1", Storage = "_T_SalaryOps1", ThisKey = "Method_No", OtherKey = "AddTo")]
		public EntitySet<T_SalaryOp> T_SalaryOps1
		{
			get
			{
				return this._T_SalaryOps1;
			}
			set
			{
				this._T_SalaryOps1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_SalDiscount", Storage = "_T_SalDiscounts", ThisKey = "Method_No", OtherKey = "CalculateNo")]
		public EntitySet<T_SalDiscount> T_SalDiscounts
		{
			get
			{
				return this._T_SalDiscounts;
			}
			set
			{
				this._T_SalDiscounts.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Vacation", Storage = "_T_Vacations", ThisKey = "Method_No", OtherKey = "CalculateNo")]
		public EntitySet<T_Vacation> T_Vacations
		{
			get
			{
				return this._T_Vacations;
			}
			set
			{
				this._T_Vacations.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Adds(T_Add entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = this;
		}

		private void detach_T_Adds(T_Add entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = null;
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = null;
		}

		private void attach_T_Infos(T_Info entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = this;
		}

		private void detach_T_Infos(T_Info entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = null;
		}

		private void attach_T_Infos1(T_Info entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod1 = this;
		}

		private void detach_T_Infos1(T_Info entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod1 = null;
		}

		private void attach_T_SalaryOps(T_SalaryOp entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = this;
		}

		private void detach_T_SalaryOps(T_SalaryOp entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = null;
		}

		private void attach_T_SalaryOps1(T_SalaryOp entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod1 = this;
		}

		private void detach_T_SalaryOps1(T_SalaryOp entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod1 = null;
		}

		private void attach_T_SalDiscounts(T_SalDiscount entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = this;
		}

		private void detach_T_SalDiscounts(T_SalDiscount entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = null;
		}

		private void attach_T_Vacations(T_Vacation entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = this;
		}

		private void detach_T_Vacations(T_Vacation entity)
		{
			this.SendPropertyChanging();
			entity.T_OpMethod = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Owner")]
	public partial class T_Owner : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Owner_ID;

		private int _Owner_No;

		private string _NameA;

		private string _NameE;

		private string _OwnerIdent;

		private string _OwnerIdentDate;

		private string _OwnerIdentSource;

		private System.Nullable<int> _Nationalty;

		private string _Address;

		private string _Tel;

		private string _Mobile;

		private EntitySet<T_EqarsData> _T_EqarsDatas;

		private EntityRef<T_Nationality> _T_Nationality;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnOwner_IDChanging(int value);
		partial void OnOwner_IDChanged();
		partial void OnOwner_NoChanging(int value);
		partial void OnOwner_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnOwnerIdentChanging(string value);
		partial void OnOwnerIdentChanged();
		partial void OnOwnerIdentDateChanging(string value);
		partial void OnOwnerIdentDateChanged();
		partial void OnOwnerIdentSourceChanging(string value);
		partial void OnOwnerIdentSourceChanged();
		partial void OnNationaltyChanging(System.Nullable<int> value);
		partial void OnNationaltyChanged();
		partial void OnAddressChanging(string value);
		partial void OnAddressChanged();
		partial void OnTelChanging(string value);
		partial void OnTelChanged();
		partial void OnMobileChanging(string value);
		partial void OnMobileChanged();
		#endregion

		public T_Owner()
		{
			this._T_EqarsDatas = new EntitySet<T_EqarsData>(new Action<T_EqarsData>(this.attach_T_EqarsDatas), new Action<T_EqarsData>(this.detach_T_EqarsDatas));
			this._T_Nationality = default(EntityRef<T_Nationality>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Owner_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int Owner_ID
		{
			get
			{
				return this._Owner_ID;
			}
			set
			{
				if ((this._Owner_ID != value))
				{
					this.OnOwner_IDChanging(value);
					this.SendPropertyChanging();
					this._Owner_ID = value;
					this.SendPropertyChanged("Owner_ID");
					this.OnOwner_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Owner_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Owner_No
		{
			get
			{
				return this._Owner_No;
			}
			set
			{
				if ((this._Owner_No != value))
				{
					this.OnOwner_NoChanging(value);
					this.SendPropertyChanging();
					this._Owner_No = value;
					this.SendPropertyChanged("Owner_No");
					this.OnOwner_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(50)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(50)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OwnerIdent", DbType = "VarChar(50)")]
		public string OwnerIdent
		{
			get
			{
				return this._OwnerIdent;
			}
			set
			{
				if ((this._OwnerIdent != value))
				{
					this.OnOwnerIdentChanging(value);
					this.SendPropertyChanging();
					this._OwnerIdent = value;
					this.SendPropertyChanged("OwnerIdent");
					this.OnOwnerIdentChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OwnerIdentDate", DbType = "VarChar(10)")]
		public string OwnerIdentDate
		{
			get
			{
				return this._OwnerIdentDate;
			}
			set
			{
				if ((this._OwnerIdentDate != value))
				{
					this.OnOwnerIdentDateChanging(value);
					this.SendPropertyChanging();
					this._OwnerIdentDate = value;
					this.SendPropertyChanged("OwnerIdentDate");
					this.OnOwnerIdentDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OwnerIdentSource", DbType = "VarChar(100)")]
		public string OwnerIdentSource
		{
			get
			{
				return this._OwnerIdentSource;
			}
			set
			{
				if ((this._OwnerIdentSource != value))
				{
					this.OnOwnerIdentSourceChanging(value);
					this.SendPropertyChanging();
					this._OwnerIdentSource = value;
					this.SendPropertyChanged("OwnerIdentSource");
					this.OnOwnerIdentSourceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nationalty", DbType = "Int")]
		public System.Nullable<int> Nationalty
		{
			get
			{
				return this._Nationalty;
			}
			set
			{
				if ((this._Nationalty != value))
				{
					if (this._T_Nationality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNationaltyChanging(value);
					this.SendPropertyChanging();
					this._Nationalty = value;
					this.SendPropertyChanged("Nationalty");
					this.OnNationaltyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "VarChar(30)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel", DbType = "VarChar(30)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "VarChar(30)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Owner_T_EqarsData", Storage = "_T_EqarsDatas", ThisKey = "Owner_No", OtherKey = "OwnerNo")]
		public EntitySet<T_EqarsData> T_EqarsDatas
		{
			get
			{
				return this._T_EqarsDatas;
			}
			set
			{
				this._T_EqarsDatas.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_Owner", Storage = "_T_Nationality", ThisKey = "Nationalty", OtherKey = "Nation_No", IsForeignKey = true)]
		public T_Nationality T_Nationality
		{
			get
			{
				return this._T_Nationality.Entity;
			}
			set
			{
				T_Nationality previousValue = this._T_Nationality.Entity;
				if (((previousValue != value)
							|| (this._T_Nationality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Nationality.Entity = null;
						previousValue.T_Owners.Remove(this);
					}
					this._T_Nationality.Entity = value;
					if ((value != null))
					{
						value.T_Owners.Add(this);
						this._Nationalty = value.Nation_No;
					}
					else
					{
						this._Nationalty = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Nationality");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_Owner = this;
		}

		private void detach_T_EqarsDatas(T_EqarsData entity)
		{
			this.SendPropertyChanging();
			entity.T_Owner = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_PatientCout")]
	public partial class T_PatientCout : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _ItmNo;

		private System.Nullable<double> _Mnth;

		private System.Nullable<double> _Total;

		private System.Nullable<double> _Filed1;

		private System.Nullable<double> _Field2;

		private string _Field3;

		private string _Field4;

		private EntityRef<T_Item> _T_Item;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnItmNoChanging(string value);
		partial void OnItmNoChanged();
		partial void OnMnthChanging(System.Nullable<double> value);
		partial void OnMnthChanged();
		partial void OnTotalChanging(System.Nullable<double> value);
		partial void OnTotalChanged();
		partial void OnFiled1Changing(System.Nullable<double> value);
		partial void OnFiled1Changed();
		partial void OnField2Changing(System.Nullable<double> value);
		partial void OnField2Changed();
		partial void OnField3Changing(string value);
		partial void OnField3Changed();
		partial void OnField4Changing(string value);
		partial void OnField4Changed();
		#endregion

		public T_PatientCout()
		{
			this._T_Item = default(EntityRef<T_Item>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItmNo", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
		public string ItmNo
		{
			get
			{
				return this._ItmNo;
			}
			set
			{
				if ((this._ItmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmNoChanging(value);
					this.SendPropertyChanging();
					this._ItmNo = value;
					this.SendPropertyChanged("ItmNo");
					this.OnItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mnth", DbType = "Float")]
		public System.Nullable<double> Mnth
		{
			get
			{
				return this._Mnth;
			}
			set
			{
				if ((this._Mnth != value))
				{
					this.OnMnthChanging(value);
					this.SendPropertyChanging();
					this._Mnth = value;
					this.SendPropertyChanged("Mnth");
					this.OnMnthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Total", DbType = "Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Filed1", DbType = "Float")]
		public System.Nullable<double> Filed1
		{
			get
			{
				return this._Filed1;
			}
			set
			{
				if ((this._Filed1 != value))
				{
					this.OnFiled1Changing(value);
					this.SendPropertyChanging();
					this._Filed1 = value;
					this.SendPropertyChanged("Filed1");
					this.OnFiled1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Field2", DbType = "Float")]
		public System.Nullable<double> Field2
		{
			get
			{
				return this._Field2;
			}
			set
			{
				if ((this._Field2 != value))
				{
					this.OnField2Changing(value);
					this.SendPropertyChanging();
					this._Field2 = value;
					this.SendPropertyChanged("Field2");
					this.OnField2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Field3", DbType = "VarChar(50)")]
		public string Field3
		{
			get
			{
				return this._Field3;
			}
			set
			{
				if ((this._Field3 != value))
				{
					this.OnField3Changing(value);
					this.SendPropertyChanging();
					this._Field3 = value;
					this.SendPropertyChanged("Field3");
					this.OnField3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Field4", DbType = "VarChar(50)")]
		public string Field4
		{
			get
			{
				return this._Field4;
			}
			set
			{
				if ((this._Field4 != value))
				{
					this.OnField4Changing(value);
					this.SendPropertyChanging();
					this._Field4 = value;
					this.SendPropertyChanged("Field4");
					this.OnField4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_PatientCout", Storage = "_T_Item", ThisKey = "ItmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_PatientCouts.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_PatientCouts.Add(this);
						this._ItmNo = value.Itm_No;
					}
					else
					{
						this._ItmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_per")]
	public partial class T_per : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _perno;

		private System.Nullable<int> _romno;

		private string _nm;

		private System.Nullable<int> _nath;

		private string _day;

		private string _dt1;

		private System.Nullable<double> _price;

		private string _pasno;

		private string _dt2;

		private string _dt3;

		private System.Nullable<int> _ch;

		private System.Nullable<double> _dis;

		private System.Nullable<int> _actyp;

		private string _ps1;

		private string _ps2;

		private System.Nullable<int> _cc;

		private System.Nullable<int> _pastyp;

		private string _tm1;

		private string _tm2;

		private System.Nullable<double> _tax;

		private System.Nullable<double> _ser;

		private System.Nullable<double> _DOL;

		private System.Nullable<int> _vip;

		private System.Nullable<int> _job;

		private System.Nullable<int> _curr;

		private System.Nullable<int> _distyp;

		private System.Nullable<int> _cust;

		private System.Nullable<int> _disknd;

		private string _jobpls;

		private string _bdt;

		private string _bpls;

		private string _paspls;

		private string _passt;

		private string _pasend;

		private string _enddt;

		private System.Data.Linq.Binary _pict;

		private System.Nullable<double> _fat;

		private System.Nullable<int> _gropno;

		private string _Cust_no;

		private System.Nullable<int> _Totel;

		private System.Nullable<int> _DayEdit;

		private System.Nullable<int> _DayImport;

		private string _dt4;

		private System.Nullable<int> _KindPer;

		private System.Nullable<int> _DayOfM;

		private string _vAmPm;

		private System.Nullable<int> _romnoNew;

		private EntitySet<T_per1> _T_per1s;

		private EntitySet<T_Rom> _T_Roms;

		private EntitySet<T_Snd> _T_Snds;

		private EntitySet<T_tel> _T_tels;

		private EntitySet<T_tran> _T_trans;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_Curency> _T_Curency;

		private EntityRef<T_IDType> _T_IDType;

		private EntityRef<T_Job> _T_Job;

		private EntityRef<T_Nationality> _T_Nationality;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnpernoChanging(int value);
		partial void OnpernoChanged();
		partial void OnromnoChanging(System.Nullable<int> value);
		partial void OnromnoChanged();
		partial void OnnmChanging(string value);
		partial void OnnmChanged();
		partial void OnnathChanging(System.Nullable<int> value);
		partial void OnnathChanged();
		partial void OndayChanging(string value);
		partial void OndayChanged();
		partial void Ondt1Changing(string value);
		partial void Ondt1Changed();
		partial void OnpriceChanging(System.Nullable<double> value);
		partial void OnpriceChanged();
		partial void OnpasnoChanging(string value);
		partial void OnpasnoChanged();
		partial void Ondt2Changing(string value);
		partial void Ondt2Changed();
		partial void Ondt3Changing(string value);
		partial void Ondt3Changed();
		partial void OnchChanging(System.Nullable<int> value);
		partial void OnchChanged();
		partial void OndisChanging(System.Nullable<double> value);
		partial void OndisChanged();
		partial void OnactypChanging(System.Nullable<int> value);
		partial void OnactypChanged();
		partial void Onps1Changing(string value);
		partial void Onps1Changed();
		partial void Onps2Changing(string value);
		partial void Onps2Changed();
		partial void OnccChanging(System.Nullable<int> value);
		partial void OnccChanged();
		partial void OnpastypChanging(System.Nullable<int> value);
		partial void OnpastypChanged();
		partial void Ontm1Changing(string value);
		partial void Ontm1Changed();
		partial void Ontm2Changing(string value);
		partial void Ontm2Changed();
		partial void OntaxChanging(System.Nullable<double> value);
		partial void OntaxChanged();
		partial void OnserChanging(System.Nullable<double> value);
		partial void OnserChanged();
		partial void OnDOLChanging(System.Nullable<double> value);
		partial void OnDOLChanged();
		partial void OnvipChanging(System.Nullable<int> value);
		partial void OnvipChanged();
		partial void OnjobChanging(System.Nullable<int> value);
		partial void OnjobChanged();
		partial void OncurrChanging(System.Nullable<int> value);
		partial void OncurrChanged();
		partial void OndistypChanging(System.Nullable<int> value);
		partial void OndistypChanged();
		partial void OncustChanging(System.Nullable<int> value);
		partial void OncustChanged();
		partial void OndiskndChanging(System.Nullable<int> value);
		partial void OndiskndChanged();
		partial void OnjobplsChanging(string value);
		partial void OnjobplsChanged();
		partial void OnbdtChanging(string value);
		partial void OnbdtChanged();
		partial void OnbplsChanging(string value);
		partial void OnbplsChanged();
		partial void OnpasplsChanging(string value);
		partial void OnpasplsChanged();
		partial void OnpasstChanging(string value);
		partial void OnpasstChanged();
		partial void OnpasendChanging(string value);
		partial void OnpasendChanged();
		partial void OnenddtChanging(string value);
		partial void OnenddtChanged();
		partial void OnpictChanging(System.Data.Linq.Binary value);
		partial void OnpictChanged();
		partial void OnfatChanging(System.Nullable<double> value);
		partial void OnfatChanged();
		partial void OngropnoChanging(System.Nullable<int> value);
		partial void OngropnoChanged();
		partial void OnCust_noChanging(string value);
		partial void OnCust_noChanged();
		partial void OnTotelChanging(System.Nullable<int> value);
		partial void OnTotelChanged();
		partial void OnDayEditChanging(System.Nullable<int> value);
		partial void OnDayEditChanged();
		partial void OnDayImportChanging(System.Nullable<int> value);
		partial void OnDayImportChanged();
		partial void Ondt4Changing(string value);
		partial void Ondt4Changed();
		partial void OnKindPerChanging(System.Nullable<int> value);
		partial void OnKindPerChanged();
		partial void OnDayOfMChanging(System.Nullable<int> value);
		partial void OnDayOfMChanged();
		partial void OnvAmPmChanging(string value);
		partial void OnvAmPmChanged();
		partial void OnromnoNewChanging(System.Nullable<int> value);
		partial void OnromnoNewChanged();
		#endregion

		public T_per()
		{
			this._T_per1s = new EntitySet<T_per1>(new Action<T_per1>(this.attach_T_per1s), new Action<T_per1>(this.detach_T_per1s));
			this._T_Roms = new EntitySet<T_Rom>(new Action<T_Rom>(this.attach_T_Roms), new Action<T_Rom>(this.detach_T_Roms));
			this._T_Snds = new EntitySet<T_Snd>(new Action<T_Snd>(this.attach_T_Snds), new Action<T_Snd>(this.detach_T_Snds));
			this._T_tels = new EntitySet<T_tel>(new Action<T_tel>(this.attach_T_tels), new Action<T_tel>(this.detach_T_tels));
			this._T_trans = new EntitySet<T_tran>(new Action<T_tran>(this.attach_T_trans), new Action<T_tran>(this.detach_T_trans));
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_Curency = default(EntityRef<T_Curency>);
			this._T_IDType = default(EntityRef<T_IDType>);
			this._T_Job = default(EntityRef<T_Job>);
			this._T_Nationality = default(EntityRef<T_Nationality>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_perno", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int perno
		{
			get
			{
				return this._perno;
			}
			set
			{
				if ((this._perno != value))
				{
					this.OnpernoChanging(value);
					this.SendPropertyChanging();
					this._perno = value;
					this.SendPropertyChanged("perno");
					this.OnpernoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romno", DbType = "Int")]
		public System.Nullable<int> romno
		{
			get
			{
				return this._romno;
			}
			set
			{
				if ((this._romno != value))
				{
					this.OnromnoChanging(value);
					this.SendPropertyChanging();
					this._romno = value;
					this.SendPropertyChanged("romno");
					this.OnromnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nm", DbType = "VarChar(100)")]
		public string nm
		{
			get
			{
				return this._nm;
			}
			set
			{
				if ((this._nm != value))
				{
					this.OnnmChanging(value);
					this.SendPropertyChanging();
					this._nm = value;
					this.SendPropertyChanged("nm");
					this.OnnmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nath", DbType = "Int")]
		public System.Nullable<int> nath
		{
			get
			{
				return this._nath;
			}
			set
			{
				if ((this._nath != value))
				{
					if (this._T_Nationality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnathChanging(value);
					this.SendPropertyChanging();
					this._nath = value;
					this.SendPropertyChanged("nath");
					this.OnnathChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_day", DbType = "VarChar(12)")]
		public string day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt1", DbType = "VarChar(10)")]
		public string dt1
		{
			get
			{
				return this._dt1;
			}
			set
			{
				if ((this._dt1 != value))
				{
					this.Ondt1Changing(value);
					this.SendPropertyChanging();
					this._dt1 = value;
					this.SendPropertyChanged("dt1");
					this.Ondt1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_price", DbType = "Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pasno", DbType = "VarChar(15)")]
		public string pasno
		{
			get
			{
				return this._pasno;
			}
			set
			{
				if ((this._pasno != value))
				{
					this.OnpasnoChanging(value);
					this.SendPropertyChanging();
					this._pasno = value;
					this.SendPropertyChanged("pasno");
					this.OnpasnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt2", DbType = "VarChar(10)")]
		public string dt2
		{
			get
			{
				return this._dt2;
			}
			set
			{
				if ((this._dt2 != value))
				{
					this.Ondt2Changing(value);
					this.SendPropertyChanging();
					this._dt2 = value;
					this.SendPropertyChanged("dt2");
					this.Ondt2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt3", DbType = "VarChar(10)")]
		public string dt3
		{
			get
			{
				return this._dt3;
			}
			set
			{
				if ((this._dt3 != value))
				{
					this.Ondt3Changing(value);
					this.SendPropertyChanging();
					this._dt3 = value;
					this.SendPropertyChanged("dt3");
					this.Ondt3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ch", DbType = "Int")]
		public System.Nullable<int> ch
		{
			get
			{
				return this._ch;
			}
			set
			{
				if ((this._ch != value))
				{
					this.OnchChanging(value);
					this.SendPropertyChanging();
					this._ch = value;
					this.SendPropertyChanged("ch");
					this.OnchChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dis", DbType = "Float")]
		public System.Nullable<double> dis
		{
			get
			{
				return this._dis;
			}
			set
			{
				if ((this._dis != value))
				{
					this.OndisChanging(value);
					this.SendPropertyChanging();
					this._dis = value;
					this.SendPropertyChanged("dis");
					this.OndisChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_actyp", DbType = "Int")]
		public System.Nullable<int> actyp
		{
			get
			{
				return this._actyp;
			}
			set
			{
				if ((this._actyp != value))
				{
					this.OnactypChanging(value);
					this.SendPropertyChanging();
					this._actyp = value;
					this.SendPropertyChanged("actyp");
					this.OnactypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ps1", DbType = "VarChar(30)")]
		public string ps1
		{
			get
			{
				return this._ps1;
			}
			set
			{
				if ((this._ps1 != value))
				{
					this.Onps1Changing(value);
					this.SendPropertyChanging();
					this._ps1 = value;
					this.SendPropertyChanged("ps1");
					this.Onps1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ps2", DbType = "VarChar(30)")]
		public string ps2
		{
			get
			{
				return this._ps2;
			}
			set
			{
				if ((this._ps2 != value))
				{
					this.Onps2Changing(value);
					this.SendPropertyChanging();
					this._ps2 = value;
					this.SendPropertyChanged("ps2");
					this.Onps2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_cc", DbType = "Int")]
		public System.Nullable<int> cc
		{
			get
			{
				return this._cc;
			}
			set
			{
				if ((this._cc != value))
				{
					this.OnccChanging(value);
					this.SendPropertyChanging();
					this._cc = value;
					this.SendPropertyChanged("cc");
					this.OnccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pastyp", DbType = "Int")]
		public System.Nullable<int> pastyp
		{
			get
			{
				return this._pastyp;
			}
			set
			{
				if ((this._pastyp != value))
				{
					if (this._T_IDType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpastypChanging(value);
					this.SendPropertyChanging();
					this._pastyp = value;
					this.SendPropertyChanged("pastyp");
					this.OnpastypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tm1", DbType = "VarChar(11)")]
		public string tm1
		{
			get
			{
				return this._tm1;
			}
			set
			{
				if ((this._tm1 != value))
				{
					this.Ontm1Changing(value);
					this.SendPropertyChanging();
					this._tm1 = value;
					this.SendPropertyChanged("tm1");
					this.Ontm1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tm2", DbType = "VarChar(11)")]
		public string tm2
		{
			get
			{
				return this._tm2;
			}
			set
			{
				if ((this._tm2 != value))
				{
					this.Ontm2Changing(value);
					this.SendPropertyChanging();
					this._tm2 = value;
					this.SendPropertyChanged("tm2");
					this.Ontm2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tax", DbType = "Float")]
		public System.Nullable<double> tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ser", DbType = "Float")]
		public System.Nullable<double> ser
		{
			get
			{
				return this._ser;
			}
			set
			{
				if ((this._ser != value))
				{
					this.OnserChanging(value);
					this.SendPropertyChanging();
					this._ser = value;
					this.SendPropertyChanged("ser");
					this.OnserChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DOL", DbType = "Float")]
		public System.Nullable<double> DOL
		{
			get
			{
				return this._DOL;
			}
			set
			{
				if ((this._DOL != value))
				{
					this.OnDOLChanging(value);
					this.SendPropertyChanging();
					this._DOL = value;
					this.SendPropertyChanged("DOL");
					this.OnDOLChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vip", DbType = "Int")]
		public System.Nullable<int> vip
		{
			get
			{
				return this._vip;
			}
			set
			{
				if ((this._vip != value))
				{
					this.OnvipChanging(value);
					this.SendPropertyChanging();
					this._vip = value;
					this.SendPropertyChanged("vip");
					this.OnvipChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_job", DbType = "Int")]
		public System.Nullable<int> job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					if (this._T_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_curr", DbType = "Int")]
		public System.Nullable<int> curr
		{
			get
			{
				return this._curr;
			}
			set
			{
				if ((this._curr != value))
				{
					if (this._T_Curency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrChanging(value);
					this.SendPropertyChanging();
					this._curr = value;
					this.SendPropertyChanged("curr");
					this.OncurrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_distyp", DbType = "Int")]
		public System.Nullable<int> distyp
		{
			get
			{
				return this._distyp;
			}
			set
			{
				if ((this._distyp != value))
				{
					this.OndistypChanging(value);
					this.SendPropertyChanging();
					this._distyp = value;
					this.SendPropertyChanged("distyp");
					this.OndistypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_cust", DbType = "Int")]
		public System.Nullable<int> cust
		{
			get
			{
				return this._cust;
			}
			set
			{
				if ((this._cust != value))
				{
					this.OncustChanging(value);
					this.SendPropertyChanging();
					this._cust = value;
					this.SendPropertyChanged("cust");
					this.OncustChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_disknd", DbType = "Int")]
		public System.Nullable<int> disknd
		{
			get
			{
				return this._disknd;
			}
			set
			{
				if ((this._disknd != value))
				{
					this.OndiskndChanging(value);
					this.SendPropertyChanging();
					this._disknd = value;
					this.SendPropertyChanged("disknd");
					this.OndiskndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_jobpls", DbType = "VarChar(150)")]
		public string jobpls
		{
			get
			{
				return this._jobpls;
			}
			set
			{
				if ((this._jobpls != value))
				{
					this.OnjobplsChanging(value);
					this.SendPropertyChanging();
					this._jobpls = value;
					this.SendPropertyChanged("jobpls");
					this.OnjobplsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bdt", DbType = "VarChar(10)")]
		public string bdt
		{
			get
			{
				return this._bdt;
			}
			set
			{
				if ((this._bdt != value))
				{
					this.OnbdtChanging(value);
					this.SendPropertyChanging();
					this._bdt = value;
					this.SendPropertyChanged("bdt");
					this.OnbdtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bpls", DbType = "VarChar(30)")]
		public string bpls
		{
			get
			{
				return this._bpls;
			}
			set
			{
				if ((this._bpls != value))
				{
					this.OnbplsChanging(value);
					this.SendPropertyChanging();
					this._bpls = value;
					this.SendPropertyChanged("bpls");
					this.OnbplsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_paspls", DbType = "VarChar(30)")]
		public string paspls
		{
			get
			{
				return this._paspls;
			}
			set
			{
				if ((this._paspls != value))
				{
					this.OnpasplsChanging(value);
					this.SendPropertyChanging();
					this._paspls = value;
					this.SendPropertyChanged("paspls");
					this.OnpasplsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_passt", DbType = "VarChar(10)")]
		public string passt
		{
			get
			{
				return this._passt;
			}
			set
			{
				if ((this._passt != value))
				{
					this.OnpasstChanging(value);
					this.SendPropertyChanging();
					this._passt = value;
					this.SendPropertyChanged("passt");
					this.OnpasstChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pasend", DbType = "VarChar(10)")]
		public string pasend
		{
			get
			{
				return this._pasend;
			}
			set
			{
				if ((this._pasend != value))
				{
					this.OnpasendChanging(value);
					this.SendPropertyChanging();
					this._pasend = value;
					this.SendPropertyChanged("pasend");
					this.OnpasendChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_enddt", DbType = "VarChar(10)")]
		public string enddt
		{
			get
			{
				return this._enddt;
			}
			set
			{
				if ((this._enddt != value))
				{
					this.OnenddtChanging(value);
					this.SendPropertyChanging();
					this._enddt = value;
					this.SendPropertyChanged("enddt");
					this.OnenddtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pict", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary pict
		{
			get
			{
				return this._pict;
			}
			set
			{
				if ((this._pict != value))
				{
					this.OnpictChanging(value);
					this.SendPropertyChanging();
					this._pict = value;
					this.SendPropertyChanged("pict");
					this.OnpictChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fat", DbType = "Float")]
		public System.Nullable<double> fat
		{
			get
			{
				return this._fat;
			}
			set
			{
				if ((this._fat != value))
				{
					this.OnfatChanging(value);
					this.SendPropertyChanging();
					this._fat = value;
					this.SendPropertyChanged("fat");
					this.OnfatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gropno", DbType = "Int")]
		public System.Nullable<int> gropno
		{
			get
			{
				return this._gropno;
			}
			set
			{
				if ((this._gropno != value))
				{
					this.OngropnoChanging(value);
					this.SendPropertyChanging();
					this._gropno = value;
					this.SendPropertyChanged("gropno");
					this.OngropnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cust_no", DbType = "VarChar(30)")]
		public string Cust_no
		{
			get
			{
				return this._Cust_no;
			}
			set
			{
				if ((this._Cust_no != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCust_noChanging(value);
					this.SendPropertyChanging();
					this._Cust_no = value;
					this.SendPropertyChanged("Cust_no");
					this.OnCust_noChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Totel", DbType = "Int")]
		public System.Nullable<int> Totel
		{
			get
			{
				return this._Totel;
			}
			set
			{
				if ((this._Totel != value))
				{
					this.OnTotelChanging(value);
					this.SendPropertyChanging();
					this._Totel = value;
					this.SendPropertyChanged("Totel");
					this.OnTotelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayEdit", DbType = "Int")]
		public System.Nullable<int> DayEdit
		{
			get
			{
				return this._DayEdit;
			}
			set
			{
				if ((this._DayEdit != value))
				{
					this.OnDayEditChanging(value);
					this.SendPropertyChanging();
					this._DayEdit = value;
					this.SendPropertyChanged("DayEdit");
					this.OnDayEditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayImport", DbType = "Int")]
		public System.Nullable<int> DayImport
		{
			get
			{
				return this._DayImport;
			}
			set
			{
				if ((this._DayImport != value))
				{
					this.OnDayImportChanging(value);
					this.SendPropertyChanging();
					this._DayImport = value;
					this.SendPropertyChanged("DayImport");
					this.OnDayImportChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt4", DbType = "VarChar(255)")]
		public string dt4
		{
			get
			{
				return this._dt4;
			}
			set
			{
				if ((this._dt4 != value))
				{
					this.Ondt4Changing(value);
					this.SendPropertyChanging();
					this._dt4 = value;
					this.SendPropertyChanged("dt4");
					this.Ondt4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_KindPer", DbType = "Int")]
		public System.Nullable<int> KindPer
		{
			get
			{
				return this._KindPer;
			}
			set
			{
				if ((this._KindPer != value))
				{
					this.OnKindPerChanging(value);
					this.SendPropertyChanging();
					this._KindPer = value;
					this.SendPropertyChanged("KindPer");
					this.OnKindPerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayOfM", DbType = "Int")]
		public System.Nullable<int> DayOfM
		{
			get
			{
				return this._DayOfM;
			}
			set
			{
				if ((this._DayOfM != value))
				{
					this.OnDayOfMChanging(value);
					this.SendPropertyChanging();
					this._DayOfM = value;
					this.SendPropertyChanged("DayOfM");
					this.OnDayOfMChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vAmPm", DbType = "VarChar(5)")]
		public string vAmPm
		{
			get
			{
				return this._vAmPm;
			}
			set
			{
				if ((this._vAmPm != value))
				{
					this.OnvAmPmChanging(value);
					this.SendPropertyChanging();
					this._vAmPm = value;
					this.SendPropertyChanged("vAmPm");
					this.OnvAmPmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romnoNew", DbType = "Int")]
		public System.Nullable<int> romnoNew
		{
			get
			{
				return this._romnoNew;
			}
			set
			{
				if ((this._romnoNew != value))
				{
					this.OnromnoNewChanging(value);
					this.SendPropertyChanging();
					this._romnoNew = value;
					this.SendPropertyChanged("romnoNew");
					this.OnromnoNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_per1", Storage = "_T_per1s", ThisKey = "perno", OtherKey = "perno")]
		public EntitySet<T_per1> T_per1s
		{
			get
			{
				return this._T_per1s;
			}
			set
			{
				this._T_per1s.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_Rom", Storage = "_T_Roms", ThisKey = "perno", OtherKey = "perno")]
		public EntitySet<T_Rom> T_Roms
		{
			get
			{
				return this._T_Roms;
			}
			set
			{
				this._T_Roms.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_Snd", Storage = "_T_Snds", ThisKey = "perno", OtherKey = "perno")]
		public EntitySet<T_Snd> T_Snds
		{
			get
			{
				return this._T_Snds;
			}
			set
			{
				this._T_Snds.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_tel", Storage = "_T_tels", ThisKey = "perno", OtherKey = "perno")]
		public EntitySet<T_tel> T_tels
		{
			get
			{
				return this._T_tels;
			}
			set
			{
				this._T_tels.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_tran", Storage = "_T_trans", ThisKey = "perno", OtherKey = "perno")]
		public EntitySet<T_tran> T_trans
		{
			get
			{
				return this._T_trans;
			}
			set
			{
				this._T_trans.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_per", Storage = "_T_AccDef", ThisKey = "Cust_no", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_pers.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_pers.Add(this);
						this._Cust_no = value.AccDef_No;
					}
					else
					{
						this._Cust_no = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Curency_T_per", Storage = "_T_Curency", ThisKey = "curr", OtherKey = "Curency_ID", IsForeignKey = true)]
		public T_Curency T_Curency
		{
			get
			{
				return this._T_Curency.Entity;
			}
			set
			{
				T_Curency previousValue = this._T_Curency.Entity;
				if (((previousValue != value)
							|| (this._T_Curency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Curency.Entity = null;
						previousValue.T_pers.Remove(this);
					}
					this._T_Curency.Entity = value;
					if ((value != null))
					{
						value.T_pers.Add(this);
						this._curr = value.Curency_ID;
					}
					else
					{
						this._curr = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Curency");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_IDType_T_per", Storage = "_T_IDType", ThisKey = "pastyp", OtherKey = "IDType_ID", IsForeignKey = true)]
		public T_IDType T_IDType
		{
			get
			{
				return this._T_IDType.Entity;
			}
			set
			{
				T_IDType previousValue = this._T_IDType.Entity;
				if (((previousValue != value)
							|| (this._T_IDType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_IDType.Entity = null;
						previousValue.T_pers.Remove(this);
					}
					this._T_IDType.Entity = value;
					if ((value != null))
					{
						value.T_pers.Add(this);
						this._pastyp = value.IDType_ID;
					}
					else
					{
						this._pastyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_IDType");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Job_T_per", Storage = "_T_Job", ThisKey = "job", OtherKey = "Job_No", IsForeignKey = true)]
		public T_Job T_Job
		{
			get
			{
				return this._T_Job.Entity;
			}
			set
			{
				T_Job previousValue = this._T_Job.Entity;
				if (((previousValue != value)
							|| (this._T_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Job.Entity = null;
						previousValue.T_pers.Remove(this);
					}
					this._T_Job.Entity = value;
					if ((value != null))
					{
						value.T_pers.Add(this);
						this._job = value.Job_No;
					}
					else
					{
						this._job = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Job");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_per", Storage = "_T_Nationality", ThisKey = "nath", OtherKey = "Nation_No", IsForeignKey = true)]
		public T_Nationality T_Nationality
		{
			get
			{
				return this._T_Nationality.Entity;
			}
			set
			{
				T_Nationality previousValue = this._T_Nationality.Entity;
				if (((previousValue != value)
							|| (this._T_Nationality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Nationality.Entity = null;
						previousValue.T_pers.Remove(this);
					}
					this._T_Nationality.Entity = value;
					if ((value != null))
					{
						value.T_pers.Add(this);
						this._nath = value.Nation_No;
					}
					else
					{
						this._nath = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Nationality");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_per1s(T_per1 entity)
		{
			this.SendPropertyChanging();
			entity.T_per = this;
		}

		private void detach_T_per1s(T_per1 entity)
		{
			this.SendPropertyChanging();
			entity.T_per = null;
		}

		private void attach_T_Roms(T_Rom entity)
		{
			this.SendPropertyChanging();
			entity.T_per = this;
		}

		private void detach_T_Roms(T_Rom entity)
		{
			this.SendPropertyChanging();
			entity.T_per = null;
		}

		private void attach_T_Snds(T_Snd entity)
		{
			this.SendPropertyChanging();
			entity.T_per = this;
		}

		private void detach_T_Snds(T_Snd entity)
		{
			this.SendPropertyChanging();
			entity.T_per = null;
		}

		private void attach_T_tels(T_tel entity)
		{
			this.SendPropertyChanging();
			entity.T_per = this;
		}

		private void detach_T_tels(T_tel entity)
		{
			this.SendPropertyChanging();
			entity.T_per = null;
		}

		private void attach_T_trans(T_tran entity)
		{
			this.SendPropertyChanging();
			entity.T_per = this;
		}

		private void detach_T_trans(T_tran entity)
		{
			this.SendPropertyChanging();
			entity.T_per = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_per1")]
	public partial class T_per1 : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private System.Nullable<int> _perno;

		private string _nm;

		private string _natNm;

		private System.Nullable<int> _nat;

		private string _bdt;

		private string _bpls;

		private System.Nullable<int> _pastyp;

		private string _pasno;

		private string _paspls;

		private string _passt;

		private string _pasend;

		private string _entdt;

		private System.Nullable<int> _job;

		private string _jobNm;

		private string _jobpls;

		private System.Nullable<int> _romno;

		private System.Nullable<int> _fNo;

		private System.Nullable<int> _romnoNew;

		private EntityRef<T_IDType> _T_IDType;

		private EntityRef<T_Job> _T_Job;

		private EntityRef<T_Nationality> _T_Nationality;

		private EntityRef<T_per> _T_per;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnpernoChanging(System.Nullable<int> value);
		partial void OnpernoChanged();
		partial void OnnmChanging(string value);
		partial void OnnmChanged();
		partial void OnnatNmChanging(string value);
		partial void OnnatNmChanged();
		partial void OnnatChanging(System.Nullable<int> value);
		partial void OnnatChanged();
		partial void OnbdtChanging(string value);
		partial void OnbdtChanged();
		partial void OnbplsChanging(string value);
		partial void OnbplsChanged();
		partial void OnpastypChanging(System.Nullable<int> value);
		partial void OnpastypChanged();
		partial void OnpasnoChanging(string value);
		partial void OnpasnoChanged();
		partial void OnpasplsChanging(string value);
		partial void OnpasplsChanged();
		partial void OnpasstChanging(string value);
		partial void OnpasstChanged();
		partial void OnpasendChanging(string value);
		partial void OnpasendChanged();
		partial void OnentdtChanging(string value);
		partial void OnentdtChanged();
		partial void OnjobChanging(System.Nullable<int> value);
		partial void OnjobChanged();
		partial void OnjobNmChanging(string value);
		partial void OnjobNmChanged();
		partial void OnjobplsChanging(string value);
		partial void OnjobplsChanged();
		partial void OnromnoChanging(System.Nullable<int> value);
		partial void OnromnoChanged();
		partial void OnfNoChanging(System.Nullable<int> value);
		partial void OnfNoChanged();
		partial void OnromnoNewChanging(System.Nullable<int> value);
		partial void OnromnoNewChanged();
		#endregion

		public T_per1()
		{
			this._T_IDType = default(EntityRef<T_IDType>);
			this._T_Job = default(EntityRef<T_Job>);
			this._T_Nationality = default(EntityRef<T_Nationality>);
			this._T_per = default(EntityRef<T_per>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_perno", DbType = "Int")]
		public System.Nullable<int> perno
		{
			get
			{
				return this._perno;
			}
			set
			{
				if ((this._perno != value))
				{
					if (this._T_per.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpernoChanging(value);
					this.SendPropertyChanging();
					this._perno = value;
					this.SendPropertyChanged("perno");
					this.OnpernoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nm", DbType = "VarChar(100)")]
		public string nm
		{
			get
			{
				return this._nm;
			}
			set
			{
				if ((this._nm != value))
				{
					this.OnnmChanging(value);
					this.SendPropertyChanging();
					this._nm = value;
					this.SendPropertyChanged("nm");
					this.OnnmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_natNm", DbType = "VarChar(100)")]
		public string natNm
		{
			get
			{
				return this._natNm;
			}
			set
			{
				if ((this._natNm != value))
				{
					this.OnnatNmChanging(value);
					this.SendPropertyChanging();
					this._natNm = value;
					this.SendPropertyChanged("natNm");
					this.OnnatNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nat", DbType = "Int")]
		public System.Nullable<int> nat
		{
			get
			{
				return this._nat;
			}
			set
			{
				if ((this._nat != value))
				{
					if (this._T_Nationality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnatChanging(value);
					this.SendPropertyChanging();
					this._nat = value;
					this.SendPropertyChanged("nat");
					this.OnnatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bdt", DbType = "VarChar(10)")]
		public string bdt
		{
			get
			{
				return this._bdt;
			}
			set
			{
				if ((this._bdt != value))
				{
					this.OnbdtChanging(value);
					this.SendPropertyChanging();
					this._bdt = value;
					this.SendPropertyChanged("bdt");
					this.OnbdtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bpls", DbType = "VarChar(50)")]
		public string bpls
		{
			get
			{
				return this._bpls;
			}
			set
			{
				if ((this._bpls != value))
				{
					this.OnbplsChanging(value);
					this.SendPropertyChanging();
					this._bpls = value;
					this.SendPropertyChanged("bpls");
					this.OnbplsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pastyp", DbType = "Int")]
		public System.Nullable<int> pastyp
		{
			get
			{
				return this._pastyp;
			}
			set
			{
				if ((this._pastyp != value))
				{
					if (this._T_IDType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpastypChanging(value);
					this.SendPropertyChanging();
					this._pastyp = value;
					this.SendPropertyChanged("pastyp");
					this.OnpastypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pasno", DbType = "VarChar(25)")]
		public string pasno
		{
			get
			{
				return this._pasno;
			}
			set
			{
				if ((this._pasno != value))
				{
					this.OnpasnoChanging(value);
					this.SendPropertyChanging();
					this._pasno = value;
					this.SendPropertyChanged("pasno");
					this.OnpasnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_paspls", DbType = "VarChar(30)")]
		public string paspls
		{
			get
			{
				return this._paspls;
			}
			set
			{
				if ((this._paspls != value))
				{
					this.OnpasplsChanging(value);
					this.SendPropertyChanging();
					this._paspls = value;
					this.SendPropertyChanged("paspls");
					this.OnpasplsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_passt", DbType = "VarChar(10)")]
		public string passt
		{
			get
			{
				return this._passt;
			}
			set
			{
				if ((this._passt != value))
				{
					this.OnpasstChanging(value);
					this.SendPropertyChanging();
					this._passt = value;
					this.SendPropertyChanged("passt");
					this.OnpasstChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pasend", DbType = "VarChar(10)")]
		public string pasend
		{
			get
			{
				return this._pasend;
			}
			set
			{
				if ((this._pasend != value))
				{
					this.OnpasendChanging(value);
					this.SendPropertyChanging();
					this._pasend = value;
					this.SendPropertyChanged("pasend");
					this.OnpasendChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_entdt", DbType = "VarChar(10)")]
		public string entdt
		{
			get
			{
				return this._entdt;
			}
			set
			{
				if ((this._entdt != value))
				{
					this.OnentdtChanging(value);
					this.SendPropertyChanging();
					this._entdt = value;
					this.SendPropertyChanged("entdt");
					this.OnentdtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_job", DbType = "Int")]
		public System.Nullable<int> job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					if (this._T_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_jobNm", DbType = "VarChar(100)")]
		public string jobNm
		{
			get
			{
				return this._jobNm;
			}
			set
			{
				if ((this._jobNm != value))
				{
					this.OnjobNmChanging(value);
					this.SendPropertyChanging();
					this._jobNm = value;
					this.SendPropertyChanged("jobNm");
					this.OnjobNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_jobpls", DbType = "VarChar(50)")]
		public string jobpls
		{
			get
			{
				return this._jobpls;
			}
			set
			{
				if ((this._jobpls != value))
				{
					this.OnjobplsChanging(value);
					this.SendPropertyChanging();
					this._jobpls = value;
					this.SendPropertyChanged("jobpls");
					this.OnjobplsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romno", DbType = "Int")]
		public System.Nullable<int> romno
		{
			get
			{
				return this._romno;
			}
			set
			{
				if ((this._romno != value))
				{
					this.OnromnoChanging(value);
					this.SendPropertyChanging();
					this._romno = value;
					this.SendPropertyChanged("romno");
					this.OnromnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fNo", DbType = "Int")]
		public System.Nullable<int> fNo
		{
			get
			{
				return this._fNo;
			}
			set
			{
				if ((this._fNo != value))
				{
					this.OnfNoChanging(value);
					this.SendPropertyChanging();
					this._fNo = value;
					this.SendPropertyChanged("fNo");
					this.OnfNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romnoNew", DbType = "Int")]
		public System.Nullable<int> romnoNew
		{
			get
			{
				return this._romnoNew;
			}
			set
			{
				if ((this._romnoNew != value))
				{
					this.OnromnoNewChanging(value);
					this.SendPropertyChanging();
					this._romnoNew = value;
					this.SendPropertyChanged("romnoNew");
					this.OnromnoNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_IDType_T_per1", Storage = "_T_IDType", ThisKey = "pastyp", OtherKey = "IDType_ID", IsForeignKey = true)]
		public T_IDType T_IDType
		{
			get
			{
				return this._T_IDType.Entity;
			}
			set
			{
				T_IDType previousValue = this._T_IDType.Entity;
				if (((previousValue != value)
							|| (this._T_IDType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_IDType.Entity = null;
						previousValue.T_per1s.Remove(this);
					}
					this._T_IDType.Entity = value;
					if ((value != null))
					{
						value.T_per1s.Add(this);
						this._pastyp = value.IDType_ID;
					}
					else
					{
						this._pastyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_IDType");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Job_T_per1", Storage = "_T_Job", ThisKey = "job", OtherKey = "Job_No", IsForeignKey = true)]
		public T_Job T_Job
		{
			get
			{
				return this._T_Job.Entity;
			}
			set
			{
				T_Job previousValue = this._T_Job.Entity;
				if (((previousValue != value)
							|| (this._T_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Job.Entity = null;
						previousValue.T_per1s.Remove(this);
					}
					this._T_Job.Entity = value;
					if ((value != null))
					{
						value.T_per1s.Add(this);
						this._job = value.Job_No;
					}
					else
					{
						this._job = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Job");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_per1", Storage = "_T_Nationality", ThisKey = "nat", OtherKey = "Nation_No", IsForeignKey = true)]
		public T_Nationality T_Nationality
		{
			get
			{
				return this._T_Nationality.Entity;
			}
			set
			{
				T_Nationality previousValue = this._T_Nationality.Entity;
				if (((previousValue != value)
							|| (this._T_Nationality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Nationality.Entity = null;
						previousValue.T_per1s.Remove(this);
					}
					this._T_Nationality.Entity = value;
					if ((value != null))
					{
						value.T_per1s.Add(this);
						this._nat = value.Nation_No;
					}
					else
					{
						this._nat = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Nationality");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_per1", Storage = "_T_per", ThisKey = "perno", OtherKey = "perno", IsForeignKey = true)]
		public T_per T_per
		{
			get
			{
				return this._T_per.Entity;
			}
			set
			{
				T_per previousValue = this._T_per.Entity;
				if (((previousValue != value)
							|| (this._T_per.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_per.Entity = null;
						previousValue.T_per1s.Remove(this);
					}
					this._T_per.Entity = value;
					if ((value != null))
					{
						value.T_per1s.Add(this);
						this._perno = value.perno;
					}
					else
					{
						this._perno = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_per");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Pine")]
	public partial class T_Pine : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _id;

		private System.Nullable<int> _Pic_no;

		private string _Inv_ID;

		private System.Nullable<int> _X;

		private System.Nullable<int> _Y;

		private string _Note;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnidChanging(int value);
		partial void OnidChanged();
		partial void OnPic_noChanging(System.Nullable<int> value);
		partial void OnPic_noChanged();
		partial void OnInv_IDChanging(string value);
		partial void OnInv_IDChanged();
		partial void OnXChanging(System.Nullable<int> value);
		partial void OnXChanged();
		partial void OnYChanging(System.Nullable<int> value);
		partial void OnYChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_Pine()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pic_no", DbType = "Int")]
		public System.Nullable<int> Pic_no
		{
			get
			{
				return this._Pic_no;
			}
			set
			{
				if ((this._Pic_no != value))
				{
					this.OnPic_noChanging(value);
					this.SendPropertyChanging();
					this._Pic_no = value;
					this.SendPropertyChanged("Pic_no");
					this.OnPic_noChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Inv_ID", DbType = "VarChar(50)")]
		public string Inv_ID
		{
			get
			{
				return this._Inv_ID;
			}
			set
			{
				if ((this._Inv_ID != value))
				{
					this.OnInv_IDChanging(value);
					this.SendPropertyChanging();
					this._Inv_ID = value;
					this.SendPropertyChanged("Inv_ID");
					this.OnInv_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_X", DbType = "Int")]
		public System.Nullable<int> X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Y", DbType = "Int")]
		public System.Nullable<int> Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Premiums")]
	public partial class T_Premium : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Premiums_ID;

		private int _Premiums_No;

		private System.Nullable<int> _Advances_No;

		private string _PremiumsDate;

		private System.Nullable<double> _ValuePremiums;

		private System.Nullable<double> _Paying;

		private System.Nullable<bool> _IFState;

		private EntityRef<T_Advance> _T_Advance;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnPremiums_IDChanging(string value);
		partial void OnPremiums_IDChanged();
		partial void OnPremiums_NoChanging(int value);
		partial void OnPremiums_NoChanged();
		partial void OnAdvances_NoChanging(System.Nullable<int> value);
		partial void OnAdvances_NoChanged();
		partial void OnPremiumsDateChanging(string value);
		partial void OnPremiumsDateChanged();
		partial void OnValuePremiumsChanging(System.Nullable<double> value);
		partial void OnValuePremiumsChanged();
		partial void OnPayingChanging(System.Nullable<double> value);
		partial void OnPayingChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		#endregion

		public T_Premium()
		{
			this._T_Advance = default(EntityRef<T_Advance>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Premiums_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string Premiums_ID
		{
			get
			{
				return this._Premiums_ID;
			}
			set
			{
				if ((this._Premiums_ID != value))
				{
					this.OnPremiums_IDChanging(value);
					this.SendPropertyChanging();
					this._Premiums_ID = value;
					this.SendPropertyChanged("Premiums_ID");
					this.OnPremiums_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Premiums_No", DbType = "Int NOT NULL")]
		public int Premiums_No
		{
			get
			{
				return this._Premiums_No;
			}
			set
			{
				if ((this._Premiums_No != value))
				{
					this.OnPremiums_NoChanging(value);
					this.SendPropertyChanging();
					this._Premiums_No = value;
					this.SendPropertyChanged("Premiums_No");
					this.OnPremiums_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Advances_No", DbType = "Int")]
		public System.Nullable<int> Advances_No
		{
			get
			{
				return this._Advances_No;
			}
			set
			{
				if ((this._Advances_No != value))
				{
					if (this._T_Advance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvances_NoChanging(value);
					this.SendPropertyChanging();
					this._Advances_No = value;
					this.SendPropertyChanged("Advances_No");
					this.OnAdvances_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PremiumsDate", DbType = "VarChar(10)")]
		public string PremiumsDate
		{
			get
			{
				return this._PremiumsDate;
			}
			set
			{
				if ((this._PremiumsDate != value))
				{
					this.OnPremiumsDateChanging(value);
					this.SendPropertyChanging();
					this._PremiumsDate = value;
					this.SendPropertyChanged("PremiumsDate");
					this.OnPremiumsDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ValuePremiums", DbType = "Float")]
		public System.Nullable<double> ValuePremiums
		{
			get
			{
				return this._ValuePremiums;
			}
			set
			{
				if ((this._ValuePremiums != value))
				{
					this.OnValuePremiumsChanging(value);
					this.SendPropertyChanging();
					this._ValuePremiums = value;
					this.SendPropertyChanged("ValuePremiums");
					this.OnValuePremiumsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Paying", DbType = "Float")]
		public System.Nullable<double> Paying
		{
			get
			{
				return this._Paying;
			}
			set
			{
				if ((this._Paying != value))
				{
					this.OnPayingChanging(value);
					this.SendPropertyChanging();
					this._Paying = value;
					this.SendPropertyChanged("Paying");
					this.OnPayingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Advance_T_Premium", Storage = "_T_Advance", ThisKey = "Advances_No", OtherKey = "Advances_No", IsForeignKey = true)]
		public T_Advance T_Advance
		{
			get
			{
				return this._T_Advance.Entity;
			}
			set
			{
				T_Advance previousValue = this._T_Advance.Entity;
				if (((previousValue != value)
							|| (this._T_Advance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Advance.Entity = null;
						previousValue.T_Premiums.Remove(this);
					}
					this._T_Advance.Entity = value;
					if ((value != null))
					{
						value.T_Premiums.Add(this);
						this._Advances_No = value.Advances_No;
					}
					else
					{
						this._Advances_No = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Advance");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Project")]
	public partial class T_Project : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Project_ID;

		private int _Project_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private string _BossName;

		private string _Phone;

		private string _Fax;

		private EntitySet<T_AttendOperat> _T_AttendOperats;

		private EntitySet<T_Emp> _T_Emps;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnProject_IDChanging(string value);
		partial void OnProject_IDChanged();
		partial void OnProject_NoChanging(int value);
		partial void OnProject_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnBossNameChanging(string value);
		partial void OnBossNameChanged();
		partial void OnPhoneChanging(string value);
		partial void OnPhoneChanged();
		partial void OnFaxChanging(string value);
		partial void OnFaxChanged();
		#endregion

		public T_Project()
		{
			this._T_AttendOperats = new EntitySet<T_AttendOperat>(new Action<T_AttendOperat>(this.attach_T_AttendOperats), new Action<T_AttendOperat>(this.detach_T_AttendOperats));
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Project_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Project_ID
		{
			get
			{
				return this._Project_ID;
			}
			set
			{
				if ((this._Project_ID != value))
				{
					this.OnProject_IDChanging(value);
					this.SendPropertyChanging();
					this._Project_ID = value;
					this.SendPropertyChanged("Project_ID");
					this.OnProject_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Project_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Project_No
		{
			get
			{
				return this._Project_No;
			}
			set
			{
				if ((this._Project_No != value))
				{
					this.OnProject_NoChanging(value);
					this.SendPropertyChanging();
					this._Project_No = value;
					this.SendPropertyChanged("Project_No");
					this.OnProject_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossName", DbType = "VarChar(30)")]
		public string BossName
		{
			get
			{
				return this._BossName;
			}
			set
			{
				if ((this._BossName != value))
				{
					this.OnBossNameChanging(value);
					this.SendPropertyChanging();
					this._BossName = value;
					this.SendPropertyChanged("BossName");
					this.OnBossNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Phone", DbType = "VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Project_T_AttendOperat", Storage = "_T_AttendOperats", ThisKey = "Project_No", OtherKey = "ProjectNo")]
		public EntitySet<T_AttendOperat> T_AttendOperats
		{
			get
			{
				return this._T_AttendOperats;
			}
			set
			{
				this._T_AttendOperats.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Project_T_Emp", Storage = "_T_Emps", ThisKey = "Project_No", OtherKey = "ProjectNo")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_AttendOperats(T_AttendOperat entity)
		{
			this.SendPropertyChanging();
			entity.T_Project = this;
		}

		private void detach_T_AttendOperats(T_AttendOperat entity)
		{
			this.SendPropertyChanging();
			entity.T_Project = null;
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Project = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Project = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_QTYEXP")]
	public partial class T_QTYEXP : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _QtyExp_ID;

		private string _itmNo;

		private System.Nullable<int> _storeNo;

		private System.Nullable<double> _stkQty;

		private string _DatExper;

		private string _RunCod;

		private EntityRef<T_Item> _T_Item;

		private EntityRef<T_Store> _T_Store;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnQtyExp_IDChanging(int value);
		partial void OnQtyExp_IDChanged();
		partial void OnitmNoChanging(string value);
		partial void OnitmNoChanged();
		partial void OnstoreNoChanging(System.Nullable<int> value);
		partial void OnstoreNoChanged();
		partial void OnstkQtyChanging(System.Nullable<double> value);
		partial void OnstkQtyChanged();
		partial void OnDatExperChanging(string value);
		partial void OnDatExperChanged();
		partial void OnRunCodChanging(string value);
		partial void OnRunCodChanged();
		#endregion

		public T_QTYEXP()
		{
			this._T_Item = default(EntityRef<T_Item>);
			this._T_Store = default(EntityRef<T_Store>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QtyExp_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int QtyExp_ID
		{
			get
			{
				return this._QtyExp_ID;
			}
			set
			{
				if ((this._QtyExp_ID != value))
				{
					this.OnQtyExp_IDChanging(value);
					this.SendPropertyChanging();
					this._QtyExp_ID = value;
					this.SendPropertyChanged("QtyExp_ID");
					this.OnQtyExp_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_itmNo", DbType = "VarChar(50)")]
		public string itmNo
		{
			get
			{
				return this._itmNo;
			}
			set
			{
				if ((this._itmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitmNoChanging(value);
					this.SendPropertyChanging();
					this._itmNo = value;
					this.SendPropertyChanged("itmNo");
					this.OnitmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_storeNo", DbType = "Int")]
		public System.Nullable<int> storeNo
		{
			get
			{
				return this._storeNo;
			}
			set
			{
				if ((this._storeNo != value))
				{
					if (this._T_Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstoreNoChanging(value);
					this.SendPropertyChanging();
					this._storeNo = value;
					this.SendPropertyChanged("storeNo");
					this.OnstoreNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_stkQty", DbType = "Float")]
		public System.Nullable<double> stkQty
		{
			get
			{
				return this._stkQty;
			}
			set
			{
				if ((this._stkQty != value))
				{
					this.OnstkQtyChanging(value);
					this.SendPropertyChanging();
					this._stkQty = value;
					this.SendPropertyChanged("stkQty");
					this.OnstkQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DatExper", DbType = "VarChar(10)")]
		public string DatExper
		{
			get
			{
				return this._DatExper;
			}
			set
			{
				if ((this._DatExper != value))
				{
					this.OnDatExperChanging(value);
					this.SendPropertyChanging();
					this._DatExper = value;
					this.SendPropertyChanged("DatExper");
					this.OnDatExperChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RunCod", DbType = "VarChar(100)")]
		public string RunCod
		{
			get
			{
				return this._RunCod;
			}
			set
			{
				if ((this._RunCod != value))
				{
					this.OnRunCodChanging(value);
					this.SendPropertyChanging();
					this._RunCod = value;
					this.SendPropertyChanged("RunCod");
					this.OnRunCodChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_QTYEXP", Storage = "_T_Item", ThisKey = "itmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_QTYEXPs.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_QTYEXPs.Add(this);
						this._itmNo = value.Itm_No;
					}
					else
					{
						this._itmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_QTYEXP", Storage = "_T_Store", ThisKey = "storeNo", OtherKey = "Stor_ID", IsForeignKey = true)]
		public T_Store T_Store
		{
			get
			{
				return this._T_Store.Entity;
			}
			set
			{
				T_Store previousValue = this._T_Store.Entity;
				if (((previousValue != value)
							|| (this._T_Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Store.Entity = null;
						previousValue.T_QTYEXPs.Remove(this);
					}
					this._T_Store.Entity = value;
					if ((value != null))
					{
						value.T_QTYEXPs.Add(this);
						this._storeNo = value.Stor_ID;
					}
					else
					{
						this._storeNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Store");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Religion")]
	public partial class T_Religion : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Religion_ID;

		private int _Religion_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_Emp> _T_Emps;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnReligion_IDChanging(string value);
		partial void OnReligion_IDChanged();
		partial void OnReligion_NoChanging(int value);
		partial void OnReligion_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_Religion()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Religion_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Religion_ID
		{
			get
			{
				return this._Religion_ID;
			}
			set
			{
				if ((this._Religion_ID != value))
				{
					this.OnReligion_IDChanging(value);
					this.SendPropertyChanging();
					this._Religion_ID = value;
					this.SendPropertyChanged("Religion_ID");
					this.OnReligion_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Religion_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Religion_No
		{
			get
			{
				return this._Religion_No;
			}
			set
			{
				if ((this._Religion_No != value))
				{
					this.OnReligion_NoChanging(value);
					this.SendPropertyChanging();
					this._Religion_No = value;
					this.SendPropertyChanged("Religion_No");
					this.OnReligion_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(30)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Religion_T_Emp", Storage = "_T_Emps", ThisKey = "Religion_No", OtherKey = "Religion")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Religion = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Religion = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Reserv")]
	public partial class T_Reserv : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private int _ResrvNo;

		private string _Dat;

		private System.Nullable<int> _Rom;

		private string _PerNm;

		private string _Dt;

		private string _Tm;

		private string _vAmPm;

		private string _IdNo;

		private System.Nullable<int> _Nat;

		private string _Remark;

		private System.Nullable<int> _Sts;

		private string _Usr;

		private System.Nullable<int> _DayImport;

		private string _Dat2;

		private System.Nullable<int> _CompanyID;

		private System.Nullable<int> _romnoNew;

		private EntityRef<T_Nationality> _T_Nationality;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnResrvNoChanging(int value);
		partial void OnResrvNoChanged();
		partial void OnDatChanging(string value);
		partial void OnDatChanged();
		partial void OnRomChanging(System.Nullable<int> value);
		partial void OnRomChanged();
		partial void OnPerNmChanging(string value);
		partial void OnPerNmChanged();
		partial void OnDtChanging(string value);
		partial void OnDtChanged();
		partial void OnTmChanging(string value);
		partial void OnTmChanged();
		partial void OnvAmPmChanging(string value);
		partial void OnvAmPmChanged();
		partial void OnIdNoChanging(string value);
		partial void OnIdNoChanged();
		partial void OnNatChanging(System.Nullable<int> value);
		partial void OnNatChanged();
		partial void OnRemarkChanging(string value);
		partial void OnRemarkChanged();
		partial void OnStsChanging(System.Nullable<int> value);
		partial void OnStsChanged();
		partial void OnUsrChanging(string value);
		partial void OnUsrChanged();
		partial void OnDayImportChanging(System.Nullable<int> value);
		partial void OnDayImportChanged();
		partial void OnDat2Changing(string value);
		partial void OnDat2Changed();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnromnoNewChanging(System.Nullable<int> value);
		partial void OnromnoNewChanged();
		#endregion

		public T_Reserv()
		{
			this._T_Nationality = default(EntityRef<T_Nationality>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ResrvNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int ResrvNo
		{
			get
			{
				return this._ResrvNo;
			}
			set
			{
				if ((this._ResrvNo != value))
				{
					this.OnResrvNoChanging(value);
					this.SendPropertyChanging();
					this._ResrvNo = value;
					this.SendPropertyChanged("ResrvNo");
					this.OnResrvNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dat", DbType = "VarChar(10)")]
		public string Dat
		{
			get
			{
				return this._Dat;
			}
			set
			{
				if ((this._Dat != value))
				{
					this.OnDatChanging(value);
					this.SendPropertyChanging();
					this._Dat = value;
					this.SendPropertyChanged("Dat");
					this.OnDatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rom", DbType = "Int")]
		public System.Nullable<int> Rom
		{
			get
			{
				return this._Rom;
			}
			set
			{
				if ((this._Rom != value))
				{
					this.OnRomChanging(value);
					this.SendPropertyChanging();
					this._Rom = value;
					this.SendPropertyChanged("Rom");
					this.OnRomChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PerNm", DbType = "VarChar(150)")]
		public string PerNm
		{
			get
			{
				return this._PerNm;
			}
			set
			{
				if ((this._PerNm != value))
				{
					this.OnPerNmChanging(value);
					this.SendPropertyChanging();
					this._PerNm = value;
					this.SendPropertyChanged("PerNm");
					this.OnPerNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dt", DbType = "VarChar(10)")]
		public string Dt
		{
			get
			{
				return this._Dt;
			}
			set
			{
				if ((this._Dt != value))
				{
					this.OnDtChanging(value);
					this.SendPropertyChanging();
					this._Dt = value;
					this.SendPropertyChanged("Dt");
					this.OnDtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tm", DbType = "VarChar(11)")]
		public string Tm
		{
			get
			{
				return this._Tm;
			}
			set
			{
				if ((this._Tm != value))
				{
					this.OnTmChanging(value);
					this.SendPropertyChanging();
					this._Tm = value;
					this.SendPropertyChanged("Tm");
					this.OnTmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vAmPm", DbType = "VarChar(5)")]
		public string vAmPm
		{
			get
			{
				return this._vAmPm;
			}
			set
			{
				if ((this._vAmPm != value))
				{
					this.OnvAmPmChanging(value);
					this.SendPropertyChanging();
					this._vAmPm = value;
					this.SendPropertyChanged("vAmPm");
					this.OnvAmPmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdNo", DbType = "VarChar(25)")]
		public string IdNo
		{
			get
			{
				return this._IdNo;
			}
			set
			{
				if ((this._IdNo != value))
				{
					this.OnIdNoChanging(value);
					this.SendPropertyChanging();
					this._IdNo = value;
					this.SendPropertyChanged("IdNo");
					this.OnIdNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nat", DbType = "Int")]
		public System.Nullable<int> Nat
		{
			get
			{
				return this._Nat;
			}
			set
			{
				if ((this._Nat != value))
				{
					if (this._T_Nationality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNatChanging(value);
					this.SendPropertyChanging();
					this._Nat = value;
					this.SendPropertyChanged("Nat");
					this.OnNatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remark", DbType = "VarChar(300)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sts", DbType = "Int")]
		public System.Nullable<int> Sts
		{
			get
			{
				return this._Sts;
			}
			set
			{
				if ((this._Sts != value))
				{
					this.OnStsChanging(value);
					this.SendPropertyChanging();
					this._Sts = value;
					this.SendPropertyChanged("Sts");
					this.OnStsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr", DbType = "VarChar(100)")]
		public string Usr
		{
			get
			{
				return this._Usr;
			}
			set
			{
				if ((this._Usr != value))
				{
					this.OnUsrChanging(value);
					this.SendPropertyChanging();
					this._Usr = value;
					this.SendPropertyChanged("Usr");
					this.OnUsrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayImport", DbType = "Int")]
		public System.Nullable<int> DayImport
		{
			get
			{
				return this._DayImport;
			}
			set
			{
				if ((this._DayImport != value))
				{
					this.OnDayImportChanging(value);
					this.SendPropertyChanging();
					this._DayImport = value;
					this.SendPropertyChanged("DayImport");
					this.OnDayImportChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dat2", DbType = "VarChar(10)")]
		public string Dat2
		{
			get
			{
				return this._Dat2;
			}
			set
			{
				if ((this._Dat2 != value))
				{
					this.OnDat2Changing(value);
					this.SendPropertyChanging();
					this._Dat2 = value;
					this.SendPropertyChanged("Dat2");
					this.OnDat2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romnoNew", DbType = "Int")]
		public System.Nullable<int> romnoNew
		{
			get
			{
				return this._romnoNew;
			}
			set
			{
				if ((this._romnoNew != value))
				{
					this.OnromnoNewChanging(value);
					this.SendPropertyChanging();
					this._romnoNew = value;
					this.SendPropertyChanged("romnoNew");
					this.OnromnoNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_Reserv", Storage = "_T_Nationality", ThisKey = "Nat", OtherKey = "Nation_No", IsForeignKey = true)]
		public T_Nationality T_Nationality
		{
			get
			{
				return this._T_Nationality.Entity;
			}
			set
			{
				T_Nationality previousValue = this._T_Nationality.Entity;
				if (((previousValue != value)
							|| (this._T_Nationality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Nationality.Entity = null;
						previousValue.T_Reservs.Remove(this);
					}
					this._T_Nationality.Entity = value;
					if ((value != null))
					{
						value.T_Reservs.Add(this);
						this._Nat = value.Nation_No;
					}
					else
					{
						this._Nat = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Nationality");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Rewards")]
	public partial class T_Reward : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Reward_ID;

		private int _Reward_No;

		private string _RewardDate;

		private string _EmpID;

		private string _SalDate;

		private System.Nullable<double> _RewardValue;

		private string _Note;

		private System.Nullable<bool> _IFState;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_Emp> _T_Emp1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnReward_IDChanging(string value);
		partial void OnReward_IDChanged();
		partial void OnReward_NoChanging(int value);
		partial void OnReward_NoChanged();
		partial void OnRewardDateChanging(string value);
		partial void OnRewardDateChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnSalDateChanging(string value);
		partial void OnSalDateChanged();
		partial void OnRewardValueChanging(System.Nullable<double> value);
		partial void OnRewardValueChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		#endregion

		public T_Reward()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_Emp1 = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Reward_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Reward_ID
		{
			get
			{
				return this._Reward_ID;
			}
			set
			{
				if ((this._Reward_ID != value))
				{
					this.OnReward_IDChanging(value);
					this.SendPropertyChanging();
					this._Reward_ID = value;
					this.SendPropertyChanged("Reward_ID");
					this.OnReward_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Reward_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Reward_No
		{
			get
			{
				return this._Reward_No;
			}
			set
			{
				if ((this._Reward_No != value))
				{
					this.OnReward_NoChanging(value);
					this.SendPropertyChanging();
					this._Reward_No = value;
					this.SendPropertyChanged("Reward_No");
					this.OnReward_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RewardDate", DbType = "VarChar(10)")]
		public string RewardDate
		{
			get
			{
				return this._RewardDate;
			}
			set
			{
				if ((this._RewardDate != value))
				{
					this.OnRewardDateChanging(value);
					this.SendPropertyChanging();
					this._RewardDate = value;
					this.SendPropertyChanged("RewardDate");
					this.OnRewardDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if ((this._T_Emp.HasLoadedOrAssignedValue || this._T_Emp1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalDate", DbType = "VarChar(10)")]
		public string SalDate
		{
			get
			{
				return this._SalDate;
			}
			set
			{
				if ((this._SalDate != value))
				{
					this.OnSalDateChanging(value);
					this.SendPropertyChanging();
					this._SalDate = value;
					this.SendPropertyChanged("SalDate");
					this.OnSalDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RewardValue", DbType = "Float")]
		public System.Nullable<double> RewardValue
		{
			get
			{
				return this._RewardValue;
			}
			set
			{
				if ((this._RewardValue != value))
				{
					this.OnRewardValueChanging(value);
					this.SendPropertyChanging();
					this._RewardValue = value;
					this.SendPropertyChanged("RewardValue");
					this.OnRewardValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Reward", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Rewards.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Rewards.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Reward1", Storage = "_T_Emp1", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp1
		{
			get
			{
				return this._T_Emp1.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp1.Entity;
				if (((previousValue != value)
							|| (this._T_Emp1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp1.Entity = null;
						previousValue.T_Rewards1.Remove(this);
					}
					this._T_Emp1.Entity = value;
					if ((value != null))
					{
						value.T_Rewards1.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp1");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Rom")]
	public partial class T_Rom : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _romno;

		private System.Nullable<int> _flore;

		private System.Nullable<int> _ch;

		private System.Nullable<int> _state;

		private System.Nullable<int> _row;

		private System.Nullable<int> _col;

		private System.Nullable<int> _wcno;

		private System.Nullable<int> _wc;

		private System.Nullable<int> _perno;

		private System.Nullable<int> _bedno;

		private System.Nullable<int> _bed;

		private System.Nullable<int> _tv;

		private System.Nullable<int> _bl;

		private System.Nullable<int> _aline;

		private System.Nullable<int> _typ;

		private System.Nullable<int> _gropno;

		private System.Nullable<double> _price;

		private System.Nullable<int> _hed;

		private System.Nullable<int> _tax;

		private System.Nullable<int> _ser;

		private string _dt;

		private string _tm;

		private System.Nullable<double> _pri0;

		private System.Nullable<double> _pri1;

		private System.Nullable<double> _pri2;

		private System.Nullable<double> _pri3;

		private System.Nullable<double> _priM0;

		private System.Nullable<double> _priM1;

		private string _ShortDsc;

		private string _Numcounter;

		private System.Nullable<int> _CompanyID;

		private System.Nullable<int> _perno_Old;

		private System.Nullable<int> _Furnished;

		private string _AreaDetail;

		private System.Nullable<int> _RoomCount;

		private System.Nullable<int> _loungesCount;

		private System.Nullable<int> _kitchensCount;

		private EntityRef<T_Loc> _T_Loc;

		private EntityRef<T_per> _T_per;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnromnoChanging(int value);
		partial void OnromnoChanged();
		partial void OnfloreChanging(System.Nullable<int> value);
		partial void OnfloreChanged();
		partial void OnchChanging(System.Nullable<int> value);
		partial void OnchChanged();
		partial void OnstateChanging(System.Nullable<int> value);
		partial void OnstateChanged();
		partial void OnrowChanging(System.Nullable<int> value);
		partial void OnrowChanged();
		partial void OncolChanging(System.Nullable<int> value);
		partial void OncolChanged();
		partial void OnwcnoChanging(System.Nullable<int> value);
		partial void OnwcnoChanged();
		partial void OnwcChanging(System.Nullable<int> value);
		partial void OnwcChanged();
		partial void OnpernoChanging(System.Nullable<int> value);
		partial void OnpernoChanged();
		partial void OnbednoChanging(System.Nullable<int> value);
		partial void OnbednoChanged();
		partial void OnbedChanging(System.Nullable<int> value);
		partial void OnbedChanged();
		partial void OntvChanging(System.Nullable<int> value);
		partial void OntvChanged();
		partial void OnblChanging(System.Nullable<int> value);
		partial void OnblChanged();
		partial void OnalineChanging(System.Nullable<int> value);
		partial void OnalineChanged();
		partial void OntypChanging(System.Nullable<int> value);
		partial void OntypChanged();
		partial void OngropnoChanging(System.Nullable<int> value);
		partial void OngropnoChanged();
		partial void OnpriceChanging(System.Nullable<double> value);
		partial void OnpriceChanged();
		partial void OnhedChanging(System.Nullable<int> value);
		partial void OnhedChanged();
		partial void OntaxChanging(System.Nullable<int> value);
		partial void OntaxChanged();
		partial void OnserChanging(System.Nullable<int> value);
		partial void OnserChanged();
		partial void OndtChanging(string value);
		partial void OndtChanged();
		partial void OntmChanging(string value);
		partial void OntmChanged();
		partial void Onpri0Changing(System.Nullable<double> value);
		partial void Onpri0Changed();
		partial void Onpri1Changing(System.Nullable<double> value);
		partial void Onpri1Changed();
		partial void Onpri2Changing(System.Nullable<double> value);
		partial void Onpri2Changed();
		partial void Onpri3Changing(System.Nullable<double> value);
		partial void Onpri3Changed();
		partial void OnpriM0Changing(System.Nullable<double> value);
		partial void OnpriM0Changed();
		partial void OnpriM1Changing(System.Nullable<double> value);
		partial void OnpriM1Changed();
		partial void OnShortDscChanging(string value);
		partial void OnShortDscChanged();
		partial void OnNumcounterChanging(string value);
		partial void OnNumcounterChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void Onperno_OldChanging(System.Nullable<int> value);
		partial void Onperno_OldChanged();
		partial void OnFurnishedChanging(System.Nullable<int> value);
		partial void OnFurnishedChanged();
		partial void OnAreaDetailChanging(string value);
		partial void OnAreaDetailChanged();
		partial void OnRoomCountChanging(System.Nullable<int> value);
		partial void OnRoomCountChanged();
		partial void OnloungesCountChanging(System.Nullable<int> value);
		partial void OnloungesCountChanged();
		partial void OnkitchensCountChanging(System.Nullable<int> value);
		partial void OnkitchensCountChanged();
		#endregion

		public T_Rom()
		{
			this._T_Loc = default(EntityRef<T_Loc>);
			this._T_per = default(EntityRef<T_per>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romno", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int romno
		{
			get
			{
				return this._romno;
			}
			set
			{
				if ((this._romno != value))
				{
					this.OnromnoChanging(value);
					this.SendPropertyChanging();
					this._romno = value;
					this.SendPropertyChanged("romno");
					this.OnromnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_flore", DbType = "Int")]
		public System.Nullable<int> flore
		{
			get
			{
				return this._flore;
			}
			set
			{
				if ((this._flore != value))
				{
					this.OnfloreChanging(value);
					this.SendPropertyChanging();
					this._flore = value;
					this.SendPropertyChanged("flore");
					this.OnfloreChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ch", DbType = "Int")]
		public System.Nullable<int> ch
		{
			get
			{
				return this._ch;
			}
			set
			{
				if ((this._ch != value))
				{
					this.OnchChanging(value);
					this.SendPropertyChanging();
					this._ch = value;
					this.SendPropertyChanged("ch");
					this.OnchChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_state", DbType = "Int")]
		public System.Nullable<int> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_row", DbType = "Int")]
		public System.Nullable<int> row
		{
			get
			{
				return this._row;
			}
			set
			{
				if ((this._row != value))
				{
					this.OnrowChanging(value);
					this.SendPropertyChanging();
					this._row = value;
					this.SendPropertyChanged("row");
					this.OnrowChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col", DbType = "Int")]
		public System.Nullable<int> col
		{
			get
			{
				return this._col;
			}
			set
			{
				if ((this._col != value))
				{
					this.OncolChanging(value);
					this.SendPropertyChanging();
					this._col = value;
					this.SendPropertyChanged("col");
					this.OncolChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_wcno", DbType = "Int")]
		public System.Nullable<int> wcno
		{
			get
			{
				return this._wcno;
			}
			set
			{
				if ((this._wcno != value))
				{
					this.OnwcnoChanging(value);
					this.SendPropertyChanging();
					this._wcno = value;
					this.SendPropertyChanged("wcno");
					this.OnwcnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_wc", DbType = "Int")]
		public System.Nullable<int> wc
		{
			get
			{
				return this._wc;
			}
			set
			{
				if ((this._wc != value))
				{
					this.OnwcChanging(value);
					this.SendPropertyChanging();
					this._wc = value;
					this.SendPropertyChanged("wc");
					this.OnwcChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_perno", DbType = "Int")]
		public System.Nullable<int> perno
		{
			get
			{
				return this._perno;
			}
			set
			{
				if ((this._perno != value))
				{
					if (this._T_per.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpernoChanging(value);
					this.SendPropertyChanging();
					this._perno = value;
					this.SendPropertyChanged("perno");
					this.OnpernoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bedno", DbType = "Int")]
		public System.Nullable<int> bedno
		{
			get
			{
				return this._bedno;
			}
			set
			{
				if ((this._bedno != value))
				{
					this.OnbednoChanging(value);
					this.SendPropertyChanging();
					this._bedno = value;
					this.SendPropertyChanged("bedno");
					this.OnbednoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bed", DbType = "Int")]
		public System.Nullable<int> bed
		{
			get
			{
				return this._bed;
			}
			set
			{
				if ((this._bed != value))
				{
					this.OnbedChanging(value);
					this.SendPropertyChanging();
					this._bed = value;
					this.SendPropertyChanged("bed");
					this.OnbedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tv", DbType = "Int")]
		public System.Nullable<int> tv
		{
			get
			{
				return this._tv;
			}
			set
			{
				if ((this._tv != value))
				{
					this.OntvChanging(value);
					this.SendPropertyChanging();
					this._tv = value;
					this.SendPropertyChanged("tv");
					this.OntvChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bl", DbType = "Int")]
		public System.Nullable<int> bl
		{
			get
			{
				return this._bl;
			}
			set
			{
				if ((this._bl != value))
				{
					this.OnblChanging(value);
					this.SendPropertyChanging();
					this._bl = value;
					this.SendPropertyChanged("bl");
					this.OnblChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_aline", DbType = "Int")]
		public System.Nullable<int> aline
		{
			get
			{
				return this._aline;
			}
			set
			{
				if ((this._aline != value))
				{
					if (this._T_Loc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnalineChanging(value);
					this.SendPropertyChanging();
					this._aline = value;
					this.SendPropertyChanged("aline");
					this.OnalineChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_typ", DbType = "Int")]
		public System.Nullable<int> typ
		{
			get
			{
				return this._typ;
			}
			set
			{
				if ((this._typ != value))
				{
					this.OntypChanging(value);
					this.SendPropertyChanging();
					this._typ = value;
					this.SendPropertyChanged("typ");
					this.OntypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gropno", DbType = "Int")]
		public System.Nullable<int> gropno
		{
			get
			{
				return this._gropno;
			}
			set
			{
				if ((this._gropno != value))
				{
					this.OngropnoChanging(value);
					this.SendPropertyChanging();
					this._gropno = value;
					this.SendPropertyChanged("gropno");
					this.OngropnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_price", DbType = "Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hed", DbType = "Int")]
		public System.Nullable<int> hed
		{
			get
			{
				return this._hed;
			}
			set
			{
				if ((this._hed != value))
				{
					this.OnhedChanging(value);
					this.SendPropertyChanging();
					this._hed = value;
					this.SendPropertyChanged("hed");
					this.OnhedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tax", DbType = "Int")]
		public System.Nullable<int> tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ser", DbType = "Int")]
		public System.Nullable<int> ser
		{
			get
			{
				return this._ser;
			}
			set
			{
				if ((this._ser != value))
				{
					this.OnserChanging(value);
					this.SendPropertyChanging();
					this._ser = value;
					this.SendPropertyChanged("ser");
					this.OnserChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt", DbType = "VarChar(10)")]
		public string dt
		{
			get
			{
				return this._dt;
			}
			set
			{
				if ((this._dt != value))
				{
					this.OndtChanging(value);
					this.SendPropertyChanging();
					this._dt = value;
					this.SendPropertyChanged("dt");
					this.OndtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tm", DbType = "VarChar(11)")]
		public string tm
		{
			get
			{
				return this._tm;
			}
			set
			{
				if ((this._tm != value))
				{
					this.OntmChanging(value);
					this.SendPropertyChanging();
					this._tm = value;
					this.SendPropertyChanged("tm");
					this.OntmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pri0", DbType = "Float")]
		public System.Nullable<double> pri0
		{
			get
			{
				return this._pri0;
			}
			set
			{
				if ((this._pri0 != value))
				{
					this.Onpri0Changing(value);
					this.SendPropertyChanging();
					this._pri0 = value;
					this.SendPropertyChanged("pri0");
					this.Onpri0Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pri1", DbType = "Float")]
		public System.Nullable<double> pri1
		{
			get
			{
				return this._pri1;
			}
			set
			{
				if ((this._pri1 != value))
				{
					this.Onpri1Changing(value);
					this.SendPropertyChanging();
					this._pri1 = value;
					this.SendPropertyChanged("pri1");
					this.Onpri1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pri2", DbType = "Float")]
		public System.Nullable<double> pri2
		{
			get
			{
				return this._pri2;
			}
			set
			{
				if ((this._pri2 != value))
				{
					this.Onpri2Changing(value);
					this.SendPropertyChanging();
					this._pri2 = value;
					this.SendPropertyChanged("pri2");
					this.Onpri2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pri3", DbType = "Float")]
		public System.Nullable<double> pri3
		{
			get
			{
				return this._pri3;
			}
			set
			{
				if ((this._pri3 != value))
				{
					this.Onpri3Changing(value);
					this.SendPropertyChanging();
					this._pri3 = value;
					this.SendPropertyChanged("pri3");
					this.Onpri3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_priM0", DbType = "Float")]
		public System.Nullable<double> priM0
		{
			get
			{
				return this._priM0;
			}
			set
			{
				if ((this._priM0 != value))
				{
					this.OnpriM0Changing(value);
					this.SendPropertyChanging();
					this._priM0 = value;
					this.SendPropertyChanged("priM0");
					this.OnpriM0Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_priM1", DbType = "Float")]
		public System.Nullable<double> priM1
		{
			get
			{
				return this._priM1;
			}
			set
			{
				if ((this._priM1 != value))
				{
					this.OnpriM1Changing(value);
					this.SendPropertyChanging();
					this._priM1 = value;
					this.SendPropertyChanged("priM1");
					this.OnpriM1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShortDsc", DbType = "VarChar(50)")]
		public string ShortDsc
		{
			get
			{
				return this._ShortDsc;
			}
			set
			{
				if ((this._ShortDsc != value))
				{
					this.OnShortDscChanging(value);
					this.SendPropertyChanging();
					this._ShortDsc = value;
					this.SendPropertyChanged("ShortDsc");
					this.OnShortDscChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Numcounter", DbType = "VarChar(50)")]
		public string Numcounter
		{
			get
			{
				return this._Numcounter;
			}
			set
			{
				if ((this._Numcounter != value))
				{
					this.OnNumcounterChanging(value);
					this.SendPropertyChanging();
					this._Numcounter = value;
					this.SendPropertyChanged("Numcounter");
					this.OnNumcounterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_perno_Old", DbType = "Int")]
		public System.Nullable<int> perno_Old
		{
			get
			{
				return this._perno_Old;
			}
			set
			{
				if ((this._perno_Old != value))
				{
					this.Onperno_OldChanging(value);
					this.SendPropertyChanging();
					this._perno_Old = value;
					this.SendPropertyChanged("perno_Old");
					this.Onperno_OldChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Furnished", DbType = "Int")]
		public System.Nullable<int> Furnished
		{
			get
			{
				return this._Furnished;
			}
			set
			{
				if ((this._Furnished != value))
				{
					this.OnFurnishedChanging(value);
					this.SendPropertyChanging();
					this._Furnished = value;
					this.SendPropertyChanged("Furnished");
					this.OnFurnishedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AreaDetail", DbType = "VarChar(250)")]
		public string AreaDetail
		{
			get
			{
				return this._AreaDetail;
			}
			set
			{
				if ((this._AreaDetail != value))
				{
					this.OnAreaDetailChanging(value);
					this.SendPropertyChanging();
					this._AreaDetail = value;
					this.SendPropertyChanged("AreaDetail");
					this.OnAreaDetailChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RoomCount", DbType = "Int")]
		public System.Nullable<int> RoomCount
		{
			get
			{
				return this._RoomCount;
			}
			set
			{
				if ((this._RoomCount != value))
				{
					this.OnRoomCountChanging(value);
					this.SendPropertyChanging();
					this._RoomCount = value;
					this.SendPropertyChanged("RoomCount");
					this.OnRoomCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_loungesCount", DbType = "Int")]
		public System.Nullable<int> loungesCount
		{
			get
			{
				return this._loungesCount;
			}
			set
			{
				if ((this._loungesCount != value))
				{
					this.OnloungesCountChanging(value);
					this.SendPropertyChanging();
					this._loungesCount = value;
					this.SendPropertyChanged("loungesCount");
					this.OnloungesCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_kitchensCount", DbType = "Int")]
		public System.Nullable<int> kitchensCount
		{
			get
			{
				return this._kitchensCount;
			}
			set
			{
				if ((this._kitchensCount != value))
				{
					this.OnkitchensCountChanging(value);
					this.SendPropertyChanging();
					this._kitchensCount = value;
					this.SendPropertyChanged("kitchensCount");
					this.OnkitchensCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Loc_T_Rom", Storage = "_T_Loc", ThisKey = "aline", OtherKey = "Loc_ID", IsForeignKey = true)]
		public T_Loc T_Loc
		{
			get
			{
				return this._T_Loc.Entity;
			}
			set
			{
				T_Loc previousValue = this._T_Loc.Entity;
				if (((previousValue != value)
							|| (this._T_Loc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Loc.Entity = null;
						previousValue.T_Roms.Remove(this);
					}
					this._T_Loc.Entity = value;
					if ((value != null))
					{
						value.T_Roms.Add(this);
						this._aline = value.Loc_ID;
					}
					else
					{
						this._aline = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Loc");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_Rom", Storage = "_T_per", ThisKey = "perno", OtherKey = "perno", IsForeignKey = true)]
		public T_per T_per
		{
			get
			{
				return this._T_per.Entity;
			}
			set
			{
				T_per previousValue = this._T_per.Entity;
				if (((previousValue != value)
							|| (this._T_per.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_per.Entity = null;
						previousValue.T_Roms.Remove(this);
					}
					this._T_per.Entity = value;
					if ((value != null))
					{
						value.T_Roms.Add(this);
						this._perno = value.perno;
					}
					else
					{
						this._perno = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_per");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_RomChart")]
	public partial class T_RomChart : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _FName;

		private string _FNameE;

		private System.Nullable<int> _col1;

		private System.Nullable<int> _col2;

		private System.Nullable<int> _col3;

		private System.Nullable<int> _col4;

		private System.Nullable<int> _col5;

		private System.Nullable<int> _col6;

		private System.Nullable<int> _col7;

		private System.Nullable<int> _col8;

		private System.Nullable<int> _col9;

		private System.Nullable<int> _col10;

		private System.Nullable<int> _col11;

		private System.Nullable<int> _col12;

		private System.Nullable<int> _col13;

		private System.Nullable<int> _col14;

		private System.Nullable<int> _col15;

		private System.Nullable<int> _col16;

		private System.Nullable<int> _col17;

		private System.Nullable<int> _col18;

		private System.Nullable<int> _col19;

		private System.Nullable<int> _col20;

		private System.Nullable<int> _col21;

		private System.Nullable<int> _col22;

		private System.Nullable<int> _col23;

		private System.Nullable<int> _col24;

		private System.Nullable<int> _col25;

		private System.Nullable<int> _col26;

		private System.Nullable<int> _col27;

		private System.Nullable<int> _col28;

		private System.Nullable<int> _col29;

		private System.Nullable<int> _col30;

		private System.Nullable<int> _col31;

		private System.Nullable<int> _col32;

		private System.Nullable<int> _col33;

		private System.Nullable<int> _col34;

		private System.Nullable<int> _col35;

		private System.Nullable<int> _col36;

		private System.Nullable<int> _col37;

		private System.Nullable<int> _col38;

		private System.Nullable<int> _col39;

		private System.Nullable<int> _col40;

		private System.Nullable<int> _col41;

		private System.Nullable<int> _col42;

		private System.Nullable<int> _col43;

		private System.Nullable<int> _col44;

		private System.Nullable<int> _col45;

		private System.Nullable<int> _col46;

		private System.Nullable<int> _col47;

		private System.Nullable<int> _col48;

		private System.Nullable<int> _col49;

		private System.Nullable<int> _col50;

		private System.Nullable<int> _col51;

		private System.Nullable<int> _col52;

		private System.Nullable<int> _col53;

		private System.Nullable<int> _col54;

		private System.Nullable<int> _col55;

		private System.Nullable<int> _col56;

		private System.Nullable<int> _col57;

		private System.Nullable<int> _col58;

		private System.Nullable<int> _col59;

		private System.Nullable<int> _col60;

		private System.Nullable<int> _col61;

		private System.Nullable<int> _col62;

		private System.Nullable<int> _col63;

		private System.Nullable<int> _col64;

		private System.Nullable<int> _col65;

		private System.Nullable<int> _col66;

		private System.Nullable<int> _col67;

		private System.Nullable<int> _col68;

		private System.Nullable<int> _col69;

		private System.Nullable<int> _col70;

		private System.Nullable<int> _col71;

		private System.Nullable<int> _col72;

		private System.Nullable<int> _col73;

		private System.Nullable<int> _col74;

		private System.Nullable<int> _col75;

		private System.Nullable<int> _col76;

		private System.Nullable<int> _col77;

		private System.Nullable<int> _col78;

		private System.Nullable<int> _col79;

		private System.Nullable<int> _col80;

		private System.Nullable<int> _col81;

		private System.Nullable<int> _col82;

		private System.Nullable<int> _col83;

		private System.Nullable<int> _col84;

		private System.Nullable<int> _col85;

		private System.Nullable<int> _col86;

		private System.Nullable<int> _col87;

		private System.Nullable<int> _col88;

		private System.Nullable<int> _col89;

		private System.Nullable<int> _col90;

		private System.Nullable<int> _col91;

		private System.Nullable<int> _col92;

		private System.Nullable<int> _col93;

		private System.Nullable<int> _col94;

		private System.Nullable<int> _col95;

		private System.Nullable<int> _col96;

		private System.Nullable<int> _col97;

		private System.Nullable<int> _col98;

		private System.Nullable<int> _col99;

		private System.Nullable<int> _col100;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnFNameChanging(string value);
		partial void OnFNameChanged();
		partial void OnFNameEChanging(string value);
		partial void OnFNameEChanged();
		partial void Oncol1Changing(System.Nullable<int> value);
		partial void Oncol1Changed();
		partial void Oncol2Changing(System.Nullable<int> value);
		partial void Oncol2Changed();
		partial void Oncol3Changing(System.Nullable<int> value);
		partial void Oncol3Changed();
		partial void Oncol4Changing(System.Nullable<int> value);
		partial void Oncol4Changed();
		partial void Oncol5Changing(System.Nullable<int> value);
		partial void Oncol5Changed();
		partial void Oncol6Changing(System.Nullable<int> value);
		partial void Oncol6Changed();
		partial void Oncol7Changing(System.Nullable<int> value);
		partial void Oncol7Changed();
		partial void Oncol8Changing(System.Nullable<int> value);
		partial void Oncol8Changed();
		partial void Oncol9Changing(System.Nullable<int> value);
		partial void Oncol9Changed();
		partial void Oncol10Changing(System.Nullable<int> value);
		partial void Oncol10Changed();
		partial void Oncol11Changing(System.Nullable<int> value);
		partial void Oncol11Changed();
		partial void Oncol12Changing(System.Nullable<int> value);
		partial void Oncol12Changed();
		partial void Oncol13Changing(System.Nullable<int> value);
		partial void Oncol13Changed();
		partial void Oncol14Changing(System.Nullable<int> value);
		partial void Oncol14Changed();
		partial void Oncol15Changing(System.Nullable<int> value);
		partial void Oncol15Changed();
		partial void Oncol16Changing(System.Nullable<int> value);
		partial void Oncol16Changed();
		partial void Oncol17Changing(System.Nullable<int> value);
		partial void Oncol17Changed();
		partial void Oncol18Changing(System.Nullable<int> value);
		partial void Oncol18Changed();
		partial void Oncol19Changing(System.Nullable<int> value);
		partial void Oncol19Changed();
		partial void Oncol20Changing(System.Nullable<int> value);
		partial void Oncol20Changed();
		partial void Oncol21Changing(System.Nullable<int> value);
		partial void Oncol21Changed();
		partial void Oncol22Changing(System.Nullable<int> value);
		partial void Oncol22Changed();
		partial void Oncol23Changing(System.Nullable<int> value);
		partial void Oncol23Changed();
		partial void Oncol24Changing(System.Nullable<int> value);
		partial void Oncol24Changed();
		partial void Oncol25Changing(System.Nullable<int> value);
		partial void Oncol25Changed();
		partial void Oncol26Changing(System.Nullable<int> value);
		partial void Oncol26Changed();
		partial void Oncol27Changing(System.Nullable<int> value);
		partial void Oncol27Changed();
		partial void Oncol28Changing(System.Nullable<int> value);
		partial void Oncol28Changed();
		partial void Oncol29Changing(System.Nullable<int> value);
		partial void Oncol29Changed();
		partial void Oncol30Changing(System.Nullable<int> value);
		partial void Oncol30Changed();
		partial void Oncol31Changing(System.Nullable<int> value);
		partial void Oncol31Changed();
		partial void Oncol32Changing(System.Nullable<int> value);
		partial void Oncol32Changed();
		partial void Oncol33Changing(System.Nullable<int> value);
		partial void Oncol33Changed();
		partial void Oncol34Changing(System.Nullable<int> value);
		partial void Oncol34Changed();
		partial void Oncol35Changing(System.Nullable<int> value);
		partial void Oncol35Changed();
		partial void Oncol36Changing(System.Nullable<int> value);
		partial void Oncol36Changed();
		partial void Oncol37Changing(System.Nullable<int> value);
		partial void Oncol37Changed();
		partial void Oncol38Changing(System.Nullable<int> value);
		partial void Oncol38Changed();
		partial void Oncol39Changing(System.Nullable<int> value);
		partial void Oncol39Changed();
		partial void Oncol40Changing(System.Nullable<int> value);
		partial void Oncol40Changed();
		partial void Oncol41Changing(System.Nullable<int> value);
		partial void Oncol41Changed();
		partial void Oncol42Changing(System.Nullable<int> value);
		partial void Oncol42Changed();
		partial void Oncol43Changing(System.Nullable<int> value);
		partial void Oncol43Changed();
		partial void Oncol44Changing(System.Nullable<int> value);
		partial void Oncol44Changed();
		partial void Oncol45Changing(System.Nullable<int> value);
		partial void Oncol45Changed();
		partial void Oncol46Changing(System.Nullable<int> value);
		partial void Oncol46Changed();
		partial void Oncol47Changing(System.Nullable<int> value);
		partial void Oncol47Changed();
		partial void Oncol48Changing(System.Nullable<int> value);
		partial void Oncol48Changed();
		partial void Oncol49Changing(System.Nullable<int> value);
		partial void Oncol49Changed();
		partial void Oncol50Changing(System.Nullable<int> value);
		partial void Oncol50Changed();
		partial void Oncol51Changing(System.Nullable<int> value);
		partial void Oncol51Changed();
		partial void Oncol52Changing(System.Nullable<int> value);
		partial void Oncol52Changed();
		partial void Oncol53Changing(System.Nullable<int> value);
		partial void Oncol53Changed();
		partial void Oncol54Changing(System.Nullable<int> value);
		partial void Oncol54Changed();
		partial void Oncol55Changing(System.Nullable<int> value);
		partial void Oncol55Changed();
		partial void Oncol56Changing(System.Nullable<int> value);
		partial void Oncol56Changed();
		partial void Oncol57Changing(System.Nullable<int> value);
		partial void Oncol57Changed();
		partial void Oncol58Changing(System.Nullable<int> value);
		partial void Oncol58Changed();
		partial void Oncol59Changing(System.Nullable<int> value);
		partial void Oncol59Changed();
		partial void Oncol60Changing(System.Nullable<int> value);
		partial void Oncol60Changed();
		partial void Oncol61Changing(System.Nullable<int> value);
		partial void Oncol61Changed();
		partial void Oncol62Changing(System.Nullable<int> value);
		partial void Oncol62Changed();
		partial void Oncol63Changing(System.Nullable<int> value);
		partial void Oncol63Changed();
		partial void Oncol64Changing(System.Nullable<int> value);
		partial void Oncol64Changed();
		partial void Oncol65Changing(System.Nullable<int> value);
		partial void Oncol65Changed();
		partial void Oncol66Changing(System.Nullable<int> value);
		partial void Oncol66Changed();
		partial void Oncol67Changing(System.Nullable<int> value);
		partial void Oncol67Changed();
		partial void Oncol68Changing(System.Nullable<int> value);
		partial void Oncol68Changed();
		partial void Oncol69Changing(System.Nullable<int> value);
		partial void Oncol69Changed();
		partial void Oncol70Changing(System.Nullable<int> value);
		partial void Oncol70Changed();
		partial void Oncol71Changing(System.Nullable<int> value);
		partial void Oncol71Changed();
		partial void Oncol72Changing(System.Nullable<int> value);
		partial void Oncol72Changed();
		partial void Oncol73Changing(System.Nullable<int> value);
		partial void Oncol73Changed();
		partial void Oncol74Changing(System.Nullable<int> value);
		partial void Oncol74Changed();
		partial void Oncol75Changing(System.Nullable<int> value);
		partial void Oncol75Changed();
		partial void Oncol76Changing(System.Nullable<int> value);
		partial void Oncol76Changed();
		partial void Oncol77Changing(System.Nullable<int> value);
		partial void Oncol77Changed();
		partial void Oncol78Changing(System.Nullable<int> value);
		partial void Oncol78Changed();
		partial void Oncol79Changing(System.Nullable<int> value);
		partial void Oncol79Changed();
		partial void Oncol80Changing(System.Nullable<int> value);
		partial void Oncol80Changed();
		partial void Oncol81Changing(System.Nullable<int> value);
		partial void Oncol81Changed();
		partial void Oncol82Changing(System.Nullable<int> value);
		partial void Oncol82Changed();
		partial void Oncol83Changing(System.Nullable<int> value);
		partial void Oncol83Changed();
		partial void Oncol84Changing(System.Nullable<int> value);
		partial void Oncol84Changed();
		partial void Oncol85Changing(System.Nullable<int> value);
		partial void Oncol85Changed();
		partial void Oncol86Changing(System.Nullable<int> value);
		partial void Oncol86Changed();
		partial void Oncol87Changing(System.Nullable<int> value);
		partial void Oncol87Changed();
		partial void Oncol88Changing(System.Nullable<int> value);
		partial void Oncol88Changed();
		partial void Oncol89Changing(System.Nullable<int> value);
		partial void Oncol89Changed();
		partial void Oncol90Changing(System.Nullable<int> value);
		partial void Oncol90Changed();
		partial void Oncol91Changing(System.Nullable<int> value);
		partial void Oncol91Changed();
		partial void Oncol92Changing(System.Nullable<int> value);
		partial void Oncol92Changed();
		partial void Oncol93Changing(System.Nullable<int> value);
		partial void Oncol93Changed();
		partial void Oncol94Changing(System.Nullable<int> value);
		partial void Oncol94Changed();
		partial void Oncol95Changing(System.Nullable<int> value);
		partial void Oncol95Changed();
		partial void Oncol96Changing(System.Nullable<int> value);
		partial void Oncol96Changed();
		partial void Oncol97Changing(System.Nullable<int> value);
		partial void Oncol97Changed();
		partial void Oncol98Changing(System.Nullable<int> value);
		partial void Oncol98Changed();
		partial void Oncol99Changing(System.Nullable<int> value);
		partial void Oncol99Changed();
		partial void Oncol100Changing(System.Nullable<int> value);
		partial void Oncol100Changed();
		#endregion

		public T_RomChart()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FName", DbType = "VarChar(100)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FNameE", DbType = "VarChar(100)")]
		public string FNameE
		{
			get
			{
				return this._FNameE;
			}
			set
			{
				if ((this._FNameE != value))
				{
					this.OnFNameEChanging(value);
					this.SendPropertyChanging();
					this._FNameE = value;
					this.SendPropertyChanged("FNameE");
					this.OnFNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col1", DbType = "Int")]
		public System.Nullable<int> col1
		{
			get
			{
				return this._col1;
			}
			set
			{
				if ((this._col1 != value))
				{
					this.Oncol1Changing(value);
					this.SendPropertyChanging();
					this._col1 = value;
					this.SendPropertyChanged("col1");
					this.Oncol1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col2", DbType = "Int")]
		public System.Nullable<int> col2
		{
			get
			{
				return this._col2;
			}
			set
			{
				if ((this._col2 != value))
				{
					this.Oncol2Changing(value);
					this.SendPropertyChanging();
					this._col2 = value;
					this.SendPropertyChanged("col2");
					this.Oncol2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col3", DbType = "Int")]
		public System.Nullable<int> col3
		{
			get
			{
				return this._col3;
			}
			set
			{
				if ((this._col3 != value))
				{
					this.Oncol3Changing(value);
					this.SendPropertyChanging();
					this._col3 = value;
					this.SendPropertyChanged("col3");
					this.Oncol3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col4", DbType = "Int")]
		public System.Nullable<int> col4
		{
			get
			{
				return this._col4;
			}
			set
			{
				if ((this._col4 != value))
				{
					this.Oncol4Changing(value);
					this.SendPropertyChanging();
					this._col4 = value;
					this.SendPropertyChanged("col4");
					this.Oncol4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col5", DbType = "Int")]
		public System.Nullable<int> col5
		{
			get
			{
				return this._col5;
			}
			set
			{
				if ((this._col5 != value))
				{
					this.Oncol5Changing(value);
					this.SendPropertyChanging();
					this._col5 = value;
					this.SendPropertyChanged("col5");
					this.Oncol5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col6", DbType = "Int")]
		public System.Nullable<int> col6
		{
			get
			{
				return this._col6;
			}
			set
			{
				if ((this._col6 != value))
				{
					this.Oncol6Changing(value);
					this.SendPropertyChanging();
					this._col6 = value;
					this.SendPropertyChanged("col6");
					this.Oncol6Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col7", DbType = "Int")]
		public System.Nullable<int> col7
		{
			get
			{
				return this._col7;
			}
			set
			{
				if ((this._col7 != value))
				{
					this.Oncol7Changing(value);
					this.SendPropertyChanging();
					this._col7 = value;
					this.SendPropertyChanged("col7");
					this.Oncol7Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col8", DbType = "Int")]
		public System.Nullable<int> col8
		{
			get
			{
				return this._col8;
			}
			set
			{
				if ((this._col8 != value))
				{
					this.Oncol8Changing(value);
					this.SendPropertyChanging();
					this._col8 = value;
					this.SendPropertyChanged("col8");
					this.Oncol8Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col9", DbType = "Int")]
		public System.Nullable<int> col9
		{
			get
			{
				return this._col9;
			}
			set
			{
				if ((this._col9 != value))
				{
					this.Oncol9Changing(value);
					this.SendPropertyChanging();
					this._col9 = value;
					this.SendPropertyChanged("col9");
					this.Oncol9Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col10", DbType = "Int")]
		public System.Nullable<int> col10
		{
			get
			{
				return this._col10;
			}
			set
			{
				if ((this._col10 != value))
				{
					this.Oncol10Changing(value);
					this.SendPropertyChanging();
					this._col10 = value;
					this.SendPropertyChanged("col10");
					this.Oncol10Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col11", DbType = "Int")]
		public System.Nullable<int> col11
		{
			get
			{
				return this._col11;
			}
			set
			{
				if ((this._col11 != value))
				{
					this.Oncol11Changing(value);
					this.SendPropertyChanging();
					this._col11 = value;
					this.SendPropertyChanged("col11");
					this.Oncol11Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col12", DbType = "Int")]
		public System.Nullable<int> col12
		{
			get
			{
				return this._col12;
			}
			set
			{
				if ((this._col12 != value))
				{
					this.Oncol12Changing(value);
					this.SendPropertyChanging();
					this._col12 = value;
					this.SendPropertyChanged("col12");
					this.Oncol12Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col13", DbType = "Int")]
		public System.Nullable<int> col13
		{
			get
			{
				return this._col13;
			}
			set
			{
				if ((this._col13 != value))
				{
					this.Oncol13Changing(value);
					this.SendPropertyChanging();
					this._col13 = value;
					this.SendPropertyChanged("col13");
					this.Oncol13Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col14", DbType = "Int")]
		public System.Nullable<int> col14
		{
			get
			{
				return this._col14;
			}
			set
			{
				if ((this._col14 != value))
				{
					this.Oncol14Changing(value);
					this.SendPropertyChanging();
					this._col14 = value;
					this.SendPropertyChanged("col14");
					this.Oncol14Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col15", DbType = "Int")]
		public System.Nullable<int> col15
		{
			get
			{
				return this._col15;
			}
			set
			{
				if ((this._col15 != value))
				{
					this.Oncol15Changing(value);
					this.SendPropertyChanging();
					this._col15 = value;
					this.SendPropertyChanged("col15");
					this.Oncol15Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col16", DbType = "Int")]
		public System.Nullable<int> col16
		{
			get
			{
				return this._col16;
			}
			set
			{
				if ((this._col16 != value))
				{
					this.Oncol16Changing(value);
					this.SendPropertyChanging();
					this._col16 = value;
					this.SendPropertyChanged("col16");
					this.Oncol16Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col17", DbType = "Int")]
		public System.Nullable<int> col17
		{
			get
			{
				return this._col17;
			}
			set
			{
				if ((this._col17 != value))
				{
					this.Oncol17Changing(value);
					this.SendPropertyChanging();
					this._col17 = value;
					this.SendPropertyChanged("col17");
					this.Oncol17Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col18", DbType = "Int")]
		public System.Nullable<int> col18
		{
			get
			{
				return this._col18;
			}
			set
			{
				if ((this._col18 != value))
				{
					this.Oncol18Changing(value);
					this.SendPropertyChanging();
					this._col18 = value;
					this.SendPropertyChanged("col18");
					this.Oncol18Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col19", DbType = "Int")]
		public System.Nullable<int> col19
		{
			get
			{
				return this._col19;
			}
			set
			{
				if ((this._col19 != value))
				{
					this.Oncol19Changing(value);
					this.SendPropertyChanging();
					this._col19 = value;
					this.SendPropertyChanged("col19");
					this.Oncol19Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col20", DbType = "Int")]
		public System.Nullable<int> col20
		{
			get
			{
				return this._col20;
			}
			set
			{
				if ((this._col20 != value))
				{
					this.Oncol20Changing(value);
					this.SendPropertyChanging();
					this._col20 = value;
					this.SendPropertyChanged("col20");
					this.Oncol20Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col21", DbType = "Int")]
		public System.Nullable<int> col21
		{
			get
			{
				return this._col21;
			}
			set
			{
				if ((this._col21 != value))
				{
					this.Oncol21Changing(value);
					this.SendPropertyChanging();
					this._col21 = value;
					this.SendPropertyChanged("col21");
					this.Oncol21Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col22", DbType = "Int")]
		public System.Nullable<int> col22
		{
			get
			{
				return this._col22;
			}
			set
			{
				if ((this._col22 != value))
				{
					this.Oncol22Changing(value);
					this.SendPropertyChanging();
					this._col22 = value;
					this.SendPropertyChanged("col22");
					this.Oncol22Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col23", DbType = "Int")]
		public System.Nullable<int> col23
		{
			get
			{
				return this._col23;
			}
			set
			{
				if ((this._col23 != value))
				{
					this.Oncol23Changing(value);
					this.SendPropertyChanging();
					this._col23 = value;
					this.SendPropertyChanged("col23");
					this.Oncol23Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col24", DbType = "Int")]
		public System.Nullable<int> col24
		{
			get
			{
				return this._col24;
			}
			set
			{
				if ((this._col24 != value))
				{
					this.Oncol24Changing(value);
					this.SendPropertyChanging();
					this._col24 = value;
					this.SendPropertyChanged("col24");
					this.Oncol24Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col25", DbType = "Int")]
		public System.Nullable<int> col25
		{
			get
			{
				return this._col25;
			}
			set
			{
				if ((this._col25 != value))
				{
					this.Oncol25Changing(value);
					this.SendPropertyChanging();
					this._col25 = value;
					this.SendPropertyChanged("col25");
					this.Oncol25Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col26", DbType = "Int")]
		public System.Nullable<int> col26
		{
			get
			{
				return this._col26;
			}
			set
			{
				if ((this._col26 != value))
				{
					this.Oncol26Changing(value);
					this.SendPropertyChanging();
					this._col26 = value;
					this.SendPropertyChanged("col26");
					this.Oncol26Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col27", DbType = "Int")]
		public System.Nullable<int> col27
		{
			get
			{
				return this._col27;
			}
			set
			{
				if ((this._col27 != value))
				{
					this.Oncol27Changing(value);
					this.SendPropertyChanging();
					this._col27 = value;
					this.SendPropertyChanged("col27");
					this.Oncol27Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col28", DbType = "Int")]
		public System.Nullable<int> col28
		{
			get
			{
				return this._col28;
			}
			set
			{
				if ((this._col28 != value))
				{
					this.Oncol28Changing(value);
					this.SendPropertyChanging();
					this._col28 = value;
					this.SendPropertyChanged("col28");
					this.Oncol28Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col29", DbType = "Int")]
		public System.Nullable<int> col29
		{
			get
			{
				return this._col29;
			}
			set
			{
				if ((this._col29 != value))
				{
					this.Oncol29Changing(value);
					this.SendPropertyChanging();
					this._col29 = value;
					this.SendPropertyChanged("col29");
					this.Oncol29Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col30", DbType = "Int")]
		public System.Nullable<int> col30
		{
			get
			{
				return this._col30;
			}
			set
			{
				if ((this._col30 != value))
				{
					this.Oncol30Changing(value);
					this.SendPropertyChanging();
					this._col30 = value;
					this.SendPropertyChanged("col30");
					this.Oncol30Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col31", DbType = "Int")]
		public System.Nullable<int> col31
		{
			get
			{
				return this._col31;
			}
			set
			{
				if ((this._col31 != value))
				{
					this.Oncol31Changing(value);
					this.SendPropertyChanging();
					this._col31 = value;
					this.SendPropertyChanged("col31");
					this.Oncol31Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col32", DbType = "Int")]
		public System.Nullable<int> col32
		{
			get
			{
				return this._col32;
			}
			set
			{
				if ((this._col32 != value))
				{
					this.Oncol32Changing(value);
					this.SendPropertyChanging();
					this._col32 = value;
					this.SendPropertyChanged("col32");
					this.Oncol32Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col33", DbType = "Int")]
		public System.Nullable<int> col33
		{
			get
			{
				return this._col33;
			}
			set
			{
				if ((this._col33 != value))
				{
					this.Oncol33Changing(value);
					this.SendPropertyChanging();
					this._col33 = value;
					this.SendPropertyChanged("col33");
					this.Oncol33Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col34", DbType = "Int")]
		public System.Nullable<int> col34
		{
			get
			{
				return this._col34;
			}
			set
			{
				if ((this._col34 != value))
				{
					this.Oncol34Changing(value);
					this.SendPropertyChanging();
					this._col34 = value;
					this.SendPropertyChanged("col34");
					this.Oncol34Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col35", DbType = "Int")]
		public System.Nullable<int> col35
		{
			get
			{
				return this._col35;
			}
			set
			{
				if ((this._col35 != value))
				{
					this.Oncol35Changing(value);
					this.SendPropertyChanging();
					this._col35 = value;
					this.SendPropertyChanged("col35");
					this.Oncol35Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col36", DbType = "Int")]
		public System.Nullable<int> col36
		{
			get
			{
				return this._col36;
			}
			set
			{
				if ((this._col36 != value))
				{
					this.Oncol36Changing(value);
					this.SendPropertyChanging();
					this._col36 = value;
					this.SendPropertyChanged("col36");
					this.Oncol36Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col37", DbType = "Int")]
		public System.Nullable<int> col37
		{
			get
			{
				return this._col37;
			}
			set
			{
				if ((this._col37 != value))
				{
					this.Oncol37Changing(value);
					this.SendPropertyChanging();
					this._col37 = value;
					this.SendPropertyChanged("col37");
					this.Oncol37Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col38", DbType = "Int")]
		public System.Nullable<int> col38
		{
			get
			{
				return this._col38;
			}
			set
			{
				if ((this._col38 != value))
				{
					this.Oncol38Changing(value);
					this.SendPropertyChanging();
					this._col38 = value;
					this.SendPropertyChanged("col38");
					this.Oncol38Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col39", DbType = "Int")]
		public System.Nullable<int> col39
		{
			get
			{
				return this._col39;
			}
			set
			{
				if ((this._col39 != value))
				{
					this.Oncol39Changing(value);
					this.SendPropertyChanging();
					this._col39 = value;
					this.SendPropertyChanged("col39");
					this.Oncol39Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col40", DbType = "Int")]
		public System.Nullable<int> col40
		{
			get
			{
				return this._col40;
			}
			set
			{
				if ((this._col40 != value))
				{
					this.Oncol40Changing(value);
					this.SendPropertyChanging();
					this._col40 = value;
					this.SendPropertyChanged("col40");
					this.Oncol40Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col41", DbType = "Int")]
		public System.Nullable<int> col41
		{
			get
			{
				return this._col41;
			}
			set
			{
				if ((this._col41 != value))
				{
					this.Oncol41Changing(value);
					this.SendPropertyChanging();
					this._col41 = value;
					this.SendPropertyChanged("col41");
					this.Oncol41Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col42", DbType = "Int")]
		public System.Nullable<int> col42
		{
			get
			{
				return this._col42;
			}
			set
			{
				if ((this._col42 != value))
				{
					this.Oncol42Changing(value);
					this.SendPropertyChanging();
					this._col42 = value;
					this.SendPropertyChanged("col42");
					this.Oncol42Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col43", DbType = "Int")]
		public System.Nullable<int> col43
		{
			get
			{
				return this._col43;
			}
			set
			{
				if ((this._col43 != value))
				{
					this.Oncol43Changing(value);
					this.SendPropertyChanging();
					this._col43 = value;
					this.SendPropertyChanged("col43");
					this.Oncol43Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col44", DbType = "Int")]
		public System.Nullable<int> col44
		{
			get
			{
				return this._col44;
			}
			set
			{
				if ((this._col44 != value))
				{
					this.Oncol44Changing(value);
					this.SendPropertyChanging();
					this._col44 = value;
					this.SendPropertyChanged("col44");
					this.Oncol44Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col45", DbType = "Int")]
		public System.Nullable<int> col45
		{
			get
			{
				return this._col45;
			}
			set
			{
				if ((this._col45 != value))
				{
					this.Oncol45Changing(value);
					this.SendPropertyChanging();
					this._col45 = value;
					this.SendPropertyChanged("col45");
					this.Oncol45Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col46", DbType = "Int")]
		public System.Nullable<int> col46
		{
			get
			{
				return this._col46;
			}
			set
			{
				if ((this._col46 != value))
				{
					this.Oncol46Changing(value);
					this.SendPropertyChanging();
					this._col46 = value;
					this.SendPropertyChanged("col46");
					this.Oncol46Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col47", DbType = "Int")]
		public System.Nullable<int> col47
		{
			get
			{
				return this._col47;
			}
			set
			{
				if ((this._col47 != value))
				{
					this.Oncol47Changing(value);
					this.SendPropertyChanging();
					this._col47 = value;
					this.SendPropertyChanged("col47");
					this.Oncol47Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col48", DbType = "Int")]
		public System.Nullable<int> col48
		{
			get
			{
				return this._col48;
			}
			set
			{
				if ((this._col48 != value))
				{
					this.Oncol48Changing(value);
					this.SendPropertyChanging();
					this._col48 = value;
					this.SendPropertyChanged("col48");
					this.Oncol48Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col49", DbType = "Int")]
		public System.Nullable<int> col49
		{
			get
			{
				return this._col49;
			}
			set
			{
				if ((this._col49 != value))
				{
					this.Oncol49Changing(value);
					this.SendPropertyChanging();
					this._col49 = value;
					this.SendPropertyChanged("col49");
					this.Oncol49Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col50", DbType = "Int")]
		public System.Nullable<int> col50
		{
			get
			{
				return this._col50;
			}
			set
			{
				if ((this._col50 != value))
				{
					this.Oncol50Changing(value);
					this.SendPropertyChanging();
					this._col50 = value;
					this.SendPropertyChanged("col50");
					this.Oncol50Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col51", DbType = "Int")]
		public System.Nullable<int> col51
		{
			get
			{
				return this._col51;
			}
			set
			{
				if ((this._col51 != value))
				{
					this.Oncol51Changing(value);
					this.SendPropertyChanging();
					this._col51 = value;
					this.SendPropertyChanged("col51");
					this.Oncol51Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col52", DbType = "Int")]
		public System.Nullable<int> col52
		{
			get
			{
				return this._col52;
			}
			set
			{
				if ((this._col52 != value))
				{
					this.Oncol52Changing(value);
					this.SendPropertyChanging();
					this._col52 = value;
					this.SendPropertyChanged("col52");
					this.Oncol52Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col53", DbType = "Int")]
		public System.Nullable<int> col53
		{
			get
			{
				return this._col53;
			}
			set
			{
				if ((this._col53 != value))
				{
					this.Oncol53Changing(value);
					this.SendPropertyChanging();
					this._col53 = value;
					this.SendPropertyChanged("col53");
					this.Oncol53Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col54", DbType = "Int")]
		public System.Nullable<int> col54
		{
			get
			{
				return this._col54;
			}
			set
			{
				if ((this._col54 != value))
				{
					this.Oncol54Changing(value);
					this.SendPropertyChanging();
					this._col54 = value;
					this.SendPropertyChanged("col54");
					this.Oncol54Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col55", DbType = "Int")]
		public System.Nullable<int> col55
		{
			get
			{
				return this._col55;
			}
			set
			{
				if ((this._col55 != value))
				{
					this.Oncol55Changing(value);
					this.SendPropertyChanging();
					this._col55 = value;
					this.SendPropertyChanged("col55");
					this.Oncol55Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col56", DbType = "Int")]
		public System.Nullable<int> col56
		{
			get
			{
				return this._col56;
			}
			set
			{
				if ((this._col56 != value))
				{
					this.Oncol56Changing(value);
					this.SendPropertyChanging();
					this._col56 = value;
					this.SendPropertyChanged("col56");
					this.Oncol56Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col57", DbType = "Int")]
		public System.Nullable<int> col57
		{
			get
			{
				return this._col57;
			}
			set
			{
				if ((this._col57 != value))
				{
					this.Oncol57Changing(value);
					this.SendPropertyChanging();
					this._col57 = value;
					this.SendPropertyChanged("col57");
					this.Oncol57Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col58", DbType = "Int")]
		public System.Nullable<int> col58
		{
			get
			{
				return this._col58;
			}
			set
			{
				if ((this._col58 != value))
				{
					this.Oncol58Changing(value);
					this.SendPropertyChanging();
					this._col58 = value;
					this.SendPropertyChanged("col58");
					this.Oncol58Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col59", DbType = "Int")]
		public System.Nullable<int> col59
		{
			get
			{
				return this._col59;
			}
			set
			{
				if ((this._col59 != value))
				{
					this.Oncol59Changing(value);
					this.SendPropertyChanging();
					this._col59 = value;
					this.SendPropertyChanged("col59");
					this.Oncol59Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col60", DbType = "Int")]
		public System.Nullable<int> col60
		{
			get
			{
				return this._col60;
			}
			set
			{
				if ((this._col60 != value))
				{
					this.Oncol60Changing(value);
					this.SendPropertyChanging();
					this._col60 = value;
					this.SendPropertyChanged("col60");
					this.Oncol60Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col61", DbType = "Int")]
		public System.Nullable<int> col61
		{
			get
			{
				return this._col61;
			}
			set
			{
				if ((this._col61 != value))
				{
					this.Oncol61Changing(value);
					this.SendPropertyChanging();
					this._col61 = value;
					this.SendPropertyChanged("col61");
					this.Oncol61Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col62", DbType = "Int")]
		public System.Nullable<int> col62
		{
			get
			{
				return this._col62;
			}
			set
			{
				if ((this._col62 != value))
				{
					this.Oncol62Changing(value);
					this.SendPropertyChanging();
					this._col62 = value;
					this.SendPropertyChanged("col62");
					this.Oncol62Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col63", DbType = "Int")]
		public System.Nullable<int> col63
		{
			get
			{
				return this._col63;
			}
			set
			{
				if ((this._col63 != value))
				{
					this.Oncol63Changing(value);
					this.SendPropertyChanging();
					this._col63 = value;
					this.SendPropertyChanged("col63");
					this.Oncol63Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col64", DbType = "Int")]
		public System.Nullable<int> col64
		{
			get
			{
				return this._col64;
			}
			set
			{
				if ((this._col64 != value))
				{
					this.Oncol64Changing(value);
					this.SendPropertyChanging();
					this._col64 = value;
					this.SendPropertyChanged("col64");
					this.Oncol64Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col65", DbType = "Int")]
		public System.Nullable<int> col65
		{
			get
			{
				return this._col65;
			}
			set
			{
				if ((this._col65 != value))
				{
					this.Oncol65Changing(value);
					this.SendPropertyChanging();
					this._col65 = value;
					this.SendPropertyChanged("col65");
					this.Oncol65Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col66", DbType = "Int")]
		public System.Nullable<int> col66
		{
			get
			{
				return this._col66;
			}
			set
			{
				if ((this._col66 != value))
				{
					this.Oncol66Changing(value);
					this.SendPropertyChanging();
					this._col66 = value;
					this.SendPropertyChanged("col66");
					this.Oncol66Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col67", DbType = "Int")]
		public System.Nullable<int> col67
		{
			get
			{
				return this._col67;
			}
			set
			{
				if ((this._col67 != value))
				{
					this.Oncol67Changing(value);
					this.SendPropertyChanging();
					this._col67 = value;
					this.SendPropertyChanged("col67");
					this.Oncol67Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col68", DbType = "Int")]
		public System.Nullable<int> col68
		{
			get
			{
				return this._col68;
			}
			set
			{
				if ((this._col68 != value))
				{
					this.Oncol68Changing(value);
					this.SendPropertyChanging();
					this._col68 = value;
					this.SendPropertyChanged("col68");
					this.Oncol68Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col69", DbType = "Int")]
		public System.Nullable<int> col69
		{
			get
			{
				return this._col69;
			}
			set
			{
				if ((this._col69 != value))
				{
					this.Oncol69Changing(value);
					this.SendPropertyChanging();
					this._col69 = value;
					this.SendPropertyChanged("col69");
					this.Oncol69Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col70", DbType = "Int")]
		public System.Nullable<int> col70
		{
			get
			{
				return this._col70;
			}
			set
			{
				if ((this._col70 != value))
				{
					this.Oncol70Changing(value);
					this.SendPropertyChanging();
					this._col70 = value;
					this.SendPropertyChanged("col70");
					this.Oncol70Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col71", DbType = "Int")]
		public System.Nullable<int> col71
		{
			get
			{
				return this._col71;
			}
			set
			{
				if ((this._col71 != value))
				{
					this.Oncol71Changing(value);
					this.SendPropertyChanging();
					this._col71 = value;
					this.SendPropertyChanged("col71");
					this.Oncol71Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col72", DbType = "Int")]
		public System.Nullable<int> col72
		{
			get
			{
				return this._col72;
			}
			set
			{
				if ((this._col72 != value))
				{
					this.Oncol72Changing(value);
					this.SendPropertyChanging();
					this._col72 = value;
					this.SendPropertyChanged("col72");
					this.Oncol72Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col73", DbType = "Int")]
		public System.Nullable<int> col73
		{
			get
			{
				return this._col73;
			}
			set
			{
				if ((this._col73 != value))
				{
					this.Oncol73Changing(value);
					this.SendPropertyChanging();
					this._col73 = value;
					this.SendPropertyChanged("col73");
					this.Oncol73Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col74", DbType = "Int")]
		public System.Nullable<int> col74
		{
			get
			{
				return this._col74;
			}
			set
			{
				if ((this._col74 != value))
				{
					this.Oncol74Changing(value);
					this.SendPropertyChanging();
					this._col74 = value;
					this.SendPropertyChanged("col74");
					this.Oncol74Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col75", DbType = "Int")]
		public System.Nullable<int> col75
		{
			get
			{
				return this._col75;
			}
			set
			{
				if ((this._col75 != value))
				{
					this.Oncol75Changing(value);
					this.SendPropertyChanging();
					this._col75 = value;
					this.SendPropertyChanged("col75");
					this.Oncol75Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col76", DbType = "Int")]
		public System.Nullable<int> col76
		{
			get
			{
				return this._col76;
			}
			set
			{
				if ((this._col76 != value))
				{
					this.Oncol76Changing(value);
					this.SendPropertyChanging();
					this._col76 = value;
					this.SendPropertyChanged("col76");
					this.Oncol76Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col77", DbType = "Int")]
		public System.Nullable<int> col77
		{
			get
			{
				return this._col77;
			}
			set
			{
				if ((this._col77 != value))
				{
					this.Oncol77Changing(value);
					this.SendPropertyChanging();
					this._col77 = value;
					this.SendPropertyChanged("col77");
					this.Oncol77Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col78", DbType = "Int")]
		public System.Nullable<int> col78
		{
			get
			{
				return this._col78;
			}
			set
			{
				if ((this._col78 != value))
				{
					this.Oncol78Changing(value);
					this.SendPropertyChanging();
					this._col78 = value;
					this.SendPropertyChanged("col78");
					this.Oncol78Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col79", DbType = "Int")]
		public System.Nullable<int> col79
		{
			get
			{
				return this._col79;
			}
			set
			{
				if ((this._col79 != value))
				{
					this.Oncol79Changing(value);
					this.SendPropertyChanging();
					this._col79 = value;
					this.SendPropertyChanged("col79");
					this.Oncol79Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col80", DbType = "Int")]
		public System.Nullable<int> col80
		{
			get
			{
				return this._col80;
			}
			set
			{
				if ((this._col80 != value))
				{
					this.Oncol80Changing(value);
					this.SendPropertyChanging();
					this._col80 = value;
					this.SendPropertyChanged("col80");
					this.Oncol80Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col81", DbType = "Int")]
		public System.Nullable<int> col81
		{
			get
			{
				return this._col81;
			}
			set
			{
				if ((this._col81 != value))
				{
					this.Oncol81Changing(value);
					this.SendPropertyChanging();
					this._col81 = value;
					this.SendPropertyChanged("col81");
					this.Oncol81Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col82", DbType = "Int")]
		public System.Nullable<int> col82
		{
			get
			{
				return this._col82;
			}
			set
			{
				if ((this._col82 != value))
				{
					this.Oncol82Changing(value);
					this.SendPropertyChanging();
					this._col82 = value;
					this.SendPropertyChanged("col82");
					this.Oncol82Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col83", DbType = "Int")]
		public System.Nullable<int> col83
		{
			get
			{
				return this._col83;
			}
			set
			{
				if ((this._col83 != value))
				{
					this.Oncol83Changing(value);
					this.SendPropertyChanging();
					this._col83 = value;
					this.SendPropertyChanged("col83");
					this.Oncol83Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col84", DbType = "Int")]
		public System.Nullable<int> col84
		{
			get
			{
				return this._col84;
			}
			set
			{
				if ((this._col84 != value))
				{
					this.Oncol84Changing(value);
					this.SendPropertyChanging();
					this._col84 = value;
					this.SendPropertyChanged("col84");
					this.Oncol84Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col85", DbType = "Int")]
		public System.Nullable<int> col85
		{
			get
			{
				return this._col85;
			}
			set
			{
				if ((this._col85 != value))
				{
					this.Oncol85Changing(value);
					this.SendPropertyChanging();
					this._col85 = value;
					this.SendPropertyChanged("col85");
					this.Oncol85Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col86", DbType = "Int")]
		public System.Nullable<int> col86
		{
			get
			{
				return this._col86;
			}
			set
			{
				if ((this._col86 != value))
				{
					this.Oncol86Changing(value);
					this.SendPropertyChanging();
					this._col86 = value;
					this.SendPropertyChanged("col86");
					this.Oncol86Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col87", DbType = "Int")]
		public System.Nullable<int> col87
		{
			get
			{
				return this._col87;
			}
			set
			{
				if ((this._col87 != value))
				{
					this.Oncol87Changing(value);
					this.SendPropertyChanging();
					this._col87 = value;
					this.SendPropertyChanged("col87");
					this.Oncol87Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col88", DbType = "Int")]
		public System.Nullable<int> col88
		{
			get
			{
				return this._col88;
			}
			set
			{
				if ((this._col88 != value))
				{
					this.Oncol88Changing(value);
					this.SendPropertyChanging();
					this._col88 = value;
					this.SendPropertyChanged("col88");
					this.Oncol88Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col89", DbType = "Int")]
		public System.Nullable<int> col89
		{
			get
			{
				return this._col89;
			}
			set
			{
				if ((this._col89 != value))
				{
					this.Oncol89Changing(value);
					this.SendPropertyChanging();
					this._col89 = value;
					this.SendPropertyChanged("col89");
					this.Oncol89Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col90", DbType = "Int")]
		public System.Nullable<int> col90
		{
			get
			{
				return this._col90;
			}
			set
			{
				if ((this._col90 != value))
				{
					this.Oncol90Changing(value);
					this.SendPropertyChanging();
					this._col90 = value;
					this.SendPropertyChanged("col90");
					this.Oncol90Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col91", DbType = "Int")]
		public System.Nullable<int> col91
		{
			get
			{
				return this._col91;
			}
			set
			{
				if ((this._col91 != value))
				{
					this.Oncol91Changing(value);
					this.SendPropertyChanging();
					this._col91 = value;
					this.SendPropertyChanged("col91");
					this.Oncol91Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col92", DbType = "Int")]
		public System.Nullable<int> col92
		{
			get
			{
				return this._col92;
			}
			set
			{
				if ((this._col92 != value))
				{
					this.Oncol92Changing(value);
					this.SendPropertyChanging();
					this._col92 = value;
					this.SendPropertyChanged("col92");
					this.Oncol92Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col93", DbType = "Int")]
		public System.Nullable<int> col93
		{
			get
			{
				return this._col93;
			}
			set
			{
				if ((this._col93 != value))
				{
					this.Oncol93Changing(value);
					this.SendPropertyChanging();
					this._col93 = value;
					this.SendPropertyChanged("col93");
					this.Oncol93Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col94", DbType = "Int")]
		public System.Nullable<int> col94
		{
			get
			{
				return this._col94;
			}
			set
			{
				if ((this._col94 != value))
				{
					this.Oncol94Changing(value);
					this.SendPropertyChanging();
					this._col94 = value;
					this.SendPropertyChanged("col94");
					this.Oncol94Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col95", DbType = "Int")]
		public System.Nullable<int> col95
		{
			get
			{
				return this._col95;
			}
			set
			{
				if ((this._col95 != value))
				{
					this.Oncol95Changing(value);
					this.SendPropertyChanging();
					this._col95 = value;
					this.SendPropertyChanged("col95");
					this.Oncol95Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col96", DbType = "Int")]
		public System.Nullable<int> col96
		{
			get
			{
				return this._col96;
			}
			set
			{
				if ((this._col96 != value))
				{
					this.Oncol96Changing(value);
					this.SendPropertyChanging();
					this._col96 = value;
					this.SendPropertyChanged("col96");
					this.Oncol96Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col97", DbType = "Int")]
		public System.Nullable<int> col97
		{
			get
			{
				return this._col97;
			}
			set
			{
				if ((this._col97 != value))
				{
					this.Oncol97Changing(value);
					this.SendPropertyChanging();
					this._col97 = value;
					this.SendPropertyChanged("col97");
					this.Oncol97Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col98", DbType = "Int")]
		public System.Nullable<int> col98
		{
			get
			{
				return this._col98;
			}
			set
			{
				if ((this._col98 != value))
				{
					this.Oncol98Changing(value);
					this.SendPropertyChanging();
					this._col98 = value;
					this.SendPropertyChanged("col98");
					this.Oncol98Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col99", DbType = "Int")]
		public System.Nullable<int> col99
		{
			get
			{
				return this._col99;
			}
			set
			{
				if ((this._col99 != value))
				{
					this.Oncol99Changing(value);
					this.SendPropertyChanging();
					this._col99 = value;
					this.SendPropertyChanged("col99");
					this.Oncol99Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_col100", DbType = "Int")]
		public System.Nullable<int> col100
		{
			get
			{
				return this._col100;
			}
			set
			{
				if ((this._col100 != value))
				{
					this.Oncol100Changing(value);
					this.SendPropertyChanging();
					this._col100 = value;
					this.SendPropertyChanged("col100");
					this.Oncol100Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_romtrn")]
	public partial class T_romtrn : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private System.Nullable<int> _romno1;

		private System.Nullable<int> _romno2;

		private System.Nullable<int> _perno;

		private string _dt;

		private string _tm;

		private string _Usr;

		private string _UsrNam;

		private System.Nullable<int> _typ;

		private System.Nullable<int> _romnoNew;

		private System.Nullable<int> _romnoNew1;

		private System.Nullable<int> _romnoNew2;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void Onromno1Changing(System.Nullable<int> value);
		partial void Onromno1Changed();
		partial void Onromno2Changing(System.Nullable<int> value);
		partial void Onromno2Changed();
		partial void OnpernoChanging(System.Nullable<int> value);
		partial void OnpernoChanged();
		partial void OndtChanging(string value);
		partial void OndtChanged();
		partial void OntmChanging(string value);
		partial void OntmChanged();
		partial void OnUsrChanging(string value);
		partial void OnUsrChanged();
		partial void OnUsrNamChanging(string value);
		partial void OnUsrNamChanged();
		partial void OntypChanging(System.Nullable<int> value);
		partial void OntypChanged();
		partial void OnromnoNewChanging(System.Nullable<int> value);
		partial void OnromnoNewChanged();
		partial void OnromnoNew1Changing(System.Nullable<int> value);
		partial void OnromnoNew1Changed();
		partial void OnromnoNew2Changing(System.Nullable<int> value);
		partial void OnromnoNew2Changed();
		#endregion

		public T_romtrn()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romno1", DbType = "Int")]
		public System.Nullable<int> romno1
		{
			get
			{
				return this._romno1;
			}
			set
			{
				if ((this._romno1 != value))
				{
					this.Onromno1Changing(value);
					this.SendPropertyChanging();
					this._romno1 = value;
					this.SendPropertyChanged("romno1");
					this.Onromno1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romno2", DbType = "Int")]
		public System.Nullable<int> romno2
		{
			get
			{
				return this._romno2;
			}
			set
			{
				if ((this._romno2 != value))
				{
					this.Onromno2Changing(value);
					this.SendPropertyChanging();
					this._romno2 = value;
					this.SendPropertyChanged("romno2");
					this.Onromno2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_perno", DbType = "Int")]
		public System.Nullable<int> perno
		{
			get
			{
				return this._perno;
			}
			set
			{
				if ((this._perno != value))
				{
					this.OnpernoChanging(value);
					this.SendPropertyChanging();
					this._perno = value;
					this.SendPropertyChanged("perno");
					this.OnpernoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt", DbType = "VarChar(10)")]
		public string dt
		{
			get
			{
				return this._dt;
			}
			set
			{
				if ((this._dt != value))
				{
					this.OndtChanging(value);
					this.SendPropertyChanging();
					this._dt = value;
					this.SendPropertyChanged("dt");
					this.OndtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tm", DbType = "VarChar(11)")]
		public string tm
		{
			get
			{
				return this._tm;
			}
			set
			{
				if ((this._tm != value))
				{
					this.OntmChanging(value);
					this.SendPropertyChanging();
					this._tm = value;
					this.SendPropertyChanged("tm");
					this.OntmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr", DbType = "VarChar(3)")]
		public string Usr
		{
			get
			{
				return this._Usr;
			}
			set
			{
				if ((this._Usr != value))
				{
					this.OnUsrChanging(value);
					this.SendPropertyChanging();
					this._Usr = value;
					this.SendPropertyChanged("Usr");
					this.OnUsrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UsrNam", DbType = "VarChar(50)")]
		public string UsrNam
		{
			get
			{
				return this._UsrNam;
			}
			set
			{
				if ((this._UsrNam != value))
				{
					this.OnUsrNamChanging(value);
					this.SendPropertyChanging();
					this._UsrNam = value;
					this.SendPropertyChanged("UsrNam");
					this.OnUsrNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_typ", DbType = "Int")]
		public System.Nullable<int> typ
		{
			get
			{
				return this._typ;
			}
			set
			{
				if ((this._typ != value))
				{
					this.OntypChanging(value);
					this.SendPropertyChanging();
					this._typ = value;
					this.SendPropertyChanged("typ");
					this.OntypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romnoNew", DbType = "Int")]
		public System.Nullable<int> romnoNew
		{
			get
			{
				return this._romnoNew;
			}
			set
			{
				if ((this._romnoNew != value))
				{
					this.OnromnoNewChanging(value);
					this.SendPropertyChanging();
					this._romnoNew = value;
					this.SendPropertyChanged("romnoNew");
					this.OnromnoNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romnoNew1", DbType = "Int")]
		public System.Nullable<int> romnoNew1
		{
			get
			{
				return this._romnoNew1;
			}
			set
			{
				if ((this._romnoNew1 != value))
				{
					this.OnromnoNew1Changing(value);
					this.SendPropertyChanging();
					this._romnoNew1 = value;
					this.SendPropertyChanged("romnoNew1");
					this.OnromnoNew1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romnoNew2", DbType = "Int")]
		public System.Nullable<int> romnoNew2
		{
			get
			{
				return this._romnoNew2;
			}
			set
			{
				if ((this._romnoNew2 != value))
				{
					this.OnromnoNew2Changing(value);
					this.SendPropertyChanging();
					this._romnoNew2 = value;
					this.SendPropertyChanged("romnoNew2");
					this.OnromnoNew2Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Rooms")]
	public partial class T_Room : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private int _RomeNo;

		private System.Nullable<bool> _RomeStatus;

		private System.Nullable<int> _Type;

		private System.Nullable<bool> _Stop;

		private System.Nullable<bool> _reserved;

		private System.Nullable<int> _chair;

		private string _Note;

		private System.Nullable<int> _waiterNo;

		private EntitySet<T_INVHED> _T_INVHEDs;

		private EntityRef<T_Waiter> _T_Waiter;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnRomeNoChanging(int value);
		partial void OnRomeNoChanged();
		partial void OnRomeStatusChanging(System.Nullable<bool> value);
		partial void OnRomeStatusChanged();
		partial void OnTypeChanging(System.Nullable<int> value);
		partial void OnTypeChanged();
		partial void OnStopChanging(System.Nullable<bool> value);
		partial void OnStopChanged();
		partial void OnreservedChanging(System.Nullable<bool> value);
		partial void OnreservedChanged();
		partial void OnchairChanging(System.Nullable<int> value);
		partial void OnchairChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnwaiterNoChanging(System.Nullable<int> value);
		partial void OnwaiterNoChanged();
		#endregion

		public T_Room()
		{
			this._T_INVHEDs = new EntitySet<T_INVHED>(new Action<T_INVHED>(this.attach_T_INVHEDs), new Action<T_INVHED>(this.detach_T_INVHEDs));
			this._T_Waiter = default(EntityRef<T_Waiter>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RomeNo", DbType = "Int NOT NULL")]
		public int RomeNo
		{
			get
			{
				return this._RomeNo;
			}
			set
			{
				if ((this._RomeNo != value))
				{
					this.OnRomeNoChanging(value);
					this.SendPropertyChanging();
					this._RomeNo = value;
					this.SendPropertyChanged("RomeNo");
					this.OnRomeNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RomeStatus", DbType = "Bit")]
		public System.Nullable<bool> RomeStatus
		{
			get
			{
				return this._RomeStatus;
			}
			set
			{
				if ((this._RomeStatus != value))
				{
					this.OnRomeStatusChanging(value);
					this.SendPropertyChanging();
					this._RomeStatus = value;
					this.SendPropertyChanged("RomeStatus");
					this.OnRomeStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Stop", DbType = "Bit")]
		public System.Nullable<bool> Stop
		{
			get
			{
				return this._Stop;
			}
			set
			{
				if ((this._Stop != value))
				{
					this.OnStopChanging(value);
					this.SendPropertyChanging();
					this._Stop = value;
					this.SendPropertyChanged("Stop");
					this.OnStopChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_reserved", DbType = "Bit")]
		public System.Nullable<bool> reserved
		{
			get
			{
				return this._reserved;
			}
			set
			{
				if ((this._reserved != value))
				{
					this.OnreservedChanging(value);
					this.SendPropertyChanging();
					this._reserved = value;
					this.SendPropertyChanged("reserved");
					this.OnreservedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_chair", DbType = "Int")]
		public System.Nullable<int> chair
		{
			get
			{
				return this._chair;
			}
			set
			{
				if ((this._chair != value))
				{
					this.OnchairChanging(value);
					this.SendPropertyChanging();
					this._chair = value;
					this.SendPropertyChanged("chair");
					this.OnchairChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(150)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_waiterNo", DbType = "Int")]
		public System.Nullable<int> waiterNo
		{
			get
			{
				return this._waiterNo;
			}
			set
			{
				if ((this._waiterNo != value))
				{
					if (this._T_Waiter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwaiterNoChanging(value);
					this.SendPropertyChanging();
					this._waiterNo = value;
					this.SendPropertyChanged("waiterNo");
					this.OnwaiterNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Room_T_INVHED", Storage = "_T_INVHEDs", ThisKey = "ID", OtherKey = "RoomNo")]
		public EntitySet<T_INVHED> T_INVHEDs
		{
			get
			{
				return this._T_INVHEDs;
			}
			set
			{
				this._T_INVHEDs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Waiter_T_Room", Storage = "_T_Waiter", ThisKey = "waiterNo", OtherKey = "waiter_ID", IsForeignKey = true)]
		public T_Waiter T_Waiter
		{
			get
			{
				return this._T_Waiter.Entity;
			}
			set
			{
				T_Waiter previousValue = this._T_Waiter.Entity;
				if (((previousValue != value)
							|| (this._T_Waiter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Waiter.Entity = null;
						previousValue.T_Rooms.Remove(this);
					}
					this._T_Waiter.Entity = value;
					if ((value != null))
					{
						value.T_Rooms.Add(this);
						this._waiterNo = value.waiter_ID;
					}
					else
					{
						this._waiterNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Waiter");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_Room = this;
		}

		private void detach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_Room = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Sal")]
	public partial class T_Sal : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _SalaryID;

		private string _EmpID;

		private System.Nullable<int> _SalMonth;

		private System.Nullable<int> _SalYear;

		private System.Nullable<int> _DirBoss;

		private System.Nullable<int> _DeptNo;

		private System.Nullable<int> _Job;

		private System.Nullable<double> _Salary;

		private System.Nullable<double> _HousingAllowance;

		private System.Nullable<double> _TransferAllowance;

		private System.Nullable<double> _OtherAllowance;

		private System.Nullable<double> _SubDay;

		private System.Nullable<double> _LateHours;

		private System.Nullable<double> _SubJaza;

		private System.Nullable<double> _SubOther;

		private System.Nullable<double> _MandateDay;

		private System.Nullable<double> _SocialInsuranceComp;

		private System.Nullable<double> _SocialInsurance;

		private System.Nullable<double> _InsuranceMedicalCom;

		private System.Nullable<double> _InsuranceMedical;

		private System.Nullable<double> _Advance;

		private System.Nullable<double> _Rewards;

		private System.Nullable<int> _Bank;

		private string _AccountNo;

		private System.Nullable<bool> _SalaryStatus;

		private System.Nullable<bool> _IsPrint;

		private string _SalSpell;

		private System.Nullable<double> _AddDay;

		private System.Nullable<double> _AddHour;

		private System.Nullable<int> _SectionNo;

		private string _SalAcc;

		private System.Nullable<double> _SubCallPhone;

		private System.Nullable<double> _SubCommentary;

		private string _LoanAcc;

		private string _HouseAcc;

		private string _fGUID;

		private System.Nullable<double> _Total;

		private System.Nullable<int> _CostCenterEmp;

		private string _BankBR;

		private System.Nullable<bool> _AccID;

		private System.Nullable<double> _GadeId;

		private System.Nullable<double> _GadeId2;

		private EntityRef<T_AccDef> _T_AccDef;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSalaryIDChanging(string value);
		partial void OnSalaryIDChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnSalMonthChanging(System.Nullable<int> value);
		partial void OnSalMonthChanged();
		partial void OnSalYearChanging(System.Nullable<int> value);
		partial void OnSalYearChanged();
		partial void OnDirBossChanging(System.Nullable<int> value);
		partial void OnDirBossChanged();
		partial void OnDeptNoChanging(System.Nullable<int> value);
		partial void OnDeptNoChanged();
		partial void OnJobChanging(System.Nullable<int> value);
		partial void OnJobChanged();
		partial void OnSalaryChanging(System.Nullable<double> value);
		partial void OnSalaryChanged();
		partial void OnHousingAllowanceChanging(System.Nullable<double> value);
		partial void OnHousingAllowanceChanged();
		partial void OnTransferAllowanceChanging(System.Nullable<double> value);
		partial void OnTransferAllowanceChanged();
		partial void OnOtherAllowanceChanging(System.Nullable<double> value);
		partial void OnOtherAllowanceChanged();
		partial void OnSubDayChanging(System.Nullable<double> value);
		partial void OnSubDayChanged();
		partial void OnLateHoursChanging(System.Nullable<double> value);
		partial void OnLateHoursChanged();
		partial void OnSubJazaChanging(System.Nullable<double> value);
		partial void OnSubJazaChanged();
		partial void OnSubOtherChanging(System.Nullable<double> value);
		partial void OnSubOtherChanged();
		partial void OnMandateDayChanging(System.Nullable<double> value);
		partial void OnMandateDayChanged();
		partial void OnSocialInsuranceCompChanging(System.Nullable<double> value);
		partial void OnSocialInsuranceCompChanged();
		partial void OnSocialInsuranceChanging(System.Nullable<double> value);
		partial void OnSocialInsuranceChanged();
		partial void OnInsuranceMedicalComChanging(System.Nullable<double> value);
		partial void OnInsuranceMedicalComChanged();
		partial void OnInsuranceMedicalChanging(System.Nullable<double> value);
		partial void OnInsuranceMedicalChanged();
		partial void OnAdvanceChanging(System.Nullable<double> value);
		partial void OnAdvanceChanged();
		partial void OnRewardsChanging(System.Nullable<double> value);
		partial void OnRewardsChanged();
		partial void OnBankChanging(System.Nullable<int> value);
		partial void OnBankChanged();
		partial void OnAccountNoChanging(string value);
		partial void OnAccountNoChanged();
		partial void OnSalaryStatusChanging(System.Nullable<bool> value);
		partial void OnSalaryStatusChanged();
		partial void OnIsPrintChanging(System.Nullable<bool> value);
		partial void OnIsPrintChanged();
		partial void OnSalSpellChanging(string value);
		partial void OnSalSpellChanged();
		partial void OnAddDayChanging(System.Nullable<double> value);
		partial void OnAddDayChanged();
		partial void OnAddHourChanging(System.Nullable<double> value);
		partial void OnAddHourChanged();
		partial void OnSectionNoChanging(System.Nullable<int> value);
		partial void OnSectionNoChanged();
		partial void OnSalAccChanging(string value);
		partial void OnSalAccChanged();
		partial void OnSubCallPhoneChanging(System.Nullable<double> value);
		partial void OnSubCallPhoneChanged();
		partial void OnSubCommentaryChanging(System.Nullable<double> value);
		partial void OnSubCommentaryChanged();
		partial void OnLoanAccChanging(string value);
		partial void OnLoanAccChanged();
		partial void OnHouseAccChanging(string value);
		partial void OnHouseAccChanged();
		partial void OnfGUIDChanging(string value);
		partial void OnfGUIDChanged();
		partial void OnTotalChanging(System.Nullable<double> value);
		partial void OnTotalChanged();
		partial void OnCostCenterEmpChanging(System.Nullable<int> value);
		partial void OnCostCenterEmpChanged();
		partial void OnBankBRChanging(string value);
		partial void OnBankBRChanged();
		partial void OnAccIDChanging(System.Nullable<bool> value);
		partial void OnAccIDChanged();
		partial void OnGadeIdChanging(System.Nullable<double> value);
		partial void OnGadeIdChanged();
		partial void OnGadeId2Changing(System.Nullable<double> value);
		partial void OnGadeId2Changed();
		#endregion

		public T_Sal()
		{
			this._T_AccDef = default(EntityRef<T_AccDef>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalaryID", DbType = "VarChar(40) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string SalaryID
		{
			get
			{
				return this._SalaryID;
			}
			set
			{
				if ((this._SalaryID != value))
				{
					this.OnSalaryIDChanging(value);
					this.SendPropertyChanging();
					this._SalaryID = value;
					this.SendPropertyChanged("SalaryID");
					this.OnSalaryIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalMonth", DbType = "Int")]
		public System.Nullable<int> SalMonth
		{
			get
			{
				return this._SalMonth;
			}
			set
			{
				if ((this._SalMonth != value))
				{
					this.OnSalMonthChanging(value);
					this.SendPropertyChanging();
					this._SalMonth = value;
					this.SendPropertyChanged("SalMonth");
					this.OnSalMonthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalYear", DbType = "Int")]
		public System.Nullable<int> SalYear
		{
			get
			{
				return this._SalYear;
			}
			set
			{
				if ((this._SalYear != value))
				{
					this.OnSalYearChanging(value);
					this.SendPropertyChanging();
					this._SalYear = value;
					this.SendPropertyChanged("SalYear");
					this.OnSalYearChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DirBoss", DbType = "Int")]
		public System.Nullable<int> DirBoss
		{
			get
			{
				return this._DirBoss;
			}
			set
			{
				if ((this._DirBoss != value))
				{
					this.OnDirBossChanging(value);
					this.SendPropertyChanging();
					this._DirBoss = value;
					this.SendPropertyChanged("DirBoss");
					this.OnDirBossChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DeptNo", DbType = "Int")]
		public System.Nullable<int> DeptNo
		{
			get
			{
				return this._DeptNo;
			}
			set
			{
				if ((this._DeptNo != value))
				{
					this.OnDeptNoChanging(value);
					this.SendPropertyChanging();
					this._DeptNo = value;
					this.SendPropertyChanged("DeptNo");
					this.OnDeptNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Job", DbType = "Int")]
		public System.Nullable<int> Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Salary", DbType = "Float")]
		public System.Nullable<double> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HousingAllowance", DbType = "Float")]
		public System.Nullable<double> HousingAllowance
		{
			get
			{
				return this._HousingAllowance;
			}
			set
			{
				if ((this._HousingAllowance != value))
				{
					this.OnHousingAllowanceChanging(value);
					this.SendPropertyChanging();
					this._HousingAllowance = value;
					this.SendPropertyChanged("HousingAllowance");
					this.OnHousingAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransferAllowance", DbType = "Float")]
		public System.Nullable<double> TransferAllowance
		{
			get
			{
				return this._TransferAllowance;
			}
			set
			{
				if ((this._TransferAllowance != value))
				{
					this.OnTransferAllowanceChanging(value);
					this.SendPropertyChanging();
					this._TransferAllowance = value;
					this.SendPropertyChanged("TransferAllowance");
					this.OnTransferAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OtherAllowance", DbType = "Float")]
		public System.Nullable<double> OtherAllowance
		{
			get
			{
				return this._OtherAllowance;
			}
			set
			{
				if ((this._OtherAllowance != value))
				{
					this.OnOtherAllowanceChanging(value);
					this.SendPropertyChanging();
					this._OtherAllowance = value;
					this.SendPropertyChanged("OtherAllowance");
					this.OnOtherAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubDay", DbType = "Float")]
		public System.Nullable<double> SubDay
		{
			get
			{
				return this._SubDay;
			}
			set
			{
				if ((this._SubDay != value))
				{
					this.OnSubDayChanging(value);
					this.SendPropertyChanging();
					this._SubDay = value;
					this.SendPropertyChanged("SubDay");
					this.OnSubDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LateHours", DbType = "Float")]
		public System.Nullable<double> LateHours
		{
			get
			{
				return this._LateHours;
			}
			set
			{
				if ((this._LateHours != value))
				{
					this.OnLateHoursChanging(value);
					this.SendPropertyChanging();
					this._LateHours = value;
					this.SendPropertyChanged("LateHours");
					this.OnLateHoursChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubJaza", DbType = "Float")]
		public System.Nullable<double> SubJaza
		{
			get
			{
				return this._SubJaza;
			}
			set
			{
				if ((this._SubJaza != value))
				{
					this.OnSubJazaChanging(value);
					this.SendPropertyChanging();
					this._SubJaza = value;
					this.SendPropertyChanged("SubJaza");
					this.OnSubJazaChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubOther", DbType = "Float")]
		public System.Nullable<double> SubOther
		{
			get
			{
				return this._SubOther;
			}
			set
			{
				if ((this._SubOther != value))
				{
					this.OnSubOtherChanging(value);
					this.SendPropertyChanging();
					this._SubOther = value;
					this.SendPropertyChanged("SubOther");
					this.OnSubOtherChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MandateDay", DbType = "Float")]
		public System.Nullable<double> MandateDay
		{
			get
			{
				return this._MandateDay;
			}
			set
			{
				if ((this._MandateDay != value))
				{
					this.OnMandateDayChanging(value);
					this.SendPropertyChanging();
					this._MandateDay = value;
					this.SendPropertyChanged("MandateDay");
					this.OnMandateDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialInsuranceComp", DbType = "Float")]
		public System.Nullable<double> SocialInsuranceComp
		{
			get
			{
				return this._SocialInsuranceComp;
			}
			set
			{
				if ((this._SocialInsuranceComp != value))
				{
					this.OnSocialInsuranceCompChanging(value);
					this.SendPropertyChanging();
					this._SocialInsuranceComp = value;
					this.SendPropertyChanged("SocialInsuranceComp");
					this.OnSocialInsuranceCompChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialInsurance", DbType = "Float")]
		public System.Nullable<double> SocialInsurance
		{
			get
			{
				return this._SocialInsurance;
			}
			set
			{
				if ((this._SocialInsurance != value))
				{
					this.OnSocialInsuranceChanging(value);
					this.SendPropertyChanging();
					this._SocialInsurance = value;
					this.SendPropertyChanged("SocialInsurance");
					this.OnSocialInsuranceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceMedicalCom", DbType = "Float")]
		public System.Nullable<double> InsuranceMedicalCom
		{
			get
			{
				return this._InsuranceMedicalCom;
			}
			set
			{
				if ((this._InsuranceMedicalCom != value))
				{
					this.OnInsuranceMedicalComChanging(value);
					this.SendPropertyChanging();
					this._InsuranceMedicalCom = value;
					this.SendPropertyChanged("InsuranceMedicalCom");
					this.OnInsuranceMedicalComChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceMedical", DbType = "Float")]
		public System.Nullable<double> InsuranceMedical
		{
			get
			{
				return this._InsuranceMedical;
			}
			set
			{
				if ((this._InsuranceMedical != value))
				{
					this.OnInsuranceMedicalChanging(value);
					this.SendPropertyChanging();
					this._InsuranceMedical = value;
					this.SendPropertyChanged("InsuranceMedical");
					this.OnInsuranceMedicalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Advance", DbType = "Float")]
		public System.Nullable<double> Advance
		{
			get
			{
				return this._Advance;
			}
			set
			{
				if ((this._Advance != value))
				{
					this.OnAdvanceChanging(value);
					this.SendPropertyChanging();
					this._Advance = value;
					this.SendPropertyChanged("Advance");
					this.OnAdvanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rewards", DbType = "Float")]
		public System.Nullable<double> Rewards
		{
			get
			{
				return this._Rewards;
			}
			set
			{
				if ((this._Rewards != value))
				{
					this.OnRewardsChanging(value);
					this.SendPropertyChanging();
					this._Rewards = value;
					this.SendPropertyChanged("Rewards");
					this.OnRewardsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Bank", DbType = "Int")]
		public System.Nullable<int> Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNo", DbType = "VarChar(30)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalaryStatus", DbType = "Bit")]
		public System.Nullable<bool> SalaryStatus
		{
			get
			{
				return this._SalaryStatus;
			}
			set
			{
				if ((this._SalaryStatus != value))
				{
					this.OnSalaryStatusChanging(value);
					this.SendPropertyChanging();
					this._SalaryStatus = value;
					this.SendPropertyChanged("SalaryStatus");
					this.OnSalaryStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPrint", DbType = "Bit")]
		public System.Nullable<bool> IsPrint
		{
			get
			{
				return this._IsPrint;
			}
			set
			{
				if ((this._IsPrint != value))
				{
					this.OnIsPrintChanging(value);
					this.SendPropertyChanging();
					this._IsPrint = value;
					this.SendPropertyChanged("IsPrint");
					this.OnIsPrintChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalSpell", DbType = "VarChar(MAX)")]
		public string SalSpell
		{
			get
			{
				return this._SalSpell;
			}
			set
			{
				if ((this._SalSpell != value))
				{
					this.OnSalSpellChanging(value);
					this.SendPropertyChanging();
					this._SalSpell = value;
					this.SendPropertyChanged("SalSpell");
					this.OnSalSpellChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddDay", DbType = "Float")]
		public System.Nullable<double> AddDay
		{
			get
			{
				return this._AddDay;
			}
			set
			{
				if ((this._AddDay != value))
				{
					this.OnAddDayChanging(value);
					this.SendPropertyChanging();
					this._AddDay = value;
					this.SendPropertyChanged("AddDay");
					this.OnAddDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddHour", DbType = "Float")]
		public System.Nullable<double> AddHour
		{
			get
			{
				return this._AddHour;
			}
			set
			{
				if ((this._AddHour != value))
				{
					this.OnAddHourChanging(value);
					this.SendPropertyChanging();
					this._AddHour = value;
					this.SendPropertyChanged("AddHour");
					this.OnAddHourChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SectionNo", DbType = "Int")]
		public System.Nullable<int> SectionNo
		{
			get
			{
				return this._SectionNo;
			}
			set
			{
				if ((this._SectionNo != value))
				{
					this.OnSectionNoChanging(value);
					this.SendPropertyChanging();
					this._SectionNo = value;
					this.SendPropertyChanged("SectionNo");
					this.OnSectionNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalAcc", DbType = "VarChar(30)")]
		public string SalAcc
		{
			get
			{
				return this._SalAcc;
			}
			set
			{
				if ((this._SalAcc != value))
				{
					this.OnSalAccChanging(value);
					this.SendPropertyChanging();
					this._SalAcc = value;
					this.SendPropertyChanged("SalAcc");
					this.OnSalAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubCallPhone", DbType = "Float")]
		public System.Nullable<double> SubCallPhone
		{
			get
			{
				return this._SubCallPhone;
			}
			set
			{
				if ((this._SubCallPhone != value))
				{
					this.OnSubCallPhoneChanging(value);
					this.SendPropertyChanging();
					this._SubCallPhone = value;
					this.SendPropertyChanged("SubCallPhone");
					this.OnSubCallPhoneChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubCommentary", DbType = "Float")]
		public System.Nullable<double> SubCommentary
		{
			get
			{
				return this._SubCommentary;
			}
			set
			{
				if ((this._SubCommentary != value))
				{
					this.OnSubCommentaryChanging(value);
					this.SendPropertyChanging();
					this._SubCommentary = value;
					this.SendPropertyChanged("SubCommentary");
					this.OnSubCommentaryChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoanAcc", DbType = "VarChar(30)")]
		public string LoanAcc
		{
			get
			{
				return this._LoanAcc;
			}
			set
			{
				if ((this._LoanAcc != value))
				{
					this.OnLoanAccChanging(value);
					this.SendPropertyChanging();
					this._LoanAcc = value;
					this.SendPropertyChanged("LoanAcc");
					this.OnLoanAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HouseAcc", DbType = "VarChar(30)")]
		public string HouseAcc
		{
			get
			{
				return this._HouseAcc;
			}
			set
			{
				if ((this._HouseAcc != value))
				{
					this.OnHouseAccChanging(value);
					this.SendPropertyChanging();
					this._HouseAcc = value;
					this.SendPropertyChanged("HouseAcc");
					this.OnHouseAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fGUID", DbType = "VarChar(40)")]
		public string fGUID
		{
			get
			{
				return this._fGUID;
			}
			set
			{
				if ((this._fGUID != value))
				{
					this.OnfGUIDChanging(value);
					this.SendPropertyChanging();
					this._fGUID = value;
					this.SendPropertyChanged("fGUID");
					this.OnfGUIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Total", DbType = "Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CostCenterEmp", DbType = "Int")]
		public System.Nullable<int> CostCenterEmp
		{
			get
			{
				return this._CostCenterEmp;
			}
			set
			{
				if ((this._CostCenterEmp != value))
				{
					this.OnCostCenterEmpChanging(value);
					this.SendPropertyChanging();
					this._CostCenterEmp = value;
					this.SendPropertyChanged("CostCenterEmp");
					this.OnCostCenterEmpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankBR", DbType = "VarChar(30)")]
		public string BankBR
		{
			get
			{
				return this._BankBR;
			}
			set
			{
				if ((this._BankBR != value))
				{
					this.OnBankBRChanging(value);
					this.SendPropertyChanging();
					this._BankBR = value;
					this.SendPropertyChanged("BankBR");
					this.OnBankBRChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccID", DbType = "Bit")]
		public System.Nullable<bool> AccID
		{
			get
			{
				return this._AccID;
			}
			set
			{
				if ((this._AccID != value))
				{
					this.OnAccIDChanging(value);
					this.SendPropertyChanging();
					this._AccID = value;
					this.SendPropertyChanged("AccID");
					this.OnAccIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId", DbType = "Float")]
		public System.Nullable<double> GadeId
		{
			get
			{
				return this._GadeId;
			}
			set
			{
				if ((this._GadeId != value))
				{
					this.OnGadeIdChanging(value);
					this.SendPropertyChanging();
					this._GadeId = value;
					this.SendPropertyChanged("GadeId");
					this.OnGadeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId2", DbType = "Float")]
		public System.Nullable<double> GadeId2
		{
			get
			{
				return this._GadeId2;
			}
			set
			{
				if ((this._GadeId2 != value))
				{
					this.OnGadeId2Changing(value);
					this.SendPropertyChanging();
					this._GadeId2 = value;
					this.SendPropertyChanged("GadeId2");
					this.OnGadeId2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Sal", Storage = "_T_AccDef", ThisKey = "EmpID", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_Sals.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_Sals.Add(this);
						this._EmpID = value.AccDef_No;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Salary")]
	public partial class T_Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _SalaryID;

		private string _EmpID;

		private System.Nullable<int> _SalMonth;

		private System.Nullable<int> _SalYear;

		private System.Nullable<int> _DirBoss;

		private System.Nullable<int> _DeptNo;

		private System.Nullable<int> _Job;

		private System.Nullable<double> _Salary;

		private System.Nullable<double> _HousingAllowance;

		private System.Nullable<double> _TransferAllowance;

		private System.Nullable<double> _OtherAllowance;

		private System.Nullable<double> _SubDay;

		private System.Nullable<double> _LateHours;

		private System.Nullable<double> _SubJaza;

		private System.Nullable<double> _SubOther;

		private System.Nullable<double> _MandateDay;

		private System.Nullable<double> _SocialInsuranceComp;

		private System.Nullable<double> _SocialInsurance;

		private System.Nullable<double> _InsuranceMedicalCom;

		private System.Nullable<double> _InsuranceMedical;

		private System.Nullable<double> _Advance;

		private System.Nullable<double> _Rewards;

		private System.Nullable<int> _Bank;

		private string _AccountNo;

		private System.Nullable<bool> _SalaryStatus;

		private System.Nullable<bool> _IsPrint;

		private string _SalSpell;

		private System.Nullable<double> _AddDay;

		private System.Nullable<double> _AddHour;

		private System.Nullable<int> _SectionNo;

		private System.Nullable<double> _GadeId2;

		private string _SalAcc;

		private System.Nullable<double> _SubCallPhone;

		private System.Nullable<double> _SubCommentary;

		private string _LoanAcc;

		private string _HouseAcc;

		private string _fGUID;

		private System.Nullable<double> _Total;

		private System.Nullable<int> _CostCenterEmp;

		private string _BankBR;

		private System.Nullable<bool> _AccID;

		private System.Nullable<double> _GadeId;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_AccDef> _T_AccDef1;

		private EntityRef<T_AccDef> _T_AccDef2;

		private EntityRef<T_AccDef> _T_AccDef3;

		private EntityRef<T_AccDef> _T_AccDef4;

		private EntityRef<T_Bank> _T_Bank;

		private EntityRef<T_CstTbl> _T_CstTbl;

		private EntityRef<T_Dept> _T_Dept;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_Guarantor> _T_Guarantor;

		private EntityRef<T_Job> _T_Job;

		private EntityRef<T_Section> _T_Section;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSalaryIDChanging(string value);
		partial void OnSalaryIDChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnSalMonthChanging(System.Nullable<int> value);
		partial void OnSalMonthChanged();
		partial void OnSalYearChanging(System.Nullable<int> value);
		partial void OnSalYearChanged();
		partial void OnDirBossChanging(System.Nullable<int> value);
		partial void OnDirBossChanged();
		partial void OnDeptNoChanging(System.Nullable<int> value);
		partial void OnDeptNoChanged();
		partial void OnJobChanging(System.Nullable<int> value);
		partial void OnJobChanged();
		partial void OnSalaryChanging(System.Nullable<double> value);
		partial void OnSalaryChanged();
		partial void OnHousingAllowanceChanging(System.Nullable<double> value);
		partial void OnHousingAllowanceChanged();
		partial void OnTransferAllowanceChanging(System.Nullable<double> value);
		partial void OnTransferAllowanceChanged();
		partial void OnOtherAllowanceChanging(System.Nullable<double> value);
		partial void OnOtherAllowanceChanged();
		partial void OnSubDayChanging(System.Nullable<double> value);
		partial void OnSubDayChanged();
		partial void OnLateHoursChanging(System.Nullable<double> value);
		partial void OnLateHoursChanged();
		partial void OnSubJazaChanging(System.Nullable<double> value);
		partial void OnSubJazaChanged();
		partial void OnSubOtherChanging(System.Nullable<double> value);
		partial void OnSubOtherChanged();
		partial void OnMandateDayChanging(System.Nullable<double> value);
		partial void OnMandateDayChanged();
		partial void OnSocialInsuranceCompChanging(System.Nullable<double> value);
		partial void OnSocialInsuranceCompChanged();
		partial void OnSocialInsuranceChanging(System.Nullable<double> value);
		partial void OnSocialInsuranceChanged();
		partial void OnInsuranceMedicalComChanging(System.Nullable<double> value);
		partial void OnInsuranceMedicalComChanged();
		partial void OnInsuranceMedicalChanging(System.Nullable<double> value);
		partial void OnInsuranceMedicalChanged();
		partial void OnAdvanceChanging(System.Nullable<double> value);
		partial void OnAdvanceChanged();
		partial void OnRewardsChanging(System.Nullable<double> value);
		partial void OnRewardsChanged();
		partial void OnBankChanging(System.Nullable<int> value);
		partial void OnBankChanged();
		partial void OnAccountNoChanging(string value);
		partial void OnAccountNoChanged();
		partial void OnSalaryStatusChanging(System.Nullable<bool> value);
		partial void OnSalaryStatusChanged();
		partial void OnIsPrintChanging(System.Nullable<bool> value);
		partial void OnIsPrintChanged();
		partial void OnSalSpellChanging(string value);
		partial void OnSalSpellChanged();
		partial void OnAddDayChanging(System.Nullable<double> value);
		partial void OnAddDayChanged();
		partial void OnAddHourChanging(System.Nullable<double> value);
		partial void OnAddHourChanged();
		partial void OnSectionNoChanging(System.Nullable<int> value);
		partial void OnSectionNoChanged();
		partial void OnGadeId2Changing(System.Nullable<double> value);
		partial void OnGadeId2Changed();
		partial void OnSalAccChanging(string value);
		partial void OnSalAccChanged();
		partial void OnSubCallPhoneChanging(System.Nullable<double> value);
		partial void OnSubCallPhoneChanged();
		partial void OnSubCommentaryChanging(System.Nullable<double> value);
		partial void OnSubCommentaryChanged();
		partial void OnLoanAccChanging(string value);
		partial void OnLoanAccChanged();
		partial void OnHouseAccChanging(string value);
		partial void OnHouseAccChanged();
		partial void OnfGUIDChanging(string value);
		partial void OnfGUIDChanged();
		partial void OnTotalChanging(System.Nullable<double> value);
		partial void OnTotalChanged();
		partial void OnCostCenterEmpChanging(System.Nullable<int> value);
		partial void OnCostCenterEmpChanged();
		partial void OnBankBRChanging(string value);
		partial void OnBankBRChanged();
		partial void OnAccIDChanging(System.Nullable<bool> value);
		partial void OnAccIDChanged();
		partial void OnGadeIdChanging(System.Nullable<double> value);
		partial void OnGadeIdChanged();
		#endregion

		public T_Salary()
		{
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_AccDef1 = default(EntityRef<T_AccDef>);
			this._T_AccDef2 = default(EntityRef<T_AccDef>);
			this._T_AccDef3 = default(EntityRef<T_AccDef>);
			this._T_AccDef4 = default(EntityRef<T_AccDef>);
			this._T_Bank = default(EntityRef<T_Bank>);
			this._T_CstTbl = default(EntityRef<T_CstTbl>);
			this._T_Dept = default(EntityRef<T_Dept>);
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_Guarantor = default(EntityRef<T_Guarantor>);
			this._T_Job = default(EntityRef<T_Job>);
			this._T_Section = default(EntityRef<T_Section>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalaryID", DbType = "VarChar(40) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		public string SalaryID
		{
			get
			{
				return this._SalaryID;
			}
			set
			{
				if ((this._SalaryID != value))
				{
					this.OnSalaryIDChanging(value);
					this.SendPropertyChanging();
					this._SalaryID = value;
					this.SendPropertyChanged("SalaryID");
					this.OnSalaryIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalMonth", DbType = "Int")]
		public System.Nullable<int> SalMonth
		{
			get
			{
				return this._SalMonth;
			}
			set
			{
				if ((this._SalMonth != value))
				{
					this.OnSalMonthChanging(value);
					this.SendPropertyChanging();
					this._SalMonth = value;
					this.SendPropertyChanged("SalMonth");
					this.OnSalMonthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalYear", DbType = "Int")]
		public System.Nullable<int> SalYear
		{
			get
			{
				return this._SalYear;
			}
			set
			{
				if ((this._SalYear != value))
				{
					this.OnSalYearChanging(value);
					this.SendPropertyChanging();
					this._SalYear = value;
					this.SendPropertyChanged("SalYear");
					this.OnSalYearChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DirBoss", DbType = "Int")]
		public System.Nullable<int> DirBoss
		{
			get
			{
				return this._DirBoss;
			}
			set
			{
				if ((this._DirBoss != value))
				{
					if (this._T_Guarantor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirBossChanging(value);
					this.SendPropertyChanging();
					this._DirBoss = value;
					this.SendPropertyChanged("DirBoss");
					this.OnDirBossChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DeptNo", DbType = "Int")]
		public System.Nullable<int> DeptNo
		{
			get
			{
				return this._DeptNo;
			}
			set
			{
				if ((this._DeptNo != value))
				{
					if (this._T_Dept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptNoChanging(value);
					this.SendPropertyChanging();
					this._DeptNo = value;
					this.SendPropertyChanged("DeptNo");
					this.OnDeptNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Job", DbType = "Int")]
		public System.Nullable<int> Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					if (this._T_Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Salary", DbType = "Float")]
		public System.Nullable<double> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HousingAllowance", DbType = "Float")]
		public System.Nullable<double> HousingAllowance
		{
			get
			{
				return this._HousingAllowance;
			}
			set
			{
				if ((this._HousingAllowance != value))
				{
					this.OnHousingAllowanceChanging(value);
					this.SendPropertyChanging();
					this._HousingAllowance = value;
					this.SendPropertyChanged("HousingAllowance");
					this.OnHousingAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransferAllowance", DbType = "Float")]
		public System.Nullable<double> TransferAllowance
		{
			get
			{
				return this._TransferAllowance;
			}
			set
			{
				if ((this._TransferAllowance != value))
				{
					this.OnTransferAllowanceChanging(value);
					this.SendPropertyChanging();
					this._TransferAllowance = value;
					this.SendPropertyChanged("TransferAllowance");
					this.OnTransferAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OtherAllowance", DbType = "Float")]
		public System.Nullable<double> OtherAllowance
		{
			get
			{
				return this._OtherAllowance;
			}
			set
			{
				if ((this._OtherAllowance != value))
				{
					this.OnOtherAllowanceChanging(value);
					this.SendPropertyChanging();
					this._OtherAllowance = value;
					this.SendPropertyChanged("OtherAllowance");
					this.OnOtherAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubDay", DbType = "Float")]
		public System.Nullable<double> SubDay
		{
			get
			{
				return this._SubDay;
			}
			set
			{
				if ((this._SubDay != value))
				{
					this.OnSubDayChanging(value);
					this.SendPropertyChanging();
					this._SubDay = value;
					this.SendPropertyChanged("SubDay");
					this.OnSubDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LateHours", DbType = "Float")]
		public System.Nullable<double> LateHours
		{
			get
			{
				return this._LateHours;
			}
			set
			{
				if ((this._LateHours != value))
				{
					this.OnLateHoursChanging(value);
					this.SendPropertyChanging();
					this._LateHours = value;
					this.SendPropertyChanged("LateHours");
					this.OnLateHoursChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubJaza", DbType = "Float")]
		public System.Nullable<double> SubJaza
		{
			get
			{
				return this._SubJaza;
			}
			set
			{
				if ((this._SubJaza != value))
				{
					this.OnSubJazaChanging(value);
					this.SendPropertyChanging();
					this._SubJaza = value;
					this.SendPropertyChanged("SubJaza");
					this.OnSubJazaChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubOther", DbType = "Float")]
		public System.Nullable<double> SubOther
		{
			get
			{
				return this._SubOther;
			}
			set
			{
				if ((this._SubOther != value))
				{
					this.OnSubOtherChanging(value);
					this.SendPropertyChanging();
					this._SubOther = value;
					this.SendPropertyChanged("SubOther");
					this.OnSubOtherChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MandateDay", DbType = "Float")]
		public System.Nullable<double> MandateDay
		{
			get
			{
				return this._MandateDay;
			}
			set
			{
				if ((this._MandateDay != value))
				{
					this.OnMandateDayChanging(value);
					this.SendPropertyChanging();
					this._MandateDay = value;
					this.SendPropertyChanged("MandateDay");
					this.OnMandateDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialInsuranceComp", DbType = "Float")]
		public System.Nullable<double> SocialInsuranceComp
		{
			get
			{
				return this._SocialInsuranceComp;
			}
			set
			{
				if ((this._SocialInsuranceComp != value))
				{
					this.OnSocialInsuranceCompChanging(value);
					this.SendPropertyChanging();
					this._SocialInsuranceComp = value;
					this.SendPropertyChanged("SocialInsuranceComp");
					this.OnSocialInsuranceCompChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SocialInsurance", DbType = "Float")]
		public System.Nullable<double> SocialInsurance
		{
			get
			{
				return this._SocialInsurance;
			}
			set
			{
				if ((this._SocialInsurance != value))
				{
					this.OnSocialInsuranceChanging(value);
					this.SendPropertyChanging();
					this._SocialInsurance = value;
					this.SendPropertyChanged("SocialInsurance");
					this.OnSocialInsuranceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceMedicalCom", DbType = "Float")]
		public System.Nullable<double> InsuranceMedicalCom
		{
			get
			{
				return this._InsuranceMedicalCom;
			}
			set
			{
				if ((this._InsuranceMedicalCom != value))
				{
					this.OnInsuranceMedicalComChanging(value);
					this.SendPropertyChanging();
					this._InsuranceMedicalCom = value;
					this.SendPropertyChanged("InsuranceMedicalCom");
					this.OnInsuranceMedicalComChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceMedical", DbType = "Float")]
		public System.Nullable<double> InsuranceMedical
		{
			get
			{
				return this._InsuranceMedical;
			}
			set
			{
				if ((this._InsuranceMedical != value))
				{
					this.OnInsuranceMedicalChanging(value);
					this.SendPropertyChanging();
					this._InsuranceMedical = value;
					this.SendPropertyChanged("InsuranceMedical");
					this.OnInsuranceMedicalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Advance", DbType = "Float")]
		public System.Nullable<double> Advance
		{
			get
			{
				return this._Advance;
			}
			set
			{
				if ((this._Advance != value))
				{
					this.OnAdvanceChanging(value);
					this.SendPropertyChanging();
					this._Advance = value;
					this.SendPropertyChanged("Advance");
					this.OnAdvanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rewards", DbType = "Float")]
		public System.Nullable<double> Rewards
		{
			get
			{
				return this._Rewards;
			}
			set
			{
				if ((this._Rewards != value))
				{
					this.OnRewardsChanging(value);
					this.SendPropertyChanging();
					this._Rewards = value;
					this.SendPropertyChanged("Rewards");
					this.OnRewardsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Bank", DbType = "Int")]
		public System.Nullable<int> Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					if (this._T_Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNo", DbType = "VarChar(30)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalaryStatus", DbType = "Bit")]
		public System.Nullable<bool> SalaryStatus
		{
			get
			{
				return this._SalaryStatus;
			}
			set
			{
				if ((this._SalaryStatus != value))
				{
					this.OnSalaryStatusChanging(value);
					this.SendPropertyChanging();
					this._SalaryStatus = value;
					this.SendPropertyChanged("SalaryStatus");
					this.OnSalaryStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPrint", DbType = "Bit")]
		public System.Nullable<bool> IsPrint
		{
			get
			{
				return this._IsPrint;
			}
			set
			{
				if ((this._IsPrint != value))
				{
					this.OnIsPrintChanging(value);
					this.SendPropertyChanging();
					this._IsPrint = value;
					this.SendPropertyChanged("IsPrint");
					this.OnIsPrintChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalSpell", DbType = "VarChar(MAX)")]
		public string SalSpell
		{
			get
			{
				return this._SalSpell;
			}
			set
			{
				if ((this._SalSpell != value))
				{
					this.OnSalSpellChanging(value);
					this.SendPropertyChanging();
					this._SalSpell = value;
					this.SendPropertyChanged("SalSpell");
					this.OnSalSpellChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddDay", DbType = "Float")]
		public System.Nullable<double> AddDay
		{
			get
			{
				return this._AddDay;
			}
			set
			{
				if ((this._AddDay != value))
				{
					this.OnAddDayChanging(value);
					this.SendPropertyChanging();
					this._AddDay = value;
					this.SendPropertyChanged("AddDay");
					this.OnAddDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddHour", DbType = "Float")]
		public System.Nullable<double> AddHour
		{
			get
			{
				return this._AddHour;
			}
			set
			{
				if ((this._AddHour != value))
				{
					this.OnAddHourChanging(value);
					this.SendPropertyChanging();
					this._AddHour = value;
					this.SendPropertyChanged("AddHour");
					this.OnAddHourChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SectionNo", DbType = "Int")]
		public System.Nullable<int> SectionNo
		{
			get
			{
				return this._SectionNo;
			}
			set
			{
				if ((this._SectionNo != value))
				{
					if (this._T_Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionNoChanging(value);
					this.SendPropertyChanging();
					this._SectionNo = value;
					this.SendPropertyChanged("SectionNo");
					this.OnSectionNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId2", DbType = "Float")]
		public System.Nullable<double> GadeId2
		{
			get
			{
				return this._GadeId2;
			}
			set
			{
				if ((this._GadeId2 != value))
				{
					this.OnGadeId2Changing(value);
					this.SendPropertyChanging();
					this._GadeId2 = value;
					this.SendPropertyChanged("GadeId2");
					this.OnGadeId2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalAcc", DbType = "VarChar(30)")]
		public string SalAcc
		{
			get
			{
				return this._SalAcc;
			}
			set
			{
				if ((this._SalAcc != value))
				{
					if (this._T_AccDef4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalAccChanging(value);
					this.SendPropertyChanging();
					this._SalAcc = value;
					this.SendPropertyChanged("SalAcc");
					this.OnSalAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubCallPhone", DbType = "Float")]
		public System.Nullable<double> SubCallPhone
		{
			get
			{
				return this._SubCallPhone;
			}
			set
			{
				if ((this._SubCallPhone != value))
				{
					this.OnSubCallPhoneChanging(value);
					this.SendPropertyChanging();
					this._SubCallPhone = value;
					this.SendPropertyChanged("SubCallPhone");
					this.OnSubCallPhoneChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubCommentary", DbType = "Float")]
		public System.Nullable<double> SubCommentary
		{
			get
			{
				return this._SubCommentary;
			}
			set
			{
				if ((this._SubCommentary != value))
				{
					this.OnSubCommentaryChanging(value);
					this.SendPropertyChanging();
					this._SubCommentary = value;
					this.SendPropertyChanged("SubCommentary");
					this.OnSubCommentaryChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoanAcc", DbType = "VarChar(30)")]
		public string LoanAcc
		{
			get
			{
				return this._LoanAcc;
			}
			set
			{
				if ((this._LoanAcc != value))
				{
					if (this._T_AccDef3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanAccChanging(value);
					this.SendPropertyChanging();
					this._LoanAcc = value;
					this.SendPropertyChanged("LoanAcc");
					this.OnLoanAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HouseAcc", DbType = "VarChar(30)")]
		public string HouseAcc
		{
			get
			{
				return this._HouseAcc;
			}
			set
			{
				if ((this._HouseAcc != value))
				{
					if (this._T_AccDef2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHouseAccChanging(value);
					this.SendPropertyChanging();
					this._HouseAcc = value;
					this.SendPropertyChanged("HouseAcc");
					this.OnHouseAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fGUID", DbType = "VarChar(40)")]
		public string fGUID
		{
			get
			{
				return this._fGUID;
			}
			set
			{
				if ((this._fGUID != value))
				{
					this.OnfGUIDChanging(value);
					this.SendPropertyChanging();
					this._fGUID = value;
					this.SendPropertyChanged("fGUID");
					this.OnfGUIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Total", DbType = "Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CostCenterEmp", DbType = "Int")]
		public System.Nullable<int> CostCenterEmp
		{
			get
			{
				return this._CostCenterEmp;
			}
			set
			{
				if ((this._CostCenterEmp != value))
				{
					if (this._T_CstTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostCenterEmpChanging(value);
					this.SendPropertyChanging();
					this._CostCenterEmp = value;
					this.SendPropertyChanged("CostCenterEmp");
					this.OnCostCenterEmpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankBR", DbType = "VarChar(30)")]
		public string BankBR
		{
			get
			{
				return this._BankBR;
			}
			set
			{
				if ((this._BankBR != value))
				{
					if (this._T_AccDef1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankBRChanging(value);
					this.SendPropertyChanging();
					this._BankBR = value;
					this.SendPropertyChanged("BankBR");
					this.OnBankBRChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccID", DbType = "Bit")]
		public System.Nullable<bool> AccID
		{
			get
			{
				return this._AccID;
			}
			set
			{
				if ((this._AccID != value))
				{
					this.OnAccIDChanging(value);
					this.SendPropertyChanging();
					this._AccID = value;
					this.SendPropertyChanged("AccID");
					this.OnAccIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId", DbType = "Float")]
		public System.Nullable<double> GadeId
		{
			get
			{
				return this._GadeId;
			}
			set
			{
				if ((this._GadeId != value))
				{
					this.OnGadeIdChanging(value);
					this.SendPropertyChanging();
					this._GadeId = value;
					this.SendPropertyChanged("GadeId");
					this.OnGadeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary", Storage = "_T_AccDef", ThisKey = "AccountNo", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_Salaries.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_Salaries.Add(this);
						this._AccountNo = value.AccDef_No;
					}
					else
					{
						this._AccountNo = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary1", Storage = "_T_AccDef1", ThisKey = "BankBR", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef1
		{
			get
			{
				return this._T_AccDef1.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef1.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef1.Entity = null;
						previousValue.T_Salaries1.Remove(this);
					}
					this._T_AccDef1.Entity = value;
					if ((value != null))
					{
						value.T_Salaries1.Add(this);
						this._BankBR = value.AccDef_No;
					}
					else
					{
						this._BankBR = default(string);
					}
					this.SendPropertyChanged("T_AccDef1");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary2", Storage = "_T_AccDef2", ThisKey = "HouseAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef2
		{
			get
			{
				return this._T_AccDef2.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef2.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef2.Entity = null;
						previousValue.T_Salaries2.Remove(this);
					}
					this._T_AccDef2.Entity = value;
					if ((value != null))
					{
						value.T_Salaries2.Add(this);
						this._HouseAcc = value.AccDef_No;
					}
					else
					{
						this._HouseAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef2");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary3", Storage = "_T_AccDef3", ThisKey = "LoanAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef3
		{
			get
			{
				return this._T_AccDef3.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef3.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef3.Entity = null;
						previousValue.T_Salaries3.Remove(this);
					}
					this._T_AccDef3.Entity = value;
					if ((value != null))
					{
						value.T_Salaries3.Add(this);
						this._LoanAcc = value.AccDef_No;
					}
					else
					{
						this._LoanAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef3");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Salary4", Storage = "_T_AccDef4", ThisKey = "SalAcc", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef4
		{
			get
			{
				return this._T_AccDef4.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef4.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef4.Entity = null;
						previousValue.T_Salaries4.Remove(this);
					}
					this._T_AccDef4.Entity = value;
					if ((value != null))
					{
						value.T_Salaries4.Add(this);
						this._SalAcc = value.AccDef_No;
					}
					else
					{
						this._SalAcc = default(string);
					}
					this.SendPropertyChanged("T_AccDef4");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Bank_T_Salary", Storage = "_T_Bank", ThisKey = "Bank", OtherKey = "Bank_No", IsForeignKey = true)]
		public T_Bank T_Bank
		{
			get
			{
				return this._T_Bank.Entity;
			}
			set
			{
				T_Bank previousValue = this._T_Bank.Entity;
				if (((previousValue != value)
							|| (this._T_Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Bank.Entity = null;
						previousValue.T_Salaries.Remove(this);
					}
					this._T_Bank.Entity = value;
					if ((value != null))
					{
						value.T_Salaries.Add(this);
						this._Bank = value.Bank_No;
					}
					else
					{
						this._Bank = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Bank");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_CstTbl_T_Salary", Storage = "_T_CstTbl", ThisKey = "CostCenterEmp", OtherKey = "Cst_ID", IsForeignKey = true)]
		public T_CstTbl T_CstTbl
		{
			get
			{
				return this._T_CstTbl.Entity;
			}
			set
			{
				T_CstTbl previousValue = this._T_CstTbl.Entity;
				if (((previousValue != value)
							|| (this._T_CstTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_CstTbl.Entity = null;
						previousValue.T_Salaries.Remove(this);
					}
					this._T_CstTbl.Entity = value;
					if ((value != null))
					{
						value.T_Salaries.Add(this);
						this._CostCenterEmp = value.Cst_ID;
					}
					else
					{
						this._CostCenterEmp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_CstTbl");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Dept_T_Salary", Storage = "_T_Dept", ThisKey = "DeptNo", OtherKey = "Dept_No", IsForeignKey = true)]
		public T_Dept T_Dept
		{
			get
			{
				return this._T_Dept.Entity;
			}
			set
			{
				T_Dept previousValue = this._T_Dept.Entity;
				if (((previousValue != value)
							|| (this._T_Dept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Dept.Entity = null;
						previousValue.T_Salaries.Remove(this);
					}
					this._T_Dept.Entity = value;
					if ((value != null))
					{
						value.T_Salaries.Add(this);
						this._DeptNo = value.Dept_No;
					}
					else
					{
						this._DeptNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Dept");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Salary", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Salaries.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Salaries.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Guarantor_T_Salary", Storage = "_T_Guarantor", ThisKey = "DirBoss", OtherKey = "Guarantor_No", IsForeignKey = true)]
		public T_Guarantor T_Guarantor
		{
			get
			{
				return this._T_Guarantor.Entity;
			}
			set
			{
				T_Guarantor previousValue = this._T_Guarantor.Entity;
				if (((previousValue != value)
							|| (this._T_Guarantor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Guarantor.Entity = null;
						previousValue.T_Salaries.Remove(this);
					}
					this._T_Guarantor.Entity = value;
					if ((value != null))
					{
						value.T_Salaries.Add(this);
						this._DirBoss = value.Guarantor_No;
					}
					else
					{
						this._DirBoss = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Guarantor");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Job_T_Salary", Storage = "_T_Job", ThisKey = "Job", OtherKey = "Job_No", IsForeignKey = true)]
		public T_Job T_Job
		{
			get
			{
				return this._T_Job.Entity;
			}
			set
			{
				T_Job previousValue = this._T_Job.Entity;
				if (((previousValue != value)
							|| (this._T_Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Job.Entity = null;
						previousValue.T_Salaries.Remove(this);
					}
					this._T_Job.Entity = value;
					if ((value != null))
					{
						value.T_Salaries.Add(this);
						this._Job = value.Job_No;
					}
					else
					{
						this._Job = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Job");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Section_T_Salary", Storage = "_T_Section", ThisKey = "SectionNo", OtherKey = "Section_No", IsForeignKey = true)]
		public T_Section T_Section
		{
			get
			{
				return this._T_Section.Entity;
			}
			set
			{
				T_Section previousValue = this._T_Section.Entity;
				if (((previousValue != value)
							|| (this._T_Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Section.Entity = null;
						previousValue.T_Salaries.Remove(this);
					}
					this._T_Section.Entity = value;
					if ((value != null))
					{
						value.T_Salaries.Add(this);
						this._SectionNo = value.Section_No;
					}
					else
					{
						this._SectionNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Section");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_SalaryOp")]
	public partial class T_SalaryOp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _SalaryOp_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private System.Nullable<int> _opTyp;

		private System.Nullable<int> _opMethod;

		private System.Nullable<int> _AddTo;

		private System.Nullable<int> _opCalc;

		private System.Nullable<double> _AddValue;

		private System.Nullable<int> _Usr_No;

		private System.Nullable<int> _Usr_NoEdite;

		private string _DateEdit;

		private string _Note;

		private System.Nullable<double> _ValueBefor;

		private System.Nullable<double> _ValueAfter;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_OpMethod> _T_OpMethod;

		private EntityRef<T_OpMethod> _T_OpMethod1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSalaryOp_IDChanging(string value);
		partial void OnSalaryOp_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnopTypChanging(System.Nullable<int> value);
		partial void OnopTypChanged();
		partial void OnopMethodChanging(System.Nullable<int> value);
		partial void OnopMethodChanged();
		partial void OnAddToChanging(System.Nullable<int> value);
		partial void OnAddToChanged();
		partial void OnopCalcChanging(System.Nullable<int> value);
		partial void OnopCalcChanged();
		partial void OnAddValueChanging(System.Nullable<double> value);
		partial void OnAddValueChanged();
		partial void OnUsr_NoChanging(System.Nullable<int> value);
		partial void OnUsr_NoChanged();
		partial void OnUsr_NoEditeChanging(System.Nullable<int> value);
		partial void OnUsr_NoEditeChanged();
		partial void OnDateEditChanging(string value);
		partial void OnDateEditChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnValueBeforChanging(System.Nullable<double> value);
		partial void OnValueBeforChanged();
		partial void OnValueAfterChanging(System.Nullable<double> value);
		partial void OnValueAfterChanged();
		#endregion

		public T_SalaryOp()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_OpMethod = default(EntityRef<T_OpMethod>);
			this._T_OpMethod1 = default(EntityRef<T_OpMethod>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalaryOp_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string SalaryOp_ID
		{
			get
			{
				return this._SalaryOp_ID;
			}
			set
			{
				if ((this._SalaryOp_ID != value))
				{
					this.OnSalaryOp_IDChanging(value);
					this.SendPropertyChanging();
					this._SalaryOp_ID = value;
					this.SendPropertyChanged("SalaryOp_ID");
					this.OnSalaryOp_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_opTyp", DbType = "Int")]
		public System.Nullable<int> opTyp
		{
			get
			{
				return this._opTyp;
			}
			set
			{
				if ((this._opTyp != value))
				{
					this.OnopTypChanging(value);
					this.SendPropertyChanging();
					this._opTyp = value;
					this.SendPropertyChanged("opTyp");
					this.OnopTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_opMethod", DbType = "Int")]
		public System.Nullable<int> opMethod
		{
			get
			{
				return this._opMethod;
			}
			set
			{
				if ((this._opMethod != value))
				{
					this.OnopMethodChanging(value);
					this.SendPropertyChanging();
					this._opMethod = value;
					this.SendPropertyChanged("opMethod");
					this.OnopMethodChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddTo", DbType = "Int")]
		public System.Nullable<int> AddTo
		{
			get
			{
				return this._AddTo;
			}
			set
			{
				if ((this._AddTo != value))
				{
					if (this._T_OpMethod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddToChanging(value);
					this.SendPropertyChanging();
					this._AddTo = value;
					this.SendPropertyChanged("AddTo");
					this.OnAddToChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_opCalc", DbType = "Int")]
		public System.Nullable<int> opCalc
		{
			get
			{
				return this._opCalc;
			}
			set
			{
				if ((this._opCalc != value))
				{
					if (this._T_OpMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnopCalcChanging(value);
					this.SendPropertyChanging();
					this._opCalc = value;
					this.SendPropertyChanged("opCalc");
					this.OnopCalcChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddValue", DbType = "Float")]
		public System.Nullable<double> AddValue
		{
			get
			{
				return this._AddValue;
			}
			set
			{
				if ((this._AddValue != value))
				{
					this.OnAddValueChanging(value);
					this.SendPropertyChanging();
					this._AddValue = value;
					this.SendPropertyChanged("AddValue");
					this.OnAddValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr_No", DbType = "Int")]
		public System.Nullable<int> Usr_No
		{
			get
			{
				return this._Usr_No;
			}
			set
			{
				if ((this._Usr_No != value))
				{
					this.OnUsr_NoChanging(value);
					this.SendPropertyChanging();
					this._Usr_No = value;
					this.SendPropertyChanged("Usr_No");
					this.OnUsr_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr_NoEdite", DbType = "Int")]
		public System.Nullable<int> Usr_NoEdite
		{
			get
			{
				return this._Usr_NoEdite;
			}
			set
			{
				if ((this._Usr_NoEdite != value))
				{
					this.OnUsr_NoEditeChanging(value);
					this.SendPropertyChanging();
					this._Usr_NoEdite = value;
					this.SendPropertyChanged("Usr_NoEdite");
					this.OnUsr_NoEditeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateEdit", DbType = "VarChar(10)")]
		public string DateEdit
		{
			get
			{
				return this._DateEdit;
			}
			set
			{
				if ((this._DateEdit != value))
				{
					this.OnDateEditChanging(value);
					this.SendPropertyChanging();
					this._DateEdit = value;
					this.SendPropertyChanged("DateEdit");
					this.OnDateEditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ValueBefor", DbType = "Float")]
		public System.Nullable<double> ValueBefor
		{
			get
			{
				return this._ValueBefor;
			}
			set
			{
				if ((this._ValueBefor != value))
				{
					this.OnValueBeforChanging(value);
					this.SendPropertyChanging();
					this._ValueBefor = value;
					this.SendPropertyChanged("ValueBefor");
					this.OnValueBeforChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ValueAfter", DbType = "Float")]
		public System.Nullable<double> ValueAfter
		{
			get
			{
				return this._ValueAfter;
			}
			set
			{
				if ((this._ValueAfter != value))
				{
					this.OnValueAfterChanging(value);
					this.SendPropertyChanging();
					this._ValueAfter = value;
					this.SendPropertyChanged("ValueAfter");
					this.OnValueAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_SalaryOp", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_SalaryOps.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_SalaryOps.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_SalaryOp", Storage = "_T_OpMethod", ThisKey = "opCalc", OtherKey = "Method_No", IsForeignKey = true)]
		public T_OpMethod T_OpMethod
		{
			get
			{
				return this._T_OpMethod.Entity;
			}
			set
			{
				T_OpMethod previousValue = this._T_OpMethod.Entity;
				if (((previousValue != value)
							|| (this._T_OpMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OpMethod.Entity = null;
						previousValue.T_SalaryOps.Remove(this);
					}
					this._T_OpMethod.Entity = value;
					if ((value != null))
					{
						value.T_SalaryOps.Add(this);
						this._opCalc = value.Method_No;
					}
					else
					{
						this._opCalc = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OpMethod");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_SalaryOp1", Storage = "_T_OpMethod1", ThisKey = "AddTo", OtherKey = "Method_No", IsForeignKey = true)]
		public T_OpMethod T_OpMethod1
		{
			get
			{
				return this._T_OpMethod1.Entity;
			}
			set
			{
				T_OpMethod previousValue = this._T_OpMethod1.Entity;
				if (((previousValue != value)
							|| (this._T_OpMethod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OpMethod1.Entity = null;
						previousValue.T_SalaryOps1.Remove(this);
					}
					this._T_OpMethod1.Entity = value;
					if ((value != null))
					{
						value.T_SalaryOps1.Add(this);
						this._AddTo = value.Method_No;
					}
					else
					{
						this._AddTo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OpMethod1");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_SalDiscount")]
	public partial class T_SalDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Discont_ID;

		private int _warnNo;

		private string _warnDate;

		private System.Nullable<int> _SubTyp;

		private string _SalDate;

		private System.Nullable<int> _CalculateNo;

		private System.Nullable<int> _DayOfMonth;

		private string _EmpID;

		private System.Nullable<double> _ACount;

		private System.Nullable<double> _SubValue;

		private System.Nullable<double> _SubTotaly;

		private string _Note;

		private System.Nullable<bool> _IFState;

		private System.Nullable<bool> _MinuteTyp;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_OpMethod> _T_OpMethod;

		private EntityRef<T_SubTyp> _T_SubTyp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnDiscont_IDChanging(string value);
		partial void OnDiscont_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnSubTypChanging(System.Nullable<int> value);
		partial void OnSubTypChanged();
		partial void OnSalDateChanging(string value);
		partial void OnSalDateChanged();
		partial void OnCalculateNoChanging(System.Nullable<int> value);
		partial void OnCalculateNoChanged();
		partial void OnDayOfMonthChanging(System.Nullable<int> value);
		partial void OnDayOfMonthChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnACountChanging(System.Nullable<double> value);
		partial void OnACountChanged();
		partial void OnSubValueChanging(System.Nullable<double> value);
		partial void OnSubValueChanged();
		partial void OnSubTotalyChanging(System.Nullable<double> value);
		partial void OnSubTotalyChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		partial void OnMinuteTypChanging(System.Nullable<bool> value);
		partial void OnMinuteTypChanged();
		#endregion

		public T_SalDiscount()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_OpMethod = default(EntityRef<T_OpMethod>);
			this._T_SubTyp = default(EntityRef<T_SubTyp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Discont_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Discont_ID
		{
			get
			{
				return this._Discont_ID;
			}
			set
			{
				if ((this._Discont_ID != value))
				{
					this.OnDiscont_IDChanging(value);
					this.SendPropertyChanging();
					this._Discont_ID = value;
					this.SendPropertyChanged("Discont_ID");
					this.OnDiscont_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubTyp", DbType = "Int")]
		public System.Nullable<int> SubTyp
		{
			get
			{
				return this._SubTyp;
			}
			set
			{
				if ((this._SubTyp != value))
				{
					if (this._T_SubTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubTypChanging(value);
					this.SendPropertyChanging();
					this._SubTyp = value;
					this.SendPropertyChanged("SubTyp");
					this.OnSubTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalDate", DbType = "VarChar(10)")]
		public string SalDate
		{
			get
			{
				return this._SalDate;
			}
			set
			{
				if ((this._SalDate != value))
				{
					this.OnSalDateChanging(value);
					this.SendPropertyChanging();
					this._SalDate = value;
					this.SendPropertyChanged("SalDate");
					this.OnSalDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculateNo", DbType = "Int")]
		public System.Nullable<int> CalculateNo
		{
			get
			{
				return this._CalculateNo;
			}
			set
			{
				if ((this._CalculateNo != value))
				{
					if (this._T_OpMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalculateNoChanging(value);
					this.SendPropertyChanging();
					this._CalculateNo = value;
					this.SendPropertyChanged("CalculateNo");
					this.OnCalculateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayOfMonth", DbType = "Int")]
		public System.Nullable<int> DayOfMonth
		{
			get
			{
				return this._DayOfMonth;
			}
			set
			{
				if ((this._DayOfMonth != value))
				{
					this.OnDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._DayOfMonth = value;
					this.SendPropertyChanged("DayOfMonth");
					this.OnDayOfMonthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ACount", DbType = "Float")]
		public System.Nullable<double> ACount
		{
			get
			{
				return this._ACount;
			}
			set
			{
				if ((this._ACount != value))
				{
					this.OnACountChanging(value);
					this.SendPropertyChanging();
					this._ACount = value;
					this.SendPropertyChanged("ACount");
					this.OnACountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubValue", DbType = "Float")]
		public System.Nullable<double> SubValue
		{
			get
			{
				return this._SubValue;
			}
			set
			{
				if ((this._SubValue != value))
				{
					this.OnSubValueChanging(value);
					this.SendPropertyChanging();
					this._SubValue = value;
					this.SendPropertyChanged("SubValue");
					this.OnSubValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubTotaly", DbType = "Float")]
		public System.Nullable<double> SubTotaly
		{
			get
			{
				return this._SubTotaly;
			}
			set
			{
				if ((this._SubTotaly != value))
				{
					this.OnSubTotalyChanging(value);
					this.SendPropertyChanging();
					this._SubTotaly = value;
					this.SendPropertyChanged("SubTotaly");
					this.OnSubTotalyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MinuteTyp", DbType = "Bit")]
		public System.Nullable<bool> MinuteTyp
		{
			get
			{
				return this._MinuteTyp;
			}
			set
			{
				if ((this._MinuteTyp != value))
				{
					this.OnMinuteTypChanging(value);
					this.SendPropertyChanging();
					this._MinuteTyp = value;
					this.SendPropertyChanged("MinuteTyp");
					this.OnMinuteTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_SalDiscount", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_SalDiscounts.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_SalDiscounts.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_SalDiscount", Storage = "_T_OpMethod", ThisKey = "CalculateNo", OtherKey = "Method_No", IsForeignKey = true)]
		public T_OpMethod T_OpMethod
		{
			get
			{
				return this._T_OpMethod.Entity;
			}
			set
			{
				T_OpMethod previousValue = this._T_OpMethod.Entity;
				if (((previousValue != value)
							|| (this._T_OpMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OpMethod.Entity = null;
						previousValue.T_SalDiscounts.Remove(this);
					}
					this._T_OpMethod.Entity = value;
					if ((value != null))
					{
						value.T_SalDiscounts.Add(this);
						this._CalculateNo = value.Method_No;
					}
					else
					{
						this._CalculateNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OpMethod");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SubTyp_T_SalDiscount", Storage = "_T_SubTyp", ThisKey = "SubTyp", OtherKey = "SubNo", IsForeignKey = true)]
		public T_SubTyp T_SubTyp
		{
			get
			{
				return this._T_SubTyp.Entity;
			}
			set
			{
				T_SubTyp previousValue = this._T_SubTyp.Entity;
				if (((previousValue != value)
							|| (this._T_SubTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SubTyp.Entity = null;
						previousValue.T_SalDiscounts.Remove(this);
					}
					this._T_SubTyp.Entity = value;
					if ((value != null))
					{
						value.T_SalDiscounts.Add(this);
						this._SubTyp = value.SubNo;
					}
					else
					{
						this._SubTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SubTyp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_SalStatus")]
	public partial class T_SalStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _SalStatusNo;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_Emp> _T_Emps;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSalStatusNoChanging(int value);
		partial void OnSalStatusNoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_SalStatus()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalStatusNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int SalStatusNo
		{
			get
			{
				return this._SalStatusNo;
			}
			set
			{
				if ((this._SalStatusNo != value))
				{
					this.OnSalStatusNoChanging(value);
					this.SendPropertyChanging();
					this._SalStatusNo = value;
					this.SendPropertyChanged("SalStatusNo");
					this.OnSalStatusNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(20)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(20)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SalStatus_T_Emp", Storage = "_T_Emps", ThisKey = "SalStatusNo", OtherKey = "StatusSal")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_SalStatus = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_SalStatus = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Secretariats")]
	public partial class T_Secretariat : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Secretariats_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private string _StartDate;

		private string _EndDate;

		private System.Nullable<int> _SecretariatsTyp;

		private string _Note;

		private System.Nullable<bool> _IFState;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_SecretariatsTyp> _T_SecretariatsTyp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSecretariats_IDChanging(string value);
		partial void OnSecretariats_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnStartDateChanging(string value);
		partial void OnStartDateChanged();
		partial void OnEndDateChanging(string value);
		partial void OnEndDateChanged();
		partial void OnSecretariatsTypChanging(System.Nullable<int> value);
		partial void OnSecretariatsTypChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		#endregion

		public T_Secretariat()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_SecretariatsTyp = default(EntityRef<T_SecretariatsTyp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Secretariats_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Secretariats_ID
		{
			get
			{
				return this._Secretariats_ID;
			}
			set
			{
				if ((this._Secretariats_ID != value))
				{
					this.OnSecretariats_IDChanging(value);
					this.SendPropertyChanging();
					this._Secretariats_ID = value;
					this.SendPropertyChanged("Secretariats_ID");
					this.OnSecretariats_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDate", DbType = "VarChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDate", DbType = "VarChar(10)")]
		public string EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecretariatsTyp", DbType = "Int")]
		public System.Nullable<int> SecretariatsTyp
		{
			get
			{
				return this._SecretariatsTyp;
			}
			set
			{
				if ((this._SecretariatsTyp != value))
				{
					if (this._T_SecretariatsTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecretariatsTypChanging(value);
					this.SendPropertyChanging();
					this._SecretariatsTyp = value;
					this.SendPropertyChanged("SecretariatsTyp");
					this.OnSecretariatsTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Secretariat", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Secretariats.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Secretariats.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SecretariatsTyp_T_Secretariat", Storage = "_T_SecretariatsTyp", ThisKey = "SecretariatsTyp", OtherKey = "SecretariatTyp_No", IsForeignKey = true)]
		public T_SecretariatsTyp T_SecretariatsTyp
		{
			get
			{
				return this._T_SecretariatsTyp.Entity;
			}
			set
			{
				T_SecretariatsTyp previousValue = this._T_SecretariatsTyp.Entity;
				if (((previousValue != value)
							|| (this._T_SecretariatsTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SecretariatsTyp.Entity = null;
						previousValue.T_Secretariats.Remove(this);
					}
					this._T_SecretariatsTyp.Entity = value;
					if ((value != null))
					{
						value.T_Secretariats.Add(this);
						this._SecretariatsTyp = value.SecretariatTyp_No;
					}
					else
					{
						this._SecretariatsTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SecretariatsTyp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_SecretariatsTyp")]
	public partial class T_SecretariatsTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _SecretariatTyp_ID;

		private int _SecretariatTyp_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_Secretariat> _T_Secretariats;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSecretariatTyp_IDChanging(string value);
		partial void OnSecretariatTyp_IDChanged();
		partial void OnSecretariatTyp_NoChanging(int value);
		partial void OnSecretariatTyp_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_SecretariatsTyp()
		{
			this._T_Secretariats = new EntitySet<T_Secretariat>(new Action<T_Secretariat>(this.attach_T_Secretariats), new Action<T_Secretariat>(this.detach_T_Secretariats));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecretariatTyp_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string SecretariatTyp_ID
		{
			get
			{
				return this._SecretariatTyp_ID;
			}
			set
			{
				if ((this._SecretariatTyp_ID != value))
				{
					this.OnSecretariatTyp_IDChanging(value);
					this.SendPropertyChanging();
					this._SecretariatTyp_ID = value;
					this.SendPropertyChanged("SecretariatTyp_ID");
					this.OnSecretariatTyp_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecretariatTyp_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int SecretariatTyp_No
		{
			get
			{
				return this._SecretariatTyp_No;
			}
			set
			{
				if ((this._SecretariatTyp_No != value))
				{
					this.OnSecretariatTyp_NoChanging(value);
					this.SendPropertyChanging();
					this._SecretariatTyp_No = value;
					this.SendPropertyChanged("SecretariatTyp_No");
					this.OnSecretariatTyp_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(50)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(50)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SecretariatsTyp_T_Secretariat", Storage = "_T_Secretariats", ThisKey = "SecretariatTyp_No", OtherKey = "SecretariatsTyp")]
		public EntitySet<T_Secretariat> T_Secretariats
		{
			get
			{
				return this._T_Secretariats;
			}
			set
			{
				this._T_Secretariats.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Secretariats(T_Secretariat entity)
		{
			this.SendPropertyChanging();
			entity.T_SecretariatsTyp = this;
		}

		private void detach_T_Secretariats(T_Secretariat entity)
		{
			this.SendPropertyChanging();
			entity.T_SecretariatsTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Section")]
	public partial class T_Section : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Section_ID;

		private int _Section_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private string _BossName;

		private string _Phone;

		private string _Fax;

		private EntitySet<T_Emp> _T_Emps;

		private EntitySet<T_Salary> _T_Salaries;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSection_IDChanging(string value);
		partial void OnSection_IDChanged();
		partial void OnSection_NoChanging(int value);
		partial void OnSection_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnBossNameChanging(string value);
		partial void OnBossNameChanged();
		partial void OnPhoneChanging(string value);
		partial void OnPhoneChanged();
		partial void OnFaxChanging(string value);
		partial void OnFaxChanged();
		#endregion

		public T_Section()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			this._T_Salaries = new EntitySet<T_Salary>(new Action<T_Salary>(this.attach_T_Salaries), new Action<T_Salary>(this.detach_T_Salaries));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Section_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Section_ID
		{
			get
			{
				return this._Section_ID;
			}
			set
			{
				if ((this._Section_ID != value))
				{
					this.OnSection_IDChanging(value);
					this.SendPropertyChanging();
					this._Section_ID = value;
					this.SendPropertyChanged("Section_ID");
					this.OnSection_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Section_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Section_No
		{
			get
			{
				return this._Section_No;
			}
			set
			{
				if ((this._Section_No != value))
				{
					this.OnSection_NoChanging(value);
					this.SendPropertyChanging();
					this._Section_No = value;
					this.SendPropertyChanged("Section_No");
					this.OnSection_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossName", DbType = "VarChar(30)")]
		public string BossName
		{
			get
			{
				return this._BossName;
			}
			set
			{
				if ((this._BossName != value))
				{
					this.OnBossNameChanging(value);
					this.SendPropertyChanging();
					this._BossName = value;
					this.SendPropertyChanged("BossName");
					this.OnBossNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Phone", DbType = "VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Section_T_Emp", Storage = "_T_Emps", ThisKey = "Section_No", OtherKey = "Section")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Section_T_Salary", Storage = "_T_Salaries", ThisKey = "Section_No", OtherKey = "SectionNo")]
		public EntitySet<T_Salary> T_Salaries
		{
			get
			{
				return this._T_Salaries;
			}
			set
			{
				this._T_Salaries.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Section = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Section = null;
		}

		private void attach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Section = this;
		}

		private void detach_T_Salaries(T_Salary entity)
		{
			this.SendPropertyChanging();
			entity.T_Section = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_sertyp")]
	public partial class T_sertyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Serv_ID;

		private string _Serv_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private string _accno;

		private string _acched;

		private string _Usr;

		private string _UsrNam;

		private System.Nullable<int> _CompanyID;

		private EntitySet<T_tran> _T_trans;

		private EntityRef<T_AccDef> _T_AccDef;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnServ_IDChanging(int value);
		partial void OnServ_IDChanged();
		partial void OnServ_NoChanging(string value);
		partial void OnServ_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnaccnoChanging(string value);
		partial void OnaccnoChanged();
		partial void OnacchedChanging(string value);
		partial void OnacchedChanged();
		partial void OnUsrChanging(string value);
		partial void OnUsrChanged();
		partial void OnUsrNamChanging(string value);
		partial void OnUsrNamChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_sertyp()
		{
			this._T_trans = new EntitySet<T_tran>(new Action<T_tran>(this.attach_T_trans), new Action<T_tran>(this.detach_T_trans));
			this._T_AccDef = default(EntityRef<T_AccDef>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Serv_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Serv_ID
		{
			get
			{
				return this._Serv_ID;
			}
			set
			{
				if ((this._Serv_ID != value))
				{
					this.OnServ_IDChanging(value);
					this.SendPropertyChanging();
					this._Serv_ID = value;
					this.SendPropertyChanged("Serv_ID");
					this.OnServ_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Serv_No", DbType = "VarChar(30)")]
		public string Serv_No
		{
			get
			{
				return this._Serv_No;
			}
			set
			{
				if ((this._Serv_No != value))
				{
					this.OnServ_NoChanging(value);
					this.SendPropertyChanging();
					this._Serv_No = value;
					this.SendPropertyChanged("Serv_No");
					this.OnServ_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_accno", DbType = "VarChar(30)")]
		public string accno
		{
			get
			{
				return this._accno;
			}
			set
			{
				if ((this._accno != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccnoChanging(value);
					this.SendPropertyChanging();
					this._accno = value;
					this.SendPropertyChanged("accno");
					this.OnaccnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_acched", DbType = "VarChar(30)")]
		public string acched
		{
			get
			{
				return this._acched;
			}
			set
			{
				if ((this._acched != value))
				{
					this.OnacchedChanging(value);
					this.SendPropertyChanging();
					this._acched = value;
					this.SendPropertyChanged("acched");
					this.OnacchedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr", DbType = "VarChar(3)")]
		public string Usr
		{
			get
			{
				return this._Usr;
			}
			set
			{
				if ((this._Usr != value))
				{
					this.OnUsrChanging(value);
					this.SendPropertyChanging();
					this._Usr = value;
					this.SendPropertyChanged("Usr");
					this.OnUsrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UsrNam", DbType = "VarChar(50)")]
		public string UsrNam
		{
			get
			{
				return this._UsrNam;
			}
			set
			{
				if ((this._UsrNam != value))
				{
					this.OnUsrNamChanging(value);
					this.SendPropertyChanging();
					this._UsrNam = value;
					this.SendPropertyChanged("UsrNam");
					this.OnUsrNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_sertyp_T_tran", Storage = "_T_trans", ThisKey = "Serv_ID", OtherKey = "typ")]
		public EntitySet<T_tran> T_trans
		{
			get
			{
				return this._T_trans;
			}
			set
			{
				this._T_trans.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_sertyp", Storage = "_T_AccDef", ThisKey = "accno", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_sertyps.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_sertyps.Add(this);
						this._accno = value.AccDef_No;
					}
					else
					{
						this._accno = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_trans(T_tran entity)
		{
			this.SendPropertyChanging();
			entity.T_sertyp = this;
		}

		private void detach_T_trans(T_tran entity)
		{
			this.SendPropertyChanging();
			entity.T_sertyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Sex")]
	public partial class T_Sex : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _SexNo;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_Emp> _T_Emps;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSexNoChanging(int value);
		partial void OnSexNoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_Sex()
		{
			this._T_Emps = new EntitySet<T_Emp>(new Action<T_Emp>(this.attach_T_Emps), new Action<T_Emp>(this.detach_T_Emps));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SexNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int SexNo
		{
			get
			{
				return this._SexNo;
			}
			set
			{
				if ((this._SexNo != value))
				{
					this.OnSexNoChanging(value);
					this.SendPropertyChanging();
					this._SexNo = value;
					this.SendPropertyChanged("SexNo");
					this.OnSexNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(20)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(20)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Sex_T_Emp", Storage = "_T_Emps", ThisKey = "SexNo", OtherKey = "Sex")]
		public EntitySet<T_Emp> T_Emps
		{
			get
			{
				return this._T_Emps;
			}
			set
			{
				this._T_Emps.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Sex = this;
		}

		private void detach_T_Emps(T_Emp entity)
		{
			this.SendPropertyChanging();
			entity.T_Sex = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_SINVDET")]
	public partial class T_SINVDET : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _SInvDet_ID;

		private string _SInvNo;

		private System.Nullable<int> _SInvId;

		private System.Nullable<int> _SInvSer;

		private string _SItmNo;

		private System.Nullable<double> _SCost;

		private System.Nullable<double> _SQty;

		private string _SItmDes;

		private string _SItmUnt;

		private string _SItmDesE;

		private string _SItmUntE;

		private System.Nullable<double> _SItmUntPak;

		private System.Nullable<int> _SStoreNo;

		private System.Nullable<double> _SPrice;

		private System.Nullable<double> _SAmount;

		private System.Nullable<double> _SRealQty;

		private System.Nullable<double> _SitmInvDsc;

		private string _SDatExper;

		private System.Nullable<double> _SItmDis;

		private System.Nullable<int> _SItmTyp;

		private System.Nullable<int> _SItmIndex;

		private System.Nullable<double> _SItmWight;

		private System.Nullable<double> _SItmWight_T;

		private System.Nullable<double> _SQtyDef;

		private System.Nullable<double> _SPriceDef;

		private System.Nullable<int> _SInvIdHEAD;

		private System.Nullable<double> _SItmTax;

		private EntityRef<T_INVDET> _T_INVDET;

		private EntityRef<T_INVHED> _T_INVHED;

		private EntityRef<T_Item> _T_Item;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSInvDet_IDChanging(int value);
		partial void OnSInvDet_IDChanged();
		partial void OnSInvNoChanging(string value);
		partial void OnSInvNoChanged();
		partial void OnSInvIdChanging(System.Nullable<int> value);
		partial void OnSInvIdChanged();
		partial void OnSInvSerChanging(System.Nullable<int> value);
		partial void OnSInvSerChanged();
		partial void OnSItmNoChanging(string value);
		partial void OnSItmNoChanged();
		partial void OnSCostChanging(System.Nullable<double> value);
		partial void OnSCostChanged();
		partial void OnSQtyChanging(System.Nullable<double> value);
		partial void OnSQtyChanged();
		partial void OnSItmDesChanging(string value);
		partial void OnSItmDesChanged();
		partial void OnSItmUntChanging(string value);
		partial void OnSItmUntChanged();
		partial void OnSItmDesEChanging(string value);
		partial void OnSItmDesEChanged();
		partial void OnSItmUntEChanging(string value);
		partial void OnSItmUntEChanged();
		partial void OnSItmUntPakChanging(System.Nullable<double> value);
		partial void OnSItmUntPakChanged();
		partial void OnSStoreNoChanging(System.Nullable<int> value);
		partial void OnSStoreNoChanged();
		partial void OnSPriceChanging(System.Nullable<double> value);
		partial void OnSPriceChanged();
		partial void OnSAmountChanging(System.Nullable<double> value);
		partial void OnSAmountChanged();
		partial void OnSRealQtyChanging(System.Nullable<double> value);
		partial void OnSRealQtyChanged();
		partial void OnSitmInvDscChanging(System.Nullable<double> value);
		partial void OnSitmInvDscChanged();
		partial void OnSDatExperChanging(string value);
		partial void OnSDatExperChanged();
		partial void OnSItmDisChanging(System.Nullable<double> value);
		partial void OnSItmDisChanged();
		partial void OnSItmTypChanging(System.Nullable<int> value);
		partial void OnSItmTypChanged();
		partial void OnSItmIndexChanging(System.Nullable<int> value);
		partial void OnSItmIndexChanged();
		partial void OnSItmWightChanging(System.Nullable<double> value);
		partial void OnSItmWightChanged();
		partial void OnSItmWight_TChanging(System.Nullable<double> value);
		partial void OnSItmWight_TChanged();
		partial void OnSQtyDefChanging(System.Nullable<double> value);
		partial void OnSQtyDefChanged();
		partial void OnSPriceDefChanging(System.Nullable<double> value);
		partial void OnSPriceDefChanged();
		partial void OnSInvIdHEADChanging(System.Nullable<int> value);
		partial void OnSInvIdHEADChanged();
		partial void OnSItmTaxChanging(System.Nullable<double> value);
		partial void OnSItmTaxChanged();
		#endregion

		public T_SINVDET()
		{
			this._T_INVDET = default(EntityRef<T_INVDET>);
			this._T_INVHED = default(EntityRef<T_INVHED>);
			this._T_Item = default(EntityRef<T_Item>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SInvDet_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int SInvDet_ID
		{
			get
			{
				return this._SInvDet_ID;
			}
			set
			{
				if ((this._SInvDet_ID != value))
				{
					this.OnSInvDet_IDChanging(value);
					this.SendPropertyChanging();
					this._SInvDet_ID = value;
					this.SendPropertyChanged("SInvDet_ID");
					this.OnSInvDet_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SInvNo", DbType = "VarChar(10)")]
		public string SInvNo
		{
			get
			{
				return this._SInvNo;
			}
			set
			{
				if ((this._SInvNo != value))
				{
					this.OnSInvNoChanging(value);
					this.SendPropertyChanging();
					this._SInvNo = value;
					this.SendPropertyChanged("SInvNo");
					this.OnSInvNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SInvId", DbType = "Int")]
		public System.Nullable<int> SInvId
		{
			get
			{
				return this._SInvId;
			}
			set
			{
				if ((this._SInvId != value))
				{
					if (this._T_INVDET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSInvIdChanging(value);
					this.SendPropertyChanging();
					this._SInvId = value;
					this.SendPropertyChanged("SInvId");
					this.OnSInvIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SInvSer", DbType = "Int")]
		public System.Nullable<int> SInvSer
		{
			get
			{
				return this._SInvSer;
			}
			set
			{
				if ((this._SInvSer != value))
				{
					this.OnSInvSerChanging(value);
					this.SendPropertyChanging();
					this._SInvSer = value;
					this.SendPropertyChanged("SInvSer");
					this.OnSInvSerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmNo", DbType = "VarChar(50)")]
		public string SItmNo
		{
			get
			{
				return this._SItmNo;
			}
			set
			{
				if ((this._SItmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSItmNoChanging(value);
					this.SendPropertyChanging();
					this._SItmNo = value;
					this.SendPropertyChanged("SItmNo");
					this.OnSItmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SCost", DbType = "Float")]
		public System.Nullable<double> SCost
		{
			get
			{
				return this._SCost;
			}
			set
			{
				if ((this._SCost != value))
				{
					this.OnSCostChanging(value);
					this.SendPropertyChanging();
					this._SCost = value;
					this.SendPropertyChanged("SCost");
					this.OnSCostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SQty", DbType = "Float")]
		public System.Nullable<double> SQty
		{
			get
			{
				return this._SQty;
			}
			set
			{
				if ((this._SQty != value))
				{
					this.OnSQtyChanging(value);
					this.SendPropertyChanging();
					this._SQty = value;
					this.SendPropertyChanged("SQty");
					this.OnSQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmDes", DbType = "VarChar(100)")]
		public string SItmDes
		{
			get
			{
				return this._SItmDes;
			}
			set
			{
				if ((this._SItmDes != value))
				{
					this.OnSItmDesChanging(value);
					this.SendPropertyChanging();
					this._SItmDes = value;
					this.SendPropertyChanged("SItmDes");
					this.OnSItmDesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmUnt", DbType = "VarChar(100)")]
		public string SItmUnt
		{
			get
			{
				return this._SItmUnt;
			}
			set
			{
				if ((this._SItmUnt != value))
				{
					this.OnSItmUntChanging(value);
					this.SendPropertyChanging();
					this._SItmUnt = value;
					this.SendPropertyChanged("SItmUnt");
					this.OnSItmUntChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmDesE", DbType = "VarChar(100)")]
		public string SItmDesE
		{
			get
			{
				return this._SItmDesE;
			}
			set
			{
				if ((this._SItmDesE != value))
				{
					this.OnSItmDesEChanging(value);
					this.SendPropertyChanging();
					this._SItmDesE = value;
					this.SendPropertyChanged("SItmDesE");
					this.OnSItmDesEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmUntE", DbType = "VarChar(100)")]
		public string SItmUntE
		{
			get
			{
				return this._SItmUntE;
			}
			set
			{
				if ((this._SItmUntE != value))
				{
					this.OnSItmUntEChanging(value);
					this.SendPropertyChanging();
					this._SItmUntE = value;
					this.SendPropertyChanged("SItmUntE");
					this.OnSItmUntEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmUntPak", DbType = "Float")]
		public System.Nullable<double> SItmUntPak
		{
			get
			{
				return this._SItmUntPak;
			}
			set
			{
				if ((this._SItmUntPak != value))
				{
					this.OnSItmUntPakChanging(value);
					this.SendPropertyChanging();
					this._SItmUntPak = value;
					this.SendPropertyChanged("SItmUntPak");
					this.OnSItmUntPakChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SStoreNo", DbType = "Int")]
		public System.Nullable<int> SStoreNo
		{
			get
			{
				return this._SStoreNo;
			}
			set
			{
				if ((this._SStoreNo != value))
				{
					this.OnSStoreNoChanging(value);
					this.SendPropertyChanging();
					this._SStoreNo = value;
					this.SendPropertyChanged("SStoreNo");
					this.OnSStoreNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPrice", DbType = "Float")]
		public System.Nullable<double> SPrice
		{
			get
			{
				return this._SPrice;
			}
			set
			{
				if ((this._SPrice != value))
				{
					this.OnSPriceChanging(value);
					this.SendPropertyChanging();
					this._SPrice = value;
					this.SendPropertyChanged("SPrice");
					this.OnSPriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAmount", DbType = "Float")]
		public System.Nullable<double> SAmount
		{
			get
			{
				return this._SAmount;
			}
			set
			{
				if ((this._SAmount != value))
				{
					this.OnSAmountChanging(value);
					this.SendPropertyChanging();
					this._SAmount = value;
					this.SendPropertyChanged("SAmount");
					this.OnSAmountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SRealQty", DbType = "Float")]
		public System.Nullable<double> SRealQty
		{
			get
			{
				return this._SRealQty;
			}
			set
			{
				if ((this._SRealQty != value))
				{
					this.OnSRealQtyChanging(value);
					this.SendPropertyChanging();
					this._SRealQty = value;
					this.SendPropertyChanged("SRealQty");
					this.OnSRealQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SitmInvDsc", DbType = "Float")]
		public System.Nullable<double> SitmInvDsc
		{
			get
			{
				return this._SitmInvDsc;
			}
			set
			{
				if ((this._SitmInvDsc != value))
				{
					this.OnSitmInvDscChanging(value);
					this.SendPropertyChanging();
					this._SitmInvDsc = value;
					this.SendPropertyChanged("SitmInvDsc");
					this.OnSitmInvDscChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SDatExper", DbType = "VarChar(11)")]
		public string SDatExper
		{
			get
			{
				return this._SDatExper;
			}
			set
			{
				if ((this._SDatExper != value))
				{
					this.OnSDatExperChanging(value);
					this.SendPropertyChanging();
					this._SDatExper = value;
					this.SendPropertyChanged("SDatExper");
					this.OnSDatExperChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmDis", DbType = "Float")]
		public System.Nullable<double> SItmDis
		{
			get
			{
				return this._SItmDis;
			}
			set
			{
				if ((this._SItmDis != value))
				{
					this.OnSItmDisChanging(value);
					this.SendPropertyChanging();
					this._SItmDis = value;
					this.SendPropertyChanged("SItmDis");
					this.OnSItmDisChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmTyp", DbType = "Int")]
		public System.Nullable<int> SItmTyp
		{
			get
			{
				return this._SItmTyp;
			}
			set
			{
				if ((this._SItmTyp != value))
				{
					this.OnSItmTypChanging(value);
					this.SendPropertyChanging();
					this._SItmTyp = value;
					this.SendPropertyChanged("SItmTyp");
					this.OnSItmTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmIndex", DbType = "Int")]
		public System.Nullable<int> SItmIndex
		{
			get
			{
				return this._SItmIndex;
			}
			set
			{
				if ((this._SItmIndex != value))
				{
					this.OnSItmIndexChanging(value);
					this.SendPropertyChanging();
					this._SItmIndex = value;
					this.SendPropertyChanged("SItmIndex");
					this.OnSItmIndexChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmWight", DbType = "Float")]
		public System.Nullable<double> SItmWight
		{
			get
			{
				return this._SItmWight;
			}
			set
			{
				if ((this._SItmWight != value))
				{
					this.OnSItmWightChanging(value);
					this.SendPropertyChanging();
					this._SItmWight = value;
					this.SendPropertyChanged("SItmWight");
					this.OnSItmWightChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmWight_T", DbType = "Float")]
		public System.Nullable<double> SItmWight_T
		{
			get
			{
				return this._SItmWight_T;
			}
			set
			{
				if ((this._SItmWight_T != value))
				{
					this.OnSItmWight_TChanging(value);
					this.SendPropertyChanging();
					this._SItmWight_T = value;
					this.SendPropertyChanged("SItmWight_T");
					this.OnSItmWight_TChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SQtyDef", DbType = "Float")]
		public System.Nullable<double> SQtyDef
		{
			get
			{
				return this._SQtyDef;
			}
			set
			{
				if ((this._SQtyDef != value))
				{
					this.OnSQtyDefChanging(value);
					this.SendPropertyChanging();
					this._SQtyDef = value;
					this.SendPropertyChanged("SQtyDef");
					this.OnSQtyDefChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPriceDef", DbType = "Float")]
		public System.Nullable<double> SPriceDef
		{
			get
			{
				return this._SPriceDef;
			}
			set
			{
				if ((this._SPriceDef != value))
				{
					this.OnSPriceDefChanging(value);
					this.SendPropertyChanging();
					this._SPriceDef = value;
					this.SendPropertyChanged("SPriceDef");
					this.OnSPriceDefChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SInvIdHEAD", DbType = "Int")]
		public System.Nullable<int> SInvIdHEAD
		{
			get
			{
				return this._SInvIdHEAD;
			}
			set
			{
				if ((this._SInvIdHEAD != value))
				{
					if (this._T_INVHED.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSInvIdHEADChanging(value);
					this.SendPropertyChanging();
					this._SInvIdHEAD = value;
					this.SendPropertyChanged("SInvIdHEAD");
					this.OnSInvIdHEADChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SItmTax", DbType = "Float")]
		public System.Nullable<double> SItmTax
		{
			get
			{
				return this._SItmTax;
			}
			set
			{
				if ((this._SItmTax != value))
				{
					this.OnSItmTaxChanging(value);
					this.SendPropertyChanging();
					this._SItmTax = value;
					this.SendPropertyChanged("SItmTax");
					this.OnSItmTaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVDET_T_SINVDET", Storage = "_T_INVDET", ThisKey = "SInvId", OtherKey = "InvDet_ID", IsForeignKey = true)]
		public T_INVDET T_INVDET
		{
			get
			{
				return this._T_INVDET.Entity;
			}
			set
			{
				T_INVDET previousValue = this._T_INVDET.Entity;
				if (((previousValue != value)
							|| (this._T_INVDET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_INVDET.Entity = null;
						previousValue.T_SINVDETs.Remove(this);
					}
					this._T_INVDET.Entity = value;
					if ((value != null))
					{
						value.T_SINVDETs.Add(this);
						this._SInvId = value.InvDet_ID;
					}
					else
					{
						this._SInvId = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_INVDET");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_INVHED_T_SINVDET", Storage = "_T_INVHED", ThisKey = "SInvIdHEAD", OtherKey = "InvHed_ID", IsForeignKey = true)]
		public T_INVHED T_INVHED
		{
			get
			{
				return this._T_INVHED.Entity;
			}
			set
			{
				T_INVHED previousValue = this._T_INVHED.Entity;
				if (((previousValue != value)
							|| (this._T_INVHED.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_INVHED.Entity = null;
						previousValue.T_SINVDETs.Remove(this);
					}
					this._T_INVHED.Entity = value;
					if ((value != null))
					{
						value.T_SINVDETs.Add(this);
						this._SInvIdHEAD = value.InvHed_ID;
					}
					else
					{
						this._SInvIdHEAD = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_INVHED");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_SINVDET", Storage = "_T_Item", ThisKey = "SItmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_SINVDETs.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_SINVDETs.Add(this);
						this._SItmNo = value.Itm_No;
					}
					else
					{
						this._SItmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Snd")]
	public partial class T_Snd : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _gd_ID;

		private int _fNo;

		private string _SndName;

		private System.Nullable<int> _romno;

		private System.Nullable<double> _price;

		private string _det;

		private System.Nullable<int> _typ;

		private string _Usr;

		private string _gdUser;

		private string _gdUserNam;

		private System.Nullable<int> _perno;

		private string _dt;

		private System.Nullable<int> _curr;

		private string _tm;

		private System.Nullable<int> _ch;

		private System.Nullable<double> _curcost;

		private System.Nullable<int> _sala;

		private System.Nullable<int> _typN;

		private string _ShekNo;

		private string _ShekDate;

		private string _ShekBank;

		private System.Nullable<int> _IfTrans;

		private System.Nullable<int> _RStat;

		private System.Nullable<double> _GadeNo;

		private System.Nullable<double> _GadeId;

		private EntityRef<T_Curency> _T_Curency;

		private EntityRef<T_per> _T_per;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void Ongd_IDChanging(int value);
		partial void Ongd_IDChanged();
		partial void OnfNoChanging(int value);
		partial void OnfNoChanged();
		partial void OnSndNameChanging(string value);
		partial void OnSndNameChanged();
		partial void OnromnoChanging(System.Nullable<int> value);
		partial void OnromnoChanged();
		partial void OnpriceChanging(System.Nullable<double> value);
		partial void OnpriceChanged();
		partial void OndetChanging(string value);
		partial void OndetChanged();
		partial void OntypChanging(System.Nullable<int> value);
		partial void OntypChanged();
		partial void OnUsrChanging(string value);
		partial void OnUsrChanged();
		partial void OngdUserChanging(string value);
		partial void OngdUserChanged();
		partial void OngdUserNamChanging(string value);
		partial void OngdUserNamChanged();
		partial void OnpernoChanging(System.Nullable<int> value);
		partial void OnpernoChanged();
		partial void OndtChanging(string value);
		partial void OndtChanged();
		partial void OncurrChanging(System.Nullable<int> value);
		partial void OncurrChanged();
		partial void OntmChanging(string value);
		partial void OntmChanged();
		partial void OnchChanging(System.Nullable<int> value);
		partial void OnchChanged();
		partial void OncurcostChanging(System.Nullable<double> value);
		partial void OncurcostChanged();
		partial void OnsalaChanging(System.Nullable<int> value);
		partial void OnsalaChanged();
		partial void OntypNChanging(System.Nullable<int> value);
		partial void OntypNChanged();
		partial void OnShekNoChanging(string value);
		partial void OnShekNoChanged();
		partial void OnShekDateChanging(string value);
		partial void OnShekDateChanged();
		partial void OnShekBankChanging(string value);
		partial void OnShekBankChanged();
		partial void OnIfTransChanging(System.Nullable<int> value);
		partial void OnIfTransChanged();
		partial void OnRStatChanging(System.Nullable<int> value);
		partial void OnRStatChanged();
		partial void OnGadeNoChanging(System.Nullable<double> value);
		partial void OnGadeNoChanged();
		partial void OnGadeIdChanging(System.Nullable<double> value);
		partial void OnGadeIdChanged();
		#endregion

		public T_Snd()
		{
			this._T_Curency = default(EntityRef<T_Curency>);
			this._T_per = default(EntityRef<T_per>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gd_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int gd_ID
		{
			get
			{
				return this._gd_ID;
			}
			set
			{
				if ((this._gd_ID != value))
				{
					this.Ongd_IDChanging(value);
					this.SendPropertyChanging();
					this._gd_ID = value;
					this.SendPropertyChanged("gd_ID");
					this.Ongd_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fNo", DbType = "Int NOT NULL")]
		public int fNo
		{
			get
			{
				return this._fNo;
			}
			set
			{
				if ((this._fNo != value))
				{
					this.OnfNoChanging(value);
					this.SendPropertyChanging();
					this._fNo = value;
					this.SendPropertyChanged("fNo");
					this.OnfNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SndName", DbType = "VarChar(100)")]
		public string SndName
		{
			get
			{
				return this._SndName;
			}
			set
			{
				if ((this._SndName != value))
				{
					this.OnSndNameChanging(value);
					this.SendPropertyChanging();
					this._SndName = value;
					this.SendPropertyChanged("SndName");
					this.OnSndNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romno", DbType = "Int")]
		public System.Nullable<int> romno
		{
			get
			{
				return this._romno;
			}
			set
			{
				if ((this._romno != value))
				{
					this.OnromnoChanging(value);
					this.SendPropertyChanging();
					this._romno = value;
					this.SendPropertyChanged("romno");
					this.OnromnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_price", DbType = "Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_det", DbType = "VarChar(250)")]
		public string det
		{
			get
			{
				return this._det;
			}
			set
			{
				if ((this._det != value))
				{
					this.OndetChanging(value);
					this.SendPropertyChanging();
					this._det = value;
					this.SendPropertyChanged("det");
					this.OndetChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_typ", DbType = "Int")]
		public System.Nullable<int> typ
		{
			get
			{
				return this._typ;
			}
			set
			{
				if ((this._typ != value))
				{
					this.OntypChanging(value);
					this.SendPropertyChanging();
					this._typ = value;
					this.SendPropertyChanged("typ");
					this.OntypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr", DbType = "VarChar(30)")]
		public string Usr
		{
			get
			{
				return this._Usr;
			}
			set
			{
				if ((this._Usr != value))
				{
					this.OnUsrChanging(value);
					this.SendPropertyChanging();
					this._Usr = value;
					this.SendPropertyChanged("Usr");
					this.OnUsrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdUser", DbType = "VarChar(3)")]
		public string gdUser
		{
			get
			{
				return this._gdUser;
			}
			set
			{
				if ((this._gdUser != value))
				{
					this.OngdUserChanging(value);
					this.SendPropertyChanging();
					this._gdUser = value;
					this.SendPropertyChanged("gdUser");
					this.OngdUserChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gdUserNam", DbType = "VarChar(50)")]
		public string gdUserNam
		{
			get
			{
				return this._gdUserNam;
			}
			set
			{
				if ((this._gdUserNam != value))
				{
					this.OngdUserNamChanging(value);
					this.SendPropertyChanging();
					this._gdUserNam = value;
					this.SendPropertyChanged("gdUserNam");
					this.OngdUserNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_perno", DbType = "Int")]
		public System.Nullable<int> perno
		{
			get
			{
				return this._perno;
			}
			set
			{
				if ((this._perno != value))
				{
					if (this._T_per.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpernoChanging(value);
					this.SendPropertyChanging();
					this._perno = value;
					this.SendPropertyChanged("perno");
					this.OnpernoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt", DbType = "VarChar(10)")]
		public string dt
		{
			get
			{
				return this._dt;
			}
			set
			{
				if ((this._dt != value))
				{
					this.OndtChanging(value);
					this.SendPropertyChanging();
					this._dt = value;
					this.SendPropertyChanged("dt");
					this.OndtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_curr", DbType = "Int")]
		public System.Nullable<int> curr
		{
			get
			{
				return this._curr;
			}
			set
			{
				if ((this._curr != value))
				{
					if (this._T_Curency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrChanging(value);
					this.SendPropertyChanging();
					this._curr = value;
					this.SendPropertyChanged("curr");
					this.OncurrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tm", DbType = "VarChar(11)")]
		public string tm
		{
			get
			{
				return this._tm;
			}
			set
			{
				if ((this._tm != value))
				{
					this.OntmChanging(value);
					this.SendPropertyChanging();
					this._tm = value;
					this.SendPropertyChanged("tm");
					this.OntmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ch", DbType = "Int")]
		public System.Nullable<int> ch
		{
			get
			{
				return this._ch;
			}
			set
			{
				if ((this._ch != value))
				{
					this.OnchChanging(value);
					this.SendPropertyChanging();
					this._ch = value;
					this.SendPropertyChanged("ch");
					this.OnchChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_curcost", DbType = "Float")]
		public System.Nullable<double> curcost
		{
			get
			{
				return this._curcost;
			}
			set
			{
				if ((this._curcost != value))
				{
					this.OncurcostChanging(value);
					this.SendPropertyChanging();
					this._curcost = value;
					this.SendPropertyChanged("curcost");
					this.OncurcostChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_sala", DbType = "Int")]
		public System.Nullable<int> sala
		{
			get
			{
				return this._sala;
			}
			set
			{
				if ((this._sala != value))
				{
					this.OnsalaChanging(value);
					this.SendPropertyChanging();
					this._sala = value;
					this.SendPropertyChanged("sala");
					this.OnsalaChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_typN", DbType = "Int")]
		public System.Nullable<int> typN
		{
			get
			{
				return this._typN;
			}
			set
			{
				if ((this._typN != value))
				{
					this.OntypNChanging(value);
					this.SendPropertyChanging();
					this._typN = value;
					this.SendPropertyChanged("typN");
					this.OntypNChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShekNo", DbType = "VarChar(50)")]
		public string ShekNo
		{
			get
			{
				return this._ShekNo;
			}
			set
			{
				if ((this._ShekNo != value))
				{
					this.OnShekNoChanging(value);
					this.SendPropertyChanging();
					this._ShekNo = value;
					this.SendPropertyChanged("ShekNo");
					this.OnShekNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShekDate", DbType = "VarChar(20)")]
		public string ShekDate
		{
			get
			{
				return this._ShekDate;
			}
			set
			{
				if ((this._ShekDate != value))
				{
					this.OnShekDateChanging(value);
					this.SendPropertyChanging();
					this._ShekDate = value;
					this.SendPropertyChanged("ShekDate");
					this.OnShekDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShekBank", DbType = "VarChar(50)")]
		public string ShekBank
		{
			get
			{
				return this._ShekBank;
			}
			set
			{
				if ((this._ShekBank != value))
				{
					this.OnShekBankChanging(value);
					this.SendPropertyChanging();
					this._ShekBank = value;
					this.SendPropertyChanged("ShekBank");
					this.OnShekBankChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IfTrans", DbType = "Int")]
		public System.Nullable<int> IfTrans
		{
			get
			{
				return this._IfTrans;
			}
			set
			{
				if ((this._IfTrans != value))
				{
					this.OnIfTransChanging(value);
					this.SendPropertyChanging();
					this._IfTrans = value;
					this.SendPropertyChanged("IfTrans");
					this.OnIfTransChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RStat", DbType = "Int")]
		public System.Nullable<int> RStat
		{
			get
			{
				return this._RStat;
			}
			set
			{
				if ((this._RStat != value))
				{
					this.OnRStatChanging(value);
					this.SendPropertyChanging();
					this._RStat = value;
					this.SendPropertyChanged("RStat");
					this.OnRStatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeNo", DbType = "Float")]
		public System.Nullable<double> GadeNo
		{
			get
			{
				return this._GadeNo;
			}
			set
			{
				if ((this._GadeNo != value))
				{
					this.OnGadeNoChanging(value);
					this.SendPropertyChanging();
					this._GadeNo = value;
					this.SendPropertyChanged("GadeNo");
					this.OnGadeNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId", DbType = "Float")]
		public System.Nullable<double> GadeId
		{
			get
			{
				return this._GadeId;
			}
			set
			{
				if ((this._GadeId != value))
				{
					this.OnGadeIdChanging(value);
					this.SendPropertyChanging();
					this._GadeId = value;
					this.SendPropertyChanged("GadeId");
					this.OnGadeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Curency_T_Snd", Storage = "_T_Curency", ThisKey = "curr", OtherKey = "Curency_ID", IsForeignKey = true)]
		public T_Curency T_Curency
		{
			get
			{
				return this._T_Curency.Entity;
			}
			set
			{
				T_Curency previousValue = this._T_Curency.Entity;
				if (((previousValue != value)
							|| (this._T_Curency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Curency.Entity = null;
						previousValue.T_Snds.Remove(this);
					}
					this._T_Curency.Entity = value;
					if ((value != null))
					{
						value.T_Snds.Add(this);
						this._curr = value.Curency_ID;
					}
					else
					{
						this._curr = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Curency");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_Snd", Storage = "_T_per", ThisKey = "perno", OtherKey = "perno", IsForeignKey = true)]
		public T_per T_per
		{
			get
			{
				return this._T_per.Entity;
			}
			set
			{
				T_per previousValue = this._T_per.Entity;
				if (((previousValue != value)
							|| (this._T_per.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_per.Entity = null;
						previousValue.T_Snds.Remove(this);
					}
					this._T_per.Entity = value;
					if ((value != null))
					{
						value.T_Snds.Add(this);
						this._perno = value.perno;
					}
					else
					{
						this._perno = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_per");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_STKSQTY")]
	public partial class T_STKSQTY : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _StksQty_ID;

		private string _itmNo;

		private System.Nullable<int> _storeNo;

		private System.Nullable<double> _stkQty;

		private System.Nullable<double> _stkInt;

		private string _stkLoc;

		private System.Nullable<int> _tmpQty;

		private EntityRef<T_Item> _T_Item;

		private EntityRef<T_Store> _T_Store;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnStksQty_IDChanging(int value);
		partial void OnStksQty_IDChanged();
		partial void OnitmNoChanging(string value);
		partial void OnitmNoChanged();
		partial void OnstoreNoChanging(System.Nullable<int> value);
		partial void OnstoreNoChanged();
		partial void OnstkQtyChanging(System.Nullable<double> value);
		partial void OnstkQtyChanged();
		partial void OnstkIntChanging(System.Nullable<double> value);
		partial void OnstkIntChanged();
		partial void OnstkLocChanging(string value);
		partial void OnstkLocChanged();
		partial void OntmpQtyChanging(System.Nullable<int> value);
		partial void OntmpQtyChanged();
		#endregion

		public T_STKSQTY()
		{
			this._T_Item = default(EntityRef<T_Item>);
			this._T_Store = default(EntityRef<T_Store>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StksQty_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int StksQty_ID
		{
			get
			{
				return this._StksQty_ID;
			}
			set
			{
				if ((this._StksQty_ID != value))
				{
					this.OnStksQty_IDChanging(value);
					this.SendPropertyChanging();
					this._StksQty_ID = value;
					this.SendPropertyChanged("StksQty_ID");
					this.OnStksQty_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_itmNo", DbType = "VarChar(50)")]
		public string itmNo
		{
			get
			{
				return this._itmNo;
			}
			set
			{
				if ((this._itmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitmNoChanging(value);
					this.SendPropertyChanging();
					this._itmNo = value;
					this.SendPropertyChanged("itmNo");
					this.OnitmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_storeNo", DbType = "Int")]
		public System.Nullable<int> storeNo
		{
			get
			{
				return this._storeNo;
			}
			set
			{
				if ((this._storeNo != value))
				{
					if (this._T_Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstoreNoChanging(value);
					this.SendPropertyChanging();
					this._storeNo = value;
					this.SendPropertyChanged("storeNo");
					this.OnstoreNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_stkQty", DbType = "Float")]
		public System.Nullable<double> stkQty
		{
			get
			{
				return this._stkQty;
			}
			set
			{
				if ((this._stkQty != value))
				{
					this.OnstkQtyChanging(value);
					this.SendPropertyChanging();
					this._stkQty = value;
					this.SendPropertyChanged("stkQty");
					this.OnstkQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_stkInt", DbType = "Float")]
		public System.Nullable<double> stkInt
		{
			get
			{
				return this._stkInt;
			}
			set
			{
				if ((this._stkInt != value))
				{
					this.OnstkIntChanging(value);
					this.SendPropertyChanging();
					this._stkInt = value;
					this.SendPropertyChanged("stkInt");
					this.OnstkIntChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_stkLoc", DbType = "NChar(20)")]
		public string stkLoc
		{
			get
			{
				return this._stkLoc;
			}
			set
			{
				if ((this._stkLoc != value))
				{
					this.OnstkLocChanging(value);
					this.SendPropertyChanging();
					this._stkLoc = value;
					this.SendPropertyChanged("stkLoc");
					this.OnstkLocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpQty", DbType = "Int")]
		public System.Nullable<int> tmpQty
		{
			get
			{
				return this._tmpQty;
			}
			set
			{
				if ((this._tmpQty != value))
				{
					this.OntmpQtyChanging(value);
					this.SendPropertyChanging();
					this._tmpQty = value;
					this.SendPropertyChanged("tmpQty");
					this.OntmpQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_STKSQTY", Storage = "_T_Item", ThisKey = "itmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_STKSQTies.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_STKSQTies.Add(this);
						this._itmNo = value.Itm_No;
					}
					else
					{
						this._itmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_STKSQTY", Storage = "_T_Store", ThisKey = "storeNo", OtherKey = "Stor_ID", IsForeignKey = true)]
		public T_Store T_Store
		{
			get
			{
				return this._T_Store.Entity;
			}
			set
			{
				T_Store previousValue = this._T_Store.Entity;
				if (((previousValue != value)
							|| (this._T_Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Store.Entity = null;
						previousValue.T_STKSQTies.Remove(this);
					}
					this._T_Store.Entity = value;
					if ((value != null))
					{
						value.T_STKSQTies.Add(this);
						this._storeNo = value.Stor_ID;
					}
					else
					{
						this._storeNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Store");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Store")]
	public partial class T_Store : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Stor_ID;

		private string _Arb_Des;

		private string _Eng_Des;

		private string _Address;

		private string _City;

		private string _Tel;

		private string _Fax;

		private string _Nots;

		private System.Nullable<int> _CompanyID;

		private EntitySet<T_INVDET> _T_INVDETs;

		private EntitySet<T_ItemDet> _T_ItemDets;

		private EntitySet<T_QTYEXP> _T_QTYEXPs;

		private EntitySet<T_STKSQTY> _T_STKSQTies;

		private EntitySet<T_StoreMnd> _T_StoreMnds;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnStor_IDChanging(int value);
		partial void OnStor_IDChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnAddressChanging(string value);
		partial void OnAddressChanged();
		partial void OnCityChanging(string value);
		partial void OnCityChanged();
		partial void OnTelChanging(string value);
		partial void OnTelChanged();
		partial void OnFaxChanging(string value);
		partial void OnFaxChanged();
		partial void OnNotsChanging(string value);
		partial void OnNotsChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_Store()
		{
			this._T_INVDETs = new EntitySet<T_INVDET>(new Action<T_INVDET>(this.attach_T_INVDETs), new Action<T_INVDET>(this.detach_T_INVDETs));
			this._T_ItemDets = new EntitySet<T_ItemDet>(new Action<T_ItemDet>(this.attach_T_ItemDets), new Action<T_ItemDet>(this.detach_T_ItemDets));
			this._T_QTYEXPs = new EntitySet<T_QTYEXP>(new Action<T_QTYEXP>(this.attach_T_QTYEXPs), new Action<T_QTYEXP>(this.detach_T_QTYEXPs));
			this._T_STKSQTies = new EntitySet<T_STKSQTY>(new Action<T_STKSQTY>(this.attach_T_STKSQTies), new Action<T_STKSQTY>(this.detach_T_STKSQTies));
			this._T_StoreMnds = new EntitySet<T_StoreMnd>(new Action<T_StoreMnd>(this.attach_T_StoreMnds), new Action<T_StoreMnd>(this.detach_T_StoreMnds));
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Stor_ID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int Stor_ID
		{
			get
			{
				return this._Stor_ID;
			}
			set
			{
				if ((this._Stor_ID != value))
				{
					this.OnStor_IDChanging(value);
					this.SendPropertyChanging();
					this._Stor_ID = value;
					this.SendPropertyChanged("Stor_ID");
					this.OnStor_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "VarChar(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel", DbType = "VarChar(30)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(30)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nots", DbType = "VarChar(100)")]
		public string Nots
		{
			get
			{
				return this._Nots;
			}
			set
			{
				if ((this._Nots != value))
				{
					this.OnNotsChanging(value);
					this.SendPropertyChanging();
					this._Nots = value;
					this.SendPropertyChanged("Nots");
					this.OnNotsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_INVDET", Storage = "_T_INVDETs", ThisKey = "Stor_ID", OtherKey = "StoreNo")]
		public EntitySet<T_INVDET> T_INVDETs
		{
			get
			{
				return this._T_INVDETs;
			}
			set
			{
				this._T_INVDETs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_ItemDet", Storage = "_T_ItemDets", ThisKey = "Stor_ID", OtherKey = "StoreNo")]
		public EntitySet<T_ItemDet> T_ItemDets
		{
			get
			{
				return this._T_ItemDets;
			}
			set
			{
				this._T_ItemDets.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_QTYEXP", Storage = "_T_QTYEXPs", ThisKey = "Stor_ID", OtherKey = "storeNo")]
		public EntitySet<T_QTYEXP> T_QTYEXPs
		{
			get
			{
				return this._T_QTYEXPs;
			}
			set
			{
				this._T_QTYEXPs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_STKSQTY", Storage = "_T_STKSQTies", ThisKey = "Stor_ID", OtherKey = "storeNo")]
		public EntitySet<T_STKSQTY> T_STKSQTies
		{
			get
			{
				return this._T_STKSQTies;
			}
			set
			{
				this._T_STKSQTies.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_StoreMnd", Storage = "_T_StoreMnds", ThisKey = "Stor_ID", OtherKey = "storeNo")]
		public EntitySet<T_StoreMnd> T_StoreMnds
		{
			get
			{
				return this._T_StoreMnds;
			}
			set
			{
				this._T_StoreMnds.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Store", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_Stores.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_Stores.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_INVDETs(T_INVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = this;
		}

		private void detach_T_INVDETs(T_INVDET entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = null;
		}

		private void attach_T_ItemDets(T_ItemDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = this;
		}

		private void detach_T_ItemDets(T_ItemDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = null;
		}

		private void attach_T_QTYEXPs(T_QTYEXP entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = this;
		}

		private void detach_T_QTYEXPs(T_QTYEXP entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = null;
		}

		private void attach_T_STKSQTies(T_STKSQTY entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = this;
		}

		private void detach_T_STKSQTies(T_STKSQTY entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = null;
		}

		private void attach_T_StoreMnds(T_StoreMnd entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = this;
		}

		private void detach_T_StoreMnds(T_StoreMnd entity)
		{
			this.SendPropertyChanging();
			entity.T_Store = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_StoreMnd")]
	public partial class T_StoreMnd : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _StksQty_ID;

		private string _itmNo;

		private System.Nullable<int> _storeNo;

		private System.Nullable<double> _stkQty;

		private System.Nullable<double> _stkInt;

		private string _stkLoc;

		private System.Nullable<int> _tmpQty;

		private System.Nullable<int> _MndNo;

		private string _CusVenNo;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_Item> _T_Item;

		private EntityRef<T_Mndob> _T_Mndob;

		private EntityRef<T_Store> _T_Store;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnStksQty_IDChanging(int value);
		partial void OnStksQty_IDChanged();
		partial void OnitmNoChanging(string value);
		partial void OnitmNoChanged();
		partial void OnstoreNoChanging(System.Nullable<int> value);
		partial void OnstoreNoChanged();
		partial void OnstkQtyChanging(System.Nullable<double> value);
		partial void OnstkQtyChanged();
		partial void OnstkIntChanging(System.Nullable<double> value);
		partial void OnstkIntChanged();
		partial void OnstkLocChanging(string value);
		partial void OnstkLocChanged();
		partial void OntmpQtyChanging(System.Nullable<int> value);
		partial void OntmpQtyChanged();
		partial void OnMndNoChanging(System.Nullable<int> value);
		partial void OnMndNoChanged();
		partial void OnCusVenNoChanging(string value);
		partial void OnCusVenNoChanged();
		#endregion

		public T_StoreMnd()
		{
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_Item = default(EntityRef<T_Item>);
			this._T_Mndob = default(EntityRef<T_Mndob>);
			this._T_Store = default(EntityRef<T_Store>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StksQty_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int StksQty_ID
		{
			get
			{
				return this._StksQty_ID;
			}
			set
			{
				if ((this._StksQty_ID != value))
				{
					this.OnStksQty_IDChanging(value);
					this.SendPropertyChanging();
					this._StksQty_ID = value;
					this.SendPropertyChanged("StksQty_ID");
					this.OnStksQty_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_itmNo", DbType = "VarChar(50)")]
		public string itmNo
		{
			get
			{
				return this._itmNo;
			}
			set
			{
				if ((this._itmNo != value))
				{
					if (this._T_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitmNoChanging(value);
					this.SendPropertyChanging();
					this._itmNo = value;
					this.SendPropertyChanged("itmNo");
					this.OnitmNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_storeNo", DbType = "Int")]
		public System.Nullable<int> storeNo
		{
			get
			{
				return this._storeNo;
			}
			set
			{
				if ((this._storeNo != value))
				{
					if (this._T_Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstoreNoChanging(value);
					this.SendPropertyChanging();
					this._storeNo = value;
					this.SendPropertyChanged("storeNo");
					this.OnstoreNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_stkQty", DbType = "Float")]
		public System.Nullable<double> stkQty
		{
			get
			{
				return this._stkQty;
			}
			set
			{
				if ((this._stkQty != value))
				{
					this.OnstkQtyChanging(value);
					this.SendPropertyChanging();
					this._stkQty = value;
					this.SendPropertyChanged("stkQty");
					this.OnstkQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_stkInt", DbType = "Float")]
		public System.Nullable<double> stkInt
		{
			get
			{
				return this._stkInt;
			}
			set
			{
				if ((this._stkInt != value))
				{
					this.OnstkIntChanging(value);
					this.SendPropertyChanging();
					this._stkInt = value;
					this.SendPropertyChanged("stkInt");
					this.OnstkIntChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_stkLoc", DbType = "NChar(20)")]
		public string stkLoc
		{
			get
			{
				return this._stkLoc;
			}
			set
			{
				if ((this._stkLoc != value))
				{
					this.OnstkLocChanging(value);
					this.SendPropertyChanging();
					this._stkLoc = value;
					this.SendPropertyChanged("stkLoc");
					this.OnstkLocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpQty", DbType = "Int")]
		public System.Nullable<int> tmpQty
		{
			get
			{
				return this._tmpQty;
			}
			set
			{
				if ((this._tmpQty != value))
				{
					this.OntmpQtyChanging(value);
					this.SendPropertyChanging();
					this._tmpQty = value;
					this.SendPropertyChanged("tmpQty");
					this.OntmpQtyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MndNo", DbType = "Int")]
		public System.Nullable<int> MndNo
		{
			get
			{
				return this._MndNo;
			}
			set
			{
				if ((this._MndNo != value))
				{
					if (this._T_Mndob.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMndNoChanging(value);
					this.SendPropertyChanging();
					this._MndNo = value;
					this.SendPropertyChanged("MndNo");
					this.OnMndNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CusVenNo", DbType = "VarChar(30)")]
		public string CusVenNo
		{
			get
			{
				return this._CusVenNo;
			}
			set
			{
				if ((this._CusVenNo != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCusVenNoChanging(value);
					this.SendPropertyChanging();
					this._CusVenNo = value;
					this.SendPropertyChanged("CusVenNo");
					this.OnCusVenNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_StoreMnd", Storage = "_T_AccDef", ThisKey = "CusVenNo", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_StoreMnds.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_StoreMnds.Add(this);
						this._CusVenNo = value.AccDef_No;
					}
					else
					{
						this._CusVenNo = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Item_T_StoreMnd", Storage = "_T_Item", ThisKey = "itmNo", OtherKey = "Itm_No", IsForeignKey = true)]
		public T_Item T_Item
		{
			get
			{
				return this._T_Item.Entity;
			}
			set
			{
				T_Item previousValue = this._T_Item.Entity;
				if (((previousValue != value)
							|| (this._T_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Item.Entity = null;
						previousValue.T_StoreMnds.Remove(this);
					}
					this._T_Item.Entity = value;
					if ((value != null))
					{
						value.T_StoreMnds.Add(this);
						this._itmNo = value.Itm_No;
					}
					else
					{
						this._itmNo = default(string);
					}
					this.SendPropertyChanged("T_Item");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Mndob_T_StoreMnd", Storage = "_T_Mndob", ThisKey = "MndNo", OtherKey = "Mnd_ID", IsForeignKey = true)]
		public T_Mndob T_Mndob
		{
			get
			{
				return this._T_Mndob.Entity;
			}
			set
			{
				T_Mndob previousValue = this._T_Mndob.Entity;
				if (((previousValue != value)
							|| (this._T_Mndob.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Mndob.Entity = null;
						previousValue.T_StoreMnds.Remove(this);
					}
					this._T_Mndob.Entity = value;
					if ((value != null))
					{
						value.T_StoreMnds.Add(this);
						this._MndNo = value.Mnd_ID;
					}
					else
					{
						this._MndNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Mndob");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Store_T_StoreMnd", Storage = "_T_Store", ThisKey = "storeNo", OtherKey = "Stor_ID", IsForeignKey = true)]
		public T_Store T_Store
		{
			get
			{
				return this._T_Store.Entity;
			}
			set
			{
				T_Store previousValue = this._T_Store.Entity;
				if (((previousValue != value)
							|| (this._T_Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Store.Entity = null;
						previousValue.T_StoreMnds.Remove(this);
					}
					this._T_Store.Entity = value;
					if ((value != null))
					{
						value.T_StoreMnds.Add(this);
						this._storeNo = value.Stor_ID;
					}
					else
					{
						this._storeNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Store");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_StsReas")]
	public partial class T_StsRea : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _NameSts;

		private string _NameStsE;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnNameStsChanging(string value);
		partial void OnNameStsChanged();
		partial void OnNameStsEChanging(string value);
		partial void OnNameStsEChanged();
		#endregion

		public T_StsRea()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameSts", DbType = "VarChar(250)")]
		public string NameSts
		{
			get
			{
				return this._NameSts;
			}
			set
			{
				if ((this._NameSts != value))
				{
					this.OnNameStsChanging(value);
					this.SendPropertyChanging();
					this._NameSts = value;
					this.SendPropertyChanged("NameSts");
					this.OnNameStsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameStsE", DbType = "VarChar(250)")]
		public string NameStsE
		{
			get
			{
				return this._NameStsE;
			}
			set
			{
				if ((this._NameStsE != value))
				{
					this.OnNameStsEChanging(value);
					this.SendPropertyChanging();
					this._NameStsE = value;
					this.SendPropertyChanged("NameStsE");
					this.OnNameStsEChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_SubTyp")]
	public partial class T_SubTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _SubNo;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_SalDiscount> _T_SalDiscounts;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSubNoChanging(int value);
		partial void OnSubNoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_SubTyp()
		{
			this._T_SalDiscounts = new EntitySet<T_SalDiscount>(new Action<T_SalDiscount>(this.attach_T_SalDiscounts), new Action<T_SalDiscount>(this.detach_T_SalDiscounts));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int SubNo
		{
			get
			{
				return this._SubNo;
			}
			set
			{
				if ((this._SubNo != value))
				{
					this.OnSubNoChanging(value);
					this.SendPropertyChanging();
					this._SubNo = value;
					this.SendPropertyChanged("SubNo");
					this.OnSubNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(20)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(20)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SubTyp_T_SalDiscount", Storage = "_T_SalDiscounts", ThisKey = "SubNo", OtherKey = "SubTyp")]
		public EntitySet<T_SalDiscount> T_SalDiscounts
		{
			get
			{
				return this._T_SalDiscounts;
			}
			set
			{
				this._T_SalDiscounts.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_SalDiscounts(T_SalDiscount entity)
		{
			this.SendPropertyChanging();
			entity.T_SubTyp = this;
		}

		private void detach_T_SalDiscounts(T_SalDiscount entity)
		{
			this.SendPropertyChanging();
			entity.T_SubTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_SYSSETTING")]
	public partial class T_SYSSETTING : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _SYSSETTING_ID;

		private System.Nullable<int> _AutoItm;

		private string _AccCus;

		private string _AccCusDes;

		private string _AccSup;

		private string _AccSupDes;

		private string _Seting;

		private System.Nullable<int> _DefLines_Setting;

		private string _SysDir;

		private System.Nullable<int> _HDat;

		private System.Nullable<int> _Calendr;

		private System.Nullable<int> _LrnExp;

		private System.Nullable<int> _DMY;

		private System.Nullable<int> _AutoEmp;

		private System.Nullable<int> _InvID;

		private System.Nullable<int> _GedID;

		private System.Nullable<int> _InvMod;

		private System.Data.Linq.Binary _LogImg;

		private string _BackPath;

		private System.Nullable<bool> _IsAutoBackup;

		private System.Nullable<int> _AutoBackup;

		private string _AutoBackupDate;

		private System.Nullable<double> _hAl_Setting;

		private System.Nullable<double> _hAs_Setting;

		private System.Nullable<double> _hYm_Setting;

		private System.Nullable<double> _hYs_Setting;

		private System.Nullable<double> _lnPg_Setting;

		private System.Nullable<double> _lnSpc_Setting;

		private string _defPrn_Setting;

		private string _nTyp_Setting;

		private System.Nullable<bool> _IsBackground;

		private System.Nullable<bool> _IsNotBackground;

		private System.Data.Linq.Binary _BackgroundPic;

		private string _defSizePaper_Setting;

		private System.Nullable<int> _Orientation_Setting;

		private System.Nullable<bool> _Sponer;

		private System.Nullable<bool> _IsAlarmVisaGoBack;

		private System.Nullable<bool> _IsAlarmVisaIntro;

		private System.Nullable<int> _AlarmVisaGoBack;

		private System.Nullable<int> _AlarmVisaIntro;

		private System.Nullable<bool> _IsAlarmDepts;

		private System.Nullable<int> _AlarmDeptsBefore;

		private System.Nullable<bool> _AutoChangSalStatus;

		private System.Nullable<int> _AccUsrNo;

		private string _DocumentPath;

		private string _ImportFilePath;

		private string _ImportIp;

		private string _ImportEmpNo;

		private string _ImportDate;

		private string _ImportTime1;

		private string _ImportTimeLeave1;

		private string _ImportStart;

		private string _ImportEnd;

		private string _AccPath;

		private string _ServerNm;

		private string _DataBaseNm;

		private string _Sa_Pass;

		private System.Nullable<int> _Path_Kind;

		private System.Nullable<bool> _AlarmDoc;

		private System.Nullable<int> _AlarmDocBefore;

		private System.Nullable<bool> _AutoLeave;

		private System.Nullable<int> _EmpLeaveAfter;

		private System.Nullable<bool> _AttendanceManually;

		private System.Nullable<bool> _VacationManually;

		private System.Nullable<int> _CalculateNo;

		private System.Nullable<int> _CalculatliquidNo;

		private System.Nullable<int> _Allowances;

		private System.Nullable<int> _AllowancesTime;

		private System.Nullable<bool> _ShowBanner;

		private System.Nullable<bool> _ShowPageNo;

		private System.Nullable<bool> _ShowDateH;

		private System.Nullable<bool> _ShowDateG;

		private string _SalDate;

		private System.Nullable<int> _DisVacationType;

		private System.Nullable<bool> _IsAlarmEmpDoc;

		private System.Nullable<bool> _IsAlarmEmpContract;

		private System.Nullable<bool> _IsAlarmFamilyPassport;

		private System.Nullable<bool> _IsAlarmGuarantorDoc;

		private System.Nullable<bool> _IsAlarmEndVaction;

		private System.Nullable<bool> _IsAlarmBranchDoc;

		private System.Nullable<bool> _IsAlarmCarDoc;

		private System.Nullable<bool> _IsAlarmSecretariatsDoc;

		private System.Nullable<int> _AlarmEmpDocBefore;

		private System.Nullable<int> _AlarmEmpContractBefore;

		private System.Nullable<int> _AlarmFamilyPassportBefore;

		private System.Nullable<int> _AlarmGuarantorDocBefore;

		private System.Nullable<int> _AlarmEndVactionBefore;

		private System.Nullable<int> _AlarmBranchDocBefore;

		private System.Nullable<int> _AlarmCarDocBefore;

		private System.Nullable<int> _AlarmSecretariatsBefore;

		private string _smsUserName;

		private string _smsPass;

		private string _smsSenderName;

		private string _smsMessage1;

		private string _smsMessage2;

		private string _smsMessage3;

		private string _smsMessage4;

		private System.Nullable<int> _AlarmEmployee;

		private string _LineDetailSts;

		private string _LineDetailNameA;

		private string _LineDetailNameE;

		private string _LineGiftSts;

		private string _LineGiftlNameA;

		private string _LineGiftlNameE;

		private System.Nullable<int> _TableFamily;

		private System.Nullable<int> _TableBoys;

		private System.Nullable<int> _TableExtrnal;

		private System.Nullable<int> _TableOther;

		private string _MainDirPath;

		private string _BColor0;

		private string _BColor1;

		private string _BColor2;

		private string _BColor3;

		private string _BColor4;

		private string _BColor5;

		private string _BColor6;

		private string _BColor7;

		private string _FColor0;

		private string _FColor1;

		private string _FColor2;

		private string _FColor3;

		private string _FColor4;

		private string _FColor5;

		private string _FColor6;

		private string _FColor7;

		private System.Nullable<int> _Fld_w;

		private System.Nullable<int> _Fld_H;

		private System.Nullable<int> _DayOfM;

		private System.Nullable<bool> _ch;

		private System.Nullable<int> _flore;

		private System.Nullable<int> _rom;

		private string _vStart;

		private string _vEnd;

		private string _vStartTyp;

		private string _vEndTyp;

		private string _GuestAcc;

		private string _GuestBoxAcc;

		private System.Nullable<double> _DefSalesTax;

		private System.Nullable<double> _DefPurchaesTax;

		private string _TaxAcc;

		private string _TaxNoteInv;

		private System.Nullable<bool> _IsCustomerDisplay;

		private string _Port;

		private System.Nullable<int> _Fast;

		private System.Nullable<int> _BitStop;

		private System.Nullable<int> _BitData;

		private System.Nullable<int> _Parity;

		private string _CustomerHello;

		private System.Nullable<int> _DisplayTypeShow;

		private System.Nullable<int> _LineOfInvoices;

		private System.Nullable<bool> _IsActiveBalance;

		private System.Nullable<int> _BalanceType;

		private System.Nullable<int> _BarcodFrom;

		private System.Nullable<int> _BarcodTo;

		private System.Nullable<int> _WightFrom;

		private System.Nullable<int> _WightTo;

		private System.Nullable<int> _PriceFrom;

		private System.Nullable<int> _PriceTo;

		private System.Nullable<int> _WightQ;

		private System.Nullable<int> _PriceQ;

		private System.Nullable<double> _PointOfRyal;

		private string _ItemTyp1;

		private string _ItemTyp2;

		private string _ItemTyp3;

		private string _ItemTyp1E;

		private string _ItemTyp2E;

		private string _ItemTyp3E;

		private System.Nullable<int> _AlarmDueoBefore;

		private string _EmpSeting;

		private string _SyncPath;

		private string _vFiledA;

		private string _vFiledB;

		private string _vFiledC;

		private System.Nullable<int> _vFiledInt;

		private System.Nullable<bool> _vFiledBool;

		private System.Nullable<int> _EqarAlarmContractEnd;

		private System.Nullable<int> _EqarAlarmDayPay;

		private string _EqarAcc;

		private string _tenantAcc;

		private System.Nullable<int> _AfterDotNum;

		private EntitySet<T_AccCat> _T_AccCats;

		private EntitySet<T_AccDef> _T_AccDefs;

		private EntitySet<T_BankPeaper> _T_BankPeapers;

		private EntitySet<T_CATEGORY> _T_CATEGORies;

		private EntitySet<T_CstTbl> _T_CstTbls;

		private EntitySet<T_Curency> _T_Curencies;

		private EntitySet<T_EmpCard> _T_EmpCards;

		private EntitySet<T_GDHEAD> _T_GDHEADs;

		private EntitySet<T_INVHED> _T_INVHEDs;

		private EntitySet<T_Item> _T_Items;

		private EntitySet<T_Mndob> _T_Mndobs;

		private EntitySet<T_Store> _T_Stores;

		private EntitySet<T_TbSalary> _T_TbSalaries;

		private EntitySet<T_Unit> _T_Units;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnSYSSETTING_IDChanging(int value);
		partial void OnSYSSETTING_IDChanged();
		partial void OnAutoItmChanging(System.Nullable<int> value);
		partial void OnAutoItmChanged();
		partial void OnAccCusChanging(string value);
		partial void OnAccCusChanged();
		partial void OnAccCusDesChanging(string value);
		partial void OnAccCusDesChanged();
		partial void OnAccSupChanging(string value);
		partial void OnAccSupChanged();
		partial void OnAccSupDesChanging(string value);
		partial void OnAccSupDesChanged();
		partial void OnSetingChanging(string value);
		partial void OnSetingChanged();
		partial void OnDefLines_SettingChanging(System.Nullable<int> value);
		partial void OnDefLines_SettingChanged();
		partial void OnSysDirChanging(string value);
		partial void OnSysDirChanged();
		partial void OnHDatChanging(System.Nullable<int> value);
		partial void OnHDatChanged();
		partial void OnCalendrChanging(System.Nullable<int> value);
		partial void OnCalendrChanged();
		partial void OnLrnExpChanging(System.Nullable<int> value);
		partial void OnLrnExpChanged();
		partial void OnDMYChanging(System.Nullable<int> value);
		partial void OnDMYChanged();
		partial void OnAutoEmpChanging(System.Nullable<int> value);
		partial void OnAutoEmpChanged();
		partial void OnInvIDChanging(System.Nullable<int> value);
		partial void OnInvIDChanged();
		partial void OnGedIDChanging(System.Nullable<int> value);
		partial void OnGedIDChanged();
		partial void OnInvModChanging(System.Nullable<int> value);
		partial void OnInvModChanged();
		partial void OnLogImgChanging(System.Data.Linq.Binary value);
		partial void OnLogImgChanged();
		partial void OnBackPathChanging(string value);
		partial void OnBackPathChanged();
		partial void OnIsAutoBackupChanging(System.Nullable<bool> value);
		partial void OnIsAutoBackupChanged();
		partial void OnAutoBackupChanging(System.Nullable<int> value);
		partial void OnAutoBackupChanged();
		partial void OnAutoBackupDateChanging(string value);
		partial void OnAutoBackupDateChanged();
		partial void OnhAl_SettingChanging(System.Nullable<double> value);
		partial void OnhAl_SettingChanged();
		partial void OnhAs_SettingChanging(System.Nullable<double> value);
		partial void OnhAs_SettingChanged();
		partial void OnhYm_SettingChanging(System.Nullable<double> value);
		partial void OnhYm_SettingChanged();
		partial void OnhYs_SettingChanging(System.Nullable<double> value);
		partial void OnhYs_SettingChanged();
		partial void OnlnPg_SettingChanging(System.Nullable<double> value);
		partial void OnlnPg_SettingChanged();
		partial void OnlnSpc_SettingChanging(System.Nullable<double> value);
		partial void OnlnSpc_SettingChanged();
		partial void OndefPrn_SettingChanging(string value);
		partial void OndefPrn_SettingChanged();
		partial void OnnTyp_SettingChanging(string value);
		partial void OnnTyp_SettingChanged();
		partial void OnIsBackgroundChanging(System.Nullable<bool> value);
		partial void OnIsBackgroundChanged();
		partial void OnIsNotBackgroundChanging(System.Nullable<bool> value);
		partial void OnIsNotBackgroundChanged();
		partial void OnBackgroundPicChanging(System.Data.Linq.Binary value);
		partial void OnBackgroundPicChanged();
		partial void OndefSizePaper_SettingChanging(string value);
		partial void OndefSizePaper_SettingChanged();
		partial void OnOrientation_SettingChanging(System.Nullable<int> value);
		partial void OnOrientation_SettingChanged();
		partial void OnSponerChanging(System.Nullable<bool> value);
		partial void OnSponerChanged();
		partial void OnIsAlarmVisaGoBackChanging(System.Nullable<bool> value);
		partial void OnIsAlarmVisaGoBackChanged();
		partial void OnIsAlarmVisaIntroChanging(System.Nullable<bool> value);
		partial void OnIsAlarmVisaIntroChanged();
		partial void OnAlarmVisaGoBackChanging(System.Nullable<int> value);
		partial void OnAlarmVisaGoBackChanged();
		partial void OnAlarmVisaIntroChanging(System.Nullable<int> value);
		partial void OnAlarmVisaIntroChanged();
		partial void OnIsAlarmDeptsChanging(System.Nullable<bool> value);
		partial void OnIsAlarmDeptsChanged();
		partial void OnAlarmDeptsBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmDeptsBeforeChanged();
		partial void OnAutoChangSalStatusChanging(System.Nullable<bool> value);
		partial void OnAutoChangSalStatusChanged();
		partial void OnAccUsrNoChanging(System.Nullable<int> value);
		partial void OnAccUsrNoChanged();
		partial void OnDocumentPathChanging(string value);
		partial void OnDocumentPathChanged();
		partial void OnImportFilePathChanging(string value);
		partial void OnImportFilePathChanged();
		partial void OnImportIpChanging(string value);
		partial void OnImportIpChanged();
		partial void OnImportEmpNoChanging(string value);
		partial void OnImportEmpNoChanged();
		partial void OnImportDateChanging(string value);
		partial void OnImportDateChanged();
		partial void OnImportTime1Changing(string value);
		partial void OnImportTime1Changed();
		partial void OnImportTimeLeave1Changing(string value);
		partial void OnImportTimeLeave1Changed();
		partial void OnImportStartChanging(string value);
		partial void OnImportStartChanged();
		partial void OnImportEndChanging(string value);
		partial void OnImportEndChanged();
		partial void OnAccPathChanging(string value);
		partial void OnAccPathChanged();
		partial void OnServerNmChanging(string value);
		partial void OnServerNmChanged();
		partial void OnDataBaseNmChanging(string value);
		partial void OnDataBaseNmChanged();
		partial void OnSa_PassChanging(string value);
		partial void OnSa_PassChanged();
		partial void OnPath_KindChanging(System.Nullable<int> value);
		partial void OnPath_KindChanged();
		partial void OnAlarmDocChanging(System.Nullable<bool> value);
		partial void OnAlarmDocChanged();
		partial void OnAlarmDocBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmDocBeforeChanged();
		partial void OnAutoLeaveChanging(System.Nullable<bool> value);
		partial void OnAutoLeaveChanged();
		partial void OnEmpLeaveAfterChanging(System.Nullable<int> value);
		partial void OnEmpLeaveAfterChanged();
		partial void OnAttendanceManuallyChanging(System.Nullable<bool> value);
		partial void OnAttendanceManuallyChanged();
		partial void OnVacationManuallyChanging(System.Nullable<bool> value);
		partial void OnVacationManuallyChanged();
		partial void OnCalculateNoChanging(System.Nullable<int> value);
		partial void OnCalculateNoChanged();
		partial void OnCalculatliquidNoChanging(System.Nullable<int> value);
		partial void OnCalculatliquidNoChanged();
		partial void OnAllowancesChanging(System.Nullable<int> value);
		partial void OnAllowancesChanged();
		partial void OnAllowancesTimeChanging(System.Nullable<int> value);
		partial void OnAllowancesTimeChanged();
		partial void OnShowBannerChanging(System.Nullable<bool> value);
		partial void OnShowBannerChanged();
		partial void OnShowPageNoChanging(System.Nullable<bool> value);
		partial void OnShowPageNoChanged();
		partial void OnShowDateHChanging(System.Nullable<bool> value);
		partial void OnShowDateHChanged();
		partial void OnShowDateGChanging(System.Nullable<bool> value);
		partial void OnShowDateGChanged();
		partial void OnSalDateChanging(string value);
		partial void OnSalDateChanged();
		partial void OnDisVacationTypeChanging(System.Nullable<int> value);
		partial void OnDisVacationTypeChanged();
		partial void OnIsAlarmEmpDocChanging(System.Nullable<bool> value);
		partial void OnIsAlarmEmpDocChanged();
		partial void OnIsAlarmEmpContractChanging(System.Nullable<bool> value);
		partial void OnIsAlarmEmpContractChanged();
		partial void OnIsAlarmFamilyPassportChanging(System.Nullable<bool> value);
		partial void OnIsAlarmFamilyPassportChanged();
		partial void OnIsAlarmGuarantorDocChanging(System.Nullable<bool> value);
		partial void OnIsAlarmGuarantorDocChanged();
		partial void OnIsAlarmEndVactionChanging(System.Nullable<bool> value);
		partial void OnIsAlarmEndVactionChanged();
		partial void OnIsAlarmBranchDocChanging(System.Nullable<bool> value);
		partial void OnIsAlarmBranchDocChanged();
		partial void OnIsAlarmCarDocChanging(System.Nullable<bool> value);
		partial void OnIsAlarmCarDocChanged();
		partial void OnIsAlarmSecretariatsDocChanging(System.Nullable<bool> value);
		partial void OnIsAlarmSecretariatsDocChanged();
		partial void OnAlarmEmpDocBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmEmpDocBeforeChanged();
		partial void OnAlarmEmpContractBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmEmpContractBeforeChanged();
		partial void OnAlarmFamilyPassportBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmFamilyPassportBeforeChanged();
		partial void OnAlarmGuarantorDocBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmGuarantorDocBeforeChanged();
		partial void OnAlarmEndVactionBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmEndVactionBeforeChanged();
		partial void OnAlarmBranchDocBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmBranchDocBeforeChanged();
		partial void OnAlarmCarDocBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmCarDocBeforeChanged();
		partial void OnAlarmSecretariatsBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmSecretariatsBeforeChanged();
		partial void OnsmsUserNameChanging(string value);
		partial void OnsmsUserNameChanged();
		partial void OnsmsPassChanging(string value);
		partial void OnsmsPassChanged();
		partial void OnsmsSenderNameChanging(string value);
		partial void OnsmsSenderNameChanged();
		partial void OnsmsMessage1Changing(string value);
		partial void OnsmsMessage1Changed();
		partial void OnsmsMessage2Changing(string value);
		partial void OnsmsMessage2Changed();
		partial void OnsmsMessage3Changing(string value);
		partial void OnsmsMessage3Changed();
		partial void OnsmsMessage4Changing(string value);
		partial void OnsmsMessage4Changed();
		partial void OnAlarmEmployeeChanging(System.Nullable<int> value);
		partial void OnAlarmEmployeeChanged();
		partial void OnLineDetailStsChanging(string value);
		partial void OnLineDetailStsChanged();
		partial void OnLineDetailNameAChanging(string value);
		partial void OnLineDetailNameAChanged();
		partial void OnLineDetailNameEChanging(string value);
		partial void OnLineDetailNameEChanged();
		partial void OnLineGiftStsChanging(string value);
		partial void OnLineGiftStsChanged();
		partial void OnLineGiftlNameAChanging(string value);
		partial void OnLineGiftlNameAChanged();
		partial void OnLineGiftlNameEChanging(string value);
		partial void OnLineGiftlNameEChanged();
		partial void OnTableFamilyChanging(System.Nullable<int> value);
		partial void OnTableFamilyChanged();
		partial void OnTableBoysChanging(System.Nullable<int> value);
		partial void OnTableBoysChanged();
		partial void OnTableExtrnalChanging(System.Nullable<int> value);
		partial void OnTableExtrnalChanged();
		partial void OnTableOtherChanging(System.Nullable<int> value);
		partial void OnTableOtherChanged();
		partial void OnMainDirPathChanging(string value);
		partial void OnMainDirPathChanged();
		partial void OnBColor0Changing(string value);
		partial void OnBColor0Changed();
		partial void OnBColor1Changing(string value);
		partial void OnBColor1Changed();
		partial void OnBColor2Changing(string value);
		partial void OnBColor2Changed();
		partial void OnBColor3Changing(string value);
		partial void OnBColor3Changed();
		partial void OnBColor4Changing(string value);
		partial void OnBColor4Changed();
		partial void OnBColor5Changing(string value);
		partial void OnBColor5Changed();
		partial void OnBColor6Changing(string value);
		partial void OnBColor6Changed();
		partial void OnBColor7Changing(string value);
		partial void OnBColor7Changed();
		partial void OnFColor0Changing(string value);
		partial void OnFColor0Changed();
		partial void OnFColor1Changing(string value);
		partial void OnFColor1Changed();
		partial void OnFColor2Changing(string value);
		partial void OnFColor2Changed();
		partial void OnFColor3Changing(string value);
		partial void OnFColor3Changed();
		partial void OnFColor4Changing(string value);
		partial void OnFColor4Changed();
		partial void OnFColor5Changing(string value);
		partial void OnFColor5Changed();
		partial void OnFColor6Changing(string value);
		partial void OnFColor6Changed();
		partial void OnFColor7Changing(string value);
		partial void OnFColor7Changed();
		partial void OnFld_wChanging(System.Nullable<int> value);
		partial void OnFld_wChanged();
		partial void OnFld_HChanging(System.Nullable<int> value);
		partial void OnFld_HChanged();
		partial void OnDayOfMChanging(System.Nullable<int> value);
		partial void OnDayOfMChanged();
		partial void OnchChanging(System.Nullable<bool> value);
		partial void OnchChanged();
		partial void OnfloreChanging(System.Nullable<int> value);
		partial void OnfloreChanged();
		partial void OnromChanging(System.Nullable<int> value);
		partial void OnromChanged();
		partial void OnvStartChanging(string value);
		partial void OnvStartChanged();
		partial void OnvEndChanging(string value);
		partial void OnvEndChanged();
		partial void OnvStartTypChanging(string value);
		partial void OnvStartTypChanged();
		partial void OnvEndTypChanging(string value);
		partial void OnvEndTypChanged();
		partial void OnGuestAccChanging(string value);
		partial void OnGuestAccChanged();
		partial void OnGuestBoxAccChanging(string value);
		partial void OnGuestBoxAccChanged();
		partial void OnDefSalesTaxChanging(System.Nullable<double> value);
		partial void OnDefSalesTaxChanged();
		partial void OnDefPurchaesTaxChanging(System.Nullable<double> value);
		partial void OnDefPurchaesTaxChanged();
		partial void OnTaxAccChanging(string value);
		partial void OnTaxAccChanged();
		partial void OnTaxNoteInvChanging(string value);
		partial void OnTaxNoteInvChanged();
		partial void OnIsCustomerDisplayChanging(System.Nullable<bool> value);
		partial void OnIsCustomerDisplayChanged();
		partial void OnPortChanging(string value);
		partial void OnPortChanged();
		partial void OnFastChanging(System.Nullable<int> value);
		partial void OnFastChanged();
		partial void OnBitStopChanging(System.Nullable<int> value);
		partial void OnBitStopChanged();
		partial void OnBitDataChanging(System.Nullable<int> value);
		partial void OnBitDataChanged();
		partial void OnParityChanging(System.Nullable<int> value);
		partial void OnParityChanged();
		partial void OnCustomerHelloChanging(string value);
		partial void OnCustomerHelloChanged();
		partial void OnDisplayTypeShowChanging(System.Nullable<int> value);
		partial void OnDisplayTypeShowChanged();
		partial void OnLineOfInvoicesChanging(System.Nullable<int> value);
		partial void OnLineOfInvoicesChanged();
		partial void OnIsActiveBalanceChanging(System.Nullable<bool> value);
		partial void OnIsActiveBalanceChanged();
		partial void OnBalanceTypeChanging(System.Nullable<int> value);
		partial void OnBalanceTypeChanged();
		partial void OnBarcodFromChanging(System.Nullable<int> value);
		partial void OnBarcodFromChanged();
		partial void OnBarcodToChanging(System.Nullable<int> value);
		partial void OnBarcodToChanged();
		partial void OnWightFromChanging(System.Nullable<int> value);
		partial void OnWightFromChanged();
		partial void OnWightToChanging(System.Nullable<int> value);
		partial void OnWightToChanged();
		partial void OnPriceFromChanging(System.Nullable<int> value);
		partial void OnPriceFromChanged();
		partial void OnPriceToChanging(System.Nullable<int> value);
		partial void OnPriceToChanged();
		partial void OnWightQChanging(System.Nullable<int> value);
		partial void OnWightQChanged();
		partial void OnPriceQChanging(System.Nullable<int> value);
		partial void OnPriceQChanged();
		partial void OnPointOfRyalChanging(System.Nullable<double> value);
		partial void OnPointOfRyalChanged();
		partial void OnItemTyp1Changing(string value);
		partial void OnItemTyp1Changed();
		partial void OnItemTyp2Changing(string value);
		partial void OnItemTyp2Changed();
		partial void OnItemTyp3Changing(string value);
		partial void OnItemTyp3Changed();
		partial void OnItemTyp1EChanging(string value);
		partial void OnItemTyp1EChanged();
		partial void OnItemTyp2EChanging(string value);
		partial void OnItemTyp2EChanged();
		partial void OnItemTyp3EChanging(string value);
		partial void OnItemTyp3EChanged();
		partial void OnAlarmDueoBeforeChanging(System.Nullable<int> value);
		partial void OnAlarmDueoBeforeChanged();
		partial void OnEmpSetingChanging(string value);
		partial void OnEmpSetingChanged();
		partial void OnSyncPathChanging(string value);
		partial void OnSyncPathChanged();
		partial void OnvFiledAChanging(string value);
		partial void OnvFiledAChanged();
		partial void OnvFiledBChanging(string value);
		partial void OnvFiledBChanged();
		partial void OnvFiledCChanging(string value);
		partial void OnvFiledCChanged();
		partial void OnvFiledIntChanging(System.Nullable<int> value);
		partial void OnvFiledIntChanged();
		partial void OnvFiledBoolChanging(System.Nullable<bool> value);
		partial void OnvFiledBoolChanged();
		partial void OnEqarAlarmContractEndChanging(System.Nullable<int> value);
		partial void OnEqarAlarmContractEndChanged();
		partial void OnEqarAlarmDayPayChanging(System.Nullable<int> value);
		partial void OnEqarAlarmDayPayChanged();
		partial void OnEqarAccChanging(string value);
		partial void OnEqarAccChanged();
		partial void OntenantAccChanging(string value);
		partial void OntenantAccChanged();
		partial void OnAfterDotNumChanging(System.Nullable<int> value);
		partial void OnAfterDotNumChanged();
		#endregion

		public T_SYSSETTING()
		{
			this._T_AccCats = new EntitySet<T_AccCat>(new Action<T_AccCat>(this.attach_T_AccCats), new Action<T_AccCat>(this.detach_T_AccCats));
			this._T_AccDefs = new EntitySet<T_AccDef>(new Action<T_AccDef>(this.attach_T_AccDefs), new Action<T_AccDef>(this.detach_T_AccDefs));
			this._T_BankPeapers = new EntitySet<T_BankPeaper>(new Action<T_BankPeaper>(this.attach_T_BankPeapers), new Action<T_BankPeaper>(this.detach_T_BankPeapers));
			this._T_CATEGORies = new EntitySet<T_CATEGORY>(new Action<T_CATEGORY>(this.attach_T_CATEGORies), new Action<T_CATEGORY>(this.detach_T_CATEGORies));
			this._T_CstTbls = new EntitySet<T_CstTbl>(new Action<T_CstTbl>(this.attach_T_CstTbls), new Action<T_CstTbl>(this.detach_T_CstTbls));
			this._T_Curencies = new EntitySet<T_Curency>(new Action<T_Curency>(this.attach_T_Curencies), new Action<T_Curency>(this.detach_T_Curencies));
			this._T_EmpCards = new EntitySet<T_EmpCard>(new Action<T_EmpCard>(this.attach_T_EmpCards), new Action<T_EmpCard>(this.detach_T_EmpCards));
			this._T_GDHEADs = new EntitySet<T_GDHEAD>(new Action<T_GDHEAD>(this.attach_T_GDHEADs), new Action<T_GDHEAD>(this.detach_T_GDHEADs));
			this._T_INVHEDs = new EntitySet<T_INVHED>(new Action<T_INVHED>(this.attach_T_INVHEDs), new Action<T_INVHED>(this.detach_T_INVHEDs));
			this._T_Items = new EntitySet<T_Item>(new Action<T_Item>(this.attach_T_Items), new Action<T_Item>(this.detach_T_Items));
			this._T_Mndobs = new EntitySet<T_Mndob>(new Action<T_Mndob>(this.attach_T_Mndobs), new Action<T_Mndob>(this.detach_T_Mndobs));
			this._T_Stores = new EntitySet<T_Store>(new Action<T_Store>(this.attach_T_Stores), new Action<T_Store>(this.detach_T_Stores));
			this._T_TbSalaries = new EntitySet<T_TbSalary>(new Action<T_TbSalary>(this.attach_T_TbSalaries), new Action<T_TbSalary>(this.detach_T_TbSalaries));
			this._T_Units = new EntitySet<T_Unit>(new Action<T_Unit>(this.attach_T_Units), new Action<T_Unit>(this.detach_T_Units));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SYSSETTING_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int SYSSETTING_ID
		{
			get
			{
				return this._SYSSETTING_ID;
			}
			set
			{
				if ((this._SYSSETTING_ID != value))
				{
					this.OnSYSSETTING_IDChanging(value);
					this.SendPropertyChanging();
					this._SYSSETTING_ID = value;
					this.SendPropertyChanged("SYSSETTING_ID");
					this.OnSYSSETTING_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoItm", DbType = "Int")]
		public System.Nullable<int> AutoItm
		{
			get
			{
				return this._AutoItm;
			}
			set
			{
				if ((this._AutoItm != value))
				{
					this.OnAutoItmChanging(value);
					this.SendPropertyChanging();
					this._AutoItm = value;
					this.SendPropertyChanged("AutoItm");
					this.OnAutoItmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCus", DbType = "NChar(20)")]
		public string AccCus
		{
			get
			{
				return this._AccCus;
			}
			set
			{
				if ((this._AccCus != value))
				{
					this.OnAccCusChanging(value);
					this.SendPropertyChanging();
					this._AccCus = value;
					this.SendPropertyChanged("AccCus");
					this.OnAccCusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccCusDes", DbType = "NChar(50)")]
		public string AccCusDes
		{
			get
			{
				return this._AccCusDes;
			}
			set
			{
				if ((this._AccCusDes != value))
				{
					this.OnAccCusDesChanging(value);
					this.SendPropertyChanging();
					this._AccCusDes = value;
					this.SendPropertyChanged("AccCusDes");
					this.OnAccCusDesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccSup", DbType = "VarChar(10)")]
		public string AccSup
		{
			get
			{
				return this._AccSup;
			}
			set
			{
				if ((this._AccSup != value))
				{
					this.OnAccSupChanging(value);
					this.SendPropertyChanging();
					this._AccSup = value;
					this.SendPropertyChanged("AccSup");
					this.OnAccSupChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccSupDes", DbType = "NChar(50)")]
		public string AccSupDes
		{
			get
			{
				return this._AccSupDes;
			}
			set
			{
				if ((this._AccSupDes != value))
				{
					this.OnAccSupDesChanging(value);
					this.SendPropertyChanging();
					this._AccSupDes = value;
					this.SendPropertyChanged("AccSupDes");
					this.OnAccSupDesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Seting", DbType = "NChar(100)")]
		public string Seting
		{
			get
			{
				return this._Seting;
			}
			set
			{
				if ((this._Seting != value))
				{
					this.OnSetingChanging(value);
					this.SendPropertyChanging();
					this._Seting = value;
					this.SendPropertyChanged("Seting");
					this.OnSetingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefLines_Setting", DbType = "Int")]
		public System.Nullable<int> DefLines_Setting
		{
			get
			{
				return this._DefLines_Setting;
			}
			set
			{
				if ((this._DefLines_Setting != value))
				{
					this.OnDefLines_SettingChanging(value);
					this.SendPropertyChanging();
					this._DefLines_Setting = value;
					this.SendPropertyChanged("DefLines_Setting");
					this.OnDefLines_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SysDir", DbType = "VarChar(MAX)")]
		public string SysDir
		{
			get
			{
				if (this._SysDir == null) _SysDir = "";
				return this._SysDir;
			}
			set
			{
				if ((this._SysDir != value))
				{
					this.OnSysDirChanging(value);
					this.SendPropertyChanging();
					this._SysDir = value;
					this.SendPropertyChanged("SysDir");
					this.OnSysDirChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HDat", DbType = "Int")]
		public System.Nullable<int> HDat
		{
			get
			{
				return this._HDat;
			}
			set
			{
				if ((this._HDat != value))
				{
					this.OnHDatChanging(value);
					this.SendPropertyChanging();
					this._HDat = value;
					this.SendPropertyChanged("HDat");
					this.OnHDatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Calendr", DbType = "Int")]
		public System.Nullable<int> Calendr
		{
			get
			{
				return this._Calendr;
			}
			set
			{
				if ((this._Calendr != value))
				{
					this.OnCalendrChanging(value);
					this.SendPropertyChanging();
					this._Calendr = value;
					this.SendPropertyChanged("Calendr");
					this.OnCalendrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LrnExp", DbType = "Int")]
		public System.Nullable<int> LrnExp
		{
			get
			{
				return this._LrnExp;
			}
			set
			{
				if ((this._LrnExp != value))
				{
					this.OnLrnExpChanging(value);
					this.SendPropertyChanging();
					this._LrnExp = value;
					this.SendPropertyChanged("LrnExp");
					this.OnLrnExpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DMY", DbType = "Int")]
		public System.Nullable<int> DMY
		{
			get
			{
				return this._DMY;
			}
			set
			{
				if ((this._DMY != value))
				{
					this.OnDMYChanging(value);
					this.SendPropertyChanging();
					this._DMY = value;
					this.SendPropertyChanged("DMY");
					this.OnDMYChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoEmp", DbType = "Int")]
		public System.Nullable<int> AutoEmp
		{
			get
			{
				return this._AutoEmp;
			}
			set
			{
				if ((this._AutoEmp != value))
				{
					this.OnAutoEmpChanging(value);
					this.SendPropertyChanging();
					this._AutoEmp = value;
					this.SendPropertyChanged("AutoEmp");
					this.OnAutoEmpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvID", DbType = "Int")]
		public System.Nullable<int> InvID
		{
			get
			{
				return this._InvID;
			}
			set
			{
				if ((this._InvID != value))
				{
					this.OnInvIDChanging(value);
					this.SendPropertyChanging();
					this._InvID = value;
					this.SendPropertyChanged("InvID");
					this.OnInvIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GedID", DbType = "Int")]
		public System.Nullable<int> GedID
		{
			get
			{
				return this._GedID;
			}
			set
			{
				if ((this._GedID != value))
				{
					this.OnGedIDChanging(value);
					this.SendPropertyChanging();
					this._GedID = value;
					this.SendPropertyChanged("GedID");
					this.OnGedIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvMod", DbType = "Int")]
		public System.Nullable<int> InvMod
		{
			get
			{
				return this._InvMod;
			}
			set
			{
				if ((this._InvMod != value))
				{
					this.OnInvModChanging(value);
					this.SendPropertyChanging();
					this._InvMod = value;
					this.SendPropertyChanged("InvMod");
					this.OnInvModChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LogImg", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary LogImg
		{
			get
			{
				return this._LogImg;
			}
			set
			{
				if ((this._LogImg != value))
				{
					this.OnLogImgChanging(value);
					this.SendPropertyChanging();
					this._LogImg = value;
					this.SendPropertyChanged("LogImg");
					this.OnLogImgChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BackPath", DbType = "VarChar(MAX)")]
		public string BackPath
		{
			get
			{
				return this._BackPath;
			}
			set
			{
				if ((this._BackPath != value))
				{
					this.OnBackPathChanging(value);
					this.SendPropertyChanging();
					this._BackPath = value;
					this.SendPropertyChanged("BackPath");
					this.OnBackPathChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAutoBackup", DbType = "Bit")]
		public System.Nullable<bool> IsAutoBackup
		{
			get
			{
				return this._IsAutoBackup;
			}
			set
			{
				if ((this._IsAutoBackup != value))
				{
					this.OnIsAutoBackupChanging(value);
					this.SendPropertyChanging();
					this._IsAutoBackup = value;
					this.SendPropertyChanged("IsAutoBackup");
					this.OnIsAutoBackupChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoBackup", DbType = "Int")]
		public System.Nullable<int> AutoBackup
		{
			get
			{
				return this._AutoBackup;
			}
			set
			{
				if ((this._AutoBackup != value))
				{
					this.OnAutoBackupChanging(value);
					this.SendPropertyChanging();
					this._AutoBackup = value;
					this.SendPropertyChanged("AutoBackup");
					this.OnAutoBackupChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoBackupDate", DbType = "VarChar(15)")]
		public string AutoBackupDate
		{
			get
			{
				return this._AutoBackupDate;
			}
			set
			{
				if ((this._AutoBackupDate != value))
				{
					this.OnAutoBackupDateChanging(value);
					this.SendPropertyChanging();
					this._AutoBackupDate = value;
					this.SendPropertyChanged("AutoBackupDate");
					this.OnAutoBackupDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hAl_Setting", DbType = "Float")]
		public System.Nullable<double> hAl_Setting
		{
			get
			{
				return this._hAl_Setting;
			}
			set
			{
				if ((this._hAl_Setting != value))
				{
					this.OnhAl_SettingChanging(value);
					this.SendPropertyChanging();
					this._hAl_Setting = value;
					this.SendPropertyChanged("hAl_Setting");
					this.OnhAl_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hAs_Setting", DbType = "Float")]
		public System.Nullable<double> hAs_Setting
		{
			get
			{
				return this._hAs_Setting;
			}
			set
			{
				if ((this._hAs_Setting != value))
				{
					this.OnhAs_SettingChanging(value);
					this.SendPropertyChanging();
					this._hAs_Setting = value;
					this.SendPropertyChanged("hAs_Setting");
					this.OnhAs_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hYm_Setting", DbType = "Float")]
		public System.Nullable<double> hYm_Setting
		{
			get
			{
				return this._hYm_Setting;
			}
			set
			{
				if ((this._hYm_Setting != value))
				{
					this.OnhYm_SettingChanging(value);
					this.SendPropertyChanging();
					this._hYm_Setting = value;
					this.SendPropertyChanged("hYm_Setting");
					this.OnhYm_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hYs_Setting", DbType = "Float")]
		public System.Nullable<double> hYs_Setting
		{
			get
			{
				return this._hYs_Setting;
			}
			set
			{
				if ((this._hYs_Setting != value))
				{
					this.OnhYs_SettingChanging(value);
					this.SendPropertyChanging();
					this._hYs_Setting = value;
					this.SendPropertyChanged("hYs_Setting");
					this.OnhYs_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lnPg_Setting", DbType = "Float")]
		public System.Nullable<double> lnPg_Setting
		{
			get
			{
				return this._lnPg_Setting;
			}
			set
			{
				if ((this._lnPg_Setting != value))
				{
					this.OnlnPg_SettingChanging(value);
					this.SendPropertyChanging();
					this._lnPg_Setting = value;
					this.SendPropertyChanged("lnPg_Setting");
					this.OnlnPg_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lnSpc_Setting", DbType = "Float")]
		public System.Nullable<double> lnSpc_Setting
		{
			get
			{
				return this._lnSpc_Setting;
			}
			set
			{
				if ((this._lnSpc_Setting != value))
				{
					this.OnlnSpc_SettingChanging(value);
					this.SendPropertyChanging();
					this._lnSpc_Setting = value;
					this.SendPropertyChanged("lnSpc_Setting");
					this.OnlnSpc_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_defPrn_Setting", DbType = "VarChar(100)")]
		public string defPrn_Setting
		{
			get
			{
				return this._defPrn_Setting;
			}
			set
			{
				if ((this._defPrn_Setting != value))
				{
					this.OndefPrn_SettingChanging(value);
					this.SendPropertyChanging();
					this._defPrn_Setting = value;
					this.SendPropertyChanged("defPrn_Setting");
					this.OndefPrn_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_nTyp_Setting", DbType = "VarChar(3)")]
		public string nTyp_Setting
		{
			get
			{
				return this._nTyp_Setting;
			}
			set
			{
				if ((this._nTyp_Setting != value))
				{
					this.OnnTyp_SettingChanging(value);
					this.SendPropertyChanging();
					this._nTyp_Setting = value;
					this.SendPropertyChanged("nTyp_Setting");
					this.OnnTyp_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsBackground", DbType = "Bit")]
		public System.Nullable<bool> IsBackground
		{
			get
			{
				return this._IsBackground;
			}
			set
			{
				if ((this._IsBackground != value))
				{
					this.OnIsBackgroundChanging(value);
					this.SendPropertyChanging();
					this._IsBackground = value;
					this.SendPropertyChanged("IsBackground");
					this.OnIsBackgroundChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsNotBackground", DbType = "Bit")]
		public System.Nullable<bool> IsNotBackground
		{
			get
			{
				return this._IsNotBackground;
			}
			set
			{
				if ((this._IsNotBackground != value))
				{
					this.OnIsNotBackgroundChanging(value);
					this.SendPropertyChanging();
					this._IsNotBackground = value;
					this.SendPropertyChanged("IsNotBackground");
					this.OnIsNotBackgroundChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BackgroundPic", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
		public System.Data.Linq.Binary BackgroundPic
		{
			get
			{
				return this._BackgroundPic;
			}
			set
			{
				if ((this._BackgroundPic != value))
				{
					this.OnBackgroundPicChanging(value);
					this.SendPropertyChanging();
					this._BackgroundPic = value;
					this.SendPropertyChanged("BackgroundPic");
					this.OnBackgroundPicChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_defSizePaper_Setting", DbType = "VarChar(100)")]
		public string defSizePaper_Setting
		{
			get
			{
				return this._defSizePaper_Setting;
			}
			set
			{
				if ((this._defSizePaper_Setting != value))
				{
					this.OndefSizePaper_SettingChanging(value);
					this.SendPropertyChanging();
					this._defSizePaper_Setting = value;
					this.SendPropertyChanged("defSizePaper_Setting");
					this.OndefSizePaper_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Orientation_Setting", DbType = "Int")]
		public System.Nullable<int> Orientation_Setting
		{
			get
			{
				return this._Orientation_Setting;
			}
			set
			{
				if ((this._Orientation_Setting != value))
				{
					this.OnOrientation_SettingChanging(value);
					this.SendPropertyChanging();
					this._Orientation_Setting = value;
					this.SendPropertyChanged("Orientation_Setting");
					this.OnOrientation_SettingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sponer", DbType = "Bit")]
		public System.Nullable<bool> Sponer
		{
			get
			{
				return this._Sponer;
			}
			set
			{
				if ((this._Sponer != value))
				{
					this.OnSponerChanging(value);
					this.SendPropertyChanging();
					this._Sponer = value;
					this.SendPropertyChanged("Sponer");
					this.OnSponerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmVisaGoBack", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmVisaGoBack
		{
			get
			{
				return this._IsAlarmVisaGoBack;
			}
			set
			{
				if ((this._IsAlarmVisaGoBack != value))
				{
					this.OnIsAlarmVisaGoBackChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmVisaGoBack = value;
					this.SendPropertyChanged("IsAlarmVisaGoBack");
					this.OnIsAlarmVisaGoBackChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmVisaIntro", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmVisaIntro
		{
			get
			{
				return this._IsAlarmVisaIntro;
			}
			set
			{
				if ((this._IsAlarmVisaIntro != value))
				{
					this.OnIsAlarmVisaIntroChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmVisaIntro = value;
					this.SendPropertyChanged("IsAlarmVisaIntro");
					this.OnIsAlarmVisaIntroChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmVisaGoBack", DbType = "Int")]
		public System.Nullable<int> AlarmVisaGoBack
		{
			get
			{
				return this._AlarmVisaGoBack;
			}
			set
			{
				if ((this._AlarmVisaGoBack != value))
				{
					this.OnAlarmVisaGoBackChanging(value);
					this.SendPropertyChanging();
					this._AlarmVisaGoBack = value;
					this.SendPropertyChanged("AlarmVisaGoBack");
					this.OnAlarmVisaGoBackChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmVisaIntro", DbType = "Int")]
		public System.Nullable<int> AlarmVisaIntro
		{
			get
			{
				return this._AlarmVisaIntro;
			}
			set
			{
				if ((this._AlarmVisaIntro != value))
				{
					this.OnAlarmVisaIntroChanging(value);
					this.SendPropertyChanging();
					this._AlarmVisaIntro = value;
					this.SendPropertyChanged("AlarmVisaIntro");
					this.OnAlarmVisaIntroChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmDepts", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmDepts
		{
			get
			{
				return this._IsAlarmDepts;
			}
			set
			{
				if ((this._IsAlarmDepts != value))
				{
					this.OnIsAlarmDeptsChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmDepts = value;
					this.SendPropertyChanged("IsAlarmDepts");
					this.OnIsAlarmDeptsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDeptsBefore", DbType = "Int")]
		public System.Nullable<int> AlarmDeptsBefore
		{
			get
			{
				return this._AlarmDeptsBefore;
			}
			set
			{
				if ((this._AlarmDeptsBefore != value))
				{
					this.OnAlarmDeptsBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmDeptsBefore = value;
					this.SendPropertyChanged("AlarmDeptsBefore");
					this.OnAlarmDeptsBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoChangSalStatus", DbType = "Bit")]
		public System.Nullable<bool> AutoChangSalStatus
		{
			get
			{
				return this._AutoChangSalStatus;
			}
			set
			{
				if ((this._AutoChangSalStatus != value))
				{
					this.OnAutoChangSalStatusChanging(value);
					this.SendPropertyChanging();
					this._AutoChangSalStatus = value;
					this.SendPropertyChanged("AutoChangSalStatus");
					this.OnAutoChangSalStatusChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccUsrNo", DbType = "Int")]
		public System.Nullable<int> AccUsrNo
		{
			get
			{
				return this._AccUsrNo;
			}
			set
			{
				if ((this._AccUsrNo != value))
				{
					this.OnAccUsrNoChanging(value);
					this.SendPropertyChanging();
					this._AccUsrNo = value;
					this.SendPropertyChanged("AccUsrNo");
					this.OnAccUsrNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentPath", DbType = "VarChar(MAX)")]
		public string DocumentPath
		{
			get
			{
				return this._DocumentPath;
			}
			set
			{
				if ((this._DocumentPath != value))
				{
					this.OnDocumentPathChanging(value);
					this.SendPropertyChanging();
					this._DocumentPath = value;
					this.SendPropertyChanged("DocumentPath");
					this.OnDocumentPathChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImportFilePath", DbType = "VarChar(MAX)")]
		public string ImportFilePath
		{
			get
			{
				return this._ImportFilePath;
			}
			set
			{
				if ((this._ImportFilePath != value))
				{
					this.OnImportFilePathChanging(value);
					this.SendPropertyChanging();
					this._ImportFilePath = value;
					this.SendPropertyChanged("ImportFilePath");
					this.OnImportFilePathChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImportIp", DbType = "VarChar(20)")]
		public string ImportIp
		{
			get
			{
				return this._ImportIp;
			}
			set
			{
				if ((this._ImportIp != value))
				{
					this.OnImportIpChanging(value);
					this.SendPropertyChanging();
					this._ImportIp = value;
					this.SendPropertyChanged("ImportIp");
					this.OnImportIpChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImportEmpNo", DbType = "VarChar(5)")]
		public string ImportEmpNo
		{
			get
			{
				return this._ImportEmpNo;
			}
			set
			{
				if ((this._ImportEmpNo != value))
				{
					this.OnImportEmpNoChanging(value);
					this.SendPropertyChanging();
					this._ImportEmpNo = value;
					this.SendPropertyChanged("ImportEmpNo");
					this.OnImportEmpNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImportDate", DbType = "VarChar(5)")]
		public string ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImportTime1", DbType = "VarChar(5)")]
		public string ImportTime1
		{
			get
			{
				return this._ImportTime1;
			}
			set
			{
				if ((this._ImportTime1 != value))
				{
					this.OnImportTime1Changing(value);
					this.SendPropertyChanging();
					this._ImportTime1 = value;
					this.SendPropertyChanged("ImportTime1");
					this.OnImportTime1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImportTimeLeave1", DbType = "VarChar(5)")]
		public string ImportTimeLeave1
		{
			get
			{
				return this._ImportTimeLeave1;
			}
			set
			{
				if ((this._ImportTimeLeave1 != value))
				{
					this.OnImportTimeLeave1Changing(value);
					this.SendPropertyChanging();
					this._ImportTimeLeave1 = value;
					this.SendPropertyChanged("ImportTimeLeave1");
					this.OnImportTimeLeave1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImportStart", DbType = "VarChar(5)")]
		public string ImportStart
		{
			get
			{
				return this._ImportStart;
			}
			set
			{
				if ((this._ImportStart != value))
				{
					this.OnImportStartChanging(value);
					this.SendPropertyChanging();
					this._ImportStart = value;
					this.SendPropertyChanged("ImportStart");
					this.OnImportStartChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImportEnd", DbType = "VarChar(5)")]
		public string ImportEnd
		{
			get
			{
				return this._ImportEnd;
			}
			set
			{
				if ((this._ImportEnd != value))
				{
					this.OnImportEndChanging(value);
					this.SendPropertyChanging();
					this._ImportEnd = value;
					this.SendPropertyChanged("ImportEnd");
					this.OnImportEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccPath", DbType = "VarChar(MAX)")]
		public string AccPath
		{
			get
			{
				return this._AccPath;
			}
			set
			{
				if ((this._AccPath != value))
				{
					this.OnAccPathChanging(value);
					this.SendPropertyChanging();
					this._AccPath = value;
					this.SendPropertyChanged("AccPath");
					this.OnAccPathChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ServerNm", DbType = "VarChar(50)")]
		public string ServerNm
		{
			get
			{
				return this._ServerNm;
			}
			set
			{
				if ((this._ServerNm != value))
				{
					this.OnServerNmChanging(value);
					this.SendPropertyChanging();
					this._ServerNm = value;
					this.SendPropertyChanged("ServerNm");
					this.OnServerNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DataBaseNm", DbType = "VarChar(50)")]
		public string DataBaseNm
		{
			get
			{
				return this._DataBaseNm;
			}
			set
			{
				if ((this._DataBaseNm != value))
				{
					this.OnDataBaseNmChanging(value);
					this.SendPropertyChanging();
					this._DataBaseNm = value;
					this.SendPropertyChanged("DataBaseNm");
					this.OnDataBaseNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Sa_Pass", DbType = "VarChar(100)")]
		public string Sa_Pass
		{
			get
			{
				return this._Sa_Pass;
			}
			set
			{
				if ((this._Sa_Pass != value))
				{
					this.OnSa_PassChanging(value);
					this.SendPropertyChanging();
					this._Sa_Pass = value;
					this.SendPropertyChanged("Sa_Pass");
					this.OnSa_PassChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Path_Kind", DbType = "Int")]
		public System.Nullable<int> Path_Kind
		{
			get
			{
				return this._Path_Kind;
			}
			set
			{
				if ((this._Path_Kind != value))
				{
					this.OnPath_KindChanging(value);
					this.SendPropertyChanging();
					this._Path_Kind = value;
					this.SendPropertyChanged("Path_Kind");
					this.OnPath_KindChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDoc", DbType = "Bit")]
		public System.Nullable<bool> AlarmDoc
		{
			get
			{
				return this._AlarmDoc;
			}
			set
			{
				if ((this._AlarmDoc != value))
				{
					this.OnAlarmDocChanging(value);
					this.SendPropertyChanging();
					this._AlarmDoc = value;
					this.SendPropertyChanged("AlarmDoc");
					this.OnAlarmDocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDocBefore", DbType = "Int")]
		public System.Nullable<int> AlarmDocBefore
		{
			get
			{
				return this._AlarmDocBefore;
			}
			set
			{
				if ((this._AlarmDocBefore != value))
				{
					this.OnAlarmDocBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmDocBefore = value;
					this.SendPropertyChanged("AlarmDocBefore");
					this.OnAlarmDocBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutoLeave", DbType = "Bit")]
		public System.Nullable<bool> AutoLeave
		{
			get
			{
				return this._AutoLeave;
			}
			set
			{
				if ((this._AutoLeave != value))
				{
					this.OnAutoLeaveChanging(value);
					this.SendPropertyChanging();
					this._AutoLeave = value;
					this.SendPropertyChanged("AutoLeave");
					this.OnAutoLeaveChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpLeaveAfter", DbType = "Int")]
		public System.Nullable<int> EmpLeaveAfter
		{
			get
			{
				return this._EmpLeaveAfter;
			}
			set
			{
				if ((this._EmpLeaveAfter != value))
				{
					this.OnEmpLeaveAfterChanging(value);
					this.SendPropertyChanging();
					this._EmpLeaveAfter = value;
					this.SendPropertyChanged("EmpLeaveAfter");
					this.OnEmpLeaveAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AttendanceManually", DbType = "Bit")]
		public System.Nullable<bool> AttendanceManually
		{
			get
			{
				return this._AttendanceManually;
			}
			set
			{
				if ((this._AttendanceManually != value))
				{
					this.OnAttendanceManuallyChanging(value);
					this.SendPropertyChanging();
					this._AttendanceManually = value;
					this.SendPropertyChanged("AttendanceManually");
					this.OnAttendanceManuallyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacationManually", DbType = "Bit")]
		public System.Nullable<bool> VacationManually
		{
			get
			{
				return this._VacationManually;
			}
			set
			{
				if ((this._VacationManually != value))
				{
					this.OnVacationManuallyChanging(value);
					this.SendPropertyChanging();
					this._VacationManually = value;
					this.SendPropertyChanged("VacationManually");
					this.OnVacationManuallyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculateNo", DbType = "Int")]
		public System.Nullable<int> CalculateNo
		{
			get
			{
				return this._CalculateNo;
			}
			set
			{
				if ((this._CalculateNo != value))
				{
					this.OnCalculateNoChanging(value);
					this.SendPropertyChanging();
					this._CalculateNo = value;
					this.SendPropertyChanged("CalculateNo");
					this.OnCalculateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculatliquidNo", DbType = "Int")]
		public System.Nullable<int> CalculatliquidNo
		{
			get
			{
				return this._CalculatliquidNo;
			}
			set
			{
				if ((this._CalculatliquidNo != value))
				{
					this.OnCalculatliquidNoChanging(value);
					this.SendPropertyChanging();
					this._CalculatliquidNo = value;
					this.SendPropertyChanged("CalculatliquidNo");
					this.OnCalculatliquidNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Allowances", DbType = "Int")]
		public System.Nullable<int> Allowances
		{
			get
			{
				return this._Allowances;
			}
			set
			{
				if ((this._Allowances != value))
				{
					this.OnAllowancesChanging(value);
					this.SendPropertyChanging();
					this._Allowances = value;
					this.SendPropertyChanged("Allowances");
					this.OnAllowancesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowancesTime", DbType = "Int")]
		public System.Nullable<int> AllowancesTime
		{
			get
			{
				return this._AllowancesTime;
			}
			set
			{
				if ((this._AllowancesTime != value))
				{
					this.OnAllowancesTimeChanging(value);
					this.SendPropertyChanging();
					this._AllowancesTime = value;
					this.SendPropertyChanged("AllowancesTime");
					this.OnAllowancesTimeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowBanner", DbType = "Bit")]
		public System.Nullable<bool> ShowBanner
		{
			get
			{
				return this._ShowBanner;
			}
			set
			{
				if ((this._ShowBanner != value))
				{
					this.OnShowBannerChanging(value);
					this.SendPropertyChanging();
					this._ShowBanner = value;
					this.SendPropertyChanged("ShowBanner");
					this.OnShowBannerChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowPageNo", DbType = "Bit")]
		public System.Nullable<bool> ShowPageNo
		{
			get
			{
				return this._ShowPageNo;
			}
			set
			{
				if ((this._ShowPageNo != value))
				{
					this.OnShowPageNoChanging(value);
					this.SendPropertyChanging();
					this._ShowPageNo = value;
					this.SendPropertyChanged("ShowPageNo");
					this.OnShowPageNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowDateH", DbType = "Bit")]
		public System.Nullable<bool> ShowDateH
		{
			get
			{
				return this._ShowDateH;
			}
			set
			{
				if ((this._ShowDateH != value))
				{
					this.OnShowDateHChanging(value);
					this.SendPropertyChanging();
					this._ShowDateH = value;
					this.SendPropertyChanged("ShowDateH");
					this.OnShowDateHChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowDateG", DbType = "Bit")]
		public System.Nullable<bool> ShowDateG
		{
			get
			{
				return this._ShowDateG;
			}
			set
			{
				if ((this._ShowDateG != value))
				{
					this.OnShowDateGChanging(value);
					this.SendPropertyChanging();
					this._ShowDateG = value;
					this.SendPropertyChanged("ShowDateG");
					this.OnShowDateGChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SalDate", DbType = "VarChar(10)")]
		public string SalDate
		{
			get
			{
				return this._SalDate;
			}
			set
			{
				if ((this._SalDate != value))
				{
					this.OnSalDateChanging(value);
					this.SendPropertyChanging();
					this._SalDate = value;
					this.SendPropertyChanged("SalDate");
					this.OnSalDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DisVacationType", DbType = "Int")]
		public System.Nullable<int> DisVacationType
		{
			get
			{
				return this._DisVacationType;
			}
			set
			{
				if ((this._DisVacationType != value))
				{
					this.OnDisVacationTypeChanging(value);
					this.SendPropertyChanging();
					this._DisVacationType = value;
					this.SendPropertyChanged("DisVacationType");
					this.OnDisVacationTypeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmEmpDoc", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmEmpDoc
		{
			get
			{
				return this._IsAlarmEmpDoc;
			}
			set
			{
				if ((this._IsAlarmEmpDoc != value))
				{
					this.OnIsAlarmEmpDocChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmEmpDoc = value;
					this.SendPropertyChanged("IsAlarmEmpDoc");
					this.OnIsAlarmEmpDocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmEmpContract", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmEmpContract
		{
			get
			{
				return this._IsAlarmEmpContract;
			}
			set
			{
				if ((this._IsAlarmEmpContract != value))
				{
					this.OnIsAlarmEmpContractChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmEmpContract = value;
					this.SendPropertyChanged("IsAlarmEmpContract");
					this.OnIsAlarmEmpContractChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmFamilyPassport", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmFamilyPassport
		{
			get
			{
				return this._IsAlarmFamilyPassport;
			}
			set
			{
				if ((this._IsAlarmFamilyPassport != value))
				{
					this.OnIsAlarmFamilyPassportChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmFamilyPassport = value;
					this.SendPropertyChanged("IsAlarmFamilyPassport");
					this.OnIsAlarmFamilyPassportChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmGuarantorDoc", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmGuarantorDoc
		{
			get
			{
				return this._IsAlarmGuarantorDoc;
			}
			set
			{
				if ((this._IsAlarmGuarantorDoc != value))
				{
					this.OnIsAlarmGuarantorDocChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmGuarantorDoc = value;
					this.SendPropertyChanged("IsAlarmGuarantorDoc");
					this.OnIsAlarmGuarantorDocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmEndVaction", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmEndVaction
		{
			get
			{
				return this._IsAlarmEndVaction;
			}
			set
			{
				if ((this._IsAlarmEndVaction != value))
				{
					this.OnIsAlarmEndVactionChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmEndVaction = value;
					this.SendPropertyChanged("IsAlarmEndVaction");
					this.OnIsAlarmEndVactionChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmBranchDoc", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmBranchDoc
		{
			get
			{
				return this._IsAlarmBranchDoc;
			}
			set
			{
				if ((this._IsAlarmBranchDoc != value))
				{
					this.OnIsAlarmBranchDocChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmBranchDoc = value;
					this.SendPropertyChanged("IsAlarmBranchDoc");
					this.OnIsAlarmBranchDocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmCarDoc", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmCarDoc
		{
			get
			{
				return this._IsAlarmCarDoc;
			}
			set
			{
				if ((this._IsAlarmCarDoc != value))
				{
					this.OnIsAlarmCarDocChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmCarDoc = value;
					this.SendPropertyChanged("IsAlarmCarDoc");
					this.OnIsAlarmCarDocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAlarmSecretariatsDoc", DbType = "Bit")]
		public System.Nullable<bool> IsAlarmSecretariatsDoc
		{
			get
			{
				return this._IsAlarmSecretariatsDoc;
			}
			set
			{
				if ((this._IsAlarmSecretariatsDoc != value))
				{
					this.OnIsAlarmSecretariatsDocChanging(value);
					this.SendPropertyChanging();
					this._IsAlarmSecretariatsDoc = value;
					this.SendPropertyChanged("IsAlarmSecretariatsDoc");
					this.OnIsAlarmSecretariatsDocChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmEmpDocBefore", DbType = "Int")]
		public System.Nullable<int> AlarmEmpDocBefore
		{
			get
			{
				return this._AlarmEmpDocBefore;
			}
			set
			{
				if ((this._AlarmEmpDocBefore != value))
				{
					this.OnAlarmEmpDocBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmEmpDocBefore = value;
					this.SendPropertyChanged("AlarmEmpDocBefore");
					this.OnAlarmEmpDocBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmEmpContractBefore", DbType = "Int")]
		public System.Nullable<int> AlarmEmpContractBefore
		{
			get
			{
				return this._AlarmEmpContractBefore;
			}
			set
			{
				if ((this._AlarmEmpContractBefore != value))
				{
					this.OnAlarmEmpContractBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmEmpContractBefore = value;
					this.SendPropertyChanged("AlarmEmpContractBefore");
					this.OnAlarmEmpContractBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmFamilyPassportBefore", DbType = "Int")]
		public System.Nullable<int> AlarmFamilyPassportBefore
		{
			get
			{
				return this._AlarmFamilyPassportBefore;
			}
			set
			{
				if ((this._AlarmFamilyPassportBefore != value))
				{
					this.OnAlarmFamilyPassportBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmFamilyPassportBefore = value;
					this.SendPropertyChanged("AlarmFamilyPassportBefore");
					this.OnAlarmFamilyPassportBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmGuarantorDocBefore", DbType = "Int")]
		public System.Nullable<int> AlarmGuarantorDocBefore
		{
			get
			{
				return this._AlarmGuarantorDocBefore;
			}
			set
			{
				if ((this._AlarmGuarantorDocBefore != value))
				{
					this.OnAlarmGuarantorDocBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmGuarantorDocBefore = value;
					this.SendPropertyChanged("AlarmGuarantorDocBefore");
					this.OnAlarmGuarantorDocBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmEndVactionBefore", DbType = "Int")]
		public System.Nullable<int> AlarmEndVactionBefore
		{
			get
			{
				return this._AlarmEndVactionBefore;
			}
			set
			{
				if ((this._AlarmEndVactionBefore != value))
				{
					this.OnAlarmEndVactionBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmEndVactionBefore = value;
					this.SendPropertyChanged("AlarmEndVactionBefore");
					this.OnAlarmEndVactionBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmBranchDocBefore", DbType = "Int")]
		public System.Nullable<int> AlarmBranchDocBefore
		{
			get
			{
				return this._AlarmBranchDocBefore;
			}
			set
			{
				if ((this._AlarmBranchDocBefore != value))
				{
					this.OnAlarmBranchDocBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmBranchDocBefore = value;
					this.SendPropertyChanged("AlarmBranchDocBefore");
					this.OnAlarmBranchDocBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmCarDocBefore", DbType = "Int")]
		public System.Nullable<int> AlarmCarDocBefore
		{
			get
			{
				return this._AlarmCarDocBefore;
			}
			set
			{
				if ((this._AlarmCarDocBefore != value))
				{
					this.OnAlarmCarDocBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmCarDocBefore = value;
					this.SendPropertyChanged("AlarmCarDocBefore");
					this.OnAlarmCarDocBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmSecretariatsBefore", DbType = "Int")]
		public System.Nullable<int> AlarmSecretariatsBefore
		{
			get
			{
				return this._AlarmSecretariatsBefore;
			}
			set
			{
				if ((this._AlarmSecretariatsBefore != value))
				{
					this.OnAlarmSecretariatsBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmSecretariatsBefore = value;
					this.SendPropertyChanged("AlarmSecretariatsBefore");
					this.OnAlarmSecretariatsBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_smsUserName", DbType = "VarChar(500)")]
		public string smsUserName
		{
			get
			{
				return this._smsUserName;
			}
			set
			{
				if ((this._smsUserName != value))
				{
					this.OnsmsUserNameChanging(value);
					this.SendPropertyChanging();
					this._smsUserName = value;
					this.SendPropertyChanged("smsUserName");
					this.OnsmsUserNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_smsPass", DbType = "VarChar(500)")]
		public string smsPass
		{
			get
			{
				return this._smsPass;
			}
			set
			{
				if ((this._smsPass != value))
				{
					this.OnsmsPassChanging(value);
					this.SendPropertyChanging();
					this._smsPass = value;
					this.SendPropertyChanged("smsPass");
					this.OnsmsPassChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_smsSenderName", DbType = "VarChar(15)")]
		public string smsSenderName
		{
			get
			{
				return this._smsSenderName;
			}
			set
			{
				if ((this._smsSenderName != value))
				{
					this.OnsmsSenderNameChanging(value);
					this.SendPropertyChanging();
					this._smsSenderName = value;
					this.SendPropertyChanged("smsSenderName");
					this.OnsmsSenderNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_smsMessage1", DbType = "VarChar(500)")]
		public string smsMessage1
		{
			get
			{
				return this._smsMessage1;
			}
			set
			{
				if ((this._smsMessage1 != value))
				{
					this.OnsmsMessage1Changing(value);
					this.SendPropertyChanging();
					this._smsMessage1 = value;
					this.SendPropertyChanged("smsMessage1");
					this.OnsmsMessage1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_smsMessage2", DbType = "VarChar(500)")]
		public string smsMessage2
		{
			get
			{
				return this._smsMessage2;
			}
			set
			{
				if ((this._smsMessage2 != value))
				{
					this.OnsmsMessage2Changing(value);
					this.SendPropertyChanging();
					this._smsMessage2 = value;
					this.SendPropertyChanged("smsMessage2");
					this.OnsmsMessage2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_smsMessage3", DbType = "VarChar(500)")]
		public string smsMessage3
		{
			get
			{
				return this._smsMessage3;
			}
			set
			{
				if ((this._smsMessage3 != value))
				{
					this.OnsmsMessage3Changing(value);
					this.SendPropertyChanging();
					this._smsMessage3 = value;
					this.SendPropertyChanged("smsMessage3");
					this.OnsmsMessage3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_smsMessage4", DbType = "VarChar(500)")]
		public string smsMessage4
		{
			get
			{
				return this._smsMessage4;
			}
			set
			{
				if ((this._smsMessage4 != value))
				{
					this.OnsmsMessage4Changing(value);
					this.SendPropertyChanging();
					this._smsMessage4 = value;
					this.SendPropertyChanged("smsMessage4");
					this.OnsmsMessage4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmEmployee", DbType = "Int")]
		public System.Nullable<int> AlarmEmployee
		{
			get
			{
				return this._AlarmEmployee;
			}
			set
			{
				if ((this._AlarmEmployee != value))
				{
					this.OnAlarmEmployeeChanging(value);
					this.SendPropertyChanging();
					this._AlarmEmployee = value;
					this.SendPropertyChanged("AlarmEmployee");
					this.OnAlarmEmployeeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineDetailSts", DbType = "VarChar(100)")]
		public string LineDetailSts
		{
			get
			{
				return this._LineDetailSts;
			}
			set
			{
				if ((this._LineDetailSts != value))
				{
					this.OnLineDetailStsChanging(value);
					this.SendPropertyChanging();
					this._LineDetailSts = value;
					this.SendPropertyChanged("LineDetailSts");
					this.OnLineDetailStsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineDetailNameA", DbType = "VarChar(30)")]
		public string LineDetailNameA
		{
			get
			{
				return this._LineDetailNameA;
			}
			set
			{
				if ((this._LineDetailNameA != value))
				{
					this.OnLineDetailNameAChanging(value);
					this.SendPropertyChanging();
					this._LineDetailNameA = value;
					this.SendPropertyChanged("LineDetailNameA");
					this.OnLineDetailNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineDetailNameE", DbType = "VarChar(30)")]
		public string LineDetailNameE
		{
			get
			{
				return this._LineDetailNameE;
			}
			set
			{
				if ((this._LineDetailNameE != value))
				{
					this.OnLineDetailNameEChanging(value);
					this.SendPropertyChanging();
					this._LineDetailNameE = value;
					this.SendPropertyChanged("LineDetailNameE");
					this.OnLineDetailNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineGiftSts", DbType = "VarChar(100)")]
		public string LineGiftSts
		{
			get
			{
				return this._LineGiftSts;
			}
			set
			{
				if ((this._LineGiftSts != value))
				{
					this.OnLineGiftStsChanging(value);
					this.SendPropertyChanging();
					this._LineGiftSts = value;
					this.SendPropertyChanged("LineGiftSts");
					this.OnLineGiftStsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineGiftlNameA", DbType = "VarChar(30)")]
		public string LineGiftlNameA
		{
			get
			{
				return this._LineGiftlNameA;
			}
			set
			{
				if ((this._LineGiftlNameA != value))
				{
					this.OnLineGiftlNameAChanging(value);
					this.SendPropertyChanging();
					this._LineGiftlNameA = value;
					this.SendPropertyChanged("LineGiftlNameA");
					this.OnLineGiftlNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineGiftlNameE", DbType = "VarChar(30)")]
		public string LineGiftlNameE
		{
			get
			{
				return this._LineGiftlNameE;
			}
			set
			{
				if ((this._LineGiftlNameE != value))
				{
					this.OnLineGiftlNameEChanging(value);
					this.SendPropertyChanging();
					this._LineGiftlNameE = value;
					this.SendPropertyChanged("LineGiftlNameE");
					this.OnLineGiftlNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TableFamily", DbType = "Int")]
		public System.Nullable<int> TableFamily
		{
			get
			{
				return this._TableFamily;
			}
			set
			{
				if ((this._TableFamily != value))
				{
					this.OnTableFamilyChanging(value);
					this.SendPropertyChanging();
					this._TableFamily = value;
					this.SendPropertyChanged("TableFamily");
					this.OnTableFamilyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TableBoys", DbType = "Int")]
		public System.Nullable<int> TableBoys
		{
			get
			{
				return this._TableBoys;
			}
			set
			{
				if ((this._TableBoys != value))
				{
					this.OnTableBoysChanging(value);
					this.SendPropertyChanging();
					this._TableBoys = value;
					this.SendPropertyChanged("TableBoys");
					this.OnTableBoysChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TableExtrnal", DbType = "Int")]
		public System.Nullable<int> TableExtrnal
		{
			get
			{
				return this._TableExtrnal;
			}
			set
			{
				if ((this._TableExtrnal != value))
				{
					this.OnTableExtrnalChanging(value);
					this.SendPropertyChanging();
					this._TableExtrnal = value;
					this.SendPropertyChanged("TableExtrnal");
					this.OnTableExtrnalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TableOther", DbType = "Int")]
		public System.Nullable<int> TableOther
		{
			get
			{
				return this._TableOther;
			}
			set
			{
				if ((this._TableOther != value))
				{
					this.OnTableOtherChanging(value);
					this.SendPropertyChanging();
					this._TableOther = value;
					this.SendPropertyChanged("TableOther");
					this.OnTableOtherChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MainDirPath", DbType = "VarChar(MAX)")]
		public string MainDirPath
		{
			get
			{
				return this._MainDirPath;
			}
			set
			{
				if ((this._MainDirPath != value))
				{
					this.OnMainDirPathChanging(value);
					this.SendPropertyChanging();
					this._MainDirPath = value;
					this.SendPropertyChanged("MainDirPath");
					this.OnMainDirPathChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BColor0", DbType = "VarChar(50)")]
		public string BColor0
		{
			get
			{
				return this._BColor0;
			}
			set
			{
				if ((this._BColor0 != value))
				{
					this.OnBColor0Changing(value);
					this.SendPropertyChanging();
					this._BColor0 = value;
					this.SendPropertyChanged("BColor0");
					this.OnBColor0Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BColor1", DbType = "VarChar(50)")]
		public string BColor1
		{
			get
			{
				return this._BColor1;
			}
			set
			{
				if ((this._BColor1 != value))
				{
					this.OnBColor1Changing(value);
					this.SendPropertyChanging();
					this._BColor1 = value;
					this.SendPropertyChanged("BColor1");
					this.OnBColor1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BColor2", DbType = "VarChar(50)")]
		public string BColor2
		{
			get
			{
				return this._BColor2;
			}
			set
			{
				if ((this._BColor2 != value))
				{
					this.OnBColor2Changing(value);
					this.SendPropertyChanging();
					this._BColor2 = value;
					this.SendPropertyChanged("BColor2");
					this.OnBColor2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BColor3", DbType = "VarChar(50)")]
		public string BColor3
		{
			get
			{
				return this._BColor3;
			}
			set
			{
				if ((this._BColor3 != value))
				{
					this.OnBColor3Changing(value);
					this.SendPropertyChanging();
					this._BColor3 = value;
					this.SendPropertyChanged("BColor3");
					this.OnBColor3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BColor4", DbType = "VarChar(50)")]
		public string BColor4
		{
			get
			{
				return this._BColor4;
			}
			set
			{
				if ((this._BColor4 != value))
				{
					this.OnBColor4Changing(value);
					this.SendPropertyChanging();
					this._BColor4 = value;
					this.SendPropertyChanged("BColor4");
					this.OnBColor4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BColor5", DbType = "VarChar(50)")]
		public string BColor5
		{
			get
			{
				return this._BColor5;
			}
			set
			{
				if ((this._BColor5 != value))
				{
					this.OnBColor5Changing(value);
					this.SendPropertyChanging();
					this._BColor5 = value;
					this.SendPropertyChanged("BColor5");
					this.OnBColor5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BColor6", DbType = "VarChar(50)")]
		public string BColor6
		{
			get
			{
				return this._BColor6;
			}
			set
			{
				if ((this._BColor6 != value))
				{
					this.OnBColor6Changing(value);
					this.SendPropertyChanging();
					this._BColor6 = value;
					this.SendPropertyChanged("BColor6");
					this.OnBColor6Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BColor7", DbType = "VarChar(50)")]
		public string BColor7
		{
			get
			{
				return this._BColor7;
			}
			set
			{
				if ((this._BColor7 != value))
				{
					this.OnBColor7Changing(value);
					this.SendPropertyChanging();
					this._BColor7 = value;
					this.SendPropertyChanged("BColor7");
					this.OnBColor7Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FColor0", DbType = "VarChar(50)")]
		public string FColor0
		{
			get
			{
				return this._FColor0;
			}
			set
			{
				if ((this._FColor0 != value))
				{
					this.OnFColor0Changing(value);
					this.SendPropertyChanging();
					this._FColor0 = value;
					this.SendPropertyChanged("FColor0");
					this.OnFColor0Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FColor1", DbType = "VarChar(50)")]
		public string FColor1
		{
			get
			{
				return this._FColor1;
			}
			set
			{
				if ((this._FColor1 != value))
				{
					this.OnFColor1Changing(value);
					this.SendPropertyChanging();
					this._FColor1 = value;
					this.SendPropertyChanged("FColor1");
					this.OnFColor1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FColor2", DbType = "VarChar(50)")]
		public string FColor2
		{
			get
			{
				return this._FColor2;
			}
			set
			{
				if ((this._FColor2 != value))
				{
					this.OnFColor2Changing(value);
					this.SendPropertyChanging();
					this._FColor2 = value;
					this.SendPropertyChanged("FColor2");
					this.OnFColor2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FColor3", DbType = "VarChar(50)")]
		public string FColor3
		{
			get
			{
				return this._FColor3;
			}
			set
			{
				if ((this._FColor3 != value))
				{
					this.OnFColor3Changing(value);
					this.SendPropertyChanging();
					this._FColor3 = value;
					this.SendPropertyChanged("FColor3");
					this.OnFColor3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FColor4", DbType = "VarChar(50)")]
		public string FColor4
		{
			get
			{
				return this._FColor4;
			}
			set
			{
				if ((this._FColor4 != value))
				{
					this.OnFColor4Changing(value);
					this.SendPropertyChanging();
					this._FColor4 = value;
					this.SendPropertyChanged("FColor4");
					this.OnFColor4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FColor5", DbType = "VarChar(50)")]
		public string FColor5
		{
			get
			{
				return this._FColor5;
			}
			set
			{
				if ((this._FColor5 != value))
				{
					this.OnFColor5Changing(value);
					this.SendPropertyChanging();
					this._FColor5 = value;
					this.SendPropertyChanged("FColor5");
					this.OnFColor5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FColor6", DbType = "VarChar(50)")]
		public string FColor6
		{
			get
			{
				return this._FColor6;
			}
			set
			{
				if ((this._FColor6 != value))
				{
					this.OnFColor6Changing(value);
					this.SendPropertyChanging();
					this._FColor6 = value;
					this.SendPropertyChanged("FColor6");
					this.OnFColor6Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FColor7", DbType = "VarChar(50)")]
		public string FColor7
		{
			get
			{
				return this._FColor7;
			}
			set
			{
				if ((this._FColor7 != value))
				{
					this.OnFColor7Changing(value);
					this.SendPropertyChanging();
					this._FColor7 = value;
					this.SendPropertyChanged("FColor7");
					this.OnFColor7Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fld_w", DbType = "Int")]
		public System.Nullable<int> Fld_w
		{
			get
			{
				return this._Fld_w;
			}
			set
			{
				if ((this._Fld_w != value))
				{
					this.OnFld_wChanging(value);
					this.SendPropertyChanging();
					this._Fld_w = value;
					this.SendPropertyChanged("Fld_w");
					this.OnFld_wChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fld_H", DbType = "Int")]
		public System.Nullable<int> Fld_H
		{
			get
			{
				return this._Fld_H;
			}
			set
			{
				if ((this._Fld_H != value))
				{
					this.OnFld_HChanging(value);
					this.SendPropertyChanging();
					this._Fld_H = value;
					this.SendPropertyChanged("Fld_H");
					this.OnFld_HChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayOfM", DbType = "Int")]
		public System.Nullable<int> DayOfM
		{
			get
			{
				return this._DayOfM;
			}
			set
			{
				if ((this._DayOfM != value))
				{
					this.OnDayOfMChanging(value);
					this.SendPropertyChanging();
					this._DayOfM = value;
					this.SendPropertyChanged("DayOfM");
					this.OnDayOfMChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ch", DbType = "Bit")]
		public System.Nullable<bool> ch
		{
			get
			{
				return this._ch;
			}
			set
			{
				if ((this._ch != value))
				{
					this.OnchChanging(value);
					this.SendPropertyChanging();
					this._ch = value;
					this.SendPropertyChanged("ch");
					this.OnchChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_flore", DbType = "Int")]
		public System.Nullable<int> flore
		{
			get
			{
				return this._flore;
			}
			set
			{
				if ((this._flore != value))
				{
					this.OnfloreChanging(value);
					this.SendPropertyChanging();
					this._flore = value;
					this.SendPropertyChanged("flore");
					this.OnfloreChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_rom", DbType = "Int")]
		public System.Nullable<int> rom
		{
			get
			{
				return this._rom;
			}
			set
			{
				if ((this._rom != value))
				{
					this.OnromChanging(value);
					this.SendPropertyChanging();
					this._rom = value;
					this.SendPropertyChanged("rom");
					this.OnromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vStart", DbType = "VarChar(10)")]
		public string vStart
		{
			get
			{
				return this._vStart;
			}
			set
			{
				if ((this._vStart != value))
				{
					this.OnvStartChanging(value);
					this.SendPropertyChanging();
					this._vStart = value;
					this.SendPropertyChanged("vStart");
					this.OnvStartChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vEnd", DbType = "VarChar(10)")]
		public string vEnd
		{
			get
			{
				return this._vEnd;
			}
			set
			{
				if ((this._vEnd != value))
				{
					this.OnvEndChanging(value);
					this.SendPropertyChanging();
					this._vEnd = value;
					this.SendPropertyChanged("vEnd");
					this.OnvEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vStartTyp", DbType = "VarChar(5)")]
		public string vStartTyp
		{
			get
			{
				return this._vStartTyp;
			}
			set
			{
				if ((this._vStartTyp != value))
				{
					this.OnvStartTypChanging(value);
					this.SendPropertyChanging();
					this._vStartTyp = value;
					this.SendPropertyChanged("vStartTyp");
					this.OnvStartTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vEndTyp", DbType = "VarChar(5)")]
		public string vEndTyp
		{
			get
			{
				return this._vEndTyp;
			}
			set
			{
				if ((this._vEndTyp != value))
				{
					this.OnvEndTypChanging(value);
					this.SendPropertyChanging();
					this._vEndTyp = value;
					this.SendPropertyChanged("vEndTyp");
					this.OnvEndTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GuestAcc", DbType = "VarChar(30)")]
		public string GuestAcc
		{
			get
			{
				return this._GuestAcc;
			}
			set
			{
				if ((this._GuestAcc != value))
				{
					this.OnGuestAccChanging(value);
					this.SendPropertyChanging();
					this._GuestAcc = value;
					this.SendPropertyChanged("GuestAcc");
					this.OnGuestAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GuestBoxAcc", DbType = "VarChar(30)")]
		public string GuestBoxAcc
		{
			get
			{
				return this._GuestBoxAcc;
			}
			set
			{
				if ((this._GuestBoxAcc != value))
				{
					this.OnGuestBoxAccChanging(value);
					this.SendPropertyChanging();
					this._GuestBoxAcc = value;
					this.SendPropertyChanged("GuestBoxAcc");
					this.OnGuestBoxAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefSalesTax", DbType = "Float")]
		public System.Nullable<double> DefSalesTax
		{
			get
			{
				return this._DefSalesTax;
			}
			set
			{
				if ((this._DefSalesTax != value))
				{
					this.OnDefSalesTaxChanging(value);
					this.SendPropertyChanging();
					this._DefSalesTax = value;
					this.SendPropertyChanged("DefSalesTax");
					this.OnDefSalesTaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DefPurchaesTax", DbType = "Float")]
		public System.Nullable<double> DefPurchaesTax
		{
			get
			{
				return this._DefPurchaesTax;
			}
			set
			{
				if ((this._DefPurchaesTax != value))
				{
					this.OnDefPurchaesTaxChanging(value);
					this.SendPropertyChanging();
					this._DefPurchaesTax = value;
					this.SendPropertyChanged("DefPurchaesTax");
					this.OnDefPurchaesTaxChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxAcc", DbType = "VarChar(30)")]
		public string TaxAcc
		{
			get
			{
				return this._TaxAcc;
			}
			set
			{
				if ((this._TaxAcc != value))
				{
					this.OnTaxAccChanging(value);
					this.SendPropertyChanging();
					this._TaxAcc = value;
					this.SendPropertyChanged("TaxAcc");
					this.OnTaxAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TaxNoteInv", DbType = "VarChar(150)")]
		public string TaxNoteInv
		{
			get
			{
				return this._TaxNoteInv;
			}
			set
			{
				if ((this._TaxNoteInv != value))
				{
					this.OnTaxNoteInvChanging(value);
					this.SendPropertyChanging();
					this._TaxNoteInv = value;
					this.SendPropertyChanged("TaxNoteInv");
					this.OnTaxNoteInvChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsCustomerDisplay", DbType = "Bit")]
		public System.Nullable<bool> IsCustomerDisplay
		{
			get
			{
				return this._IsCustomerDisplay;
			}
			set
			{
				if ((this._IsCustomerDisplay != value))
				{
					this.OnIsCustomerDisplayChanging(value);
					this.SendPropertyChanging();
					this._IsCustomerDisplay = value;
					this.SendPropertyChanged("IsCustomerDisplay");
					this.OnIsCustomerDisplayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Port", DbType = "VarChar(15)")]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fast", DbType = "Int")]
		public System.Nullable<int> Fast
		{
			get
			{
				return this._Fast;
			}
			set
			{
				if ((this._Fast != value))
				{
					this.OnFastChanging(value);
					this.SendPropertyChanging();
					this._Fast = value;
					this.SendPropertyChanged("Fast");
					this.OnFastChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BitStop", DbType = "Int")]
		public System.Nullable<int> BitStop
		{
			get
			{
				return this._BitStop;
			}
			set
			{
				if ((this._BitStop != value))
				{
					this.OnBitStopChanging(value);
					this.SendPropertyChanging();
					this._BitStop = value;
					this.SendPropertyChanged("BitStop");
					this.OnBitStopChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BitData", DbType = "Int")]
		public System.Nullable<int> BitData
		{
			get
			{
				return this._BitData;
			}
			set
			{
				if ((this._BitData != value))
				{
					this.OnBitDataChanging(value);
					this.SendPropertyChanging();
					this._BitData = value;
					this.SendPropertyChanged("BitData");
					this.OnBitDataChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Parity", DbType = "Int")]
		public System.Nullable<int> Parity
		{
			get
			{
				return this._Parity;
			}
			set
			{
				if ((this._Parity != value))
				{
					this.OnParityChanging(value);
					this.SendPropertyChanging();
					this._Parity = value;
					this.SendPropertyChanged("Parity");
					this.OnParityChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustomerHello", DbType = "VarChar(100)")]
		public string CustomerHello
		{
			get
			{
				return this._CustomerHello;
			}
			set
			{
				if ((this._CustomerHello != value))
				{
					this.OnCustomerHelloChanging(value);
					this.SendPropertyChanging();
					this._CustomerHello = value;
					this.SendPropertyChanged("CustomerHello");
					this.OnCustomerHelloChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DisplayTypeShow", DbType = "Int")]
		public System.Nullable<int> DisplayTypeShow
		{
			get
			{
				return this._DisplayTypeShow;
			}
			set
			{
				if ((this._DisplayTypeShow != value))
				{
					this.OnDisplayTypeShowChanging(value);
					this.SendPropertyChanging();
					this._DisplayTypeShow = value;
					this.SendPropertyChanged("DisplayTypeShow");
					this.OnDisplayTypeShowChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineOfInvoices", DbType = "Int")]
		public System.Nullable<int> LineOfInvoices
		{
			get
			{
				return this._LineOfInvoices;
			}
			set
			{
				if ((this._LineOfInvoices != value))
				{
					this.OnLineOfInvoicesChanging(value);
					this.SendPropertyChanging();
					this._LineOfInvoices = value;
					this.SendPropertyChanged("LineOfInvoices");
					this.OnLineOfInvoicesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsActiveBalance", DbType = "Bit")]
		public System.Nullable<bool> IsActiveBalance
		{
			get
			{
				return this._IsActiveBalance;
			}
			set
			{
				if ((this._IsActiveBalance != value))
				{
					this.OnIsActiveBalanceChanging(value);
					this.SendPropertyChanging();
					this._IsActiveBalance = value;
					this.SendPropertyChanged("IsActiveBalance");
					this.OnIsActiveBalanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BalanceType", DbType = "Int")]
		public System.Nullable<int> BalanceType
		{
			get
			{
				return this._BalanceType;
			}
			set
			{
				if ((this._BalanceType != value))
				{
					this.OnBalanceTypeChanging(value);
					this.SendPropertyChanging();
					this._BalanceType = value;
					this.SendPropertyChanged("BalanceType");
					this.OnBalanceTypeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BarcodFrom", DbType = "Int")]
		public System.Nullable<int> BarcodFrom
		{
			get
			{
				return this._BarcodFrom;
			}
			set
			{
				if ((this._BarcodFrom != value))
				{
					this.OnBarcodFromChanging(value);
					this.SendPropertyChanging();
					this._BarcodFrom = value;
					this.SendPropertyChanged("BarcodFrom");
					this.OnBarcodFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BarcodTo", DbType = "Int")]
		public System.Nullable<int> BarcodTo
		{
			get
			{
				return this._BarcodTo;
			}
			set
			{
				if ((this._BarcodTo != value))
				{
					this.OnBarcodToChanging(value);
					this.SendPropertyChanging();
					this._BarcodTo = value;
					this.SendPropertyChanged("BarcodTo");
					this.OnBarcodToChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WightFrom", DbType = "Int")]
		public System.Nullable<int> WightFrom
		{
			get
			{
				return this._WightFrom;
			}
			set
			{
				if ((this._WightFrom != value))
				{
					this.OnWightFromChanging(value);
					this.SendPropertyChanging();
					this._WightFrom = value;
					this.SendPropertyChanged("WightFrom");
					this.OnWightFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WightTo", DbType = "Int")]
		public System.Nullable<int> WightTo
		{
			get
			{
				return this._WightTo;
			}
			set
			{
				if ((this._WightTo != value))
				{
					this.OnWightToChanging(value);
					this.SendPropertyChanging();
					this._WightTo = value;
					this.SendPropertyChanged("WightTo");
					this.OnWightToChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PriceFrom", DbType = "Int")]
		public System.Nullable<int> PriceFrom
		{
			get
			{
				return this._PriceFrom;
			}
			set
			{
				if ((this._PriceFrom != value))
				{
					this.OnPriceFromChanging(value);
					this.SendPropertyChanging();
					this._PriceFrom = value;
					this.SendPropertyChanged("PriceFrom");
					this.OnPriceFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PriceTo", DbType = "Int")]
		public System.Nullable<int> PriceTo
		{
			get
			{
				return this._PriceTo;
			}
			set
			{
				if ((this._PriceTo != value))
				{
					this.OnPriceToChanging(value);
					this.SendPropertyChanging();
					this._PriceTo = value;
					this.SendPropertyChanged("PriceTo");
					this.OnPriceToChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WightQ", DbType = "Int")]
		public System.Nullable<int> WightQ
		{
			get
			{
				return this._WightQ;
			}
			set
			{
				if ((this._WightQ != value))
				{
					this.OnWightQChanging(value);
					this.SendPropertyChanging();
					this._WightQ = value;
					this.SendPropertyChanged("WightQ");
					this.OnWightQChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PriceQ", DbType = "Int")]
		public System.Nullable<int> PriceQ
		{
			get
			{
				return this._PriceQ;
			}
			set
			{
				if ((this._PriceQ != value))
				{
					this.OnPriceQChanging(value);
					this.SendPropertyChanging();
					this._PriceQ = value;
					this.SendPropertyChanged("PriceQ");
					this.OnPriceQChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PointOfRyal", DbType = "Float")]
		public System.Nullable<double> PointOfRyal
		{
			get
			{
				return this._PointOfRyal;
			}
			set
			{
				if ((this._PointOfRyal != value))
				{
					this.OnPointOfRyalChanging(value);
					this.SendPropertyChanging();
					this._PointOfRyal = value;
					this.SendPropertyChanged("PointOfRyal");
					this.OnPointOfRyalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemTyp1", DbType = "VarChar(100)")]
		public string ItemTyp1
		{
			get
			{
				return this._ItemTyp1;
			}
			set
			{
				if ((this._ItemTyp1 != value))
				{
					this.OnItemTyp1Changing(value);
					this.SendPropertyChanging();
					this._ItemTyp1 = value;
					this.SendPropertyChanged("ItemTyp1");
					this.OnItemTyp1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemTyp2", DbType = "VarChar(100)")]
		public string ItemTyp2
		{
			get
			{
				return this._ItemTyp2;
			}
			set
			{
				if ((this._ItemTyp2 != value))
				{
					this.OnItemTyp2Changing(value);
					this.SendPropertyChanging();
					this._ItemTyp2 = value;
					this.SendPropertyChanged("ItemTyp2");
					this.OnItemTyp2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemTyp3", DbType = "VarChar(100)")]
		public string ItemTyp3
		{
			get
			{
				return this._ItemTyp3;
			}
			set
			{
				if ((this._ItemTyp3 != value))
				{
					this.OnItemTyp3Changing(value);
					this.SendPropertyChanging();
					this._ItemTyp3 = value;
					this.SendPropertyChanged("ItemTyp3");
					this.OnItemTyp3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemTyp1E", DbType = "VarChar(100)")]
		public string ItemTyp1E
		{
			get
			{
				return this._ItemTyp1E;
			}
			set
			{
				if ((this._ItemTyp1E != value))
				{
					this.OnItemTyp1EChanging(value);
					this.SendPropertyChanging();
					this._ItemTyp1E = value;
					this.SendPropertyChanged("ItemTyp1E");
					this.OnItemTyp1EChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemTyp2E", DbType = "VarChar(100)")]
		public string ItemTyp2E
		{
			get
			{
				return this._ItemTyp2E;
			}
			set
			{
				if ((this._ItemTyp2E != value))
				{
					this.OnItemTyp2EChanging(value);
					this.SendPropertyChanging();
					this._ItemTyp2E = value;
					this.SendPropertyChanged("ItemTyp2E");
					this.OnItemTyp2EChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemTyp3E", DbType = "VarChar(100)")]
		public string ItemTyp3E
		{
			get
			{
				return this._ItemTyp3E;
			}
			set
			{
				if ((this._ItemTyp3E != value))
				{
					this.OnItemTyp3EChanging(value);
					this.SendPropertyChanging();
					this._ItemTyp3E = value;
					this.SendPropertyChanged("ItemTyp3E");
					this.OnItemTyp3EChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlarmDueoBefore", DbType = "Int")]
		public System.Nullable<int> AlarmDueoBefore
		{
			get
			{
				return this._AlarmDueoBefore;
			}
			set
			{
				if ((this._AlarmDueoBefore != value))
				{
					this.OnAlarmDueoBeforeChanging(value);
					this.SendPropertyChanging();
					this._AlarmDueoBefore = value;
					this.SendPropertyChanged("AlarmDueoBefore");
					this.OnAlarmDueoBeforeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpSeting", DbType = "VarChar(100)")]
		public string EmpSeting
		{
			get
			{
				return this._EmpSeting;
			}
			set
			{
				if ((this._EmpSeting != value))
				{
					this.OnEmpSetingChanging(value);
					this.SendPropertyChanging();
					this._EmpSeting = value;
					this.SendPropertyChanged("EmpSeting");
					this.OnEmpSetingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SyncPath", DbType = "VarChar(MAX)")]
		public string SyncPath
		{
			get
			{
				return this._SyncPath;
			}
			set
			{
				if ((this._SyncPath != value))
				{
					this.OnSyncPathChanging(value);
					this.SendPropertyChanging();
					this._SyncPath = value;
					this.SendPropertyChanged("SyncPath");
					this.OnSyncPathChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vFiledA", DbType = "VarChar(100)")]
		public string vFiledA
		{
			get
			{
				return this._vFiledA;
			}
			set
			{
				if ((this._vFiledA != value))
				{
					this.OnvFiledAChanging(value);
					this.SendPropertyChanging();
					this._vFiledA = value;
					this.SendPropertyChanged("vFiledA");
					this.OnvFiledAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vFiledB", DbType = "VarChar(100)")]
		public string vFiledB
		{
			get
			{
				return this._vFiledB;
			}
			set
			{
				if ((this._vFiledB != value))
				{
					this.OnvFiledBChanging(value);
					this.SendPropertyChanging();
					this._vFiledB = value;
					this.SendPropertyChanged("vFiledB");
					this.OnvFiledBChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vFiledC", DbType = "VarChar(100)")]
		public string vFiledC
		{
			get
			{
				return this._vFiledC;
			}
			set
			{
				if ((this._vFiledC != value))
				{
					this.OnvFiledCChanging(value);
					this.SendPropertyChanging();
					this._vFiledC = value;
					this.SendPropertyChanged("vFiledC");
					this.OnvFiledCChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vFiledInt", DbType = "Int")]
		public System.Nullable<int> vFiledInt
		{
			get
			{
				return this._vFiledInt;
			}
			set
			{
				if ((this._vFiledInt != value))
				{
					this.OnvFiledIntChanging(value);
					this.SendPropertyChanging();
					this._vFiledInt = value;
					this.SendPropertyChanged("vFiledInt");
					this.OnvFiledIntChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vFiledBool", DbType = "Bit")]
		public System.Nullable<bool> vFiledBool
		{
			get
			{
				return this._vFiledBool;
			}
			set
			{
				if ((this._vFiledBool != value))
				{
					this.OnvFiledBoolChanging(value);
					this.SendPropertyChanging();
					this._vFiledBool = value;
					this.SendPropertyChanged("vFiledBool");
					this.OnvFiledBoolChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarAlarmContractEnd", DbType = "Int")]
		public System.Nullable<int> EqarAlarmContractEnd
		{
			get
			{
				return this._EqarAlarmContractEnd;
			}
			set
			{
				if ((this._EqarAlarmContractEnd != value))
				{
					this.OnEqarAlarmContractEndChanging(value);
					this.SendPropertyChanging();
					this._EqarAlarmContractEnd = value;
					this.SendPropertyChanged("EqarAlarmContractEnd");
					this.OnEqarAlarmContractEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarAlarmDayPay", DbType = "Int")]
		public System.Nullable<int> EqarAlarmDayPay
		{
			get
			{
				return this._EqarAlarmDayPay;
			}
			set
			{
				if ((this._EqarAlarmDayPay != value))
				{
					this.OnEqarAlarmDayPayChanging(value);
					this.SendPropertyChanging();
					this._EqarAlarmDayPay = value;
					this.SendPropertyChanged("EqarAlarmDayPay");
					this.OnEqarAlarmDayPayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EqarAcc", DbType = "VarChar(30)")]
		public string EqarAcc
		{
			get
			{
				return this._EqarAcc;
			}
			set
			{
				if ((this._EqarAcc != value))
				{
					this.OnEqarAccChanging(value);
					this.SendPropertyChanging();
					this._EqarAcc = value;
					this.SendPropertyChanged("EqarAcc");
					this.OnEqarAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tenantAcc", DbType = "VarChar(30)")]
		public string tenantAcc
		{
			get
			{
				return this._tenantAcc;
			}
			set
			{
				if ((this._tenantAcc != value))
				{
					this.OntenantAccChanging(value);
					this.SendPropertyChanging();
					this._tenantAcc = value;
					this.SendPropertyChanged("tenantAcc");
					this.OntenantAccChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AfterDotNum", DbType = "Int")]
		public System.Nullable<int> AfterDotNum
		{
			get
			{
				return this._AfterDotNum;
			}
			set
			{
				if ((this._AfterDotNum != value))
				{
					this.OnAfterDotNumChanging(value);
					this.SendPropertyChanging();
					this._AfterDotNum = value;
					this.SendPropertyChanged("AfterDotNum");
					this.OnAfterDotNumChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_AccCat", Storage = "_T_AccCats", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_AccCat> T_AccCats
		{
			get
			{
				return this._T_AccCats;
			}
			set
			{
				this._T_AccCats.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_AccDef", Storage = "_T_AccDefs", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_AccDef> T_AccDefs
		{
			get
			{
				return this._T_AccDefs;
			}
			set
			{
				this._T_AccDefs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_BankPeaper", Storage = "_T_BankPeapers", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_BankPeaper> T_BankPeapers
		{
			get
			{
				return this._T_BankPeapers;
			}
			set
			{
				this._T_BankPeapers.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_CATEGORY", Storage = "_T_CATEGORies", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_CATEGORY> T_CATEGORies
		{
			get
			{
				return this._T_CATEGORies;
			}
			set
			{
				this._T_CATEGORies.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_CstTbl", Storage = "_T_CstTbls", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_CstTbl> T_CstTbls
		{
			get
			{
				return this._T_CstTbls;
			}
			set
			{
				this._T_CstTbls.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Curency", Storage = "_T_Curencies", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_Curency> T_Curencies
		{
			get
			{
				return this._T_Curencies;
			}
			set
			{
				this._T_Curencies.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_EmpCard", Storage = "_T_EmpCards", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_EmpCard> T_EmpCards
		{
			get
			{
				return this._T_EmpCards;
			}
			set
			{
				this._T_EmpCards.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_GDHEAD", Storage = "_T_GDHEADs", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_GDHEAD> T_GDHEADs
		{
			get
			{
				return this._T_GDHEADs;
			}
			set
			{
				this._T_GDHEADs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_INVHED", Storage = "_T_INVHEDs", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_INVHED> T_INVHEDs
		{
			get
			{
				return this._T_INVHEDs;
			}
			set
			{
				this._T_INVHEDs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Item", Storage = "_T_Items", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_Item> T_Items
		{
			get
			{
				return this._T_Items;
			}
			set
			{
				this._T_Items.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Mndob", Storage = "_T_Mndobs", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_Mndob> T_Mndobs
		{
			get
			{
				return this._T_Mndobs;
			}
			set
			{
				this._T_Mndobs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Store", Storage = "_T_Stores", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_Store> T_Stores
		{
			get
			{
				return this._T_Stores;
			}
			set
			{
				this._T_Stores.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_TbSalary", Storage = "_T_TbSalaries", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_TbSalary> T_TbSalaries
		{
			get
			{
				return this._T_TbSalaries;
			}
			set
			{
				this._T_TbSalaries.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Unit", Storage = "_T_Units", ThisKey = "SYSSETTING_ID", OtherKey = "CompanyID")]
		public EntitySet<T_Unit> T_Units
		{
			get
			{
				return this._T_Units;
			}
			set
			{
				this._T_Units.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_AccCats(T_AccCat entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_AccCats(T_AccCat entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_AccDefs(T_AccDef entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_AccDefs(T_AccDef entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_BankPeapers(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_BankPeapers(T_BankPeaper entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_CATEGORies(T_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_CATEGORies(T_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_CstTbls(T_CstTbl entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_CstTbls(T_CstTbl entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_Curencies(T_Curency entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_Curencies(T_Curency entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_EmpCards(T_EmpCard entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_EmpCards(T_EmpCard entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_INVHEDs(T_INVHED entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_Items(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_Items(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_Mndobs(T_Mndob entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_Mndobs(T_Mndob entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_Stores(T_Store entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_Stores(T_Store entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_TbSalaries(T_TbSalary entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_TbSalaries(T_TbSalary entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}

		private void attach_T_Units(T_Unit entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = this;
		}

		private void detach_T_Units(T_Unit entity)
		{
			this.SendPropertyChanging();
			entity.T_SYSSETTING = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_TbSalary")]
	public partial class T_TbSalary : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _TbSalary_ID;

		private string _Employes_No;

		private System.Nullable<int> _fldFlg;

		private string _valDesc;

		private System.Nullable<int> _vValue;

		private System.Nullable<int> _autoCalc;

		private System.Nullable<int> _autoDisc;

		private string _vStart;

		private string _vEnd;

		private string _Mem;

		private string _tmpStr1;

		private string _tmpStr2;

		private System.Nullable<int> _tmpNo1;

		private System.Nullable<int> _tmpNo2;

		private System.Nullable<int> _byYear;

		private System.Nullable<int> _CompanyID;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnTbSalary_IDChanging(int value);
		partial void OnTbSalary_IDChanged();
		partial void OnEmployes_NoChanging(string value);
		partial void OnEmployes_NoChanged();
		partial void OnfldFlgChanging(System.Nullable<int> value);
		partial void OnfldFlgChanged();
		partial void OnvalDescChanging(string value);
		partial void OnvalDescChanged();
		partial void OnvValueChanging(System.Nullable<int> value);
		partial void OnvValueChanged();
		partial void OnautoCalcChanging(System.Nullable<int> value);
		partial void OnautoCalcChanged();
		partial void OnautoDiscChanging(System.Nullable<int> value);
		partial void OnautoDiscChanged();
		partial void OnvStartChanging(string value);
		partial void OnvStartChanged();
		partial void OnvEndChanging(string value);
		partial void OnvEndChanged();
		partial void OnMemChanging(string value);
		partial void OnMemChanged();
		partial void OntmpStr1Changing(string value);
		partial void OntmpStr1Changed();
		partial void OntmpStr2Changing(string value);
		partial void OntmpStr2Changed();
		partial void OntmpNo1Changing(System.Nullable<int> value);
		partial void OntmpNo1Changed();
		partial void OntmpNo2Changing(System.Nullable<int> value);
		partial void OntmpNo2Changed();
		partial void OnbyYearChanging(System.Nullable<int> value);
		partial void OnbyYearChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_TbSalary()
		{
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TbSalary_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int TbSalary_ID
		{
			get
			{
				return this._TbSalary_ID;
			}
			set
			{
				if ((this._TbSalary_ID != value))
				{
					this.OnTbSalary_IDChanging(value);
					this.SendPropertyChanging();
					this._TbSalary_ID = value;
					this.SendPropertyChanged("TbSalary_ID");
					this.OnTbSalary_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Employes_No", DbType = "VarChar(30)")]
		public string Employes_No
		{
			get
			{
				return this._Employes_No;
			}
			set
			{
				if ((this._Employes_No != value))
				{
					this.OnEmployes_NoChanging(value);
					this.SendPropertyChanging();
					this._Employes_No = value;
					this.SendPropertyChanged("Employes_No");
					this.OnEmployes_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fldFlg", DbType = "Int")]
		public System.Nullable<int> fldFlg
		{
			get
			{
				return this._fldFlg;
			}
			set
			{
				if ((this._fldFlg != value))
				{
					this.OnfldFlgChanging(value);
					this.SendPropertyChanging();
					this._fldFlg = value;
					this.SendPropertyChanged("fldFlg");
					this.OnfldFlgChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_valDesc", DbType = "VarChar(40)")]
		public string valDesc
		{
			get
			{
				return this._valDesc;
			}
			set
			{
				if ((this._valDesc != value))
				{
					this.OnvalDescChanging(value);
					this.SendPropertyChanging();
					this._valDesc = value;
					this.SendPropertyChanged("valDesc");
					this.OnvalDescChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vValue", DbType = "Int")]
		public System.Nullable<int> vValue
		{
			get
			{
				return this._vValue;
			}
			set
			{
				if ((this._vValue != value))
				{
					this.OnvValueChanging(value);
					this.SendPropertyChanging();
					this._vValue = value;
					this.SendPropertyChanged("vValue");
					this.OnvValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_autoCalc", DbType = "Int")]
		public System.Nullable<int> autoCalc
		{
			get
			{
				return this._autoCalc;
			}
			set
			{
				if ((this._autoCalc != value))
				{
					this.OnautoCalcChanging(value);
					this.SendPropertyChanging();
					this._autoCalc = value;
					this.SendPropertyChanged("autoCalc");
					this.OnautoCalcChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_autoDisc", DbType = "Int")]
		public System.Nullable<int> autoDisc
		{
			get
			{
				return this._autoDisc;
			}
			set
			{
				if ((this._autoDisc != value))
				{
					this.OnautoDiscChanging(value);
					this.SendPropertyChanging();
					this._autoDisc = value;
					this.SendPropertyChanged("autoDisc");
					this.OnautoDiscChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vStart", DbType = "VarChar(10)")]
		public string vStart
		{
			get
			{
				return this._vStart;
			}
			set
			{
				if ((this._vStart != value))
				{
					this.OnvStartChanging(value);
					this.SendPropertyChanging();
					this._vStart = value;
					this.SendPropertyChanged("vStart");
					this.OnvStartChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vEnd", DbType = "VarChar(10)")]
		public string vEnd
		{
			get
			{
				return this._vEnd;
			}
			set
			{
				if ((this._vEnd != value))
				{
					this.OnvEndChanging(value);
					this.SendPropertyChanging();
					this._vEnd = value;
					this.SendPropertyChanged("vEnd");
					this.OnvEndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mem", DbType = "VarChar(50)")]
		public string Mem
		{
			get
			{
				return this._Mem;
			}
			set
			{
				if ((this._Mem != value))
				{
					this.OnMemChanging(value);
					this.SendPropertyChanging();
					this._Mem = value;
					this.SendPropertyChanged("Mem");
					this.OnMemChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpStr1", DbType = "VarChar(10)")]
		public string tmpStr1
		{
			get
			{
				return this._tmpStr1;
			}
			set
			{
				if ((this._tmpStr1 != value))
				{
					this.OntmpStr1Changing(value);
					this.SendPropertyChanging();
					this._tmpStr1 = value;
					this.SendPropertyChanged("tmpStr1");
					this.OntmpStr1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpStr2", DbType = "VarChar(10)")]
		public string tmpStr2
		{
			get
			{
				return this._tmpStr2;
			}
			set
			{
				if ((this._tmpStr2 != value))
				{
					this.OntmpStr2Changing(value);
					this.SendPropertyChanging();
					this._tmpStr2 = value;
					this.SendPropertyChanged("tmpStr2");
					this.OntmpStr2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpNo1", DbType = "Int")]
		public System.Nullable<int> tmpNo1
		{
			get
			{
				return this._tmpNo1;
			}
			set
			{
				if ((this._tmpNo1 != value))
				{
					this.OntmpNo1Changing(value);
					this.SendPropertyChanging();
					this._tmpNo1 = value;
					this.SendPropertyChanged("tmpNo1");
					this.OntmpNo1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tmpNo2", DbType = "Int")]
		public System.Nullable<int> tmpNo2
		{
			get
			{
				return this._tmpNo2;
			}
			set
			{
				if ((this._tmpNo2 != value))
				{
					this.OntmpNo2Changing(value);
					this.SendPropertyChanging();
					this._tmpNo2 = value;
					this.SendPropertyChanged("tmpNo2");
					this.OntmpNo2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_byYear", DbType = "Int")]
		public System.Nullable<int> byYear
		{
			get
			{
				return this._byYear;
			}
			set
			{
				if ((this._byYear != value))
				{
					this.OnbyYearChanging(value);
					this.SendPropertyChanging();
					this._byYear = value;
					this.SendPropertyChanged("byYear");
					this.OnbyYearChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_TbSalary", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_TbSalaries.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_TbSalaries.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_tel")]
	public partial class T_tel : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private System.Nullable<int> _perno;

		private System.Nullable<int> _ino;

		private System.Nullable<int> _romno;

		private string _tel;

		private System.Nullable<double> _s;

		private System.Nullable<int> _m;

		private System.Nullable<int> _op;

		private System.Nullable<double> _price;

		private string _dt;

		private string _tm;

		private System.Nullable<int> _h;

		private string _Usr;

		private string _UsrNam;

		private System.Nullable<int> _romnoNew;

		private System.Nullable<double> _GadeNo;

		private System.Nullable<double> _GadeId;

		private System.Nullable<bool> _IsGaid;

		private EntityRef<T_per> _T_per;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnpernoChanging(System.Nullable<int> value);
		partial void OnpernoChanged();
		partial void OninoChanging(System.Nullable<int> value);
		partial void OninoChanged();
		partial void OnromnoChanging(System.Nullable<int> value);
		partial void OnromnoChanged();
		partial void OntelChanging(string value);
		partial void OntelChanged();
		partial void OnsChanging(System.Nullable<double> value);
		partial void OnsChanged();
		partial void OnmChanging(System.Nullable<int> value);
		partial void OnmChanged();
		partial void OnopChanging(System.Nullable<int> value);
		partial void OnopChanged();
		partial void OnpriceChanging(System.Nullable<double> value);
		partial void OnpriceChanged();
		partial void OndtChanging(string value);
		partial void OndtChanged();
		partial void OntmChanging(string value);
		partial void OntmChanged();
		partial void OnhChanging(System.Nullable<int> value);
		partial void OnhChanged();
		partial void OnUsrChanging(string value);
		partial void OnUsrChanged();
		partial void OnUsrNamChanging(string value);
		partial void OnUsrNamChanged();
		partial void OnromnoNewChanging(System.Nullable<int> value);
		partial void OnromnoNewChanged();
		partial void OnGadeNoChanging(System.Nullable<double> value);
		partial void OnGadeNoChanged();
		partial void OnGadeIdChanging(System.Nullable<double> value);
		partial void OnGadeIdChanged();
		partial void OnIsGaidChanging(System.Nullable<bool> value);
		partial void OnIsGaidChanged();
		#endregion

		public T_tel()
		{
			this._T_per = default(EntityRef<T_per>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_perno", DbType = "Int")]
		public System.Nullable<int> perno
		{
			get
			{
				return this._perno;
			}
			set
			{
				if ((this._perno != value))
				{
					if (this._T_per.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpernoChanging(value);
					this.SendPropertyChanging();
					this._perno = value;
					this.SendPropertyChanged("perno");
					this.OnpernoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ino", DbType = "Int")]
		public System.Nullable<int> ino
		{
			get
			{
				return this._ino;
			}
			set
			{
				if ((this._ino != value))
				{
					this.OninoChanging(value);
					this.SendPropertyChanging();
					this._ino = value;
					this.SendPropertyChanged("ino");
					this.OninoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romno", DbType = "Int")]
		public System.Nullable<int> romno
		{
			get
			{
				return this._romno;
			}
			set
			{
				if ((this._romno != value))
				{
					this.OnromnoChanging(value);
					this.SendPropertyChanging();
					this._romno = value;
					this.SendPropertyChanged("romno");
					this.OnromnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tel", DbType = "VarChar(25)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_s", DbType = "Float")]
		public System.Nullable<double> s
		{
			get
			{
				return this._s;
			}
			set
			{
				if ((this._s != value))
				{
					this.OnsChanging(value);
					this.SendPropertyChanging();
					this._s = value;
					this.SendPropertyChanged("s");
					this.OnsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_m", DbType = "Int")]
		public System.Nullable<int> m
		{
			get
			{
				return this._m;
			}
			set
			{
				if ((this._m != value))
				{
					this.OnmChanging(value);
					this.SendPropertyChanging();
					this._m = value;
					this.SendPropertyChanged("m");
					this.OnmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_op", DbType = "Int")]
		public System.Nullable<int> op
		{
			get
			{
				return this._op;
			}
			set
			{
				if ((this._op != value))
				{
					this.OnopChanging(value);
					this.SendPropertyChanging();
					this._op = value;
					this.SendPropertyChanged("op");
					this.OnopChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_price", DbType = "Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt", DbType = "VarChar(10)")]
		public string dt
		{
			get
			{
				return this._dt;
			}
			set
			{
				if ((this._dt != value))
				{
					this.OndtChanging(value);
					this.SendPropertyChanging();
					this._dt = value;
					this.SendPropertyChanged("dt");
					this.OndtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tm", DbType = "VarChar(10)")]
		public string tm
		{
			get
			{
				return this._tm;
			}
			set
			{
				if ((this._tm != value))
				{
					this.OntmChanging(value);
					this.SendPropertyChanging();
					this._tm = value;
					this.SendPropertyChanged("tm");
					this.OntmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_h", DbType = "Int")]
		public System.Nullable<int> h
		{
			get
			{
				return this._h;
			}
			set
			{
				if ((this._h != value))
				{
					this.OnhChanging(value);
					this.SendPropertyChanging();
					this._h = value;
					this.SendPropertyChanged("h");
					this.OnhChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr", DbType = "VarChar(3)")]
		public string Usr
		{
			get
			{
				return this._Usr;
			}
			set
			{
				if ((this._Usr != value))
				{
					this.OnUsrChanging(value);
					this.SendPropertyChanging();
					this._Usr = value;
					this.SendPropertyChanged("Usr");
					this.OnUsrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UsrNam", DbType = "VarChar(50)")]
		public string UsrNam
		{
			get
			{
				return this._UsrNam;
			}
			set
			{
				if ((this._UsrNam != value))
				{
					this.OnUsrNamChanging(value);
					this.SendPropertyChanging();
					this._UsrNam = value;
					this.SendPropertyChanged("UsrNam");
					this.OnUsrNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romnoNew", DbType = "Int")]
		public System.Nullable<int> romnoNew
		{
			get
			{
				return this._romnoNew;
			}
			set
			{
				if ((this._romnoNew != value))
				{
					this.OnromnoNewChanging(value);
					this.SendPropertyChanging();
					this._romnoNew = value;
					this.SendPropertyChanged("romnoNew");
					this.OnromnoNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeNo", DbType = "Float")]
		public System.Nullable<double> GadeNo
		{
			get
			{
				return this._GadeNo;
			}
			set
			{
				if ((this._GadeNo != value))
				{
					this.OnGadeNoChanging(value);
					this.SendPropertyChanging();
					this._GadeNo = value;
					this.SendPropertyChanged("GadeNo");
					this.OnGadeNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId", DbType = "Float")]
		public System.Nullable<double> GadeId
		{
			get
			{
				return this._GadeId;
			}
			set
			{
				if ((this._GadeId != value))
				{
					this.OnGadeIdChanging(value);
					this.SendPropertyChanging();
					this._GadeId = value;
					this.SendPropertyChanged("GadeId");
					this.OnGadeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsGaid", DbType = "Bit")]
		public System.Nullable<bool> IsGaid
		{
			get
			{
				return this._IsGaid;
			}
			set
			{
				if ((this._IsGaid != value))
				{
					this.OnIsGaidChanging(value);
					this.SendPropertyChanging();
					this._IsGaid = value;
					this.SendPropertyChanged("IsGaid");
					this.OnIsGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_tel", Storage = "_T_per", ThisKey = "perno", OtherKey = "perno", IsForeignKey = true)]
		public T_per T_per
		{
			get
			{
				return this._T_per.Entity;
			}
			set
			{
				T_per previousValue = this._T_per.Entity;
				if (((previousValue != value)
							|| (this._T_per.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_per.Entity = null;
						previousValue.T_tels.Remove(this);
					}
					this._T_per.Entity = value;
					if ((value != null))
					{
						value.T_tels.Add(this);
						this._perno = value.perno;
					}
					else
					{
						this._perno = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_per");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_telmn")]
	public partial class T_telmn : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _pl;

		private System.Nullable<double> _price;

		private System.Nullable<int> _d;

		private string _accno;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnplChanging(int value);
		partial void OnplChanged();
		partial void OnpriceChanging(System.Nullable<double> value);
		partial void OnpriceChanged();
		partial void OndChanging(System.Nullable<int> value);
		partial void OndChanged();
		partial void OnaccnoChanging(string value);
		partial void OnaccnoChanged();
		#endregion

		public T_telmn()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pl", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int pl
		{
			get
			{
				return this._pl;
			}
			set
			{
				if ((this._pl != value))
				{
					this.OnplChanging(value);
					this.SendPropertyChanging();
					this._pl = value;
					this.SendPropertyChanged("pl");
					this.OnplChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_price", DbType = "Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_d", DbType = "Int")]
		public System.Nullable<int> d
		{
			get
			{
				return this._d;
			}
			set
			{
				if ((this._d != value))
				{
					this.OndChanging(value);
					this.SendPropertyChanging();
					this._d = value;
					this.SendPropertyChanged("d");
					this.OndChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_accno", DbType = "VarChar(30)")]
		public string accno
		{
			get
			{
				return this._accno;
			}
			set
			{
				if ((this._accno != value))
				{
					this.OnaccnoChanging(value);
					this.SendPropertyChanging();
					this._accno = value;
					this.SendPropertyChanged("accno");
					this.OnaccnoChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Tenant")]
	public partial class T_Tenant : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _tenantID;

		private int _tenantNo;

		private string _NameA;

		private string _NameE;

		private string _AccNo;

		private System.Nullable<int> _Nationalty;

		private string _IDNo;

		private string _IDDate;

		private string _IDSource;

		private string _Tel;

		private string _Mobile;

		private string _workAdd;

		private string _workPhone;

		private string _BossName;

		private string _BossID;

		private string _BossIDDate;

		private string _BossIDSource;

		private string _BossAdd;

		private string _BossPhone;

		private string _BossMobile;

		private EntitySet<T_AlarmTenant> _T_AlarmTenants;

		private EntitySet<T_TenantContract> _T_TenantContracts;

		private EntityRef<T_AccDef> _T_AccDef;

		private EntityRef<T_Nationality> _T_Nationality;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OntenantIDChanging(int value);
		partial void OntenantIDChanged();
		partial void OntenantNoChanging(int value);
		partial void OntenantNoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnAccNoChanging(string value);
		partial void OnAccNoChanged();
		partial void OnNationaltyChanging(System.Nullable<int> value);
		partial void OnNationaltyChanged();
		partial void OnIDNoChanging(string value);
		partial void OnIDNoChanged();
		partial void OnIDDateChanging(string value);
		partial void OnIDDateChanged();
		partial void OnIDSourceChanging(string value);
		partial void OnIDSourceChanged();
		partial void OnTelChanging(string value);
		partial void OnTelChanged();
		partial void OnMobileChanging(string value);
		partial void OnMobileChanged();
		partial void OnworkAddChanging(string value);
		partial void OnworkAddChanged();
		partial void OnworkPhoneChanging(string value);
		partial void OnworkPhoneChanged();
		partial void OnBossNameChanging(string value);
		partial void OnBossNameChanged();
		partial void OnBossIDChanging(string value);
		partial void OnBossIDChanged();
		partial void OnBossIDDateChanging(string value);
		partial void OnBossIDDateChanged();
		partial void OnBossIDSourceChanging(string value);
		partial void OnBossIDSourceChanged();
		partial void OnBossAddChanging(string value);
		partial void OnBossAddChanged();
		partial void OnBossPhoneChanging(string value);
		partial void OnBossPhoneChanged();
		partial void OnBossMobileChanging(string value);
		partial void OnBossMobileChanged();
		#endregion

		public T_Tenant()
		{
			this._T_AlarmTenants = new EntitySet<T_AlarmTenant>(new Action<T_AlarmTenant>(this.attach_T_AlarmTenants), new Action<T_AlarmTenant>(this.detach_T_AlarmTenants));
			this._T_TenantContracts = new EntitySet<T_TenantContract>(new Action<T_TenantContract>(this.attach_T_TenantContracts), new Action<T_TenantContract>(this.detach_T_TenantContracts));
			this._T_AccDef = default(EntityRef<T_AccDef>);
			this._T_Nationality = default(EntityRef<T_Nationality>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tenantID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int tenantID
		{
			get
			{
				return this._tenantID;
			}
			set
			{
				if ((this._tenantID != value))
				{
					this.OntenantIDChanging(value);
					this.SendPropertyChanging();
					this._tenantID = value;
					this.SendPropertyChanged("tenantID");
					this.OntenantIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tenantNo", DbType = "Int NOT NULL")]
		public int tenantNo
		{
			get
			{
				return this._tenantNo;
			}
			set
			{
				if ((this._tenantNo != value))
				{
					this.OntenantNoChanging(value);
					this.SendPropertyChanging();
					this._tenantNo = value;
					this.SendPropertyChanged("tenantNo");
					this.OntenantNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(100)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(100)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccNo", DbType = "VarChar(30)")]
		public string AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					if (this._T_AccDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Nationalty", DbType = "Int")]
		public System.Nullable<int> Nationalty
		{
			get
			{
				return this._Nationalty;
			}
			set
			{
				if ((this._Nationalty != value))
				{
					if (this._T_Nationality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNationaltyChanging(value);
					this.SendPropertyChanging();
					this._Nationalty = value;
					this.SendPropertyChanged("Nationalty");
					this.OnNationaltyChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDNo", DbType = "VarChar(100)")]
		public string IDNo
		{
			get
			{
				return this._IDNo;
			}
			set
			{
				if ((this._IDNo != value))
				{
					this.OnIDNoChanging(value);
					this.SendPropertyChanging();
					this._IDNo = value;
					this.SendPropertyChanged("IDNo");
					this.OnIDNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDDate", DbType = "VarChar(10)")]
		public string IDDate
		{
			get
			{
				return this._IDDate;
			}
			set
			{
				if ((this._IDDate != value))
				{
					this.OnIDDateChanging(value);
					this.SendPropertyChanging();
					this._IDDate = value;
					this.SendPropertyChanged("IDDate");
					this.OnIDDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDSource", DbType = "VarChar(200)")]
		public string IDSource
		{
			get
			{
				return this._IDSource;
			}
			set
			{
				if ((this._IDSource != value))
				{
					this.OnIDSourceChanging(value);
					this.SendPropertyChanging();
					this._IDSource = value;
					this.SendPropertyChanged("IDSource");
					this.OnIDSourceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tel", DbType = "VarChar(100)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "VarChar(100)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_workAdd", DbType = "VarChar(200)")]
		public string workAdd
		{
			get
			{
				return this._workAdd;
			}
			set
			{
				if ((this._workAdd != value))
				{
					this.OnworkAddChanging(value);
					this.SendPropertyChanging();
					this._workAdd = value;
					this.SendPropertyChanged("workAdd");
					this.OnworkAddChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_workPhone", DbType = "VarChar(100)")]
		public string workPhone
		{
			get
			{
				return this._workPhone;
			}
			set
			{
				if ((this._workPhone != value))
				{
					this.OnworkPhoneChanging(value);
					this.SendPropertyChanging();
					this._workPhone = value;
					this.SendPropertyChanged("workPhone");
					this.OnworkPhoneChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossName", DbType = "VarChar(100)")]
		public string BossName
		{
			get
			{
				return this._BossName;
			}
			set
			{
				if ((this._BossName != value))
				{
					this.OnBossNameChanging(value);
					this.SendPropertyChanging();
					this._BossName = value;
					this.SendPropertyChanged("BossName");
					this.OnBossNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossID", DbType = "VarChar(100)")]
		public string BossID
		{
			get
			{
				return this._BossID;
			}
			set
			{
				if ((this._BossID != value))
				{
					this.OnBossIDChanging(value);
					this.SendPropertyChanging();
					this._BossID = value;
					this.SendPropertyChanged("BossID");
					this.OnBossIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossIDDate", DbType = "VarChar(10)")]
		public string BossIDDate
		{
			get
			{
				return this._BossIDDate;
			}
			set
			{
				if ((this._BossIDDate != value))
				{
					this.OnBossIDDateChanging(value);
					this.SendPropertyChanging();
					this._BossIDDate = value;
					this.SendPropertyChanged("BossIDDate");
					this.OnBossIDDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossIDSource", DbType = "VarChar(200)")]
		public string BossIDSource
		{
			get
			{
				return this._BossIDSource;
			}
			set
			{
				if ((this._BossIDSource != value))
				{
					this.OnBossIDSourceChanging(value);
					this.SendPropertyChanging();
					this._BossIDSource = value;
					this.SendPropertyChanged("BossIDSource");
					this.OnBossIDSourceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossAdd", DbType = "VarChar(200)")]
		public string BossAdd
		{
			get
			{
				return this._BossAdd;
			}
			set
			{
				if ((this._BossAdd != value))
				{
					this.OnBossAddChanging(value);
					this.SendPropertyChanging();
					this._BossAdd = value;
					this.SendPropertyChanged("BossAdd");
					this.OnBossAddChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossPhone", DbType = "VarChar(100)")]
		public string BossPhone
		{
			get
			{
				return this._BossPhone;
			}
			set
			{
				if ((this._BossPhone != value))
				{
					this.OnBossPhoneChanging(value);
					this.SendPropertyChanging();
					this._BossPhone = value;
					this.SendPropertyChanged("BossPhone");
					this.OnBossPhoneChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BossMobile", DbType = "VarChar(100)")]
		public string BossMobile
		{
			get
			{
				return this._BossMobile;
			}
			set
			{
				if ((this._BossMobile != value))
				{
					this.OnBossMobileChanging(value);
					this.SendPropertyChanging();
					this._BossMobile = value;
					this.SendPropertyChanged("BossMobile");
					this.OnBossMobileChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Tenant_T_AlarmTenant", Storage = "_T_AlarmTenants", ThisKey = "tenantID", OtherKey = "tenant_ID")]
		public EntitySet<T_AlarmTenant> T_AlarmTenants
		{
			get
			{
				return this._T_AlarmTenants;
			}
			set
			{
				this._T_AlarmTenants.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Tenant_T_TenantContract", Storage = "_T_TenantContracts", ThisKey = "tenantID", OtherKey = "tenant_ID")]
		public EntitySet<T_TenantContract> T_TenantContracts
		{
			get
			{
				return this._T_TenantContracts;
			}
			set
			{
				this._T_TenantContracts.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_AccDef_T_Tenant", Storage = "_T_AccDef", ThisKey = "AccNo", OtherKey = "AccDef_No", IsForeignKey = true)]
		public T_AccDef T_AccDef
		{
			get
			{
				return this._T_AccDef.Entity;
			}
			set
			{
				T_AccDef previousValue = this._T_AccDef.Entity;
				if (((previousValue != value)
							|| (this._T_AccDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_AccDef.Entity = null;
						previousValue.T_Tenants.Remove(this);
					}
					this._T_AccDef.Entity = value;
					if ((value != null))
					{
						value.T_Tenants.Add(this);
						this._AccNo = value.AccDef_No;
					}
					else
					{
						this._AccNo = default(string);
					}
					this.SendPropertyChanged("T_AccDef");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Nationality_T_Tenant", Storage = "_T_Nationality", ThisKey = "Nationalty", OtherKey = "Nation_No", IsForeignKey = true)]
		public T_Nationality T_Nationality
		{
			get
			{
				return this._T_Nationality.Entity;
			}
			set
			{
				T_Nationality previousValue = this._T_Nationality.Entity;
				if (((previousValue != value)
							|| (this._T_Nationality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Nationality.Entity = null;
						previousValue.T_Tenants.Remove(this);
					}
					this._T_Nationality.Entity = value;
					if ((value != null))
					{
						value.T_Tenants.Add(this);
						this._Nationalty = value.Nation_No;
					}
					else
					{
						this._Nationalty = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Nationality");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_AlarmTenants(T_AlarmTenant entity)
		{
			this.SendPropertyChanging();
			entity.T_Tenant = this;
		}

		private void detach_T_AlarmTenants(T_AlarmTenant entity)
		{
			this.SendPropertyChanging();
			entity.T_Tenant = null;
		}

		private void attach_T_TenantContracts(T_TenantContract entity)
		{
			this.SendPropertyChanging();
			entity.T_Tenant = this;
		}

		private void detach_T_TenantContracts(T_TenantContract entity)
		{
			this.SendPropertyChanging();
			entity.T_Tenant = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_TenantContract")]
	public class T_TenantContract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		private static PropertyChangingEventArgs emptyChangingEventArgs;

		private int _ContractID;

		private int _ContractNo;

		private int _tenant_ID;

		private int _Eqar_ID;

		private int? _Ain_ID;

		private double? _RentOfYear;

		private string _ContractStart;

		private string _ContractEnd;

		private double? _RentOfYearPayment;

		private int? _PayMethod;

		private EntitySet<T_GDHEAD> _T_GDHEADs;

		private EntitySet<T_TenantPayment> _T_TenantPayments;

		private EntityRef<Stock_Data.T_AinsData> _T_AinsData;

		private EntityRef<Stock_Data.T_EqarsData> _T_EqarsData;

		private EntityRef<Stock_Data.T_Tenant> _T_Tenant;

		[Column(Storage = "_Ain_ID", DbType = "Int")]
		public int? Ain_ID
		{
			get
			{
				return this._Ain_ID;
			}
			set
			{
				int? _AinID = this._Ain_ID;
				int? nullable = value;
				if ((_AinID.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : (int)(_AinID.HasValue != nullable.HasValue ? 1 : 0)) != 0)
				{
					if (this._T_AinsData.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.SendPropertyChanging();
					this._Ain_ID = value;
					this.SendPropertyChanged("Ain_ID");
				}
			}
		}

		[Column(Storage = "_ContractEnd", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string ContractEnd
		{
			get
			{
				return this._ContractEnd;
			}
			set
			{
				if (this._ContractEnd != value)
				{
					this.SendPropertyChanging();
					this._ContractEnd = value;
					this.SendPropertyChanged("ContractEnd");
				}
			}
		}

		[Column(Storage = "_ContractID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if (this._ContractID != value)
				{
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
				}
			}
		}

		[Column(Storage = "_ContractNo", DbType = "Int NOT NULL")]
		public int ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if (this._ContractNo != value)
				{
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
				}
			}
		}

		[Column(Storage = "_ContractStart", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string ContractStart
		{
			get
			{
				return this._ContractStart;
			}
			set
			{
				if (this._ContractStart != value)
				{
					this.SendPropertyChanging();
					this._ContractStart = value;
					this.SendPropertyChanged("ContractStart");
				}
			}
		}

		[Column(Storage = "_Eqar_ID", DbType = "Int NOT NULL")]
		public int Eqar_ID
		{
			get
			{
				return this._Eqar_ID;
			}
			set
			{
				if (this._Eqar_ID != value)
				{
					if (this._T_EqarsData.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.SendPropertyChanging();
					this._Eqar_ID = value;
					this.SendPropertyChanged("Eqar_ID");
				}
			}
		}

		[Column(Storage = "_PayMethod", DbType = "Int")]
		public int? PayMethod
		{
			get
			{
				return this._PayMethod;
			}
			set
			{
				int? nullable = this._PayMethod;
				int? nullable1 = value;
				if ((nullable.GetValueOrDefault() != nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._PayMethod = value;
					this.SendPropertyChanged("PayMethod");
				}
			}
		}

		[Column(Storage = "_RentOfYear", DbType = "Float")]
		public double? RentOfYear
		{
			get
			{
				return this._RentOfYear;
			}
			set
			{
				double? nullable = this._RentOfYear;
				double? nullable1 = value;
				if (((double)nullable.GetValueOrDefault() != (double)nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._RentOfYear = value;
					this.SendPropertyChanged("RentOfYear");
				}
			}
		}

		[Column(Storage = "_RentOfYearPayment", DbType = "Float")]
		public double? RentOfYearPayment
		{
			get
			{
				return this._RentOfYearPayment;
			}
			set
			{
				double? nullable = this._RentOfYearPayment;
				double? nullable1 = value;
				if (((double)nullable.GetValueOrDefault() != (double)nullable1.GetValueOrDefault() ? 1 : (nullable.HasValue != nullable1.HasValue) ? 1 : 0) != 0)
				{
					this.SendPropertyChanging();
					this._RentOfYearPayment = value;
					this.SendPropertyChanged("RentOfYearPayment");
				}
			}
		}

		[Association(Name = "T_AinsData_T_TenantContract", Storage = "_T_AinsData", ThisKey = "Ain_ID", OtherKey = "AinID", IsForeignKey = true)]
		public Stock_Data.T_AinsData T_AinsData
		{
			get
			{
				return this._T_AinsData.Entity;
			}
			set
			{
				Stock_Data.T_AinsData previousValue = this._T_AinsData.Entity;
				if ((previousValue != value ? true : !this._T_AinsData.HasLoadedOrAssignedValue))
				{
					this.SendPropertyChanging();
					if (previousValue != null)
					{
						this._T_AinsData.Entity = null;
						previousValue.T_TenantContracts.Remove(this);
					}
					this._T_AinsData.Entity = value;
					if (value == null)
					{
						this._Ain_ID = null;
					}
					else
					{
						value.T_TenantContracts.Add(this);
						this._Ain_ID = new int?(value.AinID);
					}
					this.SendPropertyChanged("T_AinsData");
				}
			}
		}

		[Association(Name = "T_EqarsData_T_TenantContract", Storage = "_T_EqarsData", ThisKey = "Eqar_ID", OtherKey = "EqarID", IsForeignKey = true)]
		public Stock_Data.T_EqarsData T_EqarsData
		{
			get
			{
				return this._T_EqarsData.Entity;
			}
			set
			{
				Stock_Data.T_EqarsData previousValue = this._T_EqarsData.Entity;
				if ((previousValue != value ? true : !this._T_EqarsData.HasLoadedOrAssignedValue))
				{
					this.SendPropertyChanging();
					if (previousValue != null)
					{
						this._T_EqarsData.Entity = null;
						previousValue.T_TenantContracts.Remove(this);
					}
					this._T_EqarsData.Entity = value;
					if (value == null)
					{
						this._Eqar_ID = 0;
					}
					else
					{
						value.T_TenantContracts.Add(this);
						this._Eqar_ID = value.EqarID;
					}
					this.SendPropertyChanged("T_EqarsData");
				}
			}
		}

		[Association(Name = "T_TenantContract_T_GDHEAD", Storage = "_T_GDHEADs", ThisKey = "ContractID", OtherKey = "gdTp")]
		public EntitySet<T_GDHEAD> T_GDHEADs
		{
			get
			{
				return this._T_GDHEADs;
			}
			set
			{
				this._T_GDHEADs.Assign(value);
			}
		}

		[Association(Name = "T_Tenant_T_TenantContract", Storage = "_T_Tenant", ThisKey = "tenant_ID", OtherKey = "tenantID", IsForeignKey = true)]
		public Stock_Data.T_Tenant T_Tenant
		{
			get
			{
				return this._T_Tenant.Entity;
			}
			set
			{
				Stock_Data.T_Tenant previousValue = this._T_Tenant.Entity;
				if ((previousValue != value ? true : !this._T_Tenant.HasLoadedOrAssignedValue))
				{
					this.SendPropertyChanging();
					if (previousValue != null)
					{
						this._T_Tenant.Entity = null;
						previousValue.T_TenantContracts.Remove(this);
					}
					this._T_Tenant.Entity = value;
					if (value == null)
					{
						this._tenant_ID = 0;
					}
					else
					{
						value.T_TenantContracts.Add(this);
						this._tenant_ID = value.tenantID;
					}
					this.SendPropertyChanged("T_Tenant");
				}
			}
		}

		[Association(Name = "T_TenantContract_T_TenantPayment", Storage = "_T_TenantPayments", ThisKey = "ContractID", OtherKey = "tenantContract_ID")]
		public EntitySet<T_TenantPayment> T_TenantPayments
		{
			get
			{
				return this._T_TenantPayments;
			}
			set
			{
				this._T_TenantPayments.Assign(value);
			}
		}

		[Column(Storage = "_tenant_ID", DbType = "Int NOT NULL")]
		public int tenant_ID
		{
			get
			{
				return this._tenant_ID;
			}
			set
			{
				if (this._tenant_ID != value)
				{
					if (this._T_Tenant.HasLoadedOrAssignedValue)
					{
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					this.SendPropertyChanging();
					this._tenant_ID = value;
					this.SendPropertyChanged("tenant_ID");
				}
			}
		}

		static T_TenantContract()
		{
			T_TenantContract.emptyChangingEventArgs = new PropertyChangingEventArgs(string.Empty);
		}

		public T_TenantContract()
		{
			this._T_GDHEADs = new EntitySet<T_GDHEAD>(new Action<T_GDHEAD>(this.attach_T_GDHEADs), new Action<T_GDHEAD>(this.detach_T_GDHEADs));
			this._T_TenantPayments = new EntitySet<T_TenantPayment>(new Action<T_TenantPayment>(this.attach_T_TenantPayments), new Action<T_TenantPayment>(this.detach_T_TenantPayments));
			this._T_AinsData = new EntityRef<Stock_Data.T_AinsData>();
			this._T_EqarsData = new EntityRef<Stock_Data.T_EqarsData>();
			this._T_Tenant = new EntityRef<Stock_Data.T_Tenant>();
		}

		private void attach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_TenantContract = this;
		}

		private void attach_T_TenantPayments(T_TenantPayment entity)
		{
			this.SendPropertyChanging();
			entity.T_TenantContract = this;
		}

		private void detach_T_GDHEADs(T_GDHEAD entity)
		{
			this.SendPropertyChanging();
			entity.T_TenantContract = null;
		}

		private void detach_T_TenantPayments(T_TenantPayment entity)
		{
			this.SendPropertyChanging();
			entity.T_TenantContract = null;
		}

		protected virtual void SendPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		protected virtual void SendPropertyChanging()
		{
			if (this.PropertyChanging != null)
			{
				this.PropertyChanging(this, T_TenantContract.emptyChangingEventArgs);
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		public event PropertyChangingEventHandler PropertyChanging;
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_TenantPayment")]
	public partial class T_TenantPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _PaymentID;

		private int _PaymentNo;

		private int _tenantContract_ID;

		private System.Nullable<double> _Value;

		private string _PayMonth;

		private System.Nullable<bool> _Statue;

		private System.Nullable<double> _Remining;

		private System.Nullable<int> _SndNo;

		private EntityRef<T_GDHEAD> _T_GDHEAD;

		private EntityRef<T_TenantContract> _T_TenantContract;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnPaymentIDChanging(int value);
		partial void OnPaymentIDChanged();
		partial void OnPaymentNoChanging(int value);
		partial void OnPaymentNoChanged();
		partial void OntenantContract_IDChanging(int value);
		partial void OntenantContract_IDChanged();
		partial void OnValueChanging(System.Nullable<double> value);
		partial void OnValueChanged();
		partial void OnPayMonthChanging(string value);
		partial void OnPayMonthChanged();
		partial void OnStatueChanging(System.Nullable<bool> value);
		partial void OnStatueChanged();
		partial void OnReminingChanging(System.Nullable<double> value);
		partial void OnReminingChanged();
		partial void OnSndNoChanging(System.Nullable<int> value);
		partial void OnSndNoChanged();
		#endregion

		public T_TenantPayment()
		{
			this._T_GDHEAD = default(EntityRef<T_GDHEAD>);
			this._T_TenantContract = default(EntityRef<T_TenantContract>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentNo", DbType = "Int NOT NULL")]
		public int PaymentNo
		{
			get
			{
				return this._PaymentNo;
			}
			set
			{
				if ((this._PaymentNo != value))
				{
					this.OnPaymentNoChanging(value);
					this.SendPropertyChanging();
					this._PaymentNo = value;
					this.SendPropertyChanged("PaymentNo");
					this.OnPaymentNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tenantContract_ID", DbType = "Int NOT NULL")]
		public int tenantContract_ID
		{
			get
			{
				return this._tenantContract_ID;
			}
			set
			{
				if ((this._tenantContract_ID != value))
				{
					if (this._T_TenantContract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntenantContract_IDChanging(value);
					this.SendPropertyChanging();
					this._tenantContract_ID = value;
					this.SendPropertyChanged("tenantContract_ID");
					this.OntenantContract_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Value", DbType = "Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PayMonth", DbType = "VarChar(10)")]
		public string PayMonth
		{
			get
			{
				return this._PayMonth;
			}
			set
			{
				if ((this._PayMonth != value))
				{
					this.OnPayMonthChanging(value);
					this.SendPropertyChanging();
					this._PayMonth = value;
					this.SendPropertyChanged("PayMonth");
					this.OnPayMonthChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Statue", DbType = "Bit")]
		public System.Nullable<bool> Statue
		{
			get
			{
				return this._Statue;
			}
			set
			{
				if ((this._Statue != value))
				{
					this.OnStatueChanging(value);
					this.SendPropertyChanging();
					this._Statue = value;
					this.SendPropertyChanged("Statue");
					this.OnStatueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remining", DbType = "Float")]
		public System.Nullable<double> Remining
		{
			get
			{
				return this._Remining;
			}
			set
			{
				if ((this._Remining != value))
				{
					this.OnReminingChanging(value);
					this.SendPropertyChanging();
					this._Remining = value;
					this.SendPropertyChanged("Remining");
					this.OnReminingChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SndNo", DbType = "Int")]
		public System.Nullable<int> SndNo
		{
			get
			{
				return this._SndNo;
			}
			set
			{
				if ((this._SndNo != value))
				{
					if (this._T_GDHEAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSndNoChanging(value);
					this.SendPropertyChanging();
					this._SndNo = value;
					this.SendPropertyChanged("SndNo");
					this.OnSndNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_GDHEAD_T_TenantPayment", Storage = "_T_GDHEAD", ThisKey = "SndNo", OtherKey = "gdhead_ID", IsForeignKey = true)]
		public T_GDHEAD T_GDHEAD
		{
			get
			{
				return this._T_GDHEAD.Entity;
			}
			set
			{
				T_GDHEAD previousValue = this._T_GDHEAD.Entity;
				if (((previousValue != value)
							|| (this._T_GDHEAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_GDHEAD.Entity = null;
						previousValue.T_TenantPayments.Remove(this);
					}
					this._T_GDHEAD.Entity = value;
					if ((value != null))
					{
						value.T_TenantPayments.Add(this);
						this._SndNo = value.gdhead_ID;
					}
					else
					{
						this._SndNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_GDHEAD");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_TenantContract_T_TenantPayment", Storage = "_T_TenantContract", ThisKey = "tenantContract_ID", OtherKey = "ContractID", IsForeignKey = true)]
		public T_TenantContract T_TenantContract
		{
			get
			{
				return this._T_TenantContract.Entity;
			}
			set
			{
				T_TenantContract previousValue = this._T_TenantContract.Entity;
				if (((previousValue != value)
							|| (this._T_TenantContract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_TenantContract.Entity = null;
						previousValue.T_TenantPayments.Remove(this);
					}
					this._T_TenantContract.Entity = value;
					if ((value != null))
					{
						value.T_TenantPayments.Add(this);
						this._tenantContract_ID = value.ContractID;
					}
					else
					{
						this._tenantContract_ID = default(int);
					}
					this.SendPropertyChanged("T_TenantContract");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_TicetTyp")]
	public partial class T_TicetTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _TicetT_No;

		private string _NameA;

		private string _NameE;

		private EntitySet<T_Ticket> _T_Tickets;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnTicetT_NoChanging(int value);
		partial void OnTicetT_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		#endregion

		public T_TicetTyp()
		{
			this._T_Tickets = new EntitySet<T_Ticket>(new Action<T_Ticket>(this.attach_T_Tickets), new Action<T_Ticket>(this.detach_T_Tickets));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicetT_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int TicetT_No
		{
			get
			{
				return this._TicetT_No;
			}
			set
			{
				if ((this._TicetT_No != value))
				{
					this.OnTicetT_NoChanging(value);
					this.SendPropertyChanging();
					this._TicetT_No = value;
					this.SendPropertyChanged("TicetT_No");
					this.OnTicetT_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(20)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(20)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_TicetTyp_T_Ticket", Storage = "_T_Tickets", ThisKey = "TicetT_No", OtherKey = "TickTyp")]
		public EntitySet<T_Ticket> T_Tickets
		{
			get
			{
				return this._T_Tickets;
			}
			set
			{
				this._T_Tickets.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Tickets(T_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.T_TicetTyp = this;
		}

		private void detach_T_Tickets(T_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.T_TicetTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Tickets")]
	public partial class T_Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Ticket_ID;

		private int _warnNo;

		private string _warnDate;

		private string _EmpID;

		private string _GoLine;

		private System.Nullable<int> _TickTyp;

		private System.Nullable<double> _TicketValue;

		private System.Nullable<double> _TicketCount;

		private System.Nullable<double> _AllTicketValue;

		private string _Note;

		private System.Nullable<bool> _IFState;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_TicetTyp> _T_TicetTyp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnTicket_IDChanging(string value);
		partial void OnTicket_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnGoLineChanging(string value);
		partial void OnGoLineChanged();
		partial void OnTickTypChanging(System.Nullable<int> value);
		partial void OnTickTypChanged();
		partial void OnTicketValueChanging(System.Nullable<double> value);
		partial void OnTicketValueChanged();
		partial void OnTicketCountChanging(System.Nullable<double> value);
		partial void OnTicketCountChanged();
		partial void OnAllTicketValueChanging(System.Nullable<double> value);
		partial void OnAllTicketValueChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		#endregion

		public T_Ticket()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_TicetTyp = default(EntityRef<T_TicetTyp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ticket_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Ticket_ID
		{
			get
			{
				return this._Ticket_ID;
			}
			set
			{
				if ((this._Ticket_ID != value))
				{
					this.OnTicket_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_ID = value;
					this.SendPropertyChanged("Ticket_ID");
					this.OnTicket_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GoLine", DbType = "VarChar(50)")]
		public string GoLine
		{
			get
			{
				return this._GoLine;
			}
			set
			{
				if ((this._GoLine != value))
				{
					this.OnGoLineChanging(value);
					this.SendPropertyChanging();
					this._GoLine = value;
					this.SendPropertyChanged("GoLine");
					this.OnGoLineChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TickTyp", DbType = "Int")]
		public System.Nullable<int> TickTyp
		{
			get
			{
				return this._TickTyp;
			}
			set
			{
				if ((this._TickTyp != value))
				{
					if (this._T_TicetTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTickTypChanging(value);
					this.SendPropertyChanging();
					this._TickTyp = value;
					this.SendPropertyChanged("TickTyp");
					this.OnTickTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketValue", DbType = "Float")]
		public System.Nullable<double> TicketValue
		{
			get
			{
				return this._TicketValue;
			}
			set
			{
				if ((this._TicketValue != value))
				{
					this.OnTicketValueChanging(value);
					this.SendPropertyChanging();
					this._TicketValue = value;
					this.SendPropertyChanged("TicketValue");
					this.OnTicketValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TicketCount", DbType = "Float")]
		public System.Nullable<double> TicketCount
		{
			get
			{
				return this._TicketCount;
			}
			set
			{
				if ((this._TicketCount != value))
				{
					this.OnTicketCountChanging(value);
					this.SendPropertyChanging();
					this._TicketCount = value;
					this.SendPropertyChanged("TicketCount");
					this.OnTicketCountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllTicketValue", DbType = "Float")]
		public System.Nullable<double> AllTicketValue
		{
			get
			{
				return this._AllTicketValue;
			}
			set
			{
				if ((this._AllTicketValue != value))
				{
					this.OnAllTicketValueChanging(value);
					this.SendPropertyChanging();
					this._AllTicketValue = value;
					this.SendPropertyChanged("AllTicketValue");
					this.OnAllTicketValueChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Ticket", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Tickets.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Tickets.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_TicetTyp_T_Ticket", Storage = "_T_TicetTyp", ThisKey = "TickTyp", OtherKey = "TicetT_No", IsForeignKey = true)]
		public T_TicetTyp T_TicetTyp
		{
			get
			{
				return this._T_TicetTyp.Entity;
			}
			set
			{
				T_TicetTyp previousValue = this._T_TicetTyp.Entity;
				if (((previousValue != value)
							|| (this._T_TicetTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_TicetTyp.Entity = null;
						previousValue.T_Tickets.Remove(this);
					}
					this._T_TicetTyp.Entity = value;
					if ((value != null))
					{
						value.T_Tickets.Add(this);
						this._TickTyp = value.TicetT_No;
					}
					else
					{
						this._TickTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_TicetTyp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_tran")]
	public partial class T_tran : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _dt;

		private System.Nullable<int> _romno;

		private System.Nullable<double> _price;

		private System.Nullable<int> _fat;

		private string _detal;

		private string _Usr;

		private string _UsrNam;

		private string _tm;

		private System.Nullable<int> _perno;

		private System.Nullable<int> _typ;

		private System.Nullable<double> _GadeNo;

		private System.Nullable<double> _GadeId;

		private System.Nullable<bool> _IsGaid;

		private System.Nullable<int> _romnoNew;

		private EntityRef<T_per> _T_per;

		private EntityRef<T_sertyp> _T_sertyp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OndtChanging(string value);
		partial void OndtChanged();
		partial void OnromnoChanging(System.Nullable<int> value);
		partial void OnromnoChanged();
		partial void OnpriceChanging(System.Nullable<double> value);
		partial void OnpriceChanged();
		partial void OnfatChanging(System.Nullable<int> value);
		partial void OnfatChanged();
		partial void OndetalChanging(string value);
		partial void OndetalChanged();
		partial void OnUsrChanging(string value);
		partial void OnUsrChanged();
		partial void OnUsrNamChanging(string value);
		partial void OnUsrNamChanged();
		partial void OntmChanging(string value);
		partial void OntmChanged();
		partial void OnpernoChanging(System.Nullable<int> value);
		partial void OnpernoChanged();
		partial void OntypChanging(System.Nullable<int> value);
		partial void OntypChanged();
		partial void OnGadeNoChanging(System.Nullable<double> value);
		partial void OnGadeNoChanged();
		partial void OnGadeIdChanging(System.Nullable<double> value);
		partial void OnGadeIdChanged();
		partial void OnIsGaidChanging(System.Nullable<bool> value);
		partial void OnIsGaidChanged();
		partial void OnromnoNewChanging(System.Nullable<int> value);
		partial void OnromnoNewChanged();
		#endregion

		public T_tran()
		{
			this._T_per = default(EntityRef<T_per>);
			this._T_sertyp = default(EntityRef<T_sertyp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dt", DbType = "VarChar(10)")]
		public string dt
		{
			get
			{
				return this._dt;
			}
			set
			{
				if ((this._dt != value))
				{
					this.OndtChanging(value);
					this.SendPropertyChanging();
					this._dt = value;
					this.SendPropertyChanged("dt");
					this.OndtChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romno", DbType = "Int")]
		public System.Nullable<int> romno
		{
			get
			{
				return this._romno;
			}
			set
			{
				if ((this._romno != value))
				{
					this.OnromnoChanging(value);
					this.SendPropertyChanging();
					this._romno = value;
					this.SendPropertyChanged("romno");
					this.OnromnoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_price", DbType = "Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fat", DbType = "Int")]
		public System.Nullable<int> fat
		{
			get
			{
				return this._fat;
			}
			set
			{
				if ((this._fat != value))
				{
					this.OnfatChanging(value);
					this.SendPropertyChanging();
					this._fat = value;
					this.SendPropertyChanged("fat");
					this.OnfatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_detal", DbType = "VarChar(100)")]
		public string detal
		{
			get
			{
				return this._detal;
			}
			set
			{
				if ((this._detal != value))
				{
					this.OndetalChanging(value);
					this.SendPropertyChanging();
					this._detal = value;
					this.SendPropertyChanged("detal");
					this.OndetalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr", DbType = "VarChar(3)")]
		public string Usr
		{
			get
			{
				return this._Usr;
			}
			set
			{
				if ((this._Usr != value))
				{
					this.OnUsrChanging(value);
					this.SendPropertyChanging();
					this._Usr = value;
					this.SendPropertyChanged("Usr");
					this.OnUsrChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UsrNam", DbType = "VarChar(50)")]
		public string UsrNam
		{
			get
			{
				return this._UsrNam;
			}
			set
			{
				if ((this._UsrNam != value))
				{
					this.OnUsrNamChanging(value);
					this.SendPropertyChanging();
					this._UsrNam = value;
					this.SendPropertyChanged("UsrNam");
					this.OnUsrNamChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tm", DbType = "VarChar(11)")]
		public string tm
		{
			get
			{
				return this._tm;
			}
			set
			{
				if ((this._tm != value))
				{
					this.OntmChanging(value);
					this.SendPropertyChanging();
					this._tm = value;
					this.SendPropertyChanged("tm");
					this.OntmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_perno", DbType = "Int")]
		public System.Nullable<int> perno
		{
			get
			{
				return this._perno;
			}
			set
			{
				if ((this._perno != value))
				{
					if (this._T_per.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpernoChanging(value);
					this.SendPropertyChanging();
					this._perno = value;
					this.SendPropertyChanged("perno");
					this.OnpernoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_typ", DbType = "Int")]
		public System.Nullable<int> typ
		{
			get
			{
				return this._typ;
			}
			set
			{
				if ((this._typ != value))
				{
					if (this._T_sertyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypChanging(value);
					this.SendPropertyChanging();
					this._typ = value;
					this.SendPropertyChanged("typ");
					this.OntypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeNo", DbType = "Float")]
		public System.Nullable<double> GadeNo
		{
			get
			{
				return this._GadeNo;
			}
			set
			{
				if ((this._GadeNo != value))
				{
					this.OnGadeNoChanging(value);
					this.SendPropertyChanging();
					this._GadeNo = value;
					this.SendPropertyChanged("GadeNo");
					this.OnGadeNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GadeId", DbType = "Float")]
		public System.Nullable<double> GadeId
		{
			get
			{
				return this._GadeId;
			}
			set
			{
				if ((this._GadeId != value))
				{
					this.OnGadeIdChanging(value);
					this.SendPropertyChanging();
					this._GadeId = value;
					this.SendPropertyChanged("GadeId");
					this.OnGadeIdChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsGaid", DbType = "Bit")]
		public System.Nullable<bool> IsGaid
		{
			get
			{
				return this._IsGaid;
			}
			set
			{
				if ((this._IsGaid != value))
				{
					this.OnIsGaidChanging(value);
					this.SendPropertyChanging();
					this._IsGaid = value;
					this.SendPropertyChanged("IsGaid");
					this.OnIsGaidChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_romnoNew", DbType = "Int")]
		public System.Nullable<int> romnoNew
		{
			get
			{
				return this._romnoNew;
			}
			set
			{
				if ((this._romnoNew != value))
				{
					this.OnromnoNewChanging(value);
					this.SendPropertyChanging();
					this._romnoNew = value;
					this.SendPropertyChanged("romnoNew");
					this.OnromnoNewChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_per_T_tran", Storage = "_T_per", ThisKey = "perno", OtherKey = "perno", IsForeignKey = true)]
		public T_per T_per
		{
			get
			{
				return this._T_per.Entity;
			}
			set
			{
				T_per previousValue = this._T_per.Entity;
				if (((previousValue != value)
							|| (this._T_per.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_per.Entity = null;
						previousValue.T_trans.Remove(this);
					}
					this._T_per.Entity = value;
					if ((value != null))
					{
						value.T_trans.Add(this);
						this._perno = value.perno;
					}
					else
					{
						this._perno = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_per");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_sertyp_T_tran", Storage = "_T_sertyp", ThisKey = "typ", OtherKey = "Serv_ID", IsForeignKey = true)]
		public T_sertyp T_sertyp
		{
			get
			{
				return this._T_sertyp.Entity;
			}
			set
			{
				T_sertyp previousValue = this._T_sertyp.Entity;
				if (((previousValue != value)
							|| (this._T_sertyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_sertyp.Entity = null;
						previousValue.T_trans.Remove(this);
					}
					this._T_sertyp.Entity = value;
					if ((value != null))
					{
						value.T_trans.Add(this);
						this._typ = value.Serv_ID;
					}
					else
					{
						this._typ = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_sertyp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_TransEmployee")]
	public partial class T_TransEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Trans_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private string _DateFrom;

		private string _DateTo;

		private System.Nullable<int> _BranchFrom;

		private System.Nullable<int> _BranchTo;

		private System.Nullable<int> _Usr_No;

		private System.Nullable<int> _Usr_NoEdite;

		private string _DateEdit;

		private string _Note;

		private System.Nullable<bool> _TransTyp;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnTrans_IDChanging(string value);
		partial void OnTrans_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnDateFromChanging(string value);
		partial void OnDateFromChanged();
		partial void OnDateToChanging(string value);
		partial void OnDateToChanged();
		partial void OnBranchFromChanging(System.Nullable<int> value);
		partial void OnBranchFromChanged();
		partial void OnBranchToChanging(System.Nullable<int> value);
		partial void OnBranchToChanged();
		partial void OnUsr_NoChanging(System.Nullable<int> value);
		partial void OnUsr_NoChanged();
		partial void OnUsr_NoEditeChanging(System.Nullable<int> value);
		partial void OnUsr_NoEditeChanged();
		partial void OnDateEditChanging(string value);
		partial void OnDateEditChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnTransTypChanging(System.Nullable<bool> value);
		partial void OnTransTypChanged();
		#endregion

		public T_TransEmployee()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Trans_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Trans_ID
		{
			get
			{
				return this._Trans_ID;
			}
			set
			{
				if ((this._Trans_ID != value))
				{
					this.OnTrans_IDChanging(value);
					this.SendPropertyChanging();
					this._Trans_ID = value;
					this.SendPropertyChanged("Trans_ID");
					this.OnTrans_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateFrom", DbType = "VarChar(10)")]
		public string DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this.OnDateFromChanging(value);
					this.SendPropertyChanging();
					this._DateFrom = value;
					this.SendPropertyChanged("DateFrom");
					this.OnDateFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateTo", DbType = "VarChar(10)")]
		public string DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this.OnDateToChanging(value);
					this.SendPropertyChanging();
					this._DateTo = value;
					this.SendPropertyChanged("DateTo");
					this.OnDateToChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BranchFrom", DbType = "Int")]
		public System.Nullable<int> BranchFrom
		{
			get
			{
				return this._BranchFrom;
			}
			set
			{
				if ((this._BranchFrom != value))
				{
					this.OnBranchFromChanging(value);
					this.SendPropertyChanging();
					this._BranchFrom = value;
					this.SendPropertyChanged("BranchFrom");
					this.OnBranchFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BranchTo", DbType = "Int")]
		public System.Nullable<int> BranchTo
		{
			get
			{
				return this._BranchTo;
			}
			set
			{
				if ((this._BranchTo != value))
				{
					this.OnBranchToChanging(value);
					this.SendPropertyChanging();
					this._BranchTo = value;
					this.SendPropertyChanged("BranchTo");
					this.OnBranchToChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr_No", DbType = "Int")]
		public System.Nullable<int> Usr_No
		{
			get
			{
				return this._Usr_No;
			}
			set
			{
				if ((this._Usr_No != value))
				{
					this.OnUsr_NoChanging(value);
					this.SendPropertyChanging();
					this._Usr_No = value;
					this.SendPropertyChanged("Usr_No");
					this.OnUsr_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr_NoEdite", DbType = "Int")]
		public System.Nullable<int> Usr_NoEdite
		{
			get
			{
				return this._Usr_NoEdite;
			}
			set
			{
				if ((this._Usr_NoEdite != value))
				{
					this.OnUsr_NoEditeChanging(value);
					this.SendPropertyChanging();
					this._Usr_NoEdite = value;
					this.SendPropertyChanged("Usr_NoEdite");
					this.OnUsr_NoEditeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateEdit", DbType = "VarChar(10)")]
		public string DateEdit
		{
			get
			{
				return this._DateEdit;
			}
			set
			{
				if ((this._DateEdit != value))
				{
					this.OnDateEditChanging(value);
					this.SendPropertyChanging();
					this._DateEdit = value;
					this.SendPropertyChanged("DateEdit");
					this.OnDateEditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransTyp", DbType = "Bit")]
		public System.Nullable<bool> TransTyp
		{
			get
			{
				return this._TransTyp;
			}
			set
			{
				if ((this._TransTyp != value))
				{
					this.OnTransTypChanging(value);
					this.SendPropertyChanging();
					this._TransTyp = value;
					this.SendPropertyChanged("TransTyp");
					this.OnTransTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_TransEmployee", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_TransEmployees.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_TransEmployees.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_treatment")]
	public partial class T_treatment : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _treatment_ID;

		private int _treatment_No;

		private string _NameA;

		private string _NameE;

		private string _Note;

		private EntitySet<T_Commentary> _T_Commentaries;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void Ontreatment_IDChanging(string value);
		partial void Ontreatment_IDChanged();
		partial void Ontreatment_NoChanging(int value);
		partial void Ontreatment_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_treatment()
		{
			this._T_Commentaries = new EntitySet<T_Commentary>(new Action<T_Commentary>(this.attach_T_Commentaries), new Action<T_Commentary>(this.detach_T_Commentaries));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_treatment_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string treatment_ID
		{
			get
			{
				return this._treatment_ID;
			}
			set
			{
				if ((this._treatment_ID != value))
				{
					this.Ontreatment_IDChanging(value);
					this.SendPropertyChanging();
					this._treatment_ID = value;
					this.SendPropertyChanged("treatment_ID");
					this.Ontreatment_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_treatment_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int treatment_No
		{
			get
			{
				return this._treatment_No;
			}
			set
			{
				if ((this._treatment_No != value))
				{
					this.Ontreatment_NoChanging(value);
					this.SendPropertyChanging();
					this._treatment_No = value;
					this.SendPropertyChanged("treatment_No");
					this.Ontreatment_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(100)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(100)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_treatment_T_Commentary", Storage = "_T_Commentaries", ThisKey = "treatment_No", OtherKey = "treatmentNo")]
		public EntitySet<T_Commentary> T_Commentaries
		{
			get
			{
				return this._T_Commentaries;
			}
			set
			{
				this._T_Commentaries.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Commentaries(T_Commentary entity)
		{
			this.SendPropertyChanging();
			entity.T_treatment = this;
		}

		private void detach_T_Commentaries(T_Commentary entity)
		{
			this.SendPropertyChanging();
			entity.T_treatment = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Unit")]
	public partial class T_Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _Unit_ID;

		private string _Unit_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<int> _CompanyID;

		private EntitySet<T_ItemDet> _T_ItemDets;

		private EntitySet<T_Item> _T_Items;

		private EntitySet<T_Item> _T_Items1;

		private EntitySet<T_Item> _T_Items2;

		private EntitySet<T_Item> _T_Items3;

		private EntitySet<T_Item> _T_Items4;

		private EntitySet<T_OfferDet> _T_OfferDets;

		private EntitySet<T_OfferQFree> _T_OfferQFrees;

		private EntityRef<T_SYSSETTING> _T_SYSSETTING;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnUnit_IDChanging(int value);
		partial void OnUnit_IDChanged();
		partial void OnUnit_NoChanging(string value);
		partial void OnUnit_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		#endregion

		public T_Unit()
		{
			this._T_ItemDets = new EntitySet<T_ItemDet>(new Action<T_ItemDet>(this.attach_T_ItemDets), new Action<T_ItemDet>(this.detach_T_ItemDets));
			this._T_Items = new EntitySet<T_Item>(new Action<T_Item>(this.attach_T_Items), new Action<T_Item>(this.detach_T_Items));
			this._T_Items1 = new EntitySet<T_Item>(new Action<T_Item>(this.attach_T_Items1), new Action<T_Item>(this.detach_T_Items1));
			this._T_Items2 = new EntitySet<T_Item>(new Action<T_Item>(this.attach_T_Items2), new Action<T_Item>(this.detach_T_Items2));
			this._T_Items3 = new EntitySet<T_Item>(new Action<T_Item>(this.attach_T_Items3), new Action<T_Item>(this.detach_T_Items3));
			this._T_Items4 = new EntitySet<T_Item>(new Action<T_Item>(this.attach_T_Items4), new Action<T_Item>(this.detach_T_Items4));
			this._T_OfferDets = new EntitySet<T_OfferDet>(new Action<T_OfferDet>(this.attach_T_OfferDets), new Action<T_OfferDet>(this.detach_T_OfferDets));
			this._T_OfferQFrees = new EntitySet<T_OfferQFree>(new Action<T_OfferQFree>(this.attach_T_OfferQFrees), new Action<T_OfferQFree>(this.detach_T_OfferQFrees));
			this._T_SYSSETTING = default(EntityRef<T_SYSSETTING>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int Unit_ID
		{
			get
			{
				return this._Unit_ID;
			}
			set
			{
				if ((this._Unit_ID != value))
				{
					this.OnUnit_IDChanging(value);
					this.SendPropertyChanging();
					this._Unit_ID = value;
					this.SendPropertyChanged("Unit_ID");
					this.OnUnit_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit_No", DbType = "VarChar(30)")]
		public string Unit_No
		{
			get
			{
				return this._Unit_No;
			}
			set
			{
				if ((this._Unit_No != value))
				{
					this.OnUnit_NoChanging(value);
					this.SendPropertyChanging();
					this._Unit_No = value;
					this.SendPropertyChanged("Unit_No");
					this.OnUnit_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._T_SYSSETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_ItemDet", Storage = "_T_ItemDets", ThisKey = "Unit_ID", OtherKey = "Unit_")]
		public EntitySet<T_ItemDet> T_ItemDets
		{
			get
			{
				return this._T_ItemDets;
			}
			set
			{
				this._T_ItemDets.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item", Storage = "_T_Items", ThisKey = "Unit_ID", OtherKey = "Unit1")]
		public EntitySet<T_Item> T_Items
		{
			get
			{
				return this._T_Items;
			}
			set
			{
				this._T_Items.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item1", Storage = "_T_Items1", ThisKey = "Unit_ID", OtherKey = "Unit2")]
		public EntitySet<T_Item> T_Items1
		{
			get
			{
				return this._T_Items1;
			}
			set
			{
				this._T_Items1.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item2", Storage = "_T_Items2", ThisKey = "Unit_ID", OtherKey = "Unit3")]
		public EntitySet<T_Item> T_Items2
		{
			get
			{
				return this._T_Items2;
			}
			set
			{
				this._T_Items2.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item3", Storage = "_T_Items3", ThisKey = "Unit_ID", OtherKey = "Unit4")]
		public EntitySet<T_Item> T_Items3
		{
			get
			{
				return this._T_Items3;
			}
			set
			{
				this._T_Items3.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_Item4", Storage = "_T_Items4", ThisKey = "Unit_ID", OtherKey = "Unit5")]
		public EntitySet<T_Item> T_Items4
		{
			get
			{
				return this._T_Items4;
			}
			set
			{
				this._T_Items4.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_OfferDet", Storage = "_T_OfferDets", ThisKey = "Unit_ID", OtherKey = "ItmUnt")]
		public EntitySet<T_OfferDet> T_OfferDets
		{
			get
			{
				return this._T_OfferDets;
			}
			set
			{
				this._T_OfferDets.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Unit_T_OfferQFree", Storage = "_T_OfferQFrees", ThisKey = "Unit_ID", OtherKey = "OfferQFreeItmUnt")]
		public EntitySet<T_OfferQFree> T_OfferQFrees
		{
			get
			{
				return this._T_OfferQFrees;
			}
			set
			{
				this._T_OfferQFrees.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_SYSSETTING_T_Unit", Storage = "_T_SYSSETTING", ThisKey = "CompanyID", OtherKey = "SYSSETTING_ID", IsForeignKey = true)]
		public T_SYSSETTING T_SYSSETTING
		{
			get
			{
				return this._T_SYSSETTING.Entity;
			}
			set
			{
				T_SYSSETTING previousValue = this._T_SYSSETTING.Entity;
				if (((previousValue != value)
							|| (this._T_SYSSETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_SYSSETTING.Entity = null;
						previousValue.T_Units.Remove(this);
					}
					this._T_SYSSETTING.Entity = value;
					if ((value != null))
					{
						value.T_Units.Add(this);
						this._CompanyID = value.SYSSETTING_ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_SYSSETTING");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_ItemDets(T_ItemDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit = this;
		}

		private void detach_T_ItemDets(T_ItemDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit = null;
		}

		private void attach_T_Items(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit = this;
		}

		private void detach_T_Items(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit = null;
		}

		private void attach_T_Items1(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit1 = this;
		}

		private void detach_T_Items1(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit1 = null;
		}

		private void attach_T_Items2(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit2 = this;
		}

		private void detach_T_Items2(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit2 = null;
		}

		private void attach_T_Items3(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit3 = this;
		}

		private void detach_T_Items3(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit3 = null;
		}

		private void attach_T_Items4(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit4 = this;
		}

		private void detach_T_Items4(T_Item entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit4 = null;
		}

		private void attach_T_OfferDets(T_OfferDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit = this;
		}

		private void detach_T_OfferDets(T_OfferDet entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit = null;
		}

		private void attach_T_OfferQFrees(T_OfferQFree entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit = this;
		}

		private void detach_T_OfferQFrees(T_OfferQFree entity)
		{
			this.SendPropertyChanging();
			entity.T_Unit = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_UpdateDoc")]
	public partial class T_UpdateDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _UpdateDoc_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private System.Nullable<int> _Usr_No;

		private System.Nullable<int> _Usr_NoEdite;

		private string _DateEdit;

		private string _Note;

		private string _BeginDateBefor;

		private string _BeginDateAfter;

		private string _EndDateBefor;

		private string _EndDateAfter;

		private string _DocNo;

		private System.Nullable<int> _DocFrom;

		private string _Insurance_NameBefor;

		private System.Nullable<int> _InsuranceNoBefor;

		private string _Insurance_NameAfter;

		private System.Nullable<int> _InsuranceNoAfter;

		private System.Nullable<int> _DocTyp;

		private string _DocNoAfter;

		private System.Nullable<int> _DocFromAfter;

		private EntityRef<T_City> _T_City;

		private EntityRef<T_City> _T_City1;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_Insurance> _T_Insurance;

		private EntityRef<T_Insurance> _T_Insurance1;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnUpdateDoc_IDChanging(string value);
		partial void OnUpdateDoc_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnUsr_NoChanging(System.Nullable<int> value);
		partial void OnUsr_NoChanged();
		partial void OnUsr_NoEditeChanging(System.Nullable<int> value);
		partial void OnUsr_NoEditeChanged();
		partial void OnDateEditChanging(string value);
		partial void OnDateEditChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnBeginDateBeforChanging(string value);
		partial void OnBeginDateBeforChanged();
		partial void OnBeginDateAfterChanging(string value);
		partial void OnBeginDateAfterChanged();
		partial void OnEndDateBeforChanging(string value);
		partial void OnEndDateBeforChanged();
		partial void OnEndDateAfterChanging(string value);
		partial void OnEndDateAfterChanged();
		partial void OnDocNoChanging(string value);
		partial void OnDocNoChanged();
		partial void OnDocFromChanging(System.Nullable<int> value);
		partial void OnDocFromChanged();
		partial void OnInsurance_NameBeforChanging(string value);
		partial void OnInsurance_NameBeforChanged();
		partial void OnInsuranceNoBeforChanging(System.Nullable<int> value);
		partial void OnInsuranceNoBeforChanged();
		partial void OnInsurance_NameAfterChanging(string value);
		partial void OnInsurance_NameAfterChanged();
		partial void OnInsuranceNoAfterChanging(System.Nullable<int> value);
		partial void OnInsuranceNoAfterChanged();
		partial void OnDocTypChanging(System.Nullable<int> value);
		partial void OnDocTypChanged();
		partial void OnDocNoAfterChanging(string value);
		partial void OnDocNoAfterChanged();
		partial void OnDocFromAfterChanging(System.Nullable<int> value);
		partial void OnDocFromAfterChanged();
		#endregion

		public T_UpdateDoc()
		{
			this._T_City = default(EntityRef<T_City>);
			this._T_City1 = default(EntityRef<T_City>);
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_Insurance = default(EntityRef<T_Insurance>);
			this._T_Insurance1 = default(EntityRef<T_Insurance>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDoc_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string UpdateDoc_ID
		{
			get
			{
				return this._UpdateDoc_ID;
			}
			set
			{
				if ((this._UpdateDoc_ID != value))
				{
					this.OnUpdateDoc_IDChanging(value);
					this.SendPropertyChanging();
					this._UpdateDoc_ID = value;
					this.SendPropertyChanged("UpdateDoc_ID");
					this.OnUpdateDoc_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr_No", DbType = "Int")]
		public System.Nullable<int> Usr_No
		{
			get
			{
				return this._Usr_No;
			}
			set
			{
				if ((this._Usr_No != value))
				{
					this.OnUsr_NoChanging(value);
					this.SendPropertyChanging();
					this._Usr_No = value;
					this.SendPropertyChanged("Usr_No");
					this.OnUsr_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Usr_NoEdite", DbType = "Int")]
		public System.Nullable<int> Usr_NoEdite
		{
			get
			{
				return this._Usr_NoEdite;
			}
			set
			{
				if ((this._Usr_NoEdite != value))
				{
					this.OnUsr_NoEditeChanging(value);
					this.SendPropertyChanging();
					this._Usr_NoEdite = value;
					this.SendPropertyChanged("Usr_NoEdite");
					this.OnUsr_NoEditeChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateEdit", DbType = "VarChar(10)")]
		public string DateEdit
		{
			get
			{
				return this._DateEdit;
			}
			set
			{
				if ((this._DateEdit != value))
				{
					this.OnDateEditChanging(value);
					this.SendPropertyChanging();
					this._DateEdit = value;
					this.SendPropertyChanged("DateEdit");
					this.OnDateEditChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BeginDateBefor", DbType = "VarChar(10)")]
		public string BeginDateBefor
		{
			get
			{
				return this._BeginDateBefor;
			}
			set
			{
				if ((this._BeginDateBefor != value))
				{
					this.OnBeginDateBeforChanging(value);
					this.SendPropertyChanging();
					this._BeginDateBefor = value;
					this.SendPropertyChanged("BeginDateBefor");
					this.OnBeginDateBeforChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BeginDateAfter", DbType = "VarChar(10)")]
		public string BeginDateAfter
		{
			get
			{
				return this._BeginDateAfter;
			}
			set
			{
				if ((this._BeginDateAfter != value))
				{
					this.OnBeginDateAfterChanging(value);
					this.SendPropertyChanging();
					this._BeginDateAfter = value;
					this.SendPropertyChanged("BeginDateAfter");
					this.OnBeginDateAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDateBefor", DbType = "VarChar(10)")]
		public string EndDateBefor
		{
			get
			{
				return this._EndDateBefor;
			}
			set
			{
				if ((this._EndDateBefor != value))
				{
					this.OnEndDateBeforChanging(value);
					this.SendPropertyChanging();
					this._EndDateBefor = value;
					this.SendPropertyChanged("EndDateBefor");
					this.OnEndDateBeforChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDateAfter", DbType = "VarChar(10)")]
		public string EndDateAfter
		{
			get
			{
				return this._EndDateAfter;
			}
			set
			{
				if ((this._EndDateAfter != value))
				{
					this.OnEndDateAfterChanging(value);
					this.SendPropertyChanging();
					this._EndDateAfter = value;
					this.SendPropertyChanged("EndDateAfter");
					this.OnEndDateAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocNo", DbType = "VarChar(15)")]
		public string DocNo
		{
			get
			{
				return this._DocNo;
			}
			set
			{
				if ((this._DocNo != value))
				{
					this.OnDocNoChanging(value);
					this.SendPropertyChanging();
					this._DocNo = value;
					this.SendPropertyChanged("DocNo");
					this.OnDocNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocFrom", DbType = "Int")]
		public System.Nullable<int> DocFrom
		{
			get
			{
				return this._DocFrom;
			}
			set
			{
				if ((this._DocFrom != value))
				{
					if (this._T_City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocFromChanging(value);
					this.SendPropertyChanging();
					this._DocFrom = value;
					this.SendPropertyChanged("DocFrom");
					this.OnDocFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_NameBefor", DbType = "VarChar(100)")]
		public string Insurance_NameBefor
		{
			get
			{
				return this._Insurance_NameBefor;
			}
			set
			{
				if ((this._Insurance_NameBefor != value))
				{
					this.OnInsurance_NameBeforChanging(value);
					this.SendPropertyChanging();
					this._Insurance_NameBefor = value;
					this.SendPropertyChanged("Insurance_NameBefor");
					this.OnInsurance_NameBeforChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceNoBefor", DbType = "Int")]
		public System.Nullable<int> InsuranceNoBefor
		{
			get
			{
				return this._InsuranceNoBefor;
			}
			set
			{
				if ((this._InsuranceNoBefor != value))
				{
					if (this._T_Insurance1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceNoBeforChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNoBefor = value;
					this.SendPropertyChanged("InsuranceNoBefor");
					this.OnInsuranceNoBeforChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Insurance_NameAfter", DbType = "VarChar(100)")]
		public string Insurance_NameAfter
		{
			get
			{
				return this._Insurance_NameAfter;
			}
			set
			{
				if ((this._Insurance_NameAfter != value))
				{
					this.OnInsurance_NameAfterChanging(value);
					this.SendPropertyChanging();
					this._Insurance_NameAfter = value;
					this.SendPropertyChanged("Insurance_NameAfter");
					this.OnInsurance_NameAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InsuranceNoAfter", DbType = "Int")]
		public System.Nullable<int> InsuranceNoAfter
		{
			get
			{
				return this._InsuranceNoAfter;
			}
			set
			{
				if ((this._InsuranceNoAfter != value))
				{
					if (this._T_Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceNoAfterChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNoAfter = value;
					this.SendPropertyChanged("InsuranceNoAfter");
					this.OnInsuranceNoAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocTyp", DbType = "Int")]
		public System.Nullable<int> DocTyp
		{
			get
			{
				return this._DocTyp;
			}
			set
			{
				if ((this._DocTyp != value))
				{
					this.OnDocTypChanging(value);
					this.SendPropertyChanging();
					this._DocTyp = value;
					this.SendPropertyChanged("DocTyp");
					this.OnDocTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocNoAfter", DbType = "VarChar(15)")]
		public string DocNoAfter
		{
			get
			{
				return this._DocNoAfter;
			}
			set
			{
				if ((this._DocNoAfter != value))
				{
					this.OnDocNoAfterChanging(value);
					this.SendPropertyChanging();
					this._DocNoAfter = value;
					this.SendPropertyChanged("DocNoAfter");
					this.OnDocNoAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocFromAfter", DbType = "Int")]
		public System.Nullable<int> DocFromAfter
		{
			get
			{
				return this._DocFromAfter;
			}
			set
			{
				if ((this._DocFromAfter != value))
				{
					if (this._T_City1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocFromAfterChanging(value);
					this.SendPropertyChanging();
					this._DocFromAfter = value;
					this.SendPropertyChanged("DocFromAfter");
					this.OnDocFromAfterChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_UpdateDoc", Storage = "_T_City", ThisKey = "DocFrom", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City
		{
			get
			{
				return this._T_City.Entity;
			}
			set
			{
				T_City previousValue = this._T_City.Entity;
				if (((previousValue != value)
							|| (this._T_City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City.Entity = null;
						previousValue.T_UpdateDocs.Remove(this);
					}
					this._T_City.Entity = value;
					if ((value != null))
					{
						value.T_UpdateDocs.Add(this);
						this._DocFrom = value.City_No;
					}
					else
					{
						this._DocFrom = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_City_T_UpdateDoc1", Storage = "_T_City1", ThisKey = "DocFromAfter", OtherKey = "City_No", IsForeignKey = true)]
		public T_City T_City1
		{
			get
			{
				return this._T_City1.Entity;
			}
			set
			{
				T_City previousValue = this._T_City1.Entity;
				if (((previousValue != value)
							|| (this._T_City1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_City1.Entity = null;
						previousValue.T_UpdateDocs1.Remove(this);
					}
					this._T_City1.Entity = value;
					if ((value != null))
					{
						value.T_UpdateDocs1.Add(this);
						this._DocFromAfter = value.City_No;
					}
					else
					{
						this._DocFromAfter = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_City1");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_UpdateDoc", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_UpdateDocs.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_UpdateDocs.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Insurance_T_UpdateDoc", Storage = "_T_Insurance", ThisKey = "InsuranceNoAfter", OtherKey = "Insurance_No", IsForeignKey = true)]
		public T_Insurance T_Insurance
		{
			get
			{
				return this._T_Insurance.Entity;
			}
			set
			{
				T_Insurance previousValue = this._T_Insurance.Entity;
				if (((previousValue != value)
							|| (this._T_Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Insurance.Entity = null;
						previousValue.T_UpdateDocs.Remove(this);
					}
					this._T_Insurance.Entity = value;
					if ((value != null))
					{
						value.T_UpdateDocs.Add(this);
						this._InsuranceNoAfter = value.Insurance_No;
					}
					else
					{
						this._InsuranceNoAfter = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Insurance");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Insurance_T_UpdateDoc1", Storage = "_T_Insurance1", ThisKey = "InsuranceNoBefor", OtherKey = "Insurance_No", IsForeignKey = true)]
		public T_Insurance T_Insurance1
		{
			get
			{
				return this._T_Insurance1.Entity;
			}
			set
			{
				T_Insurance previousValue = this._T_Insurance1.Entity;
				if (((previousValue != value)
							|| (this._T_Insurance1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Insurance1.Entity = null;
						previousValue.T_UpdateDocs1.Remove(this);
					}
					this._T_Insurance1.Entity = value;
					if ((value != null))
					{
						value.T_UpdateDocs1.Add(this);
						this._InsuranceNoBefor = value.Insurance_No;
					}
					else
					{
						this._InsuranceNoBefor = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_Insurance1");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Vacation")]
	public partial class T_Vacation : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _vacation_ID;

		private int _warnNo;

		private string _warnDate;

		private string _EmpID;

		private System.Nullable<int> _VacCountDay;

		private System.Nullable<int> _VacTyp;

		private string _StartDate;

		private string _EndDate;

		private string _StopSalFrom;

		private System.Nullable<bool> _VacAllowance;

		private System.Nullable<int> _CalculateNo;

		private string _WithDateSal;

		private System.Nullable<double> _Amount;

		private string _Note;

		private System.Nullable<bool> _IFState;

		private string _EmpCover;

		private System.Nullable<bool> _AdminLock;

		private EntityRef<T_Emp> _T_Emp;

		private EntityRef<T_Emp> _T_Emp1;

		private EntityRef<T_OpMethod> _T_OpMethod;

		private EntityRef<T_VacTyp> _T_VacTyp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void Onvacation_IDChanging(string value);
		partial void Onvacation_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnVacCountDayChanging(System.Nullable<int> value);
		partial void OnVacCountDayChanged();
		partial void OnVacTypChanging(System.Nullable<int> value);
		partial void OnVacTypChanged();
		partial void OnStartDateChanging(string value);
		partial void OnStartDateChanged();
		partial void OnEndDateChanging(string value);
		partial void OnEndDateChanged();
		partial void OnStopSalFromChanging(string value);
		partial void OnStopSalFromChanged();
		partial void OnVacAllowanceChanging(System.Nullable<bool> value);
		partial void OnVacAllowanceChanged();
		partial void OnCalculateNoChanging(System.Nullable<int> value);
		partial void OnCalculateNoChanged();
		partial void OnWithDateSalChanging(string value);
		partial void OnWithDateSalChanged();
		partial void OnAmountChanging(System.Nullable<double> value);
		partial void OnAmountChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnIFStateChanging(System.Nullable<bool> value);
		partial void OnIFStateChanged();
		partial void OnEmpCoverChanging(string value);
		partial void OnEmpCoverChanged();
		partial void OnAdminLockChanging(System.Nullable<bool> value);
		partial void OnAdminLockChanged();
		#endregion

		public T_Vacation()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			this._T_Emp1 = default(EntityRef<T_Emp>);
			this._T_OpMethod = default(EntityRef<T_OpMethod>);
			this._T_VacTyp = default(EntityRef<T_VacTyp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_vacation_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string vacation_ID
		{
			get
			{
				return this._vacation_ID;
			}
			set
			{
				if ((this._vacation_ID != value))
				{
					this.Onvacation_IDChanging(value);
					this.SendPropertyChanging();
					this._vacation_ID = value;
					this.SendPropertyChanged("vacation_ID");
					this.Onvacation_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacCountDay", DbType = "Int")]
		public System.Nullable<int> VacCountDay
		{
			get
			{
				return this._VacCountDay;
			}
			set
			{
				if ((this._VacCountDay != value))
				{
					this.OnVacCountDayChanging(value);
					this.SendPropertyChanging();
					this._VacCountDay = value;
					this.SendPropertyChanged("VacCountDay");
					this.OnVacCountDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacTyp", DbType = "Int")]
		public System.Nullable<int> VacTyp
		{
			get
			{
				return this._VacTyp;
			}
			set
			{
				if ((this._VacTyp != value))
				{
					if (this._T_VacTyp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVacTypChanging(value);
					this.SendPropertyChanging();
					this._VacTyp = value;
					this.SendPropertyChanged("VacTyp");
					this.OnVacTypChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDate", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDate", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
		public string EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StopSalFrom", DbType = "VarChar(10)")]
		public string StopSalFrom
		{
			get
			{
				return this._StopSalFrom;
			}
			set
			{
				if ((this._StopSalFrom != value))
				{
					this.OnStopSalFromChanging(value);
					this.SendPropertyChanging();
					this._StopSalFrom = value;
					this.SendPropertyChanged("StopSalFrom");
					this.OnStopSalFromChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacAllowance", DbType = "Bit")]
		public System.Nullable<bool> VacAllowance
		{
			get
			{
				return this._VacAllowance;
			}
			set
			{
				if ((this._VacAllowance != value))
				{
					this.OnVacAllowanceChanging(value);
					this.SendPropertyChanging();
					this._VacAllowance = value;
					this.SendPropertyChanged("VacAllowance");
					this.OnVacAllowanceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CalculateNo", DbType = "Int")]
		public System.Nullable<int> CalculateNo
		{
			get
			{
				return this._CalculateNo;
			}
			set
			{
				if ((this._CalculateNo != value))
				{
					if (this._T_OpMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalculateNoChanging(value);
					this.SendPropertyChanging();
					this._CalculateNo = value;
					this.SendPropertyChanged("CalculateNo");
					this.OnCalculateNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WithDateSal", DbType = "VarChar(10)")]
		public string WithDateSal
		{
			get
			{
				return this._WithDateSal;
			}
			set
			{
				if ((this._WithDateSal != value))
				{
					this.OnWithDateSalChanging(value);
					this.SendPropertyChanging();
					this._WithDateSal = value;
					this.SendPropertyChanged("WithDateSal");
					this.OnWithDateSalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Amount", DbType = "Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IFState", DbType = "Bit")]
		public System.Nullable<bool> IFState
		{
			get
			{
				return this._IFState;
			}
			set
			{
				if ((this._IFState != value))
				{
					this.OnIFStateChanging(value);
					this.SendPropertyChanging();
					this._IFState = value;
					this.SendPropertyChanged("IFState");
					this.OnIFStateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpCover", DbType = "VarChar(40)")]
		public string EmpCover
		{
			get
			{
				return this._EmpCover;
			}
			set
			{
				if ((this._EmpCover != value))
				{
					if (this._T_Emp1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpCoverChanging(value);
					this.SendPropertyChanging();
					this._EmpCover = value;
					this.SendPropertyChanged("EmpCover");
					this.OnEmpCoverChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminLock", DbType = "Bit")]
		public System.Nullable<bool> AdminLock
		{
			get
			{
				return this._AdminLock;
			}
			set
			{
				if ((this._AdminLock != value))
				{
					this.OnAdminLockChanging(value);
					this.SendPropertyChanging();
					this._AdminLock = value;
					this.SendPropertyChanged("AdminLock");
					this.OnAdminLockChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Vacation", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_Vacations.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_Vacations.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_Vacation1", Storage = "_T_Emp1", ThisKey = "EmpCover", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp1
		{
			get
			{
				return this._T_Emp1.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp1.Entity;
				if (((previousValue != value)
							|| (this._T_Emp1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp1.Entity = null;
						previousValue.T_Vacations1.Remove(this);
					}
					this._T_Emp1.Entity = value;
					if ((value != null))
					{
						value.T_Vacations1.Add(this);
						this._EmpCover = value.Emp_ID;
					}
					else
					{
						this._EmpCover = default(string);
					}
					this.SendPropertyChanged("T_Emp1");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_OpMethod_T_Vacation", Storage = "_T_OpMethod", ThisKey = "CalculateNo", OtherKey = "Method_No", IsForeignKey = true)]
		public T_OpMethod T_OpMethod
		{
			get
			{
				return this._T_OpMethod.Entity;
			}
			set
			{
				T_OpMethod previousValue = this._T_OpMethod.Entity;
				if (((previousValue != value)
							|| (this._T_OpMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OpMethod.Entity = null;
						previousValue.T_Vacations.Remove(this);
					}
					this._T_OpMethod.Entity = value;
					if ((value != null))
					{
						value.T_Vacations.Add(this);
						this._CalculateNo = value.Method_No;
					}
					else
					{
						this._CalculateNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_OpMethod");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_VacTyp_T_Vacation", Storage = "_T_VacTyp", ThisKey = "VacTyp", OtherKey = "VacT_No", IsForeignKey = true)]
		public T_VacTyp T_VacTyp
		{
			get
			{
				return this._T_VacTyp.Entity;
			}
			set
			{
				T_VacTyp previousValue = this._T_VacTyp.Entity;
				if (((previousValue != value)
							|| (this._T_VacTyp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_VacTyp.Entity = null;
						previousValue.T_Vacations.Remove(this);
					}
					this._T_VacTyp.Entity = value;
					if ((value != null))
					{
						value.T_Vacations.Add(this);
						this._VacTyp = value.VacT_No;
					}
					else
					{
						this._VacTyp = default(Nullable<int>);
					}
					this.SendPropertyChanged("T_VacTyp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_VacTyp")]
	public partial class T_VacTyp : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _VacT_ID;

		private int _VacT_No;

		private string _NameA;

		private string _NameE;

		private System.Nullable<bool> _Dis_VacT;

		private System.Nullable<bool> _Dis_Sal;

		private System.Nullable<int> _Dis_Sal_Sts;

		private EntitySet<T_Vacation> _T_Vacations;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnVacT_IDChanging(string value);
		partial void OnVacT_IDChanged();
		partial void OnVacT_NoChanging(int value);
		partial void OnVacT_NoChanged();
		partial void OnNameAChanging(string value);
		partial void OnNameAChanged();
		partial void OnNameEChanging(string value);
		partial void OnNameEChanged();
		partial void OnDis_VacTChanging(System.Nullable<bool> value);
		partial void OnDis_VacTChanged();
		partial void OnDis_SalChanging(System.Nullable<bool> value);
		partial void OnDis_SalChanged();
		partial void OnDis_Sal_StsChanging(System.Nullable<int> value);
		partial void OnDis_Sal_StsChanged();
		#endregion

		public T_VacTyp()
		{
			this._T_Vacations = new EntitySet<T_Vacation>(new Action<T_Vacation>(this.attach_T_Vacations), new Action<T_Vacation>(this.detach_T_Vacations));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacT_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string VacT_ID
		{
			get
			{
				return this._VacT_ID;
			}
			set
			{
				if ((this._VacT_ID != value))
				{
					this.OnVacT_IDChanging(value);
					this.SendPropertyChanging();
					this._VacT_ID = value;
					this.SendPropertyChanged("VacT_ID");
					this.OnVacT_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VacT_No", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int VacT_No
		{
			get
			{
				return this._VacT_No;
			}
			set
			{
				if ((this._VacT_No != value))
				{
					this.OnVacT_NoChanging(value);
					this.SendPropertyChanging();
					this._VacT_No = value;
					this.SendPropertyChanged("VacT_No");
					this.OnVacT_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameA", DbType = "VarChar(30)")]
		public string NameA
		{
			get
			{
				return this._NameA;
			}
			set
			{
				if ((this._NameA != value))
				{
					this.OnNameAChanging(value);
					this.SendPropertyChanging();
					this._NameA = value;
					this.SendPropertyChanged("NameA");
					this.OnNameAChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameE", DbType = "VarChar(30)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dis_VacT", DbType = "Bit")]
		public System.Nullable<bool> Dis_VacT
		{
			get
			{
				return this._Dis_VacT;
			}
			set
			{
				if ((this._Dis_VacT != value))
				{
					this.OnDis_VacTChanging(value);
					this.SendPropertyChanging();
					this._Dis_VacT = value;
					this.SendPropertyChanged("Dis_VacT");
					this.OnDis_VacTChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dis_Sal", DbType = "Bit")]
		public System.Nullable<bool> Dis_Sal
		{
			get
			{
				return this._Dis_Sal;
			}
			set
			{
				if ((this._Dis_Sal != value))
				{
					this.OnDis_SalChanging(value);
					this.SendPropertyChanging();
					this._Dis_Sal = value;
					this.SendPropertyChanged("Dis_Sal");
					this.OnDis_SalChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Dis_Sal_Sts", DbType = "Int")]
		public System.Nullable<int> Dis_Sal_Sts
		{
			get
			{
				return this._Dis_Sal_Sts;
			}
			set
			{
				if ((this._Dis_Sal_Sts != value))
				{
					this.OnDis_Sal_StsChanging(value);
					this.SendPropertyChanging();
					this._Dis_Sal_Sts = value;
					this.SendPropertyChanged("Dis_Sal_Sts");
					this.OnDis_Sal_StsChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_VacTyp_T_Vacation", Storage = "_T_Vacations", ThisKey = "VacT_No", OtherKey = "VacTyp")]
		public EntitySet<T_Vacation> T_Vacations
		{
			get
			{
				return this._T_Vacations;
			}
			set
			{
				this._T_Vacations.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Vacations(T_Vacation entity)
		{
			this.SendPropertyChanging();
			entity.T_VacTyp = this;
		}

		private void detach_T_Vacations(T_Vacation entity)
		{
			this.SendPropertyChanging();
			entity.T_VacTyp = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_VisaGoBack")]
	public partial class T_VisaGoBack : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Visa_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private string _VisaNo;

		private string _VisaPlace;

		private string _VisaBeginDate;

		private string _VisaEndDate;

		private string _DateGo;

		private string _DateBack;

		private string _Note;

		private System.Nullable<int> _CountDay;

		private string _PlaceGo;

		private string _PlaceBack;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnVisa_IDChanging(string value);
		partial void OnVisa_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnVisaNoChanging(string value);
		partial void OnVisaNoChanged();
		partial void OnVisaPlaceChanging(string value);
		partial void OnVisaPlaceChanged();
		partial void OnVisaBeginDateChanging(string value);
		partial void OnVisaBeginDateChanged();
		partial void OnVisaEndDateChanging(string value);
		partial void OnVisaEndDateChanged();
		partial void OnDateGoChanging(string value);
		partial void OnDateGoChanged();
		partial void OnDateBackChanging(string value);
		partial void OnDateBackChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		partial void OnCountDayChanging(System.Nullable<int> value);
		partial void OnCountDayChanged();
		partial void OnPlaceGoChanging(string value);
		partial void OnPlaceGoChanged();
		partial void OnPlaceBackChanging(string value);
		partial void OnPlaceBackChanged();
		#endregion

		public T_VisaGoBack()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Visa_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Visa_ID
		{
			get
			{
				return this._Visa_ID;
			}
			set
			{
				if ((this._Visa_ID != value))
				{
					this.OnVisa_IDChanging(value);
					this.SendPropertyChanging();
					this._Visa_ID = value;
					this.SendPropertyChanged("Visa_ID");
					this.OnVisa_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaNo", DbType = "VarChar(40)")]
		public string VisaNo
		{
			get
			{
				return this._VisaNo;
			}
			set
			{
				if ((this._VisaNo != value))
				{
					this.OnVisaNoChanging(value);
					this.SendPropertyChanging();
					this._VisaNo = value;
					this.SendPropertyChanged("VisaNo");
					this.OnVisaNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaPlace", DbType = "VarChar(40)")]
		public string VisaPlace
		{
			get
			{
				return this._VisaPlace;
			}
			set
			{
				if ((this._VisaPlace != value))
				{
					this.OnVisaPlaceChanging(value);
					this.SendPropertyChanging();
					this._VisaPlace = value;
					this.SendPropertyChanged("VisaPlace");
					this.OnVisaPlaceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaBeginDate", DbType = "VarChar(20)")]
		public string VisaBeginDate
		{
			get
			{
				return this._VisaBeginDate;
			}
			set
			{
				if ((this._VisaBeginDate != value))
				{
					this.OnVisaBeginDateChanging(value);
					this.SendPropertyChanging();
					this._VisaBeginDate = value;
					this.SendPropertyChanged("VisaBeginDate");
					this.OnVisaBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaEndDate", DbType = "VarChar(20)")]
		public string VisaEndDate
		{
			get
			{
				return this._VisaEndDate;
			}
			set
			{
				if ((this._VisaEndDate != value))
				{
					this.OnVisaEndDateChanging(value);
					this.SendPropertyChanging();
					this._VisaEndDate = value;
					this.SendPropertyChanged("VisaEndDate");
					this.OnVisaEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateGo", DbType = "VarChar(20)")]
		public string DateGo
		{
			get
			{
				return this._DateGo;
			}
			set
			{
				if ((this._DateGo != value))
				{
					this.OnDateGoChanging(value);
					this.SendPropertyChanging();
					this._DateGo = value;
					this.SendPropertyChanged("DateGo");
					this.OnDateGoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateBack", DbType = "VarChar(20)")]
		public string DateBack
		{
			get
			{
				return this._DateBack;
			}
			set
			{
				if ((this._DateBack != value))
				{
					this.OnDateBackChanging(value);
					this.SendPropertyChanging();
					this._DateBack = value;
					this.SendPropertyChanged("DateBack");
					this.OnDateBackChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CountDay", DbType = "Int")]
		public System.Nullable<int> CountDay
		{
			get
			{
				return this._CountDay;
			}
			set
			{
				if ((this._CountDay != value))
				{
					this.OnCountDayChanging(value);
					this.SendPropertyChanging();
					this._CountDay = value;
					this.SendPropertyChanged("CountDay");
					this.OnCountDayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PlaceGo", DbType = "VarChar(150)")]
		public string PlaceGo
		{
			get
			{
				return this._PlaceGo;
			}
			set
			{
				if ((this._PlaceGo != value))
				{
					this.OnPlaceGoChanging(value);
					this.SendPropertyChanging();
					this._PlaceGo = value;
					this.SendPropertyChanged("PlaceGo");
					this.OnPlaceGoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PlaceBack", DbType = "VarChar(150)")]
		public string PlaceBack
		{
			get
			{
				return this._PlaceBack;
			}
			set
			{
				if ((this._PlaceBack != value))
				{
					this.OnPlaceBackChanging(value);
					this.SendPropertyChanging();
					this._PlaceBack = value;
					this.SendPropertyChanged("PlaceBack");
					this.OnPlaceBackChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_VisaGoBack", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_VisaGoBacks.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_VisaGoBacks.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_VisaIntroduction")]
	public partial class T_VisaIntroduction : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Visa_ID;

		private int _warnNo;

		private string _EmpID;

		private string _warnDate;

		private string _VisaNo;

		private string _VisaPlace;

		private string _VisaBeginDate;

		private string _VisaEndDate;

		private string _DateGo;

		private string _DateBack;

		private string _Note;

		private EntityRef<T_Emp> _T_Emp;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnVisa_IDChanging(string value);
		partial void OnVisa_IDChanged();
		partial void OnwarnNoChanging(int value);
		partial void OnwarnNoChanged();
		partial void OnEmpIDChanging(string value);
		partial void OnEmpIDChanged();
		partial void OnwarnDateChanging(string value);
		partial void OnwarnDateChanged();
		partial void OnVisaNoChanging(string value);
		partial void OnVisaNoChanged();
		partial void OnVisaPlaceChanging(string value);
		partial void OnVisaPlaceChanged();
		partial void OnVisaBeginDateChanging(string value);
		partial void OnVisaBeginDateChanged();
		partial void OnVisaEndDateChanging(string value);
		partial void OnVisaEndDateChanged();
		partial void OnDateGoChanging(string value);
		partial void OnDateGoChanged();
		partial void OnDateBackChanging(string value);
		partial void OnDateBackChanged();
		partial void OnNoteChanging(string value);
		partial void OnNoteChanged();
		#endregion

		public T_VisaIntroduction()
		{
			this._T_Emp = default(EntityRef<T_Emp>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Visa_ID", DbType = "VarChar(40) NOT NULL", CanBeNull = false)]
		public string Visa_ID
		{
			get
			{
				return this._Visa_ID;
			}
			set
			{
				if ((this._Visa_ID != value))
				{
					this.OnVisa_IDChanging(value);
					this.SendPropertyChanging();
					this._Visa_ID = value;
					this.SendPropertyChanged("Visa_ID");
					this.OnVisa_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnNo", DbType = "Int NOT NULL", IsPrimaryKey = true)]
		public int warnNo
		{
			get
			{
				return this._warnNo;
			}
			set
			{
				if ((this._warnNo != value))
				{
					this.OnwarnNoChanging(value);
					this.SendPropertyChanging();
					this._warnNo = value;
					this.SendPropertyChanged("warnNo");
					this.OnwarnNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmpID", DbType = "VarChar(40)")]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._T_Emp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_warnDate", DbType = "VarChar(10)")]
		public string warnDate
		{
			get
			{
				return this._warnDate;
			}
			set
			{
				if ((this._warnDate != value))
				{
					this.OnwarnDateChanging(value);
					this.SendPropertyChanging();
					this._warnDate = value;
					this.SendPropertyChanged("warnDate");
					this.OnwarnDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaNo", DbType = "VarChar(40)")]
		public string VisaNo
		{
			get
			{
				return this._VisaNo;
			}
			set
			{
				if ((this._VisaNo != value))
				{
					this.OnVisaNoChanging(value);
					this.SendPropertyChanging();
					this._VisaNo = value;
					this.SendPropertyChanged("VisaNo");
					this.OnVisaNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaPlace", DbType = "VarChar(40)")]
		public string VisaPlace
		{
			get
			{
				return this._VisaPlace;
			}
			set
			{
				if ((this._VisaPlace != value))
				{
					this.OnVisaPlaceChanging(value);
					this.SendPropertyChanging();
					this._VisaPlace = value;
					this.SendPropertyChanged("VisaPlace");
					this.OnVisaPlaceChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaBeginDate", DbType = "VarChar(20)")]
		public string VisaBeginDate
		{
			get
			{
				return this._VisaBeginDate;
			}
			set
			{
				if ((this._VisaBeginDate != value))
				{
					this.OnVisaBeginDateChanging(value);
					this.SendPropertyChanging();
					this._VisaBeginDate = value;
					this.SendPropertyChanged("VisaBeginDate");
					this.OnVisaBeginDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VisaEndDate", DbType = "VarChar(20)")]
		public string VisaEndDate
		{
			get
			{
				return this._VisaEndDate;
			}
			set
			{
				if ((this._VisaEndDate != value))
				{
					this.OnVisaEndDateChanging(value);
					this.SendPropertyChanging();
					this._VisaEndDate = value;
					this.SendPropertyChanged("VisaEndDate");
					this.OnVisaEndDateChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateGo", DbType = "VarChar(20)")]
		public string DateGo
		{
			get
			{
				return this._DateGo;
			}
			set
			{
				if ((this._DateGo != value))
				{
					this.OnDateGoChanging(value);
					this.SendPropertyChanging();
					this._DateGo = value;
					this.SendPropertyChanged("DateGo");
					this.OnDateGoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateBack", DbType = "VarChar(20)")]
		public string DateBack
		{
			get
			{
				return this._DateBack;
			}
			set
			{
				if ((this._DateBack != value))
				{
					this.OnDateBackChanging(value);
					this.SendPropertyChanging();
					this._DateBack = value;
					this.SendPropertyChanged("DateBack");
					this.OnDateBackChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Note", DbType = "VarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Emp_T_VisaIntroduction", Storage = "_T_Emp", ThisKey = "EmpID", OtherKey = "Emp_ID", IsForeignKey = true)]
		public T_Emp T_Emp
		{
			get
			{
				return this._T_Emp.Entity;
			}
			set
			{
				T_Emp previousValue = this._T_Emp.Entity;
				if (((previousValue != value)
							|| (this._T_Emp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_Emp.Entity = null;
						previousValue.T_VisaIntroductions.Remove(this);
					}
					this._T_Emp.Entity = value;
					if ((value != null))
					{
						value.T_VisaIntroductions.Add(this);
						this._EmpID = value.Emp_ID;
					}
					else
					{
						this._EmpID = default(string);
					}
					this.SendPropertyChanged("T_Emp");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.T_Waiter")]
	public partial class T_Waiter : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _waiter_ID;

		private string _waiter_No;

		private string _Arb_Des;

		private string _Eng_Des;

		private System.Nullable<int> _CompanyID;

		private string _Pass;

		private string _Brn;

		private System.Nullable<int> _ProLng;

		private EntitySet<T_Room> _T_Rooms;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void Onwaiter_IDChanging(int value);
		partial void Onwaiter_IDChanged();
		partial void Onwaiter_NoChanging(string value);
		partial void Onwaiter_NoChanged();
		partial void OnArb_DesChanging(string value);
		partial void OnArb_DesChanged();
		partial void OnEng_DesChanging(string value);
		partial void OnEng_DesChanged();
		partial void OnCompanyIDChanging(System.Nullable<int> value);
		partial void OnCompanyIDChanged();
		partial void OnPassChanging(string value);
		partial void OnPassChanged();
		partial void OnBrnChanging(string value);
		partial void OnBrnChanged();
		partial void OnProLngChanging(System.Nullable<int> value);
		partial void OnProLngChanged();
		#endregion

		public T_Waiter()
		{
			this._T_Rooms = new EntitySet<T_Room>(new Action<T_Room>(this.attach_T_Rooms), new Action<T_Room>(this.detach_T_Rooms));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_waiter_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int waiter_ID
		{
			get
			{
				return this._waiter_ID;
			}
			set
			{
				if ((this._waiter_ID != value))
				{
					this.Onwaiter_IDChanging(value);
					this.SendPropertyChanging();
					this._waiter_ID = value;
					this.SendPropertyChanged("waiter_ID");
					this.Onwaiter_IDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_waiter_No", DbType = "VarChar(30)")]
		public string waiter_No
		{
			get
			{
				return this._waiter_No;
			}
			set
			{
				if ((this._waiter_No != value))
				{
					this.Onwaiter_NoChanging(value);
					this.SendPropertyChanging();
					this._waiter_No = value;
					this.SendPropertyChanged("waiter_No");
					this.Onwaiter_NoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Arb_Des", DbType = "VarChar(100)")]
		public string Arb_Des
		{
			get
			{
				return this._Arb_Des;
			}
			set
			{
				if ((this._Arb_Des != value))
				{
					this.OnArb_DesChanging(value);
					this.SendPropertyChanging();
					this._Arb_Des = value;
					this.SendPropertyChanged("Arb_Des");
					this.OnArb_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Eng_Des", DbType = "VarChar(100)")]
		public string Eng_Des
		{
			get
			{
				return this._Eng_Des;
			}
			set
			{
				if ((this._Eng_Des != value))
				{
					this.OnEng_DesChanging(value);
					this.SendPropertyChanging();
					this._Eng_Des = value;
					this.SendPropertyChanged("Eng_Des");
					this.OnEng_DesChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyID", DbType = "Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pass", DbType = "VarChar(250)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Brn", DbType = "VarChar(50)")]
		public string Brn
		{
			get
			{
				return this._Brn;
			}
			set
			{
				if ((this._Brn != value))
				{
					this.OnBrnChanging(value);
					this.SendPropertyChanging();
					this._Brn = value;
					this.SendPropertyChanged("Brn");
					this.OnBrnChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProLng", DbType = "Int")]
		public System.Nullable<int> ProLng
		{
			get
			{
				return this._ProLng;
			}
			set
			{
				if ((this._ProLng != value))
				{
					this.OnProLngChanging(value);
					this.SendPropertyChanging();
					this._ProLng = value;
					this.SendPropertyChanged("ProLng");
					this.OnProLngChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "T_Waiter_T_Room", Storage = "_T_Rooms", ThisKey = "waiter_ID", OtherKey = "waiterNo")]
		public EntitySet<T_Room> T_Rooms
		{
			get
			{
				return this._T_Rooms;
			}
			set
			{
				this._T_Rooms.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_T_Rooms(T_Room entity)
		{
			this.SendPropertyChanging();
			entity.T_Waiter = this;
		}

		private void detach_T_Rooms(T_Room entity)
		{
			this.SendPropertyChanging();
			entity.T_Waiter = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tb_version")]
	public partial class tb_version
	{

		private int _id;

		private string _dbv;

		private System.Nullable<System.DateTime> _lastupdate;

		public tb_version()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dbv", DbType = "VarChar(MAX)")]
		public string dbv
		{
			get
			{
				return this._dbv;
			}
			set
			{
				if ((this._dbv != value))
				{
					this._dbv = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lastupdate", DbType = "DateTime")]
		public System.Nullable<System.DateTime> lastupdate
		{
			get
			{
				return this._lastupdate;
			}
			set
			{
				if ((this._lastupdate != value))
				{
					this._lastupdate = value;
				}
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TmpTbl")]
	public partial class TmpTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _AccNo;

		private string _AccNm;

		private System.Nullable<double> _Num1;

		private System.Nullable<double> _Num2;

		private System.Nullable<double> _Num3;

		private System.Nullable<double> _Num4;

		private System.Nullable<double> _Num5;

		private System.Nullable<double> _Num6;

		private System.Nullable<double> _Num7;

		private System.Nullable<double> _Num8;

		private System.Nullable<double> _Num9;

		private System.Nullable<double> _Num10;

		private System.Nullable<double> _Num11;

		private System.Nullable<double> _Num12;

		private System.Nullable<double> _Num13;

		private System.Nullable<double> _Num14;

		private string _Str1;

		private string _Str2;

		private string _str3;

		private string _str4;

		private string _str5;

		private string _str6;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnAccNoChanging(string value);
		partial void OnAccNoChanged();
		partial void OnAccNmChanging(string value);
		partial void OnAccNmChanged();
		partial void OnNum1Changing(System.Nullable<double> value);
		partial void OnNum1Changed();
		partial void OnNum2Changing(System.Nullable<double> value);
		partial void OnNum2Changed();
		partial void OnNum3Changing(System.Nullable<double> value);
		partial void OnNum3Changed();
		partial void OnNum4Changing(System.Nullable<double> value);
		partial void OnNum4Changed();
		partial void OnNum5Changing(System.Nullable<double> value);
		partial void OnNum5Changed();
		partial void OnNum6Changing(System.Nullable<double> value);
		partial void OnNum6Changed();
		partial void OnNum7Changing(System.Nullable<double> value);
		partial void OnNum7Changed();
		partial void OnNum8Changing(System.Nullable<double> value);
		partial void OnNum8Changed();
		partial void OnNum9Changing(System.Nullable<double> value);
		partial void OnNum9Changed();
		partial void OnNum10Changing(System.Nullable<double> value);
		partial void OnNum10Changed();
		partial void OnNum11Changing(System.Nullable<double> value);
		partial void OnNum11Changed();
		partial void OnNum12Changing(System.Nullable<double> value);
		partial void OnNum12Changed();
		partial void OnNum13Changing(System.Nullable<double> value);
		partial void OnNum13Changed();
		partial void OnNum14Changing(System.Nullable<double> value);
		partial void OnNum14Changed();
		partial void OnStr1Changing(string value);
		partial void OnStr1Changed();
		partial void OnStr2Changing(string value);
		partial void OnStr2Changed();
		partial void Onstr3Changing(string value);
		partial void Onstr3Changed();
		partial void Onstr4Changing(string value);
		partial void Onstr4Changed();
		partial void Onstr5Changing(string value);
		partial void Onstr5Changed();
		partial void Onstr6Changing(string value);
		partial void Onstr6Changed();
		#endregion

		public TmpTbl()
		{
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccNo", DbType = "VarChar(50)")]
		public string AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccNm", DbType = "VarChar(100)")]
		public string AccNm
		{
			get
			{
				return this._AccNm;
			}
			set
			{
				if ((this._AccNm != value))
				{
					this.OnAccNmChanging(value);
					this.SendPropertyChanging();
					this._AccNm = value;
					this.SendPropertyChanged("AccNm");
					this.OnAccNmChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num1", DbType = "Float")]
		public System.Nullable<double> Num1
		{
			get
			{
				return this._Num1;
			}
			set
			{
				if ((this._Num1 != value))
				{
					this.OnNum1Changing(value);
					this.SendPropertyChanging();
					this._Num1 = value;
					this.SendPropertyChanged("Num1");
					this.OnNum1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num2", DbType = "Float")]
		public System.Nullable<double> Num2
		{
			get
			{
				return this._Num2;
			}
			set
			{
				if ((this._Num2 != value))
				{
					this.OnNum2Changing(value);
					this.SendPropertyChanging();
					this._Num2 = value;
					this.SendPropertyChanged("Num2");
					this.OnNum2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num3", DbType = "Float")]
		public System.Nullable<double> Num3
		{
			get
			{
				return this._Num3;
			}
			set
			{
				if ((this._Num3 != value))
				{
					this.OnNum3Changing(value);
					this.SendPropertyChanging();
					this._Num3 = value;
					this.SendPropertyChanged("Num3");
					this.OnNum3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num4", DbType = "Float")]
		public System.Nullable<double> Num4
		{
			get
			{
				return this._Num4;
			}
			set
			{
				if ((this._Num4 != value))
				{
					this.OnNum4Changing(value);
					this.SendPropertyChanging();
					this._Num4 = value;
					this.SendPropertyChanged("Num4");
					this.OnNum4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num5", DbType = "Float")]
		public System.Nullable<double> Num5
		{
			get
			{
				return this._Num5;
			}
			set
			{
				if ((this._Num5 != value))
				{
					this.OnNum5Changing(value);
					this.SendPropertyChanging();
					this._Num5 = value;
					this.SendPropertyChanged("Num5");
					this.OnNum5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num6", DbType = "Float")]
		public System.Nullable<double> Num6
		{
			get
			{
				return this._Num6;
			}
			set
			{
				if ((this._Num6 != value))
				{
					this.OnNum6Changing(value);
					this.SendPropertyChanging();
					this._Num6 = value;
					this.SendPropertyChanged("Num6");
					this.OnNum6Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num7", DbType = "Float")]
		public System.Nullable<double> Num7
		{
			get
			{
				return this._Num7;
			}
			set
			{
				if ((this._Num7 != value))
				{
					this.OnNum7Changing(value);
					this.SendPropertyChanging();
					this._Num7 = value;
					this.SendPropertyChanged("Num7");
					this.OnNum7Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num8", DbType = "Float")]
		public System.Nullable<double> Num8
		{
			get
			{
				return this._Num8;
			}
			set
			{
				if ((this._Num8 != value))
				{
					this.OnNum8Changing(value);
					this.SendPropertyChanging();
					this._Num8 = value;
					this.SendPropertyChanged("Num8");
					this.OnNum8Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num9", DbType = "Float")]
		public System.Nullable<double> Num9
		{
			get
			{
				return this._Num9;
			}
			set
			{
				if ((this._Num9 != value))
				{
					this.OnNum9Changing(value);
					this.SendPropertyChanging();
					this._Num9 = value;
					this.SendPropertyChanged("Num9");
					this.OnNum9Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num10", DbType = "Float")]
		public System.Nullable<double> Num10
		{
			get
			{
				return this._Num10;
			}
			set
			{
				if ((this._Num10 != value))
				{
					this.OnNum10Changing(value);
					this.SendPropertyChanging();
					this._Num10 = value;
					this.SendPropertyChanged("Num10");
					this.OnNum10Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num11", DbType = "Float")]
		public System.Nullable<double> Num11
		{
			get
			{
				return this._Num11;
			}
			set
			{
				if ((this._Num11 != value))
				{
					this.OnNum11Changing(value);
					this.SendPropertyChanging();
					this._Num11 = value;
					this.SendPropertyChanged("Num11");
					this.OnNum11Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num12", DbType = "Float")]
		public System.Nullable<double> Num12
		{
			get
			{
				return this._Num12;
			}
			set
			{
				if ((this._Num12 != value))
				{
					this.OnNum12Changing(value);
					this.SendPropertyChanging();
					this._Num12 = value;
					this.SendPropertyChanged("Num12");
					this.OnNum12Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num13", DbType = "Float")]
		public System.Nullable<double> Num13
		{
			get
			{
				return this._Num13;
			}
			set
			{
				if ((this._Num13 != value))
				{
					this.OnNum13Changing(value);
					this.SendPropertyChanging();
					this._Num13 = value;
					this.SendPropertyChanged("Num13");
					this.OnNum13Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Num14", DbType = "Float")]
		public System.Nullable<double> Num14
		{
			get
			{
				return this._Num14;
			}
			set
			{
				if ((this._Num14 != value))
				{
					this.OnNum14Changing(value);
					this.SendPropertyChanging();
					this._Num14 = value;
					this.SendPropertyChanged("Num14");
					this.OnNum14Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Str1", DbType = "VarChar(50)")]
		public string Str1
		{
			get
			{
				return this._Str1;
			}
			set
			{
				if ((this._Str1 != value))
				{
					this.OnStr1Changing(value);
					this.SendPropertyChanging();
					this._Str1 = value;
					this.SendPropertyChanged("Str1");
					this.OnStr1Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Str2", DbType = "VarChar(50)")]
		public string Str2
		{
			get
			{
				return this._Str2;
			}
			set
			{
				if ((this._Str2 != value))
				{
					this.OnStr2Changing(value);
					this.SendPropertyChanging();
					this._Str2 = value;
					this.SendPropertyChanged("Str2");
					this.OnStr2Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_str3", DbType = "VarChar(100)")]
		public string str3
		{
			get
			{
				return this._str3;
			}
			set
			{
				if ((this._str3 != value))
				{
					this.Onstr3Changing(value);
					this.SendPropertyChanging();
					this._str3 = value;
					this.SendPropertyChanged("str3");
					this.Onstr3Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_str4", DbType = "VarChar(50)")]
		public string str4
		{
			get
			{
				return this._str4;
			}
			set
			{
				if ((this._str4 != value))
				{
					this.Onstr4Changing(value);
					this.SendPropertyChanging();
					this._str4 = value;
					this.SendPropertyChanged("str4");
					this.Onstr4Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_str5", DbType = "VarChar(50)")]
		public string str5
		{
			get
			{
				return this._str5;
			}
			set
			{
				if ((this._str5 != value))
				{
					this.Onstr5Changing(value);
					this.SendPropertyChanging();
					this._str5 = value;
					this.SendPropertyChanged("str5");
					this.Onstr5Changed();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_str6", DbType = "VarChar(100)")]
		public string str6
		{
			get
			{
				return this._str6;
			}
			set
			{
				if ((this._str6 != value))
				{
					this.Onstr6Changing(value);
					this.SendPropertyChanging();
					this._str6 = value;
					this.SendPropertyChanged("str6");
					this.Onstr6Changed();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
